<?php/** * Loads functions used in dealing with email addresses and email sending. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;//// Validate an e-mail address//function is_valid_email($email){	$return = ($hook = get_hook('em_fn_is_valid_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strlen($email) > 80)		return false;	return preg_match('/^(([^<>()[\]\\.,;:\s@"\']+(\.[^<>()[\]\\.,;:\s@"\']+)*)|("[^"\']+"))@((\[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\])|(([a-zA-Z\d\-]+\.)+[a-zA-Z]{2,}))$/', $email);}//// Check if $email is banned//function is_banned_email($email){	global $forum_db, $forum_bans;	$return = ($hook = get_hook('em_fn_is_banned_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	foreach ($forum_bans as $cur_ban)	{		if ($cur_ban['email'] != '' &&			($email == $cur_ban['email'] ||			(strpos($cur_ban['email'], '@') === false && stristr($email, '@'.$cur_ban['email']))))			return true;	}	return false;}//// Wrapper for PHP's mail()//function forum_mail($to, $subject, $message, $reply_to_email = '', $reply_to_name = ''){	global $forum_config, $lang_common;	// Default sender address	$from_name = sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']);	$from_email = $forum_config['o_webmaster_email'];	($hook = get_hook('em_fn_forum_mail_start')) ? eval($hook) : null;	// Do a little spring cleaning	$to = forum_trim(preg_replace('#[\n\r]+#s', '', $to));	$subject = forum_trim(preg_replace('#[\n\r]+#s', '', $subject));	$from_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $from_email));	$from_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $from_name)));	$reply_to_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $reply_to_email));	$reply_to_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $reply_to_name)));	// Set up some headers to take advantage of UTF-8	$from = "=?UTF-8?B?".base64_encode($from_name)."?=".' <'.$from_email.'>';	$subject = "=?UTF-8?B?".base64_encode($subject)."?=";	$headers = 'From: '.$from."\r\n".'Date: '.gmdate('r')."\r\n".'MIME-Version: 1.0'."\r\n".'Content-transfer-encoding: 8bit'."\r\n".'Content-type: text/plain; charset=utf-8'."\r\n".'X-Mailer: PunBB Mailer';	// If we specified a reply-to email, we deal with it here	if (!empty($reply_to_email))	{		$reply_to = "=?UTF-8?B?".base64_encode($reply_to_name)."?=".' <'.$reply_to_email.'>';		$headers .= "\r\n".'Reply-To: '.$reply_to;	}	// Make sure all linebreaks are CRLF in message (and strip out any NULL bytes)	$message = str_replace(array("\n", "\0"), array("\r\n", ''), forum_linebreaks($message));	($hook = get_hook('em_fn_forum_mail_pre_send')) ? eval($hook) : null;	if ($forum_config['o_smtp_host'] != '')		smtp_mail($to, $subject, $message, $headers);	else	{		// Change the linebreaks used in the headers according to OS		if (strtoupper(substr(PHP_OS, 0, 3)) == 'MAC')			$headers = str_replace("\r\n", "\r", $headers);		else if (strtoupper(substr(PHP_OS, 0, 3)) != 'WIN')			$headers = str_replace("\r\n", "\n", $headers);		mail($to, $subject, $message, $headers);	}}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function server_parse($socket, $expected_response){	$server_response = '';	while (substr($server_response, 3, 1) != ' ')	{		if (!($server_response = fgets($socket, 256)))			error('Couldn\'t get mail server response codes. Please contact the forum administrator.', __FILE__, __LINE__);	}	if (!(substr($server_response, 0, 3) == $expected_response))		error('Unable to send e-mail. Please contact the forum administrator with the following error message reported by the SMTP server: "'.$server_response.'"', __FILE__, __LINE__);}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function smtp_mail($to, $subject, $message, $headers = ''){	global $forum_config;	$recipients = explode(',', $to);	// Sanitize the message	$message = str_replace("\r\n.", "\r\n..", $message);	$message = (substr($message, 0, 1) == '.' ? '.'.$message : $message);	// Are we using port 25 or a custom port?	if (strpos($forum_config['o_smtp_host'], ':') !== false)		list($smtp_host, $smtp_port) = explode(':', $forum_config['o_smtp_host']);	else	{		$smtp_host = $forum_config['o_smtp_host'];		$smtp_port = 25;	}	if ($forum_config['o_smtp_ssl'] == '1')		$smtp_host = 'ssl://'.$smtp_host;	if (!($socket = fsockopen($smtp_host, $smtp_port, $errno, $errstr, 15)))		error('Could not connect to smtp host "'.$forum_config['o_smtp_host'].'" ('.$errno.') ('.$errstr.').', __FILE__, __LINE__);	server_parse($socket, '220');	if ($forum_config['o_smtp_user'] != '' && $forum_config['o_smtp_pass'] != '')	{		fwrite($socket, 'EHLO '.$smtp_host."\r\n");		server_parse($socket, '250');		fwrite($socket, 'AUTH LOGIN'."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_user'])."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_pass'])."\r\n");		server_parse($socket, '235');	}	else	{		fwrite($socket, 'HELO '.$smtp_host."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'MAIL FROM: <'.$forum_config['o_webmaster_email'].'>'."\r\n");	server_parse($socket, '250');	foreach ($recipients as $email)	{		fwrite($socket, 'RCPT TO: <'.$email.'>'."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'DATA'."\r\n");	server_parse($socket, '354');	fwrite($socket, 'Subject: '.$subject."\r\n".'To: <'.implode('>, <', $recipients).'>'."\r\n".$headers."\r\n\r\n".$message."\r\n");	fwrite($socket, '.'."\r\n");	server_parse($socket, '250');	fwrite($socket, 'QUIT'."\r\n");	fclose($socket);	return true;}define('FORUM_EMAIL_FUNCTIONS_LOADED', 1);
<?php/** * Loads various functions used to parse posts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Load the IDNA class for international url handlingrequire FORUM_ROOT.'include/idna/idna_convert.class.php';// Here you can add additional smilies if you like (please note that you must escape singlequote and backslash)$smilies = array(':)' => 'smile.png', '=)' => 'smile.png', ':|' => 'neutral.png', '=|' => 'neutral.png', ':(' => 'sad.png', '=(' => 'sad.png', ':D' => 'big_smile.png', '=D' => 'big_smile.png', ':o' => 'yikes.png', ':O' => 'yikes.png', ';)' => 'wink.png', ':/' => 'hmm.png', ':P' => 'tongue.png', ':p' => 'tongue.png', ':lol:' => 'lol.png', ':mad:' => 'mad.png', ':rolleyes:' => 'roll.png', ':cool:' => 'cool.png');($hook = get_hook('ps_start')) ? eval($hook) : null;//// Make sure all BBCodes are lower case and do a little cleanup//function preparse_bbcode($text, &$errors, $is_signature = false){	global $forum_config;	$return = ($hook = get_hook('ps_preparse_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($is_signature)	{		global $lang_profile;		if (preg_match('#\[quote(=(&quot;|"|\'|)(.*)\\1)?\]|\[/quote\]|\[code\]|\[/code\]|\[list(=([1a\*]))?\]|\[/list\]#i', $text))			$errors[] = $lang_profile['Signature quote/code/list'];	}	if ($forum_config['p_sig_bbcode'] == '1' && $is_signature || $forum_config['p_message_bbcode'] == '1' && !$is_signature)	{		// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)		if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)		{			list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);			$text = implode("\xc1", $outside);		}		// Tidy up lists		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$text = preg_replace($pattern, $replace, $text);		$text = str_replace('*'."\0".']', '*]', $text);		if ($forum_config['o_make_links'] == '1')		{			// Check Unicode support			$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');			$text = do_clickable($text, $unicode);		}		// If we split up the message before we have to concatenate it together again (code tags)		if (isset($inside))		{			$outside = explode("\xc1", $text);			$text = '';			$num_tokens = count($outside);			for ($i = 0; $i < $num_tokens; ++$i)			{				$text .= $outside[$i];				if (isset($inside[$i]))					$text .= '[code]'.$inside[$i].'[/code]';			}		}		$temp_text = false;		if (empty($errors))			$temp_text = preparse_tags($text, $errors, $is_signature);		if ($temp_text !== false)			$text = $temp_text;		// Remove empty tags		while ($new_text = preg_replace('/\[(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]\[\/\1\]/', '', $text))		{			if ($new_text != $text)				$text = $new_text;			else				break;		}	}	$return = ($hook = get_hook('ps_preparse_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return forum_trim($text);}//// Check the structure of bbcode tags and fix simple mistakes where possible//function preparse_tags($text, &$errors, $is_signature = false){	global $lang_common, $forum_config;	// Start off by making some arrays of bbcode tags and what we need to do with each one	// List of all the tags	$tags = array('quote', 'code', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'img', 'list', '*', 'h');	// List of tags that we need to check are open (You could not put b,i,u in here then illegal nesting like [b][i][/b][/i] would be allowed)	$tags_opened = $tags;	// and tags we need to check are closed (the same as above, added it just in case)	$tags_closed = $tags;	// Tags we can nest and the depth they can be nested to (only quotes )	$tags_nested = array('quote' => $forum_config['o_quote_depth'], 'list' => 5, '*' => 5);	// Tags to ignore the contents of completely (just code)	$tags_ignore = array('code');	// Block tags, block tags can only go within another block tag, they cannot be in a normal tag	$tags_block = array('quote', 'code', 'list', 'h', '*');	// Inline tags, we do not allow new lines in these	$tags_inline = array('b', 'i', 'u', 'color', 'colour', 'h');	// Tags we trim interior space	$tags_trim = array('img');	// Tags we remove quotes from the argument	$tags_quotes = array('url', 'email', 'img');	// Tags we limit bbcode in	$tags_limit_bbcode = array(		'*' 	=> array('b', 'i', 'u', 'color', 'colour', 'url', 'email', 'list', 'img'),		'list' 	=> array('*'),		'url' 	=> array('b', 'i', 'u', 'color', 'colour', 'img'),		'email' => array('b', 'i', 'u', 'color', 'colour', 'img'),		'img' 	=> array()	);	// Tags we can automatically fix bad nesting	$tags_fix = array('quote', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'h');	$return = ($hook = get_hook('ps_preparse_tags_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$split_text = preg_split("/(\[[\*a-zA-Z0-9-\/]*?(?:=.*?)?\])/", $text, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);	$open_tags = array('post');	$open_args = array('');	$opened_tag = 0;	$new_text = '';	$current_ignore = '';	$current_nest = '';	$current_depth = array();	$limit_bbcode = $tags;	foreach ($split_text as $current)	{		if ($current == '')			continue;		// Are we dealing with a tag?		if (substr($current, 0, 1) != '[' || substr($current, -1, 1) != ']')		{			// Its not a bbcode tag so we put it on the end and continue			// If we are nested too deeply don't add to the end			if ($current_nest)				continue;			$current = str_replace("\r\n", "\n", $current);			$current = str_replace("\r", "\n", $current);			if (in_array($open_tags[$opened_tag], $tags_inline) && strpos($current, "\n") !== false)			{				// Deal with new lines				$split_current = preg_split("/(\n\n+)/", $current, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);				$current = '';				if (!forum_trim($split_current[0], "\n")) // the first part is a linebreak so we need to handle any open tags first					array_unshift($split_current, '');				for ($i = 1; $i < count($split_current); $i += 2)				{					$temp_opened = array();					$temp_opened_arg = array();					$temp = $split_current[$i - 1];					while (!empty($open_tags))					{						$temp_tag = array_pop($open_tags);						$temp_arg = array_pop($open_args);						if (in_array($temp_tag , $tags_inline))						{							array_push($temp_opened, $temp_tag);							array_push($temp_opened_arg, $temp_arg);							$temp .= '[/'.$temp_tag.']';						}						else						{							array_push($open_tags, $temp_tag);							array_push($open_args, $temp_arg);							break;						}					}					$current .= $temp.$split_current[$i];					$temp = '';					while (!empty($temp_opened))					{						$temp_tag = array_pop($temp_opened);						$temp_arg = array_pop($temp_opened_arg);						if (empty($temp_arg))							$temp .= '['.$temp_tag.']';						else							$temp .= '['.$temp_tag.'='.$temp_arg.']';						array_push($open_tags, $temp_tag);						array_push($open_args, $temp_arg);					}					$current .= $temp;				}				if (array_key_exists($i - 1, $split_current))					$current .= $split_current[$i - 1];			}			if (in_array($open_tags[$opened_tag], $tags_trim))				$new_text .= forum_trim($current);			else				$new_text .= $current;			continue;		}		// Get the name of the tag		$current_arg = '';		if (strpos($current, '/') === 1)		{			$current_tag = substr($current, 2, -1);		}		else if (strpos($current, '=') === false)		{			$current_tag = substr($current, 1, -1);		}		else		{			$current_tag = substr($current, 1, strpos($current, '=')-1);			$current_arg = substr($current, strpos($current, '=')+1, -1);		}		$current_tag = strtolower($current_tag);		// Is the tag defined?		if (!in_array($current_tag, $tags))		{			// Its not a bbcode tag so we put it on the end and continue			if (!$current_nest)				$new_text .= $current;			continue;		}		// We definitely have a bbcode tag.		// Make the tag string lower case		if ($equalpos = strpos($current,'='))		{			// We have an argument for the tag which we don't want to make lowercase			if (strlen(substr($current, $equalpos)) == 2)			{				// Empty tag argument				$errors[] = sprintf($lang_common['BBCode error 6'], $current_tag);				return false;			}			$current = strtolower(substr($current, 0, $equalpos)).substr($current, $equalpos);		}		else			$current = strtolower($current);		//This is if we are currently in a tag which escapes other bbcode such as code		if ($current_ignore)		{			if ('[/'.$current_ignore.']' == $current)			{				// We've finished the ignored section				$current = '[/'.$current_tag.']';				$current_ignore = '';			}			$new_text .= $current;			continue;		}		if ($current_nest)		{			// We are currently too deeply nested so lets see if we are closing the tag or not.			if ($current_tag != $current_nest)				continue;			if (substr($current, 1, 1) == '/')				$current_depth[$current_nest]--;			else				$current_depth[$current_nest]++;			if ($current_depth[$current_nest] <= $tags_nested[$current_nest])				$current_nest = '';			continue;		}		// Check the current tag is allowed here		if (!in_array($current_tag, $limit_bbcode) && $current_tag != $open_tags[$opened_tag])		{			$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);			return false;		}		if (substr($current, 1, 1) == '/')		{			//This is if we are closing a tag			if ($opened_tag == 0 || !in_array($current_tag, $open_tags))			{				//We tried to close a tag which is not open				if (in_array($current_tag, $tags_opened))				{					$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);					return false;				}			}			else			{				// Check nesting				while (true)				{					// Nesting is ok					if ($open_tags[$opened_tag] == $current_tag)					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;						break;					}					// Nesting isn't ok, try to fix it					if (in_array($open_tags[$opened_tag], $tags_closed) && in_array($current_tag, $tags_closed))					{						if (in_array($current_tag, $open_tags))						{							$temp_opened = array();							$temp_opened_arg = array();							$temp = '';							while (!empty($open_tags))							{								$temp_tag = array_pop($open_tags);								$temp_arg = array_pop($open_args);								if (!in_array($temp_tag, $tags_fix))								{									// We couldn't fix nesting									$errors[] = sprintf($lang_common['BBCode error 5'], array_pop($temp_opened));									return false;								}								array_push($temp_opened, $temp_tag);								array_push($temp_opened_arg, $temp_arg);								if ($temp_tag == $current_tag)									break;								else									$temp .= '[/'.$temp_tag.']';							}							$current = $temp.$current;							$temp = '';							array_pop($temp_opened);							array_pop($temp_opened_arg);							while (!empty($temp_opened))							{								$temp_tag = array_pop($temp_opened);								$temp_arg = array_pop($temp_opened_arg);								if (empty($temp_arg))									$temp .= '['.$temp_tag.']';								else									$temp .= '['.$temp_tag.'='.$temp_arg.']';								array_push($open_tags, $temp_tag);								array_push($open_args, $temp_arg);							}							$current .= $temp;							$opened_tag--;							break;						}						else						{							// We couldn't fix nesting							$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);							return false;						}					}					else if (in_array($open_tags[$opened_tag], $tags_closed))						break;					else					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;					}				}			}			if (in_array($current_tag, array_keys($tags_nested)))			{				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]--;			}			if (in_array($open_tags[$opened_tag], array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$open_tags[$opened_tag]];			else				$limit_bbcode = $tags;			$new_text .= $current;			continue;		}		else		{			// We are opening a tag			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			else				$limit_bbcode = $tags;			if (in_array($current_tag, $tags_block) && !in_array($open_tags[$opened_tag], $tags_block) && $opened_tag != 0)			{				// We tried to open a block tag within a non-block tag				$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);				return false;			}			if (in_array($current_tag, $tags_ignore))			{				// Its an ignore tag so we don't need to worry about whats inside it,				$current_ignore = $current_tag;				$new_text .= $current;				continue;			}			// Deal with nested tags			if (in_array($current_tag, $open_tags) && !in_array($current_tag, array_keys($tags_nested)))			{				// We nested a tag we shouldn't				$errors[] = sprintf($lang_common['BBCode error 4'], $current_tag);				return false;			}			else if (in_array($current_tag, array_keys($tags_nested)))			{				// We are allowed to nest this tag				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]++;				else					$current_depth[$current_tag] = 1;				// See if we are nested too deep				if ($current_depth[$current_tag] > $tags_nested[$current_tag])				{					$current_nest = $current_tag;					continue;				}			}			// Remove quotes from arguments for certain tags			if (strpos($current, '=') !== false && in_array($current_tag, $tags_quotes))			{				$current = preg_replace('#\['.$current_tag.'=("|\'|)(.*?)\\1\]\s*#i', '['.$current_tag.'=$2]', $current);			}			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			$open_tags[] = $current_tag;			$open_args[] = $current_arg;			$opened_tag++;			$new_text .= $current;			continue;		}	}	// Check we closed all the tags we needed to	foreach ($tags_closed as $check)	{		if (in_array($check, $open_tags))		{			// We left an important tag open			$errors[] = sprintf($lang_common['BBCode error 5'], $check);			return false;		}	}	if ($current_ignore)	{		// We left an ignore tag open		$errors[] = sprintf($lang_common['BBCode error 5'], $current_ignore);		return false;	}	$return = ($hook = get_hook('ps_preparse_tags_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $new_text;}//// Preparse the contents of [list] bbcode//function preparse_list_tag($content, $type = '*', &$errors){	global $lang_common;	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$content = preg_replace($pattern, $replace, $content);	}	$items = explode('[*]', str_replace('\"', '"', $content));	$content = '';	foreach ($items as $item)	{		if (forum_trim($item) != '')			$content .= '[*'."\0".']'.str_replace('[/*]', '', forum_trim($item)).'[/*'."\0".']'."\n";	}	return '[list='.$type.']'."\n".$content.'[/list]';}//// Split text into chunks ($inside contains all text inside $start and $end, and $outside contains all text outside)//function split_text($text, $start, $end, &$errors, $retab = true){	global $forum_config, $lang_common;	$tokens = explode($start, $text);	$outside[] = $tokens[0];	$num_tokens = count($tokens);	for ($i = 1; $i < $num_tokens; ++$i)	{		$temp = explode($end, $tokens[$i]);		if (count($temp) != 2)		{			$errors[] = $lang_common['BBCode code problem'];			return array(null, array($text));		}		$inside[] = $temp[0];		$outside[] = $temp[1];	}	if ($forum_config['o_indent_num_spaces'] != 8 && $retab)	{		$spaces = str_repeat(' ', $forum_config['o_indent_num_spaces']);		$inside = str_replace("\t", $spaces, $inside);	}	return array($inside, $outside);}//// Truncate URL if longer than 55 characters (add http:// or ftp:// if missing)//function handle_url_tag($url, $link = '', $bbcode = false){	$return = ($hook = get_hook('ps_handle_url_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$full_url = str_replace(array(' ', '\'', '`', '"'), array('%20', '', '', ''), $url);	if (strpos($url, 'www.') === 0)			// If it starts with www, we add http://		$full_url = 'http://'.$full_url;	else if (strpos($url, 'ftp.') === 0)	// Else if it starts with ftp, we add ftp://		$full_url = 'ftp://'.$full_url;	else if (!preg_match('#^([a-z0-9]{3,6})://#', $url)) 	// Else if it doesn't start with abcdef://, we add http://		$full_url = 'http://'.$full_url;	if (defined('FORUM_SUPPORT_PCRE_UNICODE'))	{		$idn = new idna_convert();		$idn->set_parameter('encoding', 'utf8');		$idn->set_parameter('strict', false);		$full_url = $idn->encode($full_url);	}	// Ok, not very pretty :-)	if (!$bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$link_name = ($link == '' || $link == $url) ? $url : $link;			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link_name))			{				$link = $idn->decode($link_name);			}		}		$link = ($link == '' || $link == $url) ? ((utf8_strlen($url) > 55) ? utf8_substr($url, 0 , 39).'  '.utf8_substr($url, -10) : $url) : stripslashes($link);	}	$return = ($hook = get_hook('ps_handle_url_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link))			{				$link = $idn->decode($link);			}		}		if ($full_url == $link)			return '[url]'.$link.'[/url]';		else			return '[url='.$full_url.']'.$link.'[/url]';	}	else		return '<a href="'.$full_url.'">'.$link.'</a>';}//// Turns an URL from the [img] tag into an <img> tag or a <a href...> tag//function handle_img_tag($url, $is_signature = false, $alt = null){	global $lang_common, $forum_user;	$return = ($hook = get_hook('ps_handle_img_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($alt == null)		$alt = $url;	$img_tag = '<a href="'.$url.'">&lt;'.$lang_common['Image link'].'&gt;</a>';	if ($is_signature && $forum_user['show_img_sig'] != '0')		$img_tag = '<img class="sigimage" src="'.$url.'" alt="'.forum_htmlencode($alt).'" />';	else if (!$is_signature && $forum_user['show_img'] != '0')		$img_tag = '<span class="postimg"><img src="'.$url.'" alt="'.forum_htmlencode($alt).'" /></span>';	$return = ($hook = get_hook('ps_handle_img_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $img_tag;}//// Parse the contents of [list] bbcode//function handle_list_tag($content, $type = '*'){	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('handle_list_tag(\'$2\', \'$1\')');		$content = preg_replace($pattern, $replace, $content);	}	$content = preg_replace('#\s*\[\*\](.*?)\[/\*\]\s*#s', '<li><p>$1</p></li>', forum_trim($content));	if ($type == '*')		$content = '<ul>'.$content.'</ul>';	else		if ($type == 'a')			$content = '<ol class="alpha">'.$content.'</ol>';		else			$content = '<ol class="decimal">'.$content.'</ol>';	return '</p>'.$content.'<p>';}//// Convert BBCodes to their HTML equivalent//function do_bbcode($text, $is_signature = false){	global $lang_common, $forum_user, $forum_config;	$return = ($hook = get_hook('ps_do_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strpos($text, '[quote') !== false)	{		$text = preg_replace('#\[quote=(&\#039;|&quot;|"|\'|)(.*?)\\1\]#e', '"</p><div class=\"quotebox\"><cite>".str_replace(array(\'[\', \'\\"\'), array(\'&#91;\', \'"\'), \'$2\')." ".$lang_common[\'wrote\'].":</cite><blockquote><p>"', $text);		$text = preg_replace('#\[quote\]\s*#', '</p><div class="quotebox"><blockquote><p>', $text);		$text = preg_replace('#\s*\[\/quote\]#S', '</p></blockquote></div><p>', $text);	}	if (!$is_signature)	{		$pattern[] = '%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise';		$replace[] = 'handle_list_tag(\'$2\', \'$1\')';	}	$pattern[] = '#\[b\](.*?)\[/b\]#ms';	$pattern[] = '#\[i\](.*?)\[/i\]#ms';	$pattern[] = '#\[u\](.*?)\[/u\]#ms';	$pattern[] = '#\[colou?r=([a-zA-Z]{3,20}|\#[0-9a-fA-F]{6}|\#[0-9a-fA-F]{3})](.*?)\[/colou?r\]#ms';	$pattern[] = '#\[h\](.*?)\[/h\]#ms';	$replace[] = '<strong>$1</strong>';	$replace[] = '<em>$1</em>';	$replace[] = '<span class="bbu">$1</span>';	$replace[] = '<span style="color: $1">$2</span>';	$replace[] = '</p><h5>$1</h5><p>';	if (($is_signature && $forum_config['p_sig_img_tag'] == '1') || (!$is_signature && $forum_config['p_message_img_tag'] == '1'))	{		$pattern[] = '#\[img\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		$pattern[] = '#\[img=([^\[]*?)\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		if ($is_signature)		{			$replace[] = 'handle_img_tag(\'$1$3\', true)';			$replace[] = 'handle_img_tag(\'$2$4\', true, \'$1\')';		}		else		{			$replace[] = 'handle_img_tag(\'$1$3\', false)';			$replace[] = 'handle_img_tag(\'$2$4\', false, \'$1\')';		}	}	$pattern[] = '#\[url\]([^\[]*?)\[/url\]#e';	$pattern[] = '#\[url=([^\[]+?)\](.*?)\[/url\]#e';	$pattern[] = '#\[email\]([^\[]*?)\[/email\]#';	$pattern[] = '#\[email=([^\[]+?)\](.*?)\[/email\]#';	$replace[] = 'handle_url_tag(\'$1\')';	$replace[] = 'handle_url_tag(\'$1\', \'$2\')';	$replace[] = '<a href="mailto:$1">$1</a>';	$replace[] = '<a href="mailto:$1">$2</a>';	$return = ($hook = get_hook('ps_do_bbcode_replace')) ? eval($hook) : null;	if ($return != null)		return $return;	// This thing takes a while! :)	$text = preg_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_do_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Make hyperlinks clickable//function do_clickable($text, $unicode = FALSE){	$text = ' '.$text;	if ($unicode)	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\p{Nd}\p{L}\-]+\.([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	else	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\w\-]+\.([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-]?)?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	return substr($text, 1);}//// Convert a series of smilies to images//function do_smilies($text){	global $forum_config, $base_url, $smilies;	$return = ($hook = get_hook('ps_do_smilies_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$text = ' '.$text.' ';	foreach ($smilies as $smiley_text => $smiley_img)	{		if (strpos($text, $smiley_text) !== false)			$text = preg_replace("#(?<=[>\s])".preg_quote($smiley_text, '#')."(?=\W)#m", '<img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.substr($smiley_img, 0, strrpos($smiley_img, '.')).'" />', $text);	}	$return = ($hook = get_hook('ps_do_smilies_end')) ? eval($hook) : null;	return substr($text, 1, -1);}//// Parse message text//function parse_message($text, $hide_smilies){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_message_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_message_pre_split')) ? eval($hook) : null;	if ($return != null)		return $return;	// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)	if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)	{		list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);		$text = implode("\xc1", $outside);	}	$return = ($hook = get_hook('ps_parse_message_post_split')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_message_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text);	if ($forum_config['o_smilies'] == '1' && $forum_user['show_smilies'] == '1' && $hide_smilies == '0')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_message_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_message_pre_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// If we split up the message before we have to concatenate it together again (code tags)	if (isset($inside))	{		$outside = explode("\xc1", $text);		$text = '';		$num_tokens = count($outside);		for ($i = 0; $i < $num_tokens; ++$i)		{			$text .= $outside[$i];			if (isset($inside[$i]))				$text .= '</p><div class="codebox"><pre><code>'.forum_trim($inside[$i], "\n\r").'</code></pre></div><p>';		}	}	$return = ($hook = get_hook('ps_parse_message_post_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// Add paragraph tag around post, but make sure there are no empty paragraphs	$text = preg_replace('#<br />\s*?<br />((\s*<br />)*)#i', "</p>$1<p>", $text);	$text = str_replace('<p><br />', '<p>', $text);	$text = str_replace('<p></p>', '', '<p>'.$text.'</p>');	$return = ($hook = get_hook('ps_parse_message_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Parse signature text//function parse_signature($text){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_signature_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_signature_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_signature_pre_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_sig_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text, true);	if ($forum_config['o_smilies_sig'] == '1' && $forum_user['show_smilies'] == '1')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_signature_post_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_signature_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}define('FORUM_PARSER_LOADED', 1);
<?php/** * Caching functions. * * This file contains all of the functions used to generate the cache files used by the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Safe create or write of cache files// Use LOCKfunction write_cache_file($file, $content){	$tmp_file = tempnam(FORUM_CACHE_DIR, md5($file.time().uniqid()));	if (!$tmp_file)	{		return false;	}	$fh = @/**/fopen($tmp_file, 'wb');	if (!$fh)	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	// Write	fwrite($fh, $content);	fclose($fh);	// Rename TMP to file	if (!@/**/rename($tmp_file, $file))	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	return true;}//// Generate the config cache PHP script//function generate_config_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_config_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the forum config from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'config AS c'	);	($hook = get_hook('ch_fn_generate_config_cache_qr_get_config')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_config_item = $forum_db->fetch_row($result))		$output[$cur_config_item[0]] = $cur_config_item[1];	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_config.php', '<?php'."\n\n".'define(\'FORUM_CONFIG_LOADED\', 1);'."\n\n".'$forum_config = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the bans cache PHP script//function generate_bans_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_bans_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the ban list from the DB	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id'	);	($hook = get_hook('ch_fn_generate_bans_cache_qr_get_bans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_ban = $forum_db->fetch_assoc($result))		$output[] = $cur_ban;	// Output ban list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_bans.php', '<?php'."\n\n".'define(\'FORUM_BANS_LOADED\', 1);'."\n\n".'$forum_bans = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write bans cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the ranks cache PHP script//function generate_ranks_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_ranks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the rank list from the DB	$query = array(		'SELECT'	=> 'r.*',		'FROM'		=> 'ranks AS r',		'ORDER BY'	=> 'r.min_posts'	);	($hook = get_hook('ch_fn_generate_ranks_cache_qr_get_ranks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_rank = $forum_db->fetch_assoc($result))		$output[] = $cur_rank;	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ranks.php', '<?php'."\n\n".'define(\'FORUM_RANKS_LOADED\', 1);'."\n\n".'$forum_ranks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write ranks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the forum stats cache PHP script//function generate_stats_cache(){	global $forum_db;	$stats = array();	$return = ($hook = get_hook('ch_fn_generate_stats_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	// Get last registered user info	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	// Get num topics and posts	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	$stats['cached'] = time();	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_stats.php', '<?php'."\n\n".'if (!defined(\'FORUM_STATS_LOADED\')) define(\'FORUM_STATS_LOADED\', 1);'."\n\n".'$forum_stats = '.var_export($stats, true).';'."\n\n".'?>'))	{		error('Unable to write stats cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}	unset($stats);}//// Generate the censor cache PHP script//function generate_censors_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_censors_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the censor list from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'censoring AS c',		'ORDER BY'	=> 'c.search_for'	);	($hook = get_hook('ch_fn_generate_censors_cache_qr_get_censored_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_censor = $forum_db->fetch_assoc($result))		$output[] = $cur_censor;	// Output censors list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_censors.php', '<?php'."\n\n".'define(\'FORUM_CENSORS_LOADED\', 1);'."\n\n".'$forum_censors = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write censor cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate quickjump cache PHP scripts//function generate_quickjump_cache($group_id = false){	global $forum_db, $lang_common, $forum_url, $forum_config, $forum_user, $base_url;	$return = ($hook = get_hook('ch_fn_generate_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);'."\n".'$forum_id = isset($forum_id) ? $forum_id : 0;'."\n\n".'?>';		$output .= '<form id="qjump" method="get" accept-charset="utf-8" action="'.$base_url.'/viewforum.php">'."\n\t".'<div class="frm-fld frm-select">'."\n\t\t".'<label for="qjump-select"><span><?php echo $lang_common[\'Jump to\'] ?>'.'</span></label><br />'."\n\t\t".'<span class="frm-input"><select id="qjump-select" name="id">'."\n";		// Get the list of categories and forums from the DB		$query = array(			'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',			'FROM'		=> 'categories AS c',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'c.id=f.cat_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$group_id.')'				)			),			'WHERE'		=> 'fp.read_forum IS NULL OR fp.read_forum=1',			'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_cats_and_forums')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forums = array();		while ($cur_forum = $forum_db->fetch_assoc($result))		{			$forums[] = $cur_forum;		}		$cur_category = 0;		$forum_count = 0;		$sef_friendly_names = array();		foreach ($forums as $cur_forum)		{			($hook = get_hook('ch_fn_generate_quickjump_cache_forum_loop_start')) ? eval($hook) : null;			if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?			{				if ($cur_category)					$output .= "\t\t\t".'</optgroup>'."\n";				$output .= "\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";				$cur_category = $cur_forum['cid'];			}			$sef_friendly_names[$cur_forum['fid']] = sef_friendly($cur_forum['forum_name']);			$redirect_tag = ($cur_forum['redirect_url'] != '') ? ' &gt;&gt;&gt;' : '';			$output .= "\t\t\t\t".'<option value="'.$cur_forum['fid'].'"<?php echo ($forum_id == '.$cur_forum['fid'].') ? \' selected="selected"\' : \'\' ?>>'.forum_htmlencode($cur_forum['forum_name']).$redirect_tag.'</option>'."\n";			$forum_count++;		}		$output .= "\t\t\t".'</optgroup>'."\n\t\t".'</select>'."\n\t\t".'<input type="submit" id="qjump-submit" value="<?php echo $lang_common[\'Go\'] ?>" /></span>'."\n\t".'</div>'."\n".'</form>'."\n";		$output .= '<script type="text/javascript">'."\n\t\t".'var forum_quickjump_url = "'.forum_link($forum_url['forum']).'";'."\n\t\t".'var sef_friendly_url_array = new Array('.count($forums).');';		foreach ($sef_friendly_names as $forum_id => $forum_name)			$output .= "\n\t".'sef_friendly_url_array['.$forum_id.'] = "'.forum_htmlencode($forum_name).'";';		$output .= "\n".'</script>'."\n";		if ($forum_count < 2)			$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);';		// Output quickjump as PHP code		if (!write_cache_file(FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php', $output))		{			error('Unable to write quickjump cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);		}	}}//// Clean quickjump cache PHP scripts//function clean_quickjump_cache($group_id = false){	global $forum_db;	$return = ($hook = get_hook('ch_fn_clean_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_clean_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		// Output quickjump as PHP code		$qj_cache_file = FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php';		if (file_exists($qj_cache_file))		{			unlink($qj_cache_file);		}	}}//// Generate the hooks cache PHP script//function generate_hooks_cache(){	global $forum_db, $forum_config, $base_url;	$return = ($hook = get_hook('ch_fn_generate_hooks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the hooks from the DB	$query = array(		'SELECT'	=> 'eh.id, eh.code, eh.extension_id, e.dependencies',		'FROM'		=> 'extension_hooks AS eh',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'extensions AS e',				'ON'			=> 'e.id=eh.extension_id'			)		),		'WHERE'		=> 'e.disabled=0',		'ORDER BY'	=> 'eh.priority, eh.installed'	);	($hook = get_hook('ch_fn_generate_hooks_cache_qr_get_hooks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_hook = $forum_db->fetch_assoc($result))	{		$load_ext_info = '$GLOBALS[\'ext_info_stack\'][] = array('."\n".			'\'id\'				=> \''.$cur_hook['extension_id'].'\','."\n".			'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'dependencies\'	=> array ('."\n";		$dependencies = explode('|', substr($cur_hook['dependencies'], 1, -1));		foreach ($dependencies as $cur_dependency)		{			// This happens if there are no dependencies because explode ends up returning an array with one empty element			if (empty($cur_dependency))				continue;			$load_ext_info .= '\''.$cur_dependency.'\'	=> array('."\n".				'\'id\'				=> \''.$cur_dependency.'\','."\n".				'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_dependency.'\','."\n".				'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_dependency.'\'),'."\n";		}		$load_ext_info .= ')'."\n".');'."\n".'$ext_info = $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$unload_ext_info = 'array_pop($GLOBALS[\'ext_info_stack\']);'."\n".'$ext_info = empty($GLOBALS[\'ext_info_stack\']) ? array() : $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$output[$cur_hook['id']][] = $load_ext_info."\n\n".$cur_hook['code']."\n\n".$unload_ext_info."\n";	}	// Output hooks as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_hooks.php', '<?php'."\n\n".'define(\'FORUM_HOOKS_LOADED\', 1);'."\n\n".'$forum_hooks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write hooks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the updates cache PHP script//function generate_updates_cache(){	global $forum_db, $forum_config;	$return = ($hook = get_hook('ch_fn_generate_updates_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of installed hotfix extensions	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id LIKE \'hotfix_%\''	);	($hook = get_hook('ch_fn_generate_updates_cache_qr_get_hotfixes')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$hotfixes = array();	while ($cur_ext_hotfix_id = $forum_db->fetch_row($result))	{		$hotfixes[] = urlencode($cur_ext_hotfix_id[0]);	}	// Contact the punbb.informer.com updates service	$result = get_remote_file('http://punbb.informer.com/update/?type=xml&version='.urlencode($forum_config['o_cur_version']).'&hotfixes='.implode(',', $hotfixes), 8);	// Make sure we got everything we need	if ($result != null && strpos($result['content'], '</updates>') !== false)	{		if (!defined('FORUM_XML_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/xml.php';		$output = xml_to_array(forum_trim($result['content']));		$output = current($output);		if (!empty($output['hotfix']) && is_array($output['hotfix']) && !is_array(current($output['hotfix'])))			$output['hotfix'] = array($output['hotfix']);		$output['cached'] = time();		$output['fail'] = false;	}	else	// If the update check failed, set the fail flag		$output = array('cached' => time(), 'fail' => true);	// This hook could potentially (and responsibly) be used by an extension to do its own little update check	($hook = get_hook('ch_fn_generate_updates_cache_write')) ? eval($hook) : null;	// Output update status as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_updates.php', '<?php'."\n\n".'if (!defined(\'FORUM_UPDATES_LOADED\')) define(\'FORUM_UPDATES_LOADED\', 1);'."\n\n".'$forum_updates = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write updates cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}function generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension){	$forum_ext_last_versions = array();	$forum_ext_repos = array();	foreach (array_unique(array_merge($repository_urls, $repository_url_by_extension)) as $url)	{		//Get repository timestamp		$remote_file = get_remote_file( $url.'/timestamp', 2);		$repository_timestamp = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);		unset($remote_file);		if (!is_numeric($repository_timestamp))			continue;		if (!isset( $forum_ext_repos[ $url ][ 'timestamp' ] ))			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		if ($forum_ext_repos[ $url ][ 'timestamp' ] <= $repository_timestamp)		{			foreach ($inst_exts as $ext)			{				$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastversion', 2);				$version = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);				unset($remote_file);				if (empty($version) || !preg_match('~^[0-9a-zA-Z\. +-]+$~u', $version))					continue;				$forum_ext_repos[ $url ][ 'extension_versions' ][ $ext['id'] ] = $version;				//If key with current extension exist in array, compare it with version in rep-ry				if (!isset($forum_ext_last_versions[ $ext['id'] ]) || ( version_compare($forum_ext_last_versions[ $ext['id'] ][ 'version' ], $version, '<') ) )				{					$forum_ext_last_versions[ $ext['id'] ] = array('version' => $version, 'repo_url' => $url);					$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastchanges', 2);					$last_changes = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);					unset($remote_file);					if ( !empty($last_changes) )						$forum_ext_last_versions[ $ext['id'] ][ 'changes' ] = $last_changes;				}			}			//Write timestamp to cache			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		}	}	if (array_keys($forum_ext_last_versions) != array_keys($inst_exts))		foreach ($inst_exts as $ext)			if ( !in_array($ext['id'], array_keys($forum_ext_last_versions)) )				$forum_ext_last_versions[$ext['id']] = array('version' => $ext['version'], 'repo_url' => '', 'changes' => '');	($hook = get_hook('ch_generate_ext_versions_cache_check_repository')) ? eval($hook) : null;	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ext_version_notifications.php', '<?php'."\n\n".'if (!defined(\'FORUM_EXT_VERSIONS_LOADED\')) define(\'FORUM_EXT_VERSIONS_LOADED\', 1);'."\n\n".'$forum_ext_repos = '.var_export($forum_ext_repos, true).';'."\n\n".' $forum_ext_last_versions = '.var_export($forum_ext_last_versions, true).";\n\n".'$forum_ext_versions_update_cache = '.time().";\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}define('FORUM_CACHE_FUNCTIONS_LOADED', 1);
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Outputs the header used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Send no-cache headersheader('Expires: Thu, 21 Jul 1977 07:30:00 GMT');	// When yours truly first set eyes on this world! :)header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');header('Cache-Control: post-check=0, pre-check=0', false);header('Pragma: no-cache');		// For HTTP/1.0 compability// Send the Content-type header in case the web server is setup to send something elseheader('Content-type: text/html; charset=utf-8');// Load the main templateif (substr(FORUM_PAGE, 0, 5) == 'admin'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/admin.tpl';}else if (FORUM_PAGE == 'help'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/help.tpl';}else{	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/main.tpl';}($hook = get_hook('hd_pre_template_loaded')) ? eval($hook) : null;$tpl_main = file_get_contents($tpl_path);($hook = get_hook('hd_template_loaded')) ? eval($hook) : null;// START SUBST - <!-- forum_include "*" -->while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_main, $cur_include)){	if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))		error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template main.tpl. There is no such file in folder /include/user/', __FILE__, __LINE__);	ob_start();	include FORUM_ROOT.'include/user/'.$cur_include[1];	$tpl_temp = ob_get_contents();	$tpl_main = str_replace($cur_include[0], $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_include "*" -->// START SUBST - <!-- forum_local -->$tpl_main = str_replace('<!-- forum_local -->', 'lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_main);// END SUBST - <!-- forum_local -->// START SUBST - <!-- forum_head -->// Is this a page that we want search index spiders to index?if (!defined('FORUM_ALLOW_INDEX'))	$forum_head['robots'] = '<meta name="ROBOTS" content="NOINDEX, FOLLOW" />';else	$forum_head['descriptions'] = '<meta name="description" content="'.generate_crumbs(true).$lang_common['Title separator'].forum_htmlencode($forum_config['o_board_desc']).'" />';// Should we output a MicroID? http://microid.org/if (strpos(FORUM_PAGE, 'profile') === 0)	$forum_head['microid'] = '<meta name="microid" content="mailto+http:sha1:'.sha1(sha1('mailto:'.$user['email']).sha1(forum_link($forum_url['user'], $id))).'" />';$forum_head['title'] = '<title>'.generate_crumbs(true).'</title>';// Should we output feed links?if (FORUM_PAGE == 'index'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['index_rss']).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['index_atom']).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewforum'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['forum_rss'], $id).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['forum_atom'], $id).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewtopic'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['topic_rss'], $id).'" title="RSS" />';	$forum_head['atom'] =  '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['topic_atom'], $id).'" title="ATOM" />';}$forum_head['top'] = '<link rel="top" href="'.$base_url.'" title="'.$lang_common['Forum index'].'" />';// If there are more than two breadcrumbs, add the "up" link (second last)if (count($forum_page['crumbs']) > 2)	$forum_head['up'] = '<link rel="up" href="'.$forum_page['crumbs'][count($forum_page['crumbs']) - 2][1].'" title="'.forum_htmlencode($forum_page['crumbs'][count($forum_page['crumbs']) - 2][0]).'" />';// If there are other page navigation links (first, next, prev and last)if (!empty($forum_page['nav']))	$forum_head['nav'] = implode("\n", $forum_page['nav']);$forum_head['search'] = '<link rel="search" href="'.forum_link($forum_url['search']).'" title="'.$lang_common['Search'].'" />';$forum_head['author'] = '<link rel="author" href="'.forum_link($forum_url['users']).'" title="'.$lang_common['User list'].'" />';ob_start();// Include stylesheetsrequire FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';$head_temp = forum_trim(ob_get_contents());$num_temp = 0;foreach (explode("\n", $head_temp) as $style_temp)	$forum_head['style'.$num_temp++] = $style_temp;ob_end_clean();($hook = get_hook('hd_head')) ? eval($hook) : null;// Render CSS from forum_loader$tmp_head = implode("\n", $forum_head).$forum_loader->render_css();$tpl_main = str_replace('<!-- forum_head -->', $tmp_head, $tpl_main);unset($forum_head, $tmp_head);// END SUBST - <!-- forum_head -->// START SUBST OF COMMON ELEMENTS// Setup array of general elements$gen_elements = array();// Forum page id and classesif (!defined('FORUM_PAGE_TYPE')){	if (substr(FORUM_PAGE, 0, 5) == 'admin')		define('FORUM_PAGE_TYPE', 'admin-page');	else	{		if (!empty($forum_page['page_post']))			define('FORUM_PAGE_TYPE', 'paged-page');		else if (!empty($forum_page['main_menu']))			define('FORUM_PAGE_TYPE', 'menu-page');		else			define('FORUM_PAGE_TYPE', 'basic-page');	}}$gen_elements['<!-- forum_page -->'] = 'id="brd-'.FORUM_PAGE.'" class="brd-page '.FORUM_PAGE_TYPE.'"';// Skip link$gen_elements['<!-- forum_skip -->'] = '<p id="brd-access"><a href="#brd-main">'.$lang_common['Skip to content'].'</a></p>';// Forum Title$gen_elements['<!-- forum_title -->'] = '<p id="brd-title"><a href="'.forum_link($forum_url['index']).'">'.forum_htmlencode($forum_config['o_board_title']).'</a></p>';// Forum Description$gen_elements['<!-- forum_desc -->'] = ($forum_config['o_board_desc'] != '') ? '<p id="brd-desc">'.forum_htmlencode($forum_config['o_board_desc']).'</p>' : '';// Main Navigation$gen_elements['<!-- forum_navlinks -->'] = '<ul>'."\n\t\t".generate_navlinks()."\n\t".'</ul>';// Announcement$gen_elements['<!-- forum_announcement -->'] = ($forum_config['o_announcement'] == '1' && $forum_user['g_read_board'] == '1') ? '<div id="brd-announcement" class="gen-content">'.($forum_config['o_announcement_heading'] != '' ? "\n\t".'<h1 class="hn"><span>'.$forum_config['o_announcement_heading'].'</span></h1>' : '')."\n\t".'<div class="content">'.$forum_config['o_announcement_message'].'</div>'."\n".'</div>'."\n" : '';// Flash messages$gen_elements['<!-- forum_messages -->'] = '<div id="brd-messages" class="brd">'.$forum_flash->show(true).'</div>'."\n";// Maintenance Warning$gen_elements['<!-- forum_maint -->'] = ($forum_user['g_id'] == FORUM_ADMIN && $forum_config['o_maintenance'] == '1') ? '<p id="maint-alert" class="warn">'.sprintf($lang_common['Maintenance warning'], '<a href="'.forum_link($forum_url['admin_settings_maintenance']).'">'.$lang_common['Maintenance mode'].'</a>').'</p>' : '';($hook = get_hook('hd_gen_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($gen_elements), array_values($gen_elements), $tpl_main);unset($gen_elements);// END SUBST OF COMMON ELEMENTS// START SUBST VISIT ELEMENTS$visit_elements = array();if ($forum_user['is_guest'])	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.$lang_common['Not logged in'].'</span> <span>'.$lang_common['Login nag'].'</span></p>';else	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.sprintf($lang_common['Logged in as'], '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span> <span>'.sprintf($lang_common['Last visit'], format_time($forum_user['last_visit'])).'</span></p>';if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1'){	$visit_links = array();	if (!$forum_user['is_guest'])		$visit_links['newposts'] = '<span id="visit-new"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_new']).'" title="'.$lang_common['New posts title'].'">'.$lang_common['New posts'].'</a></span>';	$visit_links['recent'] = '<span id="visit-recent"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_recent']).'" title="'.$lang_common['Active topics title'].'">'.$lang_common['Active topics'].'</a></span>';	$visit_links['unanswered'] = '<span id="visit-unanswered"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_unanswered']).'" title="'.$lang_common['Unanswered topics title'].'">'.$lang_common['Unanswered topics'].'</a></span>';}$visit_elements['<!-- forum_visit -->'] = (!empty($visit_links)) ? '<p id="visit-links" class="options">'.implode(' ', $visit_links).'</p>' : '';($hook = get_hook('hd_visit_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($visit_elements), array_values($visit_elements), $tpl_main);unset($visit_elements);// END SUBST VISIT ELEMENTS// START SUBST - <!-- forum_admod -->$admod_links = array();// We only need to run this query for mods/admins if there will actually be reports to look atif ($forum_user['is_admmod'] && $forum_config['o_report_method'] != 1){	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'reports AS r',		'WHERE'		=> 'r.zapped IS NULL',	);	($hook = get_hook('hd_qr_get_unread_reports_count')) ? eval($hook) : null;	$result_header = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result_header))		$admod_links['reports'] = '<span id="reports"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_common['New reports'].'</a></span>';}if ($forum_user['g_id'] == FORUM_ADMIN){	$alert_items = array();	// Warn the admin that maintenance mode is enabled	if ($forum_config['o_maintenance'] == '1')		$alert_items['maintenance'] = '<p id="maint-alert" class="warn">'.$lang_common['Maintenance alert'].'</p>';	if ($forum_config['o_check_for_updates'] == '1')	{		if ($forum_updates['fail'])			$alert_items['update_fail'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.$lang_common['Updates failed'].'</p>';		else if (isset($forum_updates['version']) && isset($forum_updates['hotfix']))			$alert_items['update_version_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version n hf'], $forum_updates['version'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';		else if (isset($forum_updates['version']))			$alert_items['update_version'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version'], $forum_updates['version']).'</p>';		else if (isset($forum_updates['hotfix']))			$alert_items['update_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates hf'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';	}	// Warn the admin that their version of the database is newer than the version supported by the code	// NOTE: Why is it done on any page, but shown in admin section only.	if ($forum_config['o_database_revision'] > FORUM_DB_REVISION)		$alert_items['newer_database'] = '<p><strong>'.$lang_common['Database mismatch'].'</strong> '.$lang_common['Database mismatch alert'].'</p>';	if (!empty($alert_items))		$admod_links['alert'] = '<span id="alert"><a href="'.forum_link($forum_url['admin_index']).'"><strong>'.$lang_common['New alerts'].'</strong></a></span>';	($hook = get_hook('hd_alert')) ? eval($hook) : null;}$tpl_main = str_replace('<!-- forum_admod -->', (!empty($admod_links)) ? '<p id="brd-admod">'.implode(' ', $admod_links).'</p>' : '', $tpl_main);// END SUBST - <!-- forum_admod -->// MAIN SECTION INTERFACE ELEMENT SUBSTITUTION$main_elements = array();// Top breadcrumbs$main_elements['<!-- forum_crumbs_top -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-top" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Bottom breadcrumbs$main_elements['<!-- forum_crumbs_end -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-end" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Main section heading$main_elements['<!-- forum_main_title -->'] =  '<h1 class="main-title">'.((isset($forum_page['main_title'])) ? $forum_page['main_title'] : forum_htmlencode(is_array($last_crumb = end($forum_page['crumbs'])) ? reset($last_crumb) : $last_crumb)).(isset($forum_page['main_head_pages']) ? ' <small>'.$forum_page['main_head_pages'].'</small>' : '').'</h1>'."\n";// Top pagination and post links$main_elements['<!-- forum_main_pagepost_top -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-top" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Bottom pagination and postlink$main_elements['<!-- forum_main_pagepost_end -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-end" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Main section menu e.g. profile menu$main_elements['<!-- forum_main_menu -->'] = (!empty($forum_page['main_menu'])) ? '<div class="main-menu gen-content">'."\n\t".'<ul>'."\n\t\t".implode("\n\t\t", $forum_page['main_menu'])."\n\t".'</ul>'."\n".'</div>' : '';// Main section menu e.g. profile menuif (substr(FORUM_PAGE, 0, 5) == 'admin' && FORUM_PAGE_TYPE != 'paged'){	$main_elements['<!-- forum_admin_menu -->'] = '<div class="admin-menu gen-content">'."\n\t".'<ul>'."\n\t\t".generate_admin_menu(false)."\n\t".'</ul>'."\n".'</div>';	$forum_page['admin_sub'] = generate_admin_menu(true);		$main_elements['<!-- forum_admin_submenu -->'] = ($forum_page['admin_sub'] != '') ? '<div class="admin-submenu gen-content">'."\n\t".'<ul>'."\n\t\t".$forum_page['admin_sub']."\n\t".'</ul>'."\n".'</div>' : '';}($hook = get_hook('hd_main_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($main_elements),  array_values($main_elements), $tpl_main);unset($main_elements);// END MAIN SECTION INTERFACE ELEMENT SUBSTITUTION($hook = get_hook('hd_end')) ? eval($hook) : null;if (!defined('FORUM_HEADER'))	define('FORUM_HEADER', 1);
<?php/** * Allows users to view and edit their details. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('pf_start')) ? eval($hook) : null;$action = isset($_GET['action']) ? $_GET['action'] : null;$section = isset($_GET['section']) ? $_GET['section'] : 'about';	// Default to section "about"$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 2)	message($lang_common['Bad request']);$errors = array();if ($action != 'change_pass' || !isset($_GET['key'])){	if ($forum_user['g_read_board'] == '0')		message($lang_common['No view']);	else if ($forum_user['g_view_users'] == '0' && ($forum_user['is_guest'] || $forum_user['id'] != $id))		message($lang_common['No permission']);}// Load the profile.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';// Fetch info about the user whose profile we're viewing$query = array(	'SELECT'	=> 'u.*, g.g_id, g.g_user_title, g.g_moderator',	'FROM'		=> 'users AS u',	'JOINS'		=> array(		array(			'LEFT JOIN'	=> 'groups AS g',			'ON'		=> 'g.g_id=u.group_id'		)	),	'WHERE'		=> 'u.id='.$id);($hook = get_hook('pf_qr_get_user_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$user = $forum_db->fetch_assoc($result);if (!$user)	message($lang_common['Bad request']);if ($action == 'change_pass'){	($hook = get_hook('pf_change_pass_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		// If the user is already logged in we shouldn't be here :)		if (!$forum_user['is_guest'])			message($lang_profile['Pass logout']);		($hook = get_hook('pf_change_pass_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['Pass key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			if (isset($_POST['form_sent']))			{				($hook = get_hook('pf_change_pass_key_form_submitted')) ? eval($hook) : null;				$new_password1 = forum_trim($_POST['req_new_password1']);				$new_password2 = forum_trim($_POST['req_new_password2']);				if (utf8_strlen($new_password1) < 4)					$errors[] = $lang_profile['Pass too short'];				else if ($new_password1 != $new_password2)					$errors[] = $lang_profile['Pass not match'];				// Did everything go according to plan?				if (empty($errors))				{					$new_password_hash = forum_hash($new_password1, $user['salt']);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'password=\''.$new_password_hash.'\', activate_key=NULL',						'WHERE'		=> 'id='.$id					);					($hook = get_hook('pf_change_pass_key_qr_update_password')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Add flash message					$forum_flash->add_info($lang_profile['Pass updated']);					($hook = get_hook('pf_change_pass_key_pre_redirect')) ? eval($hook) : null;					redirect(forum_link($forum_url['index']), $lang_profile['Pass updated']);				}			}			// Is this users own profile			$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;			// Setup form			$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;			$forum_page['form_action'] = forum_link($forum_url['change_password_key'], array($id, $key));			// Setup breadcrumbs			$forum_page['crumbs'] = array(				array($forum_config['o_board_title'], forum_link($forum_url['index'])),				array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),				($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password']), $id)			);			($hook = get_hook('pf_change_pass_key_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE', 'profile-changepass');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('pf_change_pass_key_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php			// If there were any errors, show them			if (!empty($errors))			{				$forum_page['errors'] = array();				foreach ($errors as $cur_error)					$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';				($hook = get_hook('pf_change_pass_key_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php			}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" autocomplete="off">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_key_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_key_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php			($hook = get_hook('pf_change_pass_key_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}	}	// Make sure we are allowed to change this user's password	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $forum_user['g_mod_change_passwords'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_pass_normal_form_submitted')) ? eval($hook) : null;		$old_password = isset($_POST['req_old_password']) ? forum_trim($_POST['req_old_password']) : '';		$new_password1 = forum_trim($_POST['req_new_password1']);		$new_password2 = forum_trim($_POST['req_new_password2']);		if (utf8_strlen($new_password1) < 4)			$errors[] = $lang_profile['Pass too short'];		else if ($new_password1 != $new_password2)			$errors[] = $lang_profile['Pass not match'];		$authorized = false;		if (!empty($user['password']))		{			$old_password_hash = forum_hash($old_password, $user['salt']);			if (($user['password'] == $old_password_hash) || $forum_user['is_admmod'])				$authorized = true;		}		if (!$authorized)			$errors[] = $lang_profile['Wrong old password'];		// Did everything go according to plan?		if (empty($errors))		{			$new_password_hash = forum_hash($new_password1, $user['salt']);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$new_password_hash.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_pass_normal_qr_update_password')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_user['id'] == $id)			{				$cookie_data = @explode('|', base64_decode($_COOKIE[$cookie_name]));				$expire = ($cookie_data[2] > time() + $forum_config['o_timeout_visit']) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];				forum_setcookie($cookie_name, base64_encode($forum_user['id'].'|'.$new_password_hash.'|'.$expire.'|'.sha1($user['salt'].$new_password_hash.forum_hash($expire, $user['salt']))), $expire);			}			// Add flash message			$forum_flash->add_info($lang_profile['Pass updated redirect']);			($hook = get_hook('pf_change_pass_normal_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['Pass updated redirect']);		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_password'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password'], $id))	);	($hook = get_hook('pf_change_pass_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changepass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_pass_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_pass_normal_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>" autocomplete="off">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_normal_pre_old_password')) ? eval($hook) : null; ?><?php if (!$forum_user['is_admmod'] || $forum_user['id'] == $id): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Old password'] ?></span> <small><?php echo $lang_profile['Old password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_old_password" size="35" value="<?php echo(isset($_POST['req_old_password']) ? forum_htmlencode($_POST['req_old_password']) : ''); ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_pass_normal_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_pass_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'change_email'){	// Make sure we are allowed to change this user's e-mail	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_email_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		($hook = get_hook('pf_change_email_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['E-mail key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'email=activate_string, activate_string=NULL, activate_key=NULL',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			message($lang_profile['E-mail updated']);		}	}	else if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_email_normal_form_submitted')) ? eval($hook) : null;		if (forum_hash($_POST['req_password'], $forum_user['salt']) !== $forum_user['password'])			$errors[] = $lang_profile['Wrong password'];		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$new_email = strtolower(forum_trim($_POST['req_new_email']));		if (!is_valid_email($new_email))			$errors[] = $lang_common['Invalid e-mail'];		// Check if it's a banned e-mail address		if (is_banned_email($new_email))		{			($hook = get_hook('pf_change_email_normal_banned_email')) ? eval($hook) : null;			if ($forum_config['p_allow_banned_email'] == '0')				$errors[] = $lang_profile['Banned e-mail'];			else if ($forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Banned e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to banned e-mail address: '.$new_email."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Check if someone else already has registered with that e-mail address		$query = array(			'SELECT'	=> 'u.id, u.username',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.email=\''.$forum_db->escape($new_email).'\''		);		($hook = get_hook('pf_change_email_normal_qr_check_email_dupe')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dupe_list = array();		while ($cur_dupe = $forum_db->fetch_assoc($result))		{			$dupe_list[] = $cur_dupe['username'];		}		if (!empty($dupe_list))		{			($hook = get_hook('pf_change_email_normal_dupe_email')) ? eval($hook) : null;			if ($forum_config['p_allow_dupe_email'] == '0')				$errors[] = $lang_profile['Dupe e-mail'];			else if (($forum_config['o_mailing_list'] != '') && empty($errors))			{				$mail_subject = 'Alert - Duplicate e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to an e-mail address that also belongs to: '.implode(', ', $dupe_list)."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Did everything go according to plan?		if (empty($errors))		{			if ($forum_config['o_regs_verify'] != '1')			{				// We have no confirmed e-mail so we change e-mail right now				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'email=\''.$forum_db->escape($new_email).'\'',					'WHERE'		=> 'id='.$id				);				($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['E-mail updated redirect']);			}			// We have a confirmed e-mail so we going to send an activation link			$new_email_key = random_key(8, true);			// Save new e-mail and activation key			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'activate_string=\''.$forum_db->escape($new_email).'\', activate_key=\''.$new_email_key.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_normal_qr_update_email_activation')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Load the "activate e-mail" template			$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_email.tpl'));			// The first row contains the subject			$first_crlf = strpos($mail_tpl, "\n");			$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));			$mail_message = forum_trim(substr($mail_tpl, $first_crlf));			$mail_message = str_replace('<username>', $forum_user['username'], $mail_message);			$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);			$mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_email_key'], array($id, $new_email_key))), $mail_message);			$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);			($hook = get_hook('pf_change_email_normal_pre_activation_email_sent')) ? eval($hook) : null;			forum_mail($new_email, $mail_subject, $mail_message);			message(sprintf($lang_profile['Activate e-mail sent'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_email'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup form information	$forum_page['frm_info'] = '<p class="important"><span>'.$lang_profile['E-mail info'].'</span></p>';	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your e-mail'], forum_link($forum_url['change_email'], $id)) : array(sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username'])), forum_link($forum_url['change_email'], $id))	);	($hook = get_hook('pf_change_email_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changemail');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_email_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<?php echo $forum_page['frm_info']."\n" ?>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_email_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change e-mail errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_email_normal_pre_new_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New e-mail'] ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_email" size="50" maxlength="80" value="<?php echo(isset($_POST['req_new_email']) ? forum_htmlencode($_POST['req_new_email']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Password'] ?> </span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" size="25" value="<?php echo(isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_email_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_email_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_user' || isset($_POST['delete_user_comply']) || isset($_POST['cancel'])){	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_admin'], $id), $lang_common['Cancel redirect']);	($hook = get_hook('pf_delete_user_selected')) ? eval($hook) : null;	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	if ($user['g_id'] == FORUM_ADMIN)		message($lang_profile['Cannot delete admin']);	if (isset($_POST['delete_user_comply']))	{		($hook = get_hook('pf_delete_user_form_submitted')) ? eval($hook) : null;		delete_user($id, isset($_POST['delete_posts']));		($hook = get_hook('pf_delete_user_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['index']), $lang_profile['User delete redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['delete_user'], $id);	// Setup form information	$forum_page['frm_info'] = array(		'<li class="warn"><span>'.$lang_profile['Delete warning'].'</span></li>',		'<li class="warn"><span>'.$lang_profile['Delete posts info'].'</span></li>'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section admin']), forum_link($forum_url['profile_admin'], $id)),		array($lang_profile['Delete user'], forum_link($forum_url['delete_user'], $id))	);	($hook = get_hook('pf_delete_user_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_delete_user_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm_info'])."\n" ?>			</ul>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_delete_user_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Delete posts'] ?></span> <?php printf($lang_profile['Delete posts label'], forum_htmlencode($user['username'])) ?></label>					</div>				</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_delete_user_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_user_comply" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_delete_user_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_avatar'){	// Make sure we are allowed to delete this user's avatar	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('delete_avatar'.$id.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('pf_delete_avatar_selected')) ? eval($hook) : null;	delete_avatar($id);	// Add flash message	$forum_flash->add_info($lang_profile['Avatar deleted redirect']);	($hook = get_hook('pf_delete_avatar_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_avatar'], $id), $lang_profile['Avatar deleted redirect']);}else if (isset($_POST['update_group_membership'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_change_group_form_submitted')) ? eval($hook) : null;	$new_group_id = intval($_POST['group_id']);	$query = array(		'UPDATE'	=> 'users',		'SET'		=> 'group_id='.$new_group_id,		'WHERE'		=> 'id='.$id	);	($hook = get_hook('pf_change_group_qr_update_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'SELECT'	=> 'g.g_moderator',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$new_group_id	);	($hook = get_hook('pf_change_group_qr_check_new_group_mod')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_group_mod = $forum_db->result($result);	// If the user was a moderator or an administrator (and no longer is), we remove him/her from the moderator list in all forums	if (($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1') && $new_group_id != FORUM_ADMIN && $new_group_mod != '1')		clean_forum_moderators();	// Add flash message	$forum_flash->add_info($lang_profile['Group membership redirect']);	($hook = get_hook('pf_change_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Group membership redirect']);}else if (isset($_POST['update_forums'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_forum_moderators_form_submitted')) ? eval($hook) : null;	$moderator_in = (isset($_POST['moderator_in'])) ? array_keys($_POST['moderator_in']) : array();	// Loop through all forums	$query = array(		'SELECT'	=> 'f.id, f.moderators',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('pf_forum_moderators_qr_get_all_forum_mods')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();		// If the user should have moderator access (and he/she doesn't already have it)		if (in_array($cur_forum['id'], $moderator_in) && !in_array($id, $cur_moderators))		{			$cur_moderators[$user['username']] = $id;			ksort($cur_moderators);		}		// If the user shouldn't have moderator access (and he/she already has it)		else if (!in_array($cur_forum['id'], $moderator_in) && in_array($id, $cur_moderators))			unset($cur_moderators[$user['username']]);		$cur_moderators = (!empty($cur_moderators)) ? '\''.$forum_db->escape(serialize($cur_moderators)).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'moderators='.$cur_moderators,			'WHERE'		=> 'id='.$cur_forum['id']		);		($hook = get_hook('pf_forum_moderators_qr_update_forum_moderators')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Add flash message	$forum_flash->add_info($lang_profile['Moderate forums redirect']);	($hook = get_hook('pf_forum_moderators_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Moderate forums redirect']);}else if (isset($_POST['ban'])){	if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission']);	($hook = get_hook('pf_ban_user_selected')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id, $lang_profile['Ban redirect']);}else if (isset($_POST['form_sent'])){	// Make sure we are allowed to edit this user's profile	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_details_form_submitted')) ? eval($hook) : null;	// Extract allowed elements from $_POST['form']	function extract_elements($allowed_elements)	{		$form = array();		foreach ($_POST['form'] as $key => $value)		{			if (in_array($key, $allowed_elements))				$form[$key] = $value;		}		return $form;	}	$username_updated = false;	// Validate input depending on section	switch ($section)	{		case 'identity':		{			$form = extract_elements(array('realname', 'url', 'location', 'jabber', 'icq', 'msn', 'aim', 'yahoo', 'facebook', 'twitter', 'linkedin', 'skype'));			($hook = get_hook('pf_change_details_identity_validation')) ? eval($hook) : null;			if ($forum_user['is_admmod'])			{				// Are we allowed to change usernames?				if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_rename_users'] == '1'))				{					$form['username'] = forum_trim($_POST['req_username']);					$old_username = forum_trim($_POST['old_username']);					// Validate the new username					$errors = array_merge($errors, validate_username($form['username'], $id));					if ($form['username'] != $old_username)						$username_updated = true;				}				// We only allow administrators to update the post count				if ($forum_user['g_id'] == FORUM_ADMIN)					$form['num_posts'] = intval($_POST['num_posts']);			}			if ($forum_user['is_admmod'])			{				if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/email.php';				// Validate the email-address				$form['email'] = strtolower(forum_trim($_POST['req_email']));				if (!is_valid_email($form['email']))					$errors[] = $lang_common['Invalid e-mail'];			}			if ($forum_user['is_admmod'])				$form['admin_note'] = forum_trim($_POST['admin_note']);			if ($forum_user['g_id'] == FORUM_ADMIN)				$form['title'] = forum_trim($_POST['title']);			else if ($forum_user['g_set_title'] == '1')			{				$form['title'] = forum_trim($_POST['title']);				if ($form['title'] != '')				{					// A list of words that the title may not contain					// If the language is English, there will be some duplicates, but it's not the end of the world					$forbidden = array('Member', 'Moderator', 'Administrator', 'Banned', 'Guest', $lang_common['Member'], $lang_common['Moderator'], $lang_common['Administrator'], $lang_common['Banned'], $lang_common['Guest']);					if (in_array($form['title'], $forbidden))						$errors[] = $lang_profile['Forbidden title'];				}			}			// Add http:// if the URL doesn't contain it or https:// already			if ($form['url'] != '' && strpos(strtolower($form['url']), 'http://') !== 0  && strpos(strtolower($form['url']), 'https://') !== 0)				$form['url'] = 'http://'.$form['url'];			// If the ICQ UIN contains anything other than digits it's invalid			if ($form['icq'] != '' && !ctype_digit($form['icq']))				$errors[] = $lang_profile['Bad ICQ'];			break;		}		case 'settings':		{			$form = extract_elements(array('dst', 'timezone', 'language', 'email_setting', 'notify_with_post', 'auto_notify', 'time_format', 'date_format', 'disp_topics', 'disp_posts', 'show_smilies', 'show_img', 'show_img_sig', 'show_avatars', 'show_sig', 'style'));			($hook = get_hook('pf_change_details_settings_validation')) ? eval($hook) : null;			$form['dst'] = (isset($form['dst'])) ? 1 : 0;			$form['time_format'] = (isset($form['time_format'])) ? intval($form['time_format']) : 0;			$form['date_format'] = (isset($form['date_format'])) ? intval($form['date_format']) : 0;			$form['timezone'] = (isset($form['timezone'])) ? floatval($form['timezone']) : $forum_config['o_default_timezone'];			// Validate timezone			if (($form['timezone'] > 14.0) || ($form['timezone'] < -12.0)) {				message($lang_common['Bad request']);			}			$form['email_setting'] = intval($form['email_setting']);			if ($form['email_setting'] < 0 || $form['email_setting'] > 2) $form['email_setting'] = 1;			if ($forum_config['o_subscriptions'] == '1')			{				if (!isset($form['notify_with_post']) || $form['notify_with_post'] != '1') $form['notify_with_post'] = '0';				if (!isset($form['auto_notify']) || $form['auto_notify'] != '1') $form['auto_notify'] = '0';			}			// Make sure we got a valid language string			if (isset($form['language']))			{				$form['language'] = preg_replace('#[\.\\\/]#', '', $form['language']);				if (!file_exists(FORUM_ROOT.'lang/'.$form['language'].'/common.php'))					message($lang_common['Bad request']);			}			if ($form['disp_topics'] != '' && intval($form['disp_topics']) < 3) $form['disp_topics'] = 3;			if ($form['disp_topics'] != '' && intval($form['disp_topics']) > 75) $form['disp_topics'] = 75;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) < 3) $form['disp_posts'] = 3;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) > 75) $form['disp_posts'] = 75;			if (!isset($form['show_smilies']) || $form['show_smilies'] != '1') $form['show_smilies'] = '0';			if (!isset($form['show_img']) || $form['show_img'] != '1') $form['show_img'] = '0';			if (!isset($form['show_img_sig']) || $form['show_img_sig'] != '1') $form['show_img_sig'] = '0';			if (!isset($form['show_avatars']) || $form['show_avatars'] != '1') $form['show_avatars'] = '0';			if (!isset($form['show_sig']) || $form['show_sig'] != '1') $form['show_sig'] = '0';			// Make sure we got a valid style string			if (isset($form['style']))			{				$form['style'] = preg_replace('#[\.\\\/]#', '', $form['style']);				if (!file_exists(FORUM_ROOT.'style/'.$form['style'].'/'.$form['style'].'.php'))					message($lang_common['Bad request']);			}			break;		}		case 'signature':		{			if ($forum_config['o_signatures'] == '0')				message($lang_profile['Signatures disabled']);			($hook = get_hook('pf_change_details_signature_validation')) ? eval($hook) : null;			// Clean up signature from POST			$form['signature'] = forum_linebreaks(forum_trim($_POST['signature']));			// Validate signature			if (utf8_strlen($form['signature']) > $forum_config['p_sig_length'])				$errors[] = sprintf($lang_profile['Sig too long'], forum_number_format($forum_config['p_sig_length']), forum_number_format(utf8_strlen($form['signature']) - $forum_config['p_sig_length']));			if (substr_count($form['signature'], "\n") > ($forum_config['p_sig_lines'] - 1))				$errors[] = sprintf($lang_profile['Sig too many lines'], forum_number_format($forum_config['p_sig_lines']));			if ($form['signature'] != '' && $forum_config['p_sig_all_caps'] == '0' && check_is_all_caps($form['signature']) && !$forum_user['is_admmod'])				$form['signature'] = utf8_ucwords(utf8_strtolower($form['signature']));			// Validate BBCode syntax			if ($forum_config['p_sig_bbcode'] == '1' || $forum_config['o_make_links'] == '1')			{				if (!defined('FORUM_PARSER_LOADED'))					require FORUM_ROOT.'include/parser.php';				$form['signature'] = preparse_bbcode($form['signature'], $errors, true);			}			break;		}		case 'avatar':		{			if ($forum_config['o_avatars'] == '0')				message($lang_profile['Avatars disabled']);			($hook = get_hook('pf_change_details_avatar_validation')) ? eval($hook) : null;			if (!isset($_FILES['req_file']))			{				$errors[] = $lang_profile['No file'];				break;			}			else				$uploaded_file = $_FILES['req_file'];			// Make sure the upload went smooth			if (isset($uploaded_file['error']) && empty($errors))			{				switch ($uploaded_file['error'])				{					case 1:	// UPLOAD_ERR_INI_SIZE					case 2:	// UPLOAD_ERR_FORM_SIZE						$errors[] = $lang_profile['Too large ini'];						break;					case 3:	// UPLOAD_ERR_PARTIAL						$errors[] = $lang_profile['Partial upload'];						break;					case 4:	// UPLOAD_ERR_NO_FILE						$errors[] = $lang_profile['No file'];						break;					case 6:	// UPLOAD_ERR_NO_TMP_DIR						$errors[] = $lang_profile['No tmp directory'];						break;					default:						// No error occured, but was something actually uploaded?						if ($uploaded_file['size'] == 0)							$errors[] = $lang_profile['No file'];						break;				}			}			if (is_uploaded_file($uploaded_file['tmp_name']) && empty($errors))			{				$allowed_types = array(IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_GIF);				($hook = get_hook('pf_change_details_avatar_allowed_types')) ? eval($hook) : null;				list($width, $height, $type,) = @/**/getimagesize($uploaded_file['tmp_name']);				if (!in_array($type, $allowed_types))					$errors[] = $lang_profile['Bad type'];				else				{					// Make sure the file isn't too big					if ($uploaded_file['size'] > $forum_config['o_avatars_size'])						$errors[] = sprintf($lang_profile['Too large'], forum_number_format($forum_config['o_avatars_size']));				}				if (empty($errors))				{					// Determine type					$extension = null;					$avatar_type = FORUM_AVATAR_NONE;					if ($type == IMAGETYPE_GIF)					{						$extension = '.gif';						$avatar_type = FORUM_AVATAR_GIF;					}					else if ($type == IMAGETYPE_JPEG)					{						$extension = '.jpg';						$avatar_type = FORUM_AVATAR_JPG;					}					else if ($type == IMAGETYPE_PNG)					{						$extension = '.png';						$avatar_type = FORUM_AVATAR_PNG;					}					($hook = get_hook('pf_change_details_avatar_determine_extension')) ? eval($hook) : null;					// Move the file to the avatar directory. We do this before checking the width/height to circumvent open_basedir restrictions.					if (!@move_uploaded_file($uploaded_file['tmp_name'], $forum_config['o_avatars_dir'].'/'.$id.'.tmp'))						$errors[] = sprintf($lang_profile['Move failed'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>');					if (empty($errors))					{						($hook = get_hook('pf_change_details_avatar_modify_size')) ? eval($hook) : null;						// Now check the width/height						if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = sprintf($lang_profile['Too wide or high'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height']);						}						else if ($type == 1 && $uploaded_file['type'] != 'image/gif')	// Prevent dodgy uploads						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = $lang_profile['Bad type'];						}						($hook = get_hook('pf_change_details_avatar_validate_file')) ? eval($hook) : null;						if (empty($errors))						{							// Delete any old avatars							delete_avatar($id);							// Put the new avatar in its place							@rename($forum_config['o_avatars_dir'].'/'.$id.'.tmp', $forum_config['o_avatars_dir'].'/'.$id.$extension);							@chmod($forum_config['o_avatars_dir'].'/'.$id.$extension, 0644);							// Avatar							$avatar_width = (intval($width) > 0) ? intval($width) : 0;							$avatar_height = (intval($height) > 0) ? intval($height) : 0;							// Save to DB							$query = array(								'UPDATE'	=> 'users',								'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$avatar_height.'\', avatar_width=\''.$avatar_width.'\'',								'WHERE'		=> 'id='.$id							);							($hook = get_hook('pf_change_details_avatar_qr_update_avatar')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);							// Update avatar info							$user['avatar'] = $avatar_type;							$user['avatar_width'] = $width;							$user['avatar_height'] = $height;						}					}				}			}			else if (empty($errors))				$errors[] = $lang_profile['Unknown failure'];			break;		}		default:		{			($hook = get_hook('pf_change_details_new_section_validation')) ? eval($hook) : null;			break;		}	}	$skip_db_update_sections = array('avatar');	($hook = get_hook('pf_change_details_pre_database_validation')) ? eval($hook) : null;	// All sections apart from avatar potentially affect the database	if (!in_array($section, $skip_db_update_sections) && empty($errors))	{		($hook = get_hook('pf_change_details_database_validation')) ? eval($hook) : null;		// Singlequotes around non-empty values and NULL for empty values		$new_values = array();		foreach ($form as $key => $input)		{			$value = ($input !== '') ? '\''.$forum_db->escape($input).'\'' : 'NULL';			$new_values[] = $key.'='.$value;		}		// Make sure we have something to update		if (empty($new_values))			message($lang_common['Bad request']);		// Run the update		$query = array(			'UPDATE'	=> 'users',			'SET'		=> implode(',', $new_values),			'WHERE'		=> 'id='.$id		);		($hook = get_hook('pf_change_details_qr_update_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If we changed the username we have to update some stuff		if ($username_updated)		{			($hook = get_hook('pf_change_details_username_changed')) ? eval($hook) : null;			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster_id='.$id			);			($hook = get_hook('pf_change_details_qr_update_posts_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forums',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_forums_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'ident=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'ident=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_online_ident')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'edited_by=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'edited_by=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_posts_edited_by')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// If the user is a moderator or an administrator we have to update the moderator lists and bans cache			if ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')			{				$query = array(					'SELECT'	=> 'f.id, f.moderators',					'FROM'		=> 'forums AS f'				);				($hook = get_hook('pf_change_details_qr_get_all_forum_mods')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_forum = $forum_db->fetch_assoc($result))				{					$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();					if (in_array($id, $cur_moderators))					{						unset($cur_moderators[$old_username]);						$cur_moderators[$form['username']] = $id;						ksort($cur_moderators);						$query = array(							'UPDATE'	=> 'forums',							'SET'		=> 'moderators=\''.$forum_db->escape(serialize($cur_moderators)).'\'',							'WHERE'		=> 'id='.$cur_forum['id']						);						($hook = get_hook('pf_change_details_qr_update_forum_moderators')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}				// Regenerate the bans cache				if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/cache.php';				generate_bans_cache();			}		}		// Add flash message		$forum_flash->add_info($lang_profile['Profile redirect']);		($hook = get_hook('pf_change_details_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['profile_'.$section], $id), $lang_profile['Profile redirect']);	}}($hook = get_hook('pf_new_action')) ? eval($hook) : null;if ($user['signature'] != ''){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$parsed_signature = parse_signature($user['signature']);}// View or edit?if ($forum_user['id'] != $id &&	$forum_user['g_id'] != FORUM_ADMIN &&	($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')){	// Setup user identification	$forum_page['user_ident'] = array();	($hook = get_hook('pf_view_details_selected')) ? eval($hook) : null;	$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';	if ($forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		if (!empty($forum_page['avatar_markup']))			$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';	}	$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';	// Setup user information	$forum_page['user_info'] = array();	if ($user['realname'] !='')		$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';	if ($user['location'] !='')		$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';	$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';	$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>';	if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])		$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';	// Setup user address	$forum_page['user_contact'] = array();	if ($user['email_setting'] == '0' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';	if ($user['email_setting'] != '2' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';	if ($user['url'] != '')	{		$url_source = $user['url'];		// IDNA?		// Load the IDNA class for international url handling		require_once FORUM_ROOT.'include/idna/idna_convert.class.php';		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$idn = new idna_convert();			$idn->set_parameter('encoding', 'utf8');			$idn->set_parameter('strict', false);			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))			{				$user['url'] = $idn->decode($url_source);			}			else			{				$url_source = $idn->encode($url_source);			}		}		if ($forum_config['o_censoring'] == '1')			$user['url'] = censor_words($user['url']);		$url_source = forum_htmlencode($url_source);		$user['url'] = forum_htmlencode($user['url']);		$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';		$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';	}	if ($user['jabber'] !='')		$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';	if ($user['icq'] !='')		$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong> '.forum_htmlencode($user['icq']).'</strong></span></li>';	if ($user['msn'] !='')		$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';	if ($user['aim'] !='')		$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';	if ($user['yahoo'] !='')		$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';	// Setup signature demo	if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))		$forum_page['sig_demo'] = $parsed_signature;	// Setup search links	if ($forum_user['g_search'] == '1')	{		$forum_page['user_activity'] = array();		$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.sprintf($lang_profile['View user posts'], forum_htmlencode($user['username'])).'</a></li>';		$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.sprintf($lang_profile['View user topics'], forum_htmlencode($user['username'])).'</a></li>';	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	($hook = get_hook('pf_view_details_pre_header_load')) ? eval($hook) : null;	define('FORUM_ALLOW_INDEX', 1);	define('FORUM_PAGE', 'profile');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_view_details_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php ($hook = get_hook('pf_view_details_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_view_details_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_view_details_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_activity_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h3>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_sig_info')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h3>					<div class="sig-demo"><?php echo $forum_page['sig_demo']."\n" ?></div>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_view_details_user_info_end')) ? eval($hook) : null; ?>	</div><?php	($hook = get_hook('pf_view_details_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else{	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup navigation menu	$forum_page['main_menu'] = array();	$forum_page['main_menu']['about'] = '<li class="first-item'.(($section == 'about')  ? ' active' : '').'"><a href="'.forum_link($forum_url['profile_about'], $id).'"><span>'.$lang_profile['Section about'].'</span></a></li>';	$forum_page['main_menu']['identity'] = '<li'.(($section == 'identity')  ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_identity'], $id).'"><span>'.$lang_profile['Section identity'].'</span></a></li>';	$forum_page['main_menu']['settings'] = '<li'.(($section == 'settings') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_settings'], $id).'"><span>'.$lang_profile['Section settings'].'</span></a></li>';	if ($forum_config['o_signatures'] == '1')		$forum_page['main_menu']['signature'] = '<li'.(($section == 'signature') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_signature'], $id).'"><span>'.$lang_profile['Section signature'].'</span></a></li>';	if ($forum_config['o_avatars'] == '1')		$forum_page['main_menu']['avatar'] = '<li'.(($section == 'avatar') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_avatar'], $id).'"><span>'.$lang_profile['Section avatar'].'</span></a></li>';	if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_ban_users'] == '1' && !$forum_page['own_profile']))		$forum_page['main_menu']['admin'] = '<li'.(($section == 'admin') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_admin'], $id).'"><span>'.$lang_profile['Section admin'].'</span></a></li>';	($hook = get_hook('pf_change_details_modify_main_menu')) ? eval($hook) : null;	// End navigation menu	if ($section == 'about')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array(sprintf($lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		);		// Setup user identification		$forum_page['user_ident'] = array();		($hook = get_hook('pf_change_details_about_selected')) ? eval($hook) : null;		$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';		if ($forum_config['o_avatars'] == '1')		{			$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);			if (!empty($forum_page['avatar_markup']))				$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';		}		$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';		// Create array for private information		$forum_page['user_private'] = array();		// Setup user information		$forum_page['user_info'] = array();		if ($user['realname'] !='')			$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';		if ($user['location'] !='')			$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';		$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';		$forum_page['user_info']['lastvisit'] = '<li><span>'.$lang_profile['Last visit'].': <strong> '.format_time($user['last_visit']).'</strong></span></li>';		$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>'; 		if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])			$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		else			$forum_page['user_private']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		if ($forum_user['is_admmod'] && $user['admin_note'] != '')			$forum_page['user_private']['note'] = '<li><span>'.$lang_profile['Note'].': <strong>'.forum_htmlencode($user['admin_note']).'</strong></span></li>';		// Setup user address		$forum_page['user_contact'] = array();		if (($user['email_setting'] == '0' && !$forum_user['is_guest']) && $forum_user['g_send_email'] == '1')			$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		else if ($forum_page['own_profile'] || $forum_user['is_admmod'])				$forum_page['user_private']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		if ($user['email_setting'] != '2')			$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		else if ($forum_user['id'] == $id || ($forum_user['is_admmod'] && $user['email_setting'] == '2'))			$forum_page['user_private']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		// Website		if ($user['url'] != '')		{			$url_source = $user['url'];			// IDNA?			// Load the IDNA class for international url handling			require_once FORUM_ROOT.'include/idna/idna_convert.class.php';			if (defined('FORUM_SUPPORT_PCRE_UNICODE'))			{				$idn = new idna_convert();				$idn->set_parameter('encoding', 'utf8');				$idn->set_parameter('strict', false);				if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))				{					$user['url'] = $idn->decode($url_source);				}				else				{					$url_source = $idn->encode($url_source);				}			}			if ($forum_config['o_censoring'] == '1')				$user['url'] = censor_words($user['url']);			$url_source = forum_htmlencode($url_source);			$user['url'] = forum_htmlencode($user['url']);			$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';			$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';		}		// Facebook		if ($user['facebook'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['facebook'] = censor_words($user['facebook']);			}			$facebook_url = (strpos($user['facebook'], 'http') === 0) ? forum_htmlencode($user['facebook']) : forum_htmlencode('https://www.facebook.com/'.$user['facebook']);			$forum_page['facebook'] = '<a href="'.$facebook_url.'" class="external url">'.$facebook_url.'</a>';			$forum_page['user_contact']['facebook'] = '<li><span>'.$lang_profile['Facebook'].': '.$forum_page['facebook'].'</span></li>';		}		// Twitter		if ($user['twitter'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['twitter'] = censor_words($user['twitter']);			}			$twitter_url = (strpos($user['twitter'], 'http') === 0) ? forum_htmlencode($user['twitter']) : forum_htmlencode('https://twitter.com/'.$user['twitter']);			$forum_page['twitter'] = '<a href="'.$twitter_url.'" class="external url">'.$twitter_url.'</a>';			$forum_page['user_contact']['twitter'] = '<li><span>'.$lang_profile['Twitter'].': '.$forum_page['twitter'].'</span></li>';		}		// LinkedIn		if ($user['linkedin'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['linkedin'] = censor_words($user['linkedin']);			}			$linkedin_url = forum_htmlencode($user['linkedin']);			$forum_page['linkedin'] = '<a href="'.$linkedin_url.'" class="external url" rel="me">'.$linkedin_url.'</a>';			$forum_page['user_contact']['linkedin'] = '<li><span>'.$lang_profile['LinkedIn'].': '.$forum_page['linkedin'].'</span></li>';		}		if ($forum_user['is_admmod'])			$forum_page['user_private']['ip']= '<li><span>'.$lang_profile['IP'].': <a href="'.forum_link($forum_url['get_host'], forum_htmlencode($user['registration_ip'])).'">'.forum_htmlencode($user['registration_ip']).'</a></span></li>';		// Setup user messaging		if ($user['jabber'] !='')			$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';		if ($user['skype'] !='')			$forum_page['user_contact']['skype'] = '<li><span>'.$lang_profile['Skype'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['skype']) : $user['skype']).'</strong></span></li>';		if ($user['icq'] !='')			$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong>'.forum_htmlencode($user['icq']).'</strong></span></li>';		if ($user['msn'] !='')			$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';		if ($user['aim'] !='')			$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';		if ($user['yahoo'] !='')			$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';		// Setup signature demo		if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))			$forum_page['sig_demo'] = $parsed_signature;		// Setup search links		$forum_page['user_activity'] = array();		if ($forum_user['g_search'] == '1' || $forum_user['is_admmod'])		{			$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your posts'] : sprintf($lang_profile['View user posts'], forum_htmlencode($user['username']))).'</a></li>';			$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your topics'] : sprintf($lang_profile['View user topics'], forum_htmlencode($user['username']))).'</a></li>';		}		if (($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN) && $forum_config['o_subscriptions'] == '1')			 $forum_page['user_activity']['search_subs'] = '<li'.(empty($forum_page['user_activity']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_subscriptions'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your subscriptions'] : sprintf($lang_profile['View user subscriptions'], forum_htmlencode($user['username']))).'</a></li>';		// Setup user options		$forum_page['user_options'] = array();		if ($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_change_passwords'] == '1'))			$forum_page['user_options']['change_password'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_password'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username']))).'</a></span>';		if (!$forum_user['is_admmod'])			$forum_page['user_options']['change_email'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_email'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your e-mail'] : sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username']))).'</a></span>';		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		($hook = get_hook('pf_change_details_about_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-about');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_about_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<p class="content-options options"><?php echo implode(' ', $forum_page['user_options']) ?></p><?php ($hook = get_hook('pf_change_details_about_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_change_details_about_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_activity_info')) ? eval($hook) : null; ?><?php endif; if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_sig_info')) ? eval($hook) : null; ?><?php endif; if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h4>					<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>				</div>			</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_about_pre_user_private_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_private'])): ?>			<div id="private-profile" class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Private info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_private'])."\n" ?>					</ul>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_change_details_about_user_info_end')) ? eval($hook) : null; ?>	</div><?php		($hook = get_hook('pf_change_details_about_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'identity')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section identity'],forum_link($forum_url['profile_identity'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_identity'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1'))			$forum_page['hidden_fields']['old_username'] = '<input type="hidden" name="old_username" value="'.forum_htmlencode($user['username']).'" />';		// Does the form have required fields		$forum_page['has_required'] = ((($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')) || $forum_user['is_admmod']) ? true : false);		($hook = get_hook('pf_change_details_identity_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-identity');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_identity_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Identity welcome'] : $lang_profile['Identity welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();			foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_details_identity_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}if ($forum_page['has_required']): ?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div><?php endif; ?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php if ($forum_page['has_required']): ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_username')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Username'] ?></span> <small><?php echo $lang_profile['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo(isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : forum_htmlencode($user['username'])) ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_email')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['E-mail'] ?></span> <small><?php echo $lang_profile['E-mail help'] ?></small></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_email" value="<?php echo(isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : forum_htmlencode($user['email'])) ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_req_info_fieldset_end')) ? eval($hook) : null; ?><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Personal legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_realname')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Realname'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[realname]" value="<?php echo(isset($form['realname']) ? forum_htmlencode($form['realname']) : forum_htmlencode($user['realname'])) ?>" size="35" maxlength="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_title')) ? eval($hook) : null; ?><?php if ($forum_user['g_set_title'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Title'] ?></span><small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="title" value="<?php echo(isset($_POST['title']) ? forum_htmlencode($_POST['title']) : forum_htmlencode($user['title'])) ?>" size="35" maxlength="50" /></span><br />					</div>				</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_identity_pre_location')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Location'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[location]" value="<?php echo((isset($form['location']) ? forum_htmlencode($form['location']) : forum_htmlencode($user['location']))) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_admin_note')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Admin note'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="admin_note" value="<?php echo(isset($_POST['admin_note']) ? forum_htmlencode($_POST['admin_note']) : forum_htmlencode($user['admin_note'])) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_num_posts')) ? eval($hook) : null; ?><?php if ($forum_user['g_id'] == FORUM_ADMIN): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Edit count'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="num_posts" value="<?php echo $user['num_posts'] ?>" size="8" maxlength="8" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_personal_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Website'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[url]" value="<?php echo(isset($form['url']) ? forum_htmlencode($form['url']) : forum_htmlencode($user['url'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_facebook')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Facebook'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[facebook]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['facebook']) ? forum_htmlencode($form['facebook']) : forum_htmlencode($user['facebook'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_twitter')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Twitter'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[twitter]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['twitter']) ? forum_htmlencode($form['twitter']) : forum_htmlencode($user['twitter'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_linkedin')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['LinkedIn'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[linkedin]" value="<?php echo(isset($form['linkedin']) ? forum_htmlencode($form['linkedin']) : forum_htmlencode($user['linkedin'])) ?>" size="35" maxlength="80" /></span>					</div>				</div>			</fieldset>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact messengers legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_jabber')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Jabber'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="form[jabber]" value="<?php echo(isset($form['jabber']) ? forum_htmlencode($form['jabber']) : forum_htmlencode($user['jabber'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_skype')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Skype'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[skype]" value="<?php echo(isset($form['skype']) ? forum_htmlencode($form['skype']) : forum_htmlencode($user['skype'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_msn')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['MSN'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[msn]" value="<?php echo(isset($form['msn']) ? forum_htmlencode($form['msn']) : forum_htmlencode($user['msn'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_icq')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['ICQ'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[icq]" value="<?php echo(isset($form['icq']) ? forum_htmlencode($form['icq']) : $user['icq']) ?>" size="20" maxlength="12" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_aim')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['AOL IM'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[aim]" value="<?php echo(isset($form['aim']) ? forum_htmlencode($form['aim']) : forum_htmlencode($user['aim'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_yahoo')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Yahoo'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[yahoo]" value="<?php echo(isset($form['yahoo']) ? forum_htmlencode($form['yahoo']) : forum_htmlencode($user['yahoo'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_contact_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_contact_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_identity_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'settings')	{		$forum_page['styles'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'style');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'style/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'style/'.$forum_page['entry'].'/'.$forum_page['entry'].'.php'))				$forum_page['styles'][] = $forum_page['entry'];		}		$forum_page['d']->close();		$forum_page['languages'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'lang');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'lang/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'lang/'.$forum_page['entry'].'/common.php'))				$forum_page['languages'][] = $forum_page['entry'];		}		$forum_page['d']->close();		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section settings'],forum_link($forum_url['profile_settings'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_settings'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		($hook = get_hook('pf_change_details_settings_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-settings');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_settings_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Settings welcome'] : $lang_profile['Settings welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Local settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_language')) ? eval($hook) : null;		// Only display the language selection box if there's more than one language available		if (count($forum_page['languages']) > 1)		{			natcasesort($forum_page['languages']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Language'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[language]"><?php			foreach ($forum_page['languages'] as $temp)			{				if ($forum_user['language'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_timezone')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Timezone'] ?></span> <small><?php echo $lang_profile['Timezone info'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[timezone]">						<option value="-12"<?php if ($user['timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-12:00'] ?></option>						<option value="-11"<?php if ($user['timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-11:00'] ?></option>						<option value="-10"<?php if ($user['timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-10:00'] ?></option>						<option value="-9.5"<?php if ($user['timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:30'] ?></option>						<option value="-9"<?php if ($user['timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:00'] ?></option>						<option value="-8"<?php if ($user['timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-08:00'] ?></option>						<option value="-7"<?php if ($user['timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-07:00'] ?></option>						<option value="-6"<?php if ($user['timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-06:00'] ?></option>						<option value="-5"<?php if ($user['timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-05:00'] ?></option>						<option value="-4"<?php if ($user['timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-04:00'] ?></option>						<option value="-3.5"<?php if ($user['timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:30'] ?></option>						<option value="-3"<?php if ($user['timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:00'] ?></option>						<option value="-2"<?php if ($user['timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-02:00'] ?></option>						<option value="-1"<?php if ($user['timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-01:00'] ?></option>						<option value="0"<?php if ($user['timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC'] ?></option>						<option value="1"<?php if ($user['timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+01:00'] ?></option>						<option value="2"<?php if ($user['timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+02:00'] ?></option>						<option value="3"<?php if ($user['timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:00'] ?></option>						<option value="3.5"<?php if ($user['timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:30'] ?></option>						<option value="4"<?php if ($user['timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:00'] ?></option>						<option value="4.5"<?php if ($user['timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:30'] ?></option>						<option value="5"<?php if ($user['timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:00'] ?></option>						<option value="5.5"<?php if ($user['timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:30'] ?></option>						<option value="5.75"<?php if ($user['timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:45'] ?></option>						<option value="6"<?php if ($user['timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:00'] ?></option>						<option value="6.5"<?php if ($user['timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:30'] ?></option>						<option value="7"<?php if ($user['timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+07:00'] ?></option>						<option value="8"<?php if ($user['timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:00'] ?></option>						<option value="8.75"<?php if ($user['timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:45'] ?></option>						<option value="9"<?php if ($user['timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:00'] ?></option>						<option value="9.5"<?php if ($user['timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:30'] ?></option>						<option value="10"<?php if ($user['timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:00'] ?></option>						<option value="10.5"<?php if ($user['timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:30'] ?></option>						<option value="11"<?php if ($user['timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:00'] ?></option>						<option value="11.5"<?php if ($user['timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:30'] ?></option>						<option value="12"<?php if ($user['timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:00'] ?></option>						<option value="12.75"<?php if ($user['timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:45'] ?></option>						<option value="13"<?php if ($user['timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+13:00'] ?></option>						<option value="14"<?php if ($user['timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+14:00'] ?></option>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_dst_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[dst]" value="1" <?php if ($user['dst'] == 1) echo 'checked="checked" ' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['DST label'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_time_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Time format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[time_format]"><?php		foreach (array_unique($forum_time_formats) as $key => $time_format)		{			echo "\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['time_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 2, null, $time_format);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_date_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="legend"><?php echo $lang_profile['Date format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[date_format]"><?php		foreach (array_unique($forum_date_formats) as $key => $date_format)		{			echo "\t\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['date_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 1, $date_format, null, true);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_local_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Display settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_style')) ? eval($hook) : null;		// Only display the style selection box if there's more than one style available		if (count($forum_page['styles']) == 1)			echo "\t\t\t\t".'<input type="hidden" name="form[style]" value="'.$forum_page['styles'][0].'" />'."\n";		else if (count($forum_page['styles']) > 1)		{			natcasesort($forum_page['styles']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Styles'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[style]"><?php			foreach ($forum_page['styles'] as $temp)			{				if ($user['style'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Image display'] ?></span></legend>					<div class="mf-box"><?php if ($forum_config['o_smilies'] == '1' || $forum_config['o_smilies_sig'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_smilies]" value="1"<?php if ($user['show_smilies'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show smilies'] ?></label>						</div><?php endif; if ($forum_config['o_avatars'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_avatars]" value="1"<?php if ($user['show_avatars'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show avatars'] ?></label>						</div><?php endif; if ($forum_config['p_message_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img]" value="1"<?php if ($user['show_img'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images'] ?></label>						</div><?php endif; if ($forum_config['o_signatures'] == '1' && $forum_config['p_sig_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img_sig]" value="1"<?php if ($user['show_img_sig'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images sigs'] ?></label>						</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_new_image_display_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_pre_show_sigs_checkbox')) ? eval($hook) : null; ?><?php if ($forum_config['o_signatures'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_sig]" value="1"<?php if ($user['show_sig'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Signature display'] ?></span> <?php echo $lang_profile['Show sigs'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_display_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Pagination settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_disp_topics')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Topics per page'] ?></span> <small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_topics]" value="<?php echo $user['disp_topics'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_disp_posts')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Posts per page'] ?></span>	<small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_posts]" value="<?php echo $user['disp_posts'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_pagination_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['E-mail and sub settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['E-mail settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="0"<?php if ($user['email_setting'] == '0') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 1'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="1"<?php if ($user['email_setting'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 2'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="2"<?php if ($user['email_setting'] == '2') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 3'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_email_setting_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_email_settings_fieldset_end')) ? eval($hook) : null; ?><?php if ($forum_config['o_subscriptions'] == '1'): ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Subscription settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[notify_with_post]" value="1"<?php if ($user['notify_with_post'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Notify full'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[auto_notify]" value="1"<?php if ($user['auto_notify'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Subscribe by default'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_subscription_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_subscription_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_subscription_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_email_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_settings_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'signature' && $forum_config['o_signatures'] == '1')	{		$forum_page['sig_info'][] = '<li>'.$lang_profile['Signature info'].'</li>';		if ($user['signature'] != '')			$forum_page['sig_demo'] = $parsed_signature;		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section signature'], forum_link($forum_url['profile_signature'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_signature'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup help		$forum_page['text_options'] = array();		if ($forum_config['p_sig_bbcode'] == '1')			$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';		if ($forum_config['p_sig_img_tag'] == '1')			$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';		if ($forum_config['o_smilies_sig'] == '1')			$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';		($hook = get_hook('pf_change_details_signature_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-signature');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_signature_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Sig welcome'] : $lang_profile['Sig welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		if (!empty($forum_page['text_options']))			echo "\t\t".'<p class="content-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_signature_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Signature'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_signature_pre_signature_demo')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="ct-legend hn"><?php echo $lang_profile['Current signature'] ?></h3>						<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_signature_pre_signature_text')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Compose signature'] ?></span> <small><?php printf($lang_profile['Sig max size'], forum_number_format($forum_config['p_sig_length']), forum_number_format($forum_config['p_sig_lines'])) ?></small></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="signature" rows="4" cols="65"><?php echo(isset($_POST['signature']) ? forum_htmlencode($_POST['signature']) : forum_htmlencode($user['signature'])) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_signature_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_signature_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'avatar' && $forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section avatar'],forum_link($forum_url['profile_avatar'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_avatar'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'max_file_size'	=> '<input type="hidden" name="MAX_FILE_SIZE" value="'.$forum_config['o_avatars_size'].'" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup form information		$forum_page['frm_info'] = array();		if (!empty($forum_page['avatar_markup']))		{			$forum_page['frm_info']['avatar_replace'] = '<li><span>'.$lang_profile['Avatar info replace'].'</span></li>';			$forum_page['frm_info']['avatar_type'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';			$forum_page['avatar_demo'] = $forum_page['avatar_markup'];		}		else		{			$forum_page['frm_info']['avatar_none'] = '<li><span>'.$lang_profile['Avatar info none'].'</span></li>';			$forum_page['frm_info']['avatar_info'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';		}		($hook = get_hook('pf_change_details_avatar_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-avatar');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_avatar_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Avatar welcome'] : $lang_profile['Avatar welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_avatar_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" enctype="multipart/form-data">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset')) ? eval($hook) : null; ?>			<div class="ct-box info-box">				<ul class="info-list">					<?php echo implode("\n\t\t\t\t\t", $forum_page['frm_info'])."\n" ?>				</ul>			</div>			<div id="req-msg" class="req-warn ct-box info-box">    			<p class="important"><?php echo $lang_profile['No upload warn'] ?></p>   			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Avatar'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_avatar_pre_cur_avatar_info')) ? eval($hook) : null; ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="hn ct-legend"><?php echo $lang_profile['Current avatar'] ?></h3><?php if (isset($forum_page['avatar_demo'])): ?>						<p class="avatar-demo"><span><?php echo $forum_page['avatar_demo'] ?></span></p><?php endif; ?>						<p><?php echo (isset($forum_page['avatar_demo'])) ? '<a href="'.forum_link($forum_url['delete_avatar'], array($id, generate_form_token('delete_avatar'.$id.$forum_user['id']))).'"><strong>'.$lang_profile['Delete avatar info'].'</strong></a>' : $lang_profile['No avatar info'] ?></p>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_avatar_upload')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Upload avatar file'] ?></span><small><?php echo $lang_profile['Avatar upload help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" name="req_file" type="file" size="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_avatar_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_avatar_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'admin')	{		if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0' || $forum_user['id'] == $id))			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section admin'],forum_link($forum_url['profile_admin'], $id))		);		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_admin'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup ban and delete options		$forum_page['user_management'] = array();		if ($forum_user['g_moderator'] == '1')			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		else if ($forum_user['g_moderator'] != '1' && $user['g_id'] != FORUM_ADMIN )		{			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';			$forum_page['user_management']['delete'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Delete user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['delete_user'], $id).'">'.$lang_profile['Delete user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		}		($hook = get_hook('pf_change_details_admin_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-admin');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_admin_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_profile['User management'] ?></span></h2>	</div>	<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">		<div class="hidden">			<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>		</div>		<div class="main-content main-frm">			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php		($hook = get_hook('pf_change_details_admin_pre_user_management')) ? eval($hook) : null;		if (!empty($forum_page['user_management']))		{			echo "\t\t\t".implode("\n\t\t\t", $forum_page['user_management'])."\n";			($hook = get_hook('pf_change_details_admin_pre_membership')) ? eval($hook) : null;			if ($forum_user['g_moderator'] != '1' && !$forum_page['own_profile'])			{				($hook = get_hook('pf_change_details_admin_pre_group_membership')) ? eval($hook) : null;?>			<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box select">					<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['User group'] ?></span></label><br />					<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="group_id"><?php				$query = array(					'SELECT'	=> 'g.g_id, g.g_title',					'FROM'		=> 'groups AS g',					'WHERE'		=> 'g.g_id!='.FORUM_GUEST,					'ORDER BY'	=> 'g.g_title'				);				($hook = get_hook('pf_change_details_admin_qr_get_groups')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_group = $forum_db->fetch_assoc($result))				{					if ($cur_group['g_id'] == $user['g_id'] || ($cur_group['g_id'] == $forum_config['o_default_user_group'] && $user['g_id'] == ''))						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";					else						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";				}?>					</select></span>				</div>			</div><?php ($hook = get_hook('pf_change_details_admin_pre_group_membership_submit')) ? eval($hook) : null; ?>			<div class="sf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box text">	 				<span class="submit"><input type="submit" name="update_group_membership" value="<?php echo $lang_profile['Update groups'] ?>" /></span>	 			</div>			</div><?php			}		}		($hook = get_hook('pf_change_details_admin_pre_mod_assignment')) ? eval($hook) : null;		if ($forum_user['g_id'] == FORUM_ADMIN && ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		{			($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset')) ? eval($hook) : null;?>			<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">				<legend><span><?php echo $lang_profile['Moderator assignment'] ?></span></legend><?php ($hook = get_hook('pf_change_details_admin_pre_forum_checklist')) ? eval($hook) : null; ?>				<div class="mf-box">					<div class="checklist"><?php			$query = array(				'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.moderators',				'FROM'		=> 'categories AS c',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'c.id=f.cat_id'					)				),				'WHERE'		=> 'f.redirect_url IS NULL',				'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'			);			($hook = get_hook('pf_change_details_admin_qr_get_cats_and_forums')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$cur_category = 0;			while ($cur_forum = $forum_db->fetch_assoc($result))			{				($hook = get_hook('pf_change_details_admin_forum_loop_start')) ? eval($hook) : null;				if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?				{					if ($cur_category)						echo "\n\t\t\t\t\t".'</fieldset>'."\n";					echo "\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t".'<legend><span>'.$cur_forum['cat_name'].':</span></legend>'."\n";					$cur_category = $cur_forum['cid'];				}				$moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				echo "\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="moderator_in['.$cur_forum['fid'].']" value="1"'.((in_array($id, $moderators)) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";			}?>						</fieldset>					</div>				</div><?php ($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_admin_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			<div class="mf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="mf-box text">					<span class="submit"><input type="submit" name="update_forums" value="<?php echo $lang_profile['Update forums'] ?>" /></span>				</div>			</div><?php			($hook = get_hook('pf_change_details_admin_form_end')) ? eval($hook) : null;		}?>		</div>		<div class="frm-buttons">			<span class="submit"><?php echo $lang_profile['Instructions'] ?></span>		</div>	</div>	</form><?php		($hook = get_hook('pf_change_details_admin_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	($hook = get_hook('pf_change_details_new_section')) ? eval($hook) : null;	message($lang_common['Bad request']);}
<?php/** * Installation script. * * Used to actually install PunBB. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_VERSION', '1.4b1');define('FORUM_DB_REVISION', 5);define('MIN_PHP_VERSION', '5.0.0');define('MIN_MYSQL_VERSION', '4.1.2');define('FORUM_ROOT', '../');define('FORUM', 1);define('FORUM_DEBUG', 1);define('FORUM_SEARCH_MIN_WORD', 3);define('FORUM_SEARCH_MAX_WORD', 20);if (file_exists(FORUM_ROOT.'config.php'))	exit('The file \'config.php\' already exists which would mean that PunBB is already installed. You should go <a href="'.FORUM_ROOT.'index.php">here</a> instead.');// Make sure we are running at least MIN_PHP_VERSIONif (!function_exists('version_compare') || version_compare(PHP_VERSION, MIN_PHP_VERSION, '<'))	exit('You are running PHP version '.PHP_VERSION.'. PunBB requires at least PHP '.MIN_PHP_VERSION.' to run properly. You must upgrade your PHP installation before you can continue.');// Disable error reporting for uninitialized variableserror_reporting(E_ALL);// Turn off PHP time limit@set_time_limit(0);// We need some stuff from functions.phprequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();//// Generate output to be used for config.php//function generate_config_file(){	global $db_type, $db_host, $db_name, $db_username, $db_password, $db_prefix, $base_url, $cookie_name;	$config_body = '<?php'."\n\n".'$db_type = \''.$db_type."';\n".'$db_host = \''.$db_host."';\n".'$db_name = \''.addslashes($db_name)."';\n".'$db_username = \''.addslashes($db_username)."';\n".'$db_password = \''.addslashes($db_password)."';\n".'$db_prefix = \''.addslashes($db_prefix)."';\n".'$p_connect = false;'."\n\n".'$base_url = \''.$base_url.'\';'."\n\n".'$cookie_name = '."'".$cookie_name."';\n".'$cookie_domain = '."'';\n".'$cookie_path = '."'/';\n".'$cookie_secure = 0;'."\n\ndefine('FORUM', 1);";	// Add forum options	$config_body .= "\n\n// Enable DEBUG mode by removing // from the following line\n//define('FORUM_DEBUG', 1);";	$config_body .= "\n\n// Enable show DB Queries mode by removing // from the following line\n//define('FORUM_SHOW_QUERIES', 1);";	$config_body .= "\n\n// Disable forum CSRF checking by removing // from the following line\n//define('FORUM_DISABLE_CSRF_CONFIRM', 1);";	$config_body .= "\n\n// Disable forum hooks (extensions) by removing // from the following line\n//define('FORUM_DISABLE_HOOKS', 1);";	$config_body .= "\n\n// Disable forum output buffering by removing // from the following line\n//define('FORUM_DISABLE_BUFFERING', 1);";	return $config_body;}$language = isset($_GET['lang']) ? $_GET['lang'] : (isset($_POST['req_language']) ? forum_trim($_POST['req_language']) : 'English');$language = preg_replace('#[\.\\\/]#', '', $language);if (!file_exists(FORUM_ROOT.'lang/'.$language.'/install.php'))	exit('The language pack you have chosen doesn\'t seem to exist or is corrupt. Please recheck and try again.');// Load the language filesrequire FORUM_ROOT.'lang/'.$language.'/install.php';require FORUM_ROOT.'lang/'.$language.'/admin_settings.php';if (isset($_POST['generate_config'])){	header('Content-Type: text/x-delimtext; name="config.php"');	header('Content-disposition: attachment; filename=config.php');	$db_type = $_POST['db_type'];	$db_host = $_POST['db_host'];	$db_name = $_POST['db_name'];	$db_username = $_POST['db_username'];	$db_password = $_POST['db_password'];	$db_prefix = $_POST['db_prefix'];	$base_url = $_POST['base_url'];	$cookie_name = $_POST['cookie_name'];	echo generate_config_file();	exit;}header('Content-Type: text/html; charset=utf-8');header('Cache-Control: cache-control: no-store', false);if (!isset($_POST['form_sent'])){	// Determine available database extensions	$db_extensions = array();	if (function_exists('mysqli_connect'))	{		$db_extensions[] = array('mysqli', 'MySQL Improved');		$db_extensions[] = array('mysqli_innodb', 'MySQL Improved (InnoDB)');	}	if (function_exists('mysql_connect'))	{		$db_extensions[] = array('mysql', 'MySQL Standard');		$db_extensions[] = array('mysql_innodb', 'MySQL Standard (InnoDB)');	}	if (function_exists('sqlite_open'))		$db_extensions[] = array('sqlite', 'SQLite');	/* Disabled in 1.4.0 becouse a many non-compability extensions	if (class_exists('SQLite3'))		$db_extensions[] = array('sqlite3', 'SQLite3');	*/	if (function_exists('pg_connect'))		$db_extensions[] = array('pgsql', 'PostgreSQL');	if (empty($db_extensions))		error($lang_install['No database support']);	// Make an educated guess regarding base_url	$base_url_guess = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://').preg_replace('/:80$/', '', $_SERVER['HTTP_HOST']).substr(str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME'])), 0, -6);	if (substr($base_url_guess, -1) == '/')		$base_url_guess = substr($base_url_guess, 0, -1);	// Check for available language packs	$languages = get_language_packs();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php echo $lang_install['Install intro'] ?></p></div><div id="brd-main" class="main">	<div class="main-head">		<h1 class="hn"><span><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></span></h1>	</div><?php	if (count($languages) > 1)	{?>	<form class="frm-form" method="get" accept-charset="utf-8" action="install.php">	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Choose language'] ?></span></h2>	</div>	<div class="main-content main-frm">		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Choose language legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld0"><span><?php echo $lang_install['Installer language'] ?></span> <small><?php echo $lang_install['Choose language help'] ?></small></label><br />					<span class="fld-input"><select id="fld0" name="lang"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div>		</fieldset>		<div class="frm-buttons">			<span class="submit"><input type="submit" name="changelang" value="<?php echo $lang_install['Choose language'] ?>" /></span>		</div>	</div>	</form><?php	}?>	<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">	<div class="hidden">		<input type="hidden" name="form_sent" value="1" />	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part1'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part1 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Database type'] ?></strong> <?php echo $lang_install['Database type info']; if (count($db_extensions) > 1) echo ' '.$lang_install['Mysql type info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database server'] ?></strong> <?php echo $lang_install['Database server info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database name'] ?></strong> <?php echo $lang_install['Database name info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database user pass'] ?></strong> <?php echo $lang_install['Database username info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Table prefix'] ?></strong> <?php echo $lang_install['Table prefix info'] ?></span></li>			</ul>		</div>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_install['Required warn'], '<em>'.$lang_install['Required'].'</em>') ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part1 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box select required">					<label for="req_db_type"><span><?php echo $lang_install['Database type'] ?></span> <small><?php echo $lang_install['Database type help'] ?></small></label><br />					<span class="fld-input"><select id="req_db_type" name="req_db_type"><?php	foreach ($db_extensions as $db_type)		echo "\t\t\t\t\t".'<option value="'.$db_type[0].'">'.$db_type[1].'</option>'."\n";?>					</select></span>				</div>			</div>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld2"><span><?php echo $lang_install['Database server'] ?></span> <small><?php echo $lang_install['Database server help'] ?></small></label><br />					<span class="fld-input"><input id="fld2" type="text" name="req_db_host" value="localhost" size="35" maxlength="100" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld3"><span><?php echo $lang_install['Database name'] ?></span> <small><?php echo $lang_install['Database name help'] ?></small></label><br />					<span class="fld-input"><input id="fld3" type="text" name="req_db_name" size="35" maxlength="50" required /></span>				</div>			</div>			<div class="sf-set set3" id="db_username_block">				<div class="sf-box text">					<label for="fld4"><span><?php echo $lang_install['Database username'] ?></span> <small><?php echo $lang_install['Database username help'] ?></small></label><br />					<span class="fld-input"><input id="fld4" type="text" name="db_username" size="35" maxlength="50" /></span>				</div>			</div>			<div class="sf-set set4" id="db_password_block">				<div class="sf-box text">					<label for="fld5"><span><?php echo $lang_install['Database password'] ?></span> <small><?php echo $lang_install['Database password help'] ?></small></label><br />					<span class="fld-input"><input id="fld5" type="password" name="db_password" size="35" /></span>				</div>			</div>			<div class="sf-set set5">				<div class="sf-box text">					<label for="fld6"><span><?php echo $lang_install['Table prefix'] ?></span> <small><?php echo $lang_install['Table prefix help'] ?></small></label><br />					<span class="fld-input"><input id="fld6" type="text" name="db_prefix" size="35" maxlength="30" /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part2'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part2 intro'] ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part2 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld7"><span><?php echo $lang_install['Admin username'] ?></span> <small><?php echo $lang_install['Username help'] ?></small></label><br />					<span class="fld-input"><input id="fld7" type="text" name="req_username" size="35" maxlength="25" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld8"><span><?php echo $lang_install['Admin password'] ?></span> <small><?php echo $lang_install['Password help'] ?></small></label><br />					<span class="fld-input"><input id="fld8" type="password" name="req_password1" size="35" required /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld9"><span><?php echo $lang_install['Admin confirm password'] ?></span> <small><?php echo $lang_install['Confirm password help'] ?></small></label><br />					<span class="fld-input"><input id="fld9" type="password" name="req_password2" size="35" required /></span>				</div>			</div>			<div class="sf-set set4">				<div class="sf-box text required">					<label for="fld10"><span><?php echo $lang_install['Admin e-mail'] ?></span> <small><?php echo $lang_install['E-mail address help'] ?></small></label><br />					<span class="fld-input"><input id="fld10" type="email" name="req_email" size="35" maxlength="80" required /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part3'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part3 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Board title and desc'] ?></strong> <?php echo $lang_install['Board title info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Base URL'] ?></strong> <?php echo $lang_install['Base URL info'] ?></span></li>			</ul>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part3 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld11"><span><?php echo $lang_install['Board title'] ?></span></label><br />					<span class="fld-input"><input id="fld11" type="text" name="board_title" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text">					<label for="fld12"><span><?php echo $lang_install['Board description'] ?></span></label><br />					<span class="fld-input"><input id="fld12" type="text" name="board_descrip" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld13"><span><?php echo $lang_install['Base URL'] ?></span> <small><?php echo $lang_install['Base URL help'] ?></small></label><br />					<span class="fld-input"><input id="fld13" type="url" name="req_base_url" value="<?php echo $base_url_guess ?>" size="35" maxlength="100" required /></span>				</div>			</div><?php	if (count($languages) > 1)	{?>			<div class="sf-set set4">				<div class="sf-box text">					<label for="fld14"><span><?php echo $lang_install['Default language'] ?></span> <small><?php echo $lang_install['Default language help'] ?></small></label><br />					<span class="fld-input"><select id="fld14" name="req_language"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div><?php	}	else	{?>			<div class="hidden">				<input type="hidden" name="req_language" value="<?php echo $languages[0]; ?>" />			</div><?php	}	if (file_exists(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{?>			<div class="sf-set set5">				<div class="sf-box checkbox">					<span class="fld-input"><input id="fld15" type="checkbox" name="install_pun_repository" value="1" checked="checked" /></span>					<label for="fld15"><span><?php echo $lang_install['Pun repository'] ?></span> <?php echo $lang_install['Pun repository help'] ?></label><br />				</div>			</div><?php	}?>		</fieldset>		<div class="frm-buttons">			<span class="submit primary"><input type="submit" name="start" value="<?php echo $lang_install['Start install'] ?>" /></span>		</div>	</div>	</form></div></div></div>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.common.js"></script>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.install.js"></script></body></html><?php}else{	//	// Strip slashes only if magic_quotes_gpc is on.	//	function unescape($str)	{		return (get_magic_quotes_gpc() == 1) ? stripslashes($str) : $str;	}	$db_type = $_POST['req_db_type'];	$db_host = forum_trim($_POST['req_db_host']);	$db_name = forum_trim($_POST['req_db_name']);	$db_username = unescape(forum_trim($_POST['db_username']));	$db_password = unescape(forum_trim($_POST['db_password']));	$db_prefix = forum_trim($_POST['db_prefix']);	$username = unescape(forum_trim($_POST['req_username']));	$email = unescape(strtolower(forum_trim($_POST['req_email'])));	$password1 = unescape(forum_trim($_POST['req_password1']));	$password2 = unescape(forum_trim($_POST['req_password2']));	$board_title = unescape(forum_trim($_POST['board_title']));	$board_descrip = unescape(forum_trim($_POST['board_descrip']));	$default_lang = preg_replace('#[\.\\\/]#', '', unescape(forum_trim($_POST['req_language'])));	$install_pun_repository = !empty($_POST['install_pun_repository']);	// Make sure base_url doesn't end with a slash	if (substr($_POST['req_base_url'], -1) == '/')		$base_url = substr($_POST['req_base_url'], 0, -1);	else		$base_url = $_POST['req_base_url'];	// Validate form	if (utf8_strlen($db_name) == 0)		error($lang_install['Missing database name']);	if (utf8_strlen($username) < 2)		error($lang_install['Username too short']);	if (utf8_strlen($username) > 25)		error($lang_install['Username too long']);	if (utf8_strlen($password1) < 8)		error($lang_install['Pass too short']);	if ($password1 != $password2)		error($lang_install['Pass not match']);	if (strtolower($username) == 'guest')		error($lang_install['Username guest']);	if (preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $username) || preg_match('/((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))/', $username))		error($lang_install['Username IP']);	if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)		error($lang_install['Username reserved chars']);	if (preg_match('/(?:\[\/?(?:b|u|i|h|colou?r|quote|code|img|url|email|list)\]|\[(?:code|quote|list)=)/i', $username))		error($lang_install['Username BBCode']);	// Validate email	if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/email.php';	if (!is_valid_email($email))		error($lang_install['Invalid email']);	// Make sure board title and description aren't left blank	if ($board_title == '')		$board_title = 'My PunBB forum';	if ($board_descrip == '')		$board_descrip = 'Unfortunately no one can be told what PunBB is  you have to see it for yourself';	if (utf8_strlen($base_url) == 0)		error($lang_install['Missing base url']);	if (!file_exists(FORUM_ROOT.'lang/'.$default_lang.'/common.php'))		error($lang_install['Invalid language']);	// Load the appropriate DB layer class	switch ($db_type)	{		case 'mysql':			require FORUM_ROOT.'include/dblayer/mysql.php';			break;		case 'mysql_innodb':			require FORUM_ROOT.'include/dblayer/mysql_innodb.php';			break;		case 'mysqli':			require FORUM_ROOT.'include/dblayer/mysqli.php';			break;		case 'mysqli_innodb':			require FORUM_ROOT.'include/dblayer/mysqli_innodb.php';			break;		case 'pgsql':			require FORUM_ROOT.'include/dblayer/pgsql.php';			break;		case 'sqlite':			require FORUM_ROOT.'include/dblayer/sqlite.php';			break;		case 'sqlite3':			require FORUM_ROOT.'include/dblayer/sqlite3.php';			break;		default:			error(sprintf($lang_install['No such database type'], forum_htmlencode($db_type)));	}	// Create the database object (and connect/select db)	$forum_db = new DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, false);	// If MySQL, make sure it's at least 4.1.2	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$mysql_info = $forum_db->get_version();		if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))			error(sprintf($lang_install['Invalid MySQL version'], forum_htmlencode($mysql_info['version']), MIN_MYSQL_VERSION));		// Check InnoDB support in DB		if (in_array($db_type, array('mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW VARIABLES LIKE \'have_innodb\'');			$row = $forum_db->fetch_assoc($result);			if (!$row || !isset($row['Value']) || strtolower($row['Value']) != 'yes')			{				error($lang_install['MySQL InnoDB Not Supported']);			}		}	}	// Validate prefix	if (strlen($db_prefix) > 0 && (!preg_match('/^[a-zA-Z_][a-zA-Z0-9_]*$/', $db_prefix) || strlen($db_prefix) > 40))		error(sprintf($lang_install['Invalid table prefix'], $db_prefix));	// Check SQLite prefix collision	if (in_array($db_type, array('sqlite', 'sqlite3')) && strtolower($db_prefix) == 'sqlite_')		error($lang_install['SQLite prefix collision']);	// Make sure PunBB isn't already installed	if ($forum_db->table_exists('users'))	{		$query = array(			'SELECT'	=> 'COUNT(id)',			'FROM'		=> 'users',			'WHERE'		=> 'id=1'		);		$result = $forum_db->query_build($query);		if ($forum_db->result($result))			error(sprintf($lang_install['PunBB already installed'], $db_prefix, $db_name));	}	// Start a transaction	$forum_db->start_transaction();	// Create all tables	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'username'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'ip'			=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'email'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'expire'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'ban_creator'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('bans', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'cat_name'		=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New Category\''			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('categories', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'search_for'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'replace_with'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('censoring', $schema);	$schema = array(		'FIELDS'		=> array(			'conf_name'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'conf_value'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('conf_name')	);	$forum_db->create_table('config', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'version'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'description'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'author'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'uninstall'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'uninstall_note'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disabled'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'dependencies'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('extensions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'extension_id'	=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'code'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'installed'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'priority'		=> array(				'datatype'		=> 'TINYINT(1) UNSIGNED',				'allow_null'	=> false,				'default'		=> '5'			)		),		'PRIMARY KEY'	=> array('id', 'extension_id')	);	$forum_db->create_table('extension_hooks', $schema);	$schema = array(		'FIELDS'		=> array(			'group_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'read_forum'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_replies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_topics'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			)		),		'PRIMARY KEY'	=> array('group_id', 'forum_id')	);	$forum_db->create_table('forum_perms', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'forum_name'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New forum\''			),			'forum_desc'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'redirect_url'	=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'moderators'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'num_topics'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'sort_by'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=>	'0'			),			'cat_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=>	'0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('forums', $schema);	$schema = array(		'FIELDS'		=> array(			'g_id'						=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'g_title'					=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'g_user_title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'g_moderator'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_edit_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_rename_users'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_change_passwords'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_ban_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_read_board'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_view_users'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_replies'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_topics'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_edit_posts'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_posts'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_topics'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_set_title'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search'					=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_send_email'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_search_flood'			=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_email_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '60'			)		),		'PRIMARY KEY'	=> array('g_id')	);	$forum_db->create_table('groups', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'logged'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'idle'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'csrf_token'	=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'prev_url'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),		),		'UNIQUE KEYS'	=> array(			'user_id_ident_idx'	=> array('user_id', 'ident')		),		'INDEXES'		=> array(			'ident_idx'		=> array('ident'),			'logged_idx'	=> array('logged')		),		'ENGINE'		=> 'HEAP'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$schema['UNIQUE KEYS']['user_id_ident_idx'] = array('user_id', 'ident(25)');		$schema['INDEXES']['ident_idx'] = array('ident(25)');	}	$forum_db->create_table('online', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'poster_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'poster_ip'		=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> true			),			'poster_email'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'hide_smilies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'edited'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'edited_by'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'topic_id_idx'	=> array('topic_id'),			'multi_idx'		=> array('poster_id', 'topic_id'),			'posted_idx'	=> array('posted')		)	);	$forum_db->create_table('posts', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'rank'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'min_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('ranks', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'reported_by'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'created'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'zapped'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'zapped_by'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'zapped_idx'	=> array('zapped')		)	);	$forum_db->create_table('reports', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'search_data'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'ident_idx'	=> array('ident')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['ident_idx'] = array('ident(8)');	$forum_db->create_table('search_cache', $schema);	$schema = array(		'FIELDS'		=> array(			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'word_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'subject_match'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'INDEXES'		=> array(			'word_id_idx'	=> array('word_id'),			'post_id_idx'	=> array('post_id')		)	);	$forum_db->create_table('search_matches', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'word'			=> array(				'datatype'		=> 'VARCHAR(20)',				'allow_null'	=> false,				'default'		=> '\'\'',				'collation'		=> 'bin'			)		),		'PRIMARY KEY'	=> array('word'),		'INDEXES'		=> array(			'id_idx'	=> array('id')		)	);	if ($db_type == 'sqlite' || $db_type == 'sqlite3')	{		$schema['PRIMARY KEY'] = array('id');		$schema['UNIQUE KEYS'] = array('word_idx'	=> array('word'));	}	$forum_db->create_table('search_words', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('user_id', 'topic_id')	);	$forum_db->create_table('subscriptions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'subject'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'first_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'num_views'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_replies'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'closed'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'sticky'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'moved_to'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'forum_id_idx'		=> array('forum_id'),			'moved_to_idx'		=> array('moved_to'),			'last_post_idx'		=> array('last_post'),			'first_post_id_idx'	=> array('first_post_id')		)	);	$forum_db->create_table('topics', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'group_id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '3'			),			'username'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'password'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'salt'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'email'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'realname'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> true			),			'url'				=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'facebook'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'twitter'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'linkedin'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'skype'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'jabber'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'icq'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'msn'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'aim'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'yahoo'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'location'			=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'signature'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disp_topics'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'disp_posts'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'email_setting'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'notify_with_post'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'auto_notify'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'show_smilies'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img_sig'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_avatars'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_sig'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'access_keys'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'timezone'			=> array(				'datatype'		=> 'FLOAT',				'allow_null'	=> false,				'default'		=> '0'			),			'dst'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'time_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'date_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'language'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'English\''			),			'style'				=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'Oxygen\''			),			'num_posts'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_email_sent'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'registered'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'registration_ip'	=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> false,				'default'		=> '\'0.0.0.0\''			),			'last_visit'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'admin_note'		=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'activate_string'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'activate_key'		=> array(				'datatype'		=> 'VARCHAR(8)',				'allow_null'	=> true			),			'avatar'			=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_width'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_height'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'registered_idx'	=> array('registered'),			'username_idx'		=> array('username')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['username_idx'] = array('username(8)');	$forum_db->create_table('users', $schema);	$now = time();	// Insert the four preset groups	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Administrators\', \'Administrator\', 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Guest\', NULL, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 60, 30, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 2';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Members\', NULL, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 60, 30, 60'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 3';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Moderators\', \'Moderator\', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 4';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Insert guest and first admin user	$query = array(		'INSERT'	=> 'group_id, username, password, email',		'INTO'		=> 'users',		'VALUES'	=> '2, \'Guest\', \'Guest\', \'Guest\''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$salt = random_key(12);	$query = array(		'INSERT'	=> 'group_id, username, password, email, language, num_posts, last_post, registered, registration_ip, last_visit, salt',		'INTO'		=> 'users',		'VALUES'	=> '1, \''.$forum_db->escape($username).'\', \''.forum_hash($password1, $salt).'\', \''.$forum_db->escape($email).'\', \''.$forum_db->escape($default_lang).'\', 1, '.$now.', '.$now.', \'127.0.0.1\', '.$now.', \''.$forum_db->escape($salt).'\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_uid = $forum_db->insert_id();	// Enable/disable avatars depending on file_uploads setting in PHP configuration	$avatars = in_array(strtolower(@ini_get('file_uploads')), array('on', 'true', '1')) ? 1 : 0;	// Enable/disable automatic check for updates depending on PHP environment (require cURL, fsockopen or allow_url_fopen)	$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;	// Insert config data	$config = array(		'o_cur_version'				=> "'".FORUM_VERSION."'",		'o_database_revision'		=> "'".FORUM_DB_REVISION."'",		'o_board_title'				=> "'".$forum_db->escape($board_title)."'",		'o_board_desc'				=> "'".$forum_db->escape($board_descrip)."'",		'o_default_timezone'		=> "'0'",		'o_time_format'				=> "'H:i:s'",		'o_date_format'				=> "'Y-m-d'",		'o_check_for_updates'		=> "'$check_for_updates'",		'o_check_for_versions'		=> "'$check_for_updates'",		'o_timeout_visit'			=> "'5400'",		'o_timeout_online'			=> "'300'",		'o_redirect_delay'			=> "'0'",		'o_show_version'			=> "'0'",		'o_show_user_info'			=> "'1'",		'o_show_post_count'			=> "'1'",		'o_signatures'				=> "'1'",		'o_smilies'					=> "'1'",		'o_smilies_sig'				=> "'1'",		'o_make_links'				=> "'1'",		'o_default_lang'			=> "'".$forum_db->escape($default_lang)."'",		'o_default_style'			=> "'Oxygen'",		'o_default_user_group'		=> "'3'",		'o_topic_review'			=> "'15'",		'o_disp_topics_default'		=> "'30'",		'o_disp_posts_default'		=> "'25'",		'o_indent_num_spaces'		=> "'4'",		'o_quote_depth'				=> "'3'",		'o_quickpost'				=> "'1'",		'o_users_online'			=> "'1'",		'o_censoring'				=> "'0'",		'o_ranks'					=> "'1'",		'o_show_dot'				=> "'0'",		'o_topic_views'				=> "'1'",		'o_quickjump'				=> "'1'",		'o_gzip'					=> "'0'",		'o_additional_navlinks'		=> "''",		'o_report_method'			=> "'0'",		'o_regs_report'				=> "'0'",		'o_default_email_setting'	=> "'1'",		'o_mailing_list'			=> "'".$forum_db->escape($email)."'",		'o_avatars'					=> "'$avatars'",		'o_avatars_dir'				=> "'img/avatars'",		'o_avatars_width'			=> "'60'",		'o_avatars_height'			=> "'60'",		'o_avatars_size'			=> "'15360'",		'o_search_all_forums'		=> "'1'",		'o_sef'						=> "'Default'",		'o_admin_email'				=> "'".$forum_db->escape($email)."'",		'o_webmaster_email'			=> "'".$forum_db->escape($email)."'",		'o_subscriptions'			=> "'1'",		'o_smtp_host'				=> "NULL",		'o_smtp_user'				=> "NULL",		'o_smtp_pass'				=> "NULL",		'o_smtp_ssl'				=> "'0'",		'o_regs_allow'				=> "'1'",		'o_regs_verify'				=> "'0'",		'o_announcement'			=> "'0'",		'o_announcement_heading'	=> "'".$lang_install['Default announce heading']."'",		'o_announcement_message'	=> "'".$lang_install['Default announce message']."'",		'o_rules'					=> "'0'",		'o_rules_message'			=> "'".$lang_install['Default rules']."'",		'o_maintenance'				=> "'0'",		'o_maintenance_message'		=> "'".$lang_admin_settings['Maintenance message default']."'",		'o_default_dst'				=> "'0'",		'p_message_bbcode'			=> "'1'",		'p_message_img_tag'			=> "'1'",		'p_message_all_caps'		=> "'1'",		'p_subject_all_caps'		=> "'1'",		'p_sig_all_caps'			=> "'1'",		'p_sig_bbcode'				=> "'1'",		'p_sig_img_tag'				=> "'0'",		'p_sig_length'				=> "'400'",		'p_sig_lines'				=> "'4'",		'p_allow_banned_email'		=> "'1'",		'p_allow_dupe_email'		=> "'0'",		'p_force_guest_email'		=> "'1'",		'o_show_moderators'			=> "'0'"	);	foreach ($config as $conf_name => $conf_value)	{		$query = array(			'INSERT'	=> 'conf_name, conf_value',			'INTO'		=> 'config',			'VALUES'	=> '\''.$conf_name.'\', '.$conf_value.''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Insert some other default data	$query = array(		'INSERT'	=> 'cat_name, disp_position',		'INTO'		=> 'categories',		'VALUES'	=> '\''.$lang_install['Default category name'].'\', 1'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'forum_name, forum_desc, num_topics, num_posts, last_post, last_post_id, last_poster, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$lang_install['Default forum name'].'\', \''.$lang_install['Default forum descrip'].'\', 1, 1, '.$now.', 1, \''.$forum_db->escape($username).'\', 1, '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, subject, posted, first_post_id, last_post, last_post_id, last_poster, forum_id',		'INTO'		=> 'topics',		'VALUES'	=> '\''.$forum_db->escape($username).'\', \''.$lang_install['Default topic subject'].'\', '.$now.', 1, '.$now.', 1, \''.$forum_db->escape($username).'\', '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, poster_id, poster_ip, message, posted, topic_id',		'INTO'		=> 'posts',		'VALUES'	=> '\''.$forum_db->escape($username).'\', '.$new_uid.', \'127.0.0.1\', \''.$lang_install['Default post contents'].'\', '.$now.', '.$forum_db->insert_id().''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Add new post to search table	require FORUM_ROOT.'include/search_idx.php';	update_search_index('post', $forum_db->insert_id(), $lang_install['Default post contents'], $lang_install['Default topic subject']);	// Insert the default ranks	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 1'].'\', 0'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 2'].'\', 10'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_db->end_transaction();	$alerts = array();	// Check if the cache directory is writable	if (!is_writable(FORUM_ROOT.'cache/'))		$alerts[] = '<li><span>'.$lang_install['No cache write'].'</span></li>';	// Check if default avatar directory is writable	if (!is_writable(FORUM_ROOT.'img/avatars/'))		$alerts[] = '<li><span>'.$lang_install['No avatar write'].'</span></li>';	// Check if we disabled uploading avatars because file_uploads was disabled	if ($avatars == '0')		$alerts[] = '<li><span>'.$lang_install['File upload alert'].'</span></li>';	// Add some random bytes at the end of the cookie name to prevent collisions	$cookie_name = 'forum_cookie_'.random_key(6, false, true);	/// Generate the config.php file data	$config = generate_config_file();	// Attempt to write config.php and serve it up for download if writing fails	$written = false;	if (is_writable(FORUM_ROOT))	{		$fh = @fopen(FORUM_ROOT.'config.php', 'wb');		if ($fh)		{			fwrite($fh, $config);			fclose($fh);			$written = true;		}	}	if ($install_pun_repository && is_readable(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{		require FORUM_ROOT.'include/xml.php';		$ext_data = xml_to_array(file_get_contents(FORUM_ROOT.'extensions/pun_repository/manifest.xml'));		if (!empty($ext_data))		{			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\'pun_repository\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', NULL, NULL, \'||\'',			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (isset($ext_data['extension']['hooks']['hook']))			{				foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)				{					$cur_hooks = explode(',', $ext_hook['attributes']['id']);					foreach ($cur_hooks as $cur_hook)					{						$query = array(							'INSERT'	=> 'id, extension_id, code, installed, priority',							'INTO'		=> 'extension_hooks',							'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \'pun_repository\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)						);						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}			}		}	}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php printf($lang_install['Success description'], FORUM_VERSION) ?></p></div><div id="brd-visit" class="gen-content">	<p><?php echo $lang_install['Success welcome'] ?></p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span><?php echo $lang_install['Final instructions'] ?></span></h1>	</div>	<div class="main-content main-frm"><?php if (!empty($alerts)): ?>		<div class="ct-box error-box">			<p class="warn"><strong><?php echo $lang_install['Warning'] ?></strong></p>			<ul>				<?php echo implode("\n\t\t\t\t", $alerts)."\n" ?>			</ul>		</div><?php endif;if (!$written){?>		<div class="ct-box info-box">			<p class="warn"><?php echo $lang_install['No write info 1'] ?></p>			<p class="warn"><?php printf($lang_install['No write info 2'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">			<div class="hidden">			<input type="hidden" name="generate_config" value="1" />			<input type="hidden" name="db_type" value="<?php echo $db_type; ?>" />			<input type="hidden" name="db_host" value="<?php echo $db_host; ?>" />			<input type="hidden" name="db_name" value="<?php echo forum_htmlencode($db_name); ?>" />			<input type="hidden" name="db_username" value="<?php echo forum_htmlencode($db_username); ?>" />			<input type="hidden" name="db_password" value="<?php echo forum_htmlencode($db_password); ?>" />			<input type="hidden" name="db_prefix" value="<?php echo forum_htmlencode($db_prefix); ?>" />			<input type="hidden" name="base_url" value="<?php echo forum_htmlencode($base_url); ?>" />			<input type="hidden" name="cookie_name" value="<?php echo forum_htmlencode($cookie_name); ?>" />			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" value="<?php echo $lang_install['Download config'] ?>" /></span>			</div>		</form><?php}else{?>		<div class="ct-box info-box">			<p class="warn"><?php printf($lang_install['Write info'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div><?php}?>	</div></div></div></div></body></html><?php}
<?php// Language definitions used in post.php and edit.php$lang_post = array(// Post validation stuff (many are similar to those in edit.php)'No subject'			=>	'Topics must contain a subject.','Too long subject'		=>	'Subjects cannot be longer than 70 characters.','All caps subject'		=>	'Subjects cannot contain only capital letters.','No message'			=>	'You must enter a message.','Too long message'		=>	'Your post length is %s bytes. This exceeds the %s bytes limit.','All caps message'		=>	'Posts cannot contain only capital letters.','CSRF token mismatch'	=>	'Unable to confirm security token. A likely cause for this is that some time passed between when you first entered the page and when you posted the form. Clicking "Submit" again should solve the problem.','Invalid e-mail'		=>	'The email address you entered is invalid.',// Posting'Compose your reply'	=>	'Compose and post your new reply','Compose your topic'	=>	'Compose and post your new topic','Compose edited reply'	=>	'Compose and post your edited reply','Compose edited topic'	=>	'Compose and post your edited topic','Guest post legend'		=>	'Required information for guests','Post errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be posted:','Guest name'			=>	'Guest name',	// For guests (instead of Username)'Guest e-mail'			=>	'Guest email','Post redirect'			=>	'Post entered.','Post reply'			=>	'Post new reply','Post new topic'		=>	'Post new topic','Topic subject'			=>	'Topic subject','Write message'			=>	'Write message','Hide smilies'			=>	'Never show smilies as icons (images) for this post.','Subscribe'				=>	'Subscribe to this topic.','Stay subscribed'		=>	'Stay subscribed to this topic.','Topic review'			=>	'Topic review (newest first)','Flood'					=>	'At least %s seconds have to pass between posts. Please wait a while and try posting again.','Permalink post'		=>	'Permanent link to this post','Post settings'			=>	'Optional post settings','Preview reply'			=>	'Preview your new reply','Preview new topic'		=>	'Preview your new topic','Preview reply'			=>	'Preview reply', // For preview button'Preview topic'			=>	'Preview topic', // For preview button'Submit reply'			=>	'Submit reply', // For submit button'Submit topic'			=>	'Submit topic', // For submit button'Post byline'			=>	'<span>Post by </span>%s','Topic byline'			=>	'<span>Topic by </span>%s','Reply byline'			=>	'<span>Reply by </span>%s','Post posted'			=>	'<span>Posted </span>%s',// Edit post'Edit post legend'		=>	'Edit message','Edit topic'			=>	'Edit topic','Edit reply'			=>	'Edit reply','Silent edit'			=>	'Silent edit (don\'t display "Last edited by" in topic view for this edit).','Preview edited topic'	=>	'Preview of your edited topic','Preview edited reply'	=>	'Preview of your edited reply','Edit redirect'			=>	'Post updated.');
<?php/** * Database updating script. * * Updates the database to the latest version. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('UPDATE_TO', '1.4b1');define('UPDATE_TO_DB_REVISION', 5);// The number of items to process per pageview (lower this if the update script times out during UTF-8 conversion)define('PER_PAGE', 300);define('MIN_MYSQL_VERSION', '4.1.2');// Make sure we are running at least PHP 5.0.0if (!function_exists('version_compare') || version_compare(PHP_VERSION, '5.0.0', '<'))	exit('You are running PHP version '.PHP_VERSION.'. '.UPDATE_TO.' requires at least PHP 5.0.0 to run properly. You must upgrade your PHP installation before you can continue.');define('FORUM_ROOT', '../');// Attempt to load the configuration file config.phpif (file_exists(FORUM_ROOT.'config.php'))	include FORUM_ROOT.'config.php';if (defined('PUN'))	define('FORUM', 1);// If FORUM isn't defined, config.php is missing or corrupt or we are outside the root directoryif (!defined('FORUM'))	exit('Cannot find config.php, are you sure it exists?');// Enable debug modeif (!defined('FORUM_DEBUG'))	define('FORUM_DEBUG', 1);// Turn on full PHP error reportingerror_reporting(E_ALL);// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Turn off PHP time limit@set_time_limit(0);// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', FORUM_ROOT.'cache/');// Load the functions scriptrequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If the request_uri is invalid try fix itif (!defined('FORUM_IGNORE_REQUEST_URI'))	forum_fix_request_uri();// Instruct DB abstraction layer that we don't want it to "SET NAMES". If we need to, we'll do it ourselves below.define('FORUM_NO_SET_NAMES', 1);// Load DB abstraction layer and try to connectrequire FORUM_ROOT.'include/dblayer/common_db.php';// Check current version$query = array(	'SELECT'	=> 'conf_value',	'FROM'		=> 'config',	'WHERE'		=> 'conf_name = \'o_cur_version\'');$result = $forum_db->query_build($query);$cur_version = $forum_db->result($result);if (version_compare($cur_version, '1.2', '<'))	error('Version mismatch. The database \''.$db_name.'\' doesn\'t seem to be running a PunBB database schema supported by this update script.', __FILE__, __LINE__);// If we've already done charset conversion in a previous update, we have to do SET NAMES$forum_db->set_names(strpos($cur_version, '1.3') === 0 ? 'utf8' : 'latin1');// If MySQL, make sure it's at least 4.1.2if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$mysql_info = $forum_db->get_version();	if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))		error('You are running MySQL version '.$mysql_version.'. PunBB '.UPDATE_TO.' requires at least MySQL '.MIN_MYSQL_VERSION.' to run properly. You must upgrade your MySQL installation before you can continue.');}// Get the forum config$query = array(	'SELECT'	=> '*',	'FROM'		=> 'config');$result = $forum_db->query_build($query);while ($cur_config_item = $forum_db->fetch_row($result))	$forum_config[$cur_config_item[0]] = $cur_config_item[1];// Check the database revision and the current versionif (isset($forum_config['o_database_revision']) && $forum_config['o_database_revision'] >= UPDATE_TO_DB_REVISION && version_compare($forum_config['o_cur_version'], UPDATE_TO, '>='))	error('Your database is already as up-to-date as this script can make it.');// If $base_url isn't set, use o_base_url from configif (!isset($base_url))	$base_url = $forum_config['o_base_url'];// There's no $forum_user, but we need the style element// We default to Oxygen if the default style is invalid (a 1.2 to 1.3 upgrade most likely)if (file_exists(FORUM_ROOT.'style/'.$forum_config['o_default_style'].'/'.$forum_config['o_default_style'].'.php'))	$forum_user['style'] = $forum_config['o_default_style'];else{	$forum_user['style'] = 'Oxygen';	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'Oxygen\'',		'WHERE'		=> 'conf_name = \'o_default_style\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Make sure the default language exists// We default to English if the default language is invalid (a 1.2 to 1.3 upgrade most likely)if (!file_exists(FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/common.php')){	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'English\'',		'WHERE'		=> 'conf_name = \'o_default_lang\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}//// Determines whether $str is UTF-8 encoded or not//function seems_utf8($str){	$str_len = strlen($str);	for ($i = 0; $i < $str_len; ++$i)	{		if (ord($str[$i]) < 0x80) continue; # 0bbbbbbb		else if ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; # 110bbbbb		else if ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; # 1110bbbb		else if ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; # 11110bbb		else if ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; # 111110bb		else if ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; # 1111110b		else return false; # Does not match any model		for ($j = 0; $j < $n; ++$j) # n bytes matching 10bbbbbb follow ?		{			if ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))				return false;		}	}	return true;}//// Translates the number from an HTML numeric entity into an UTF-8 character//function dcr2utf8($src){	$dest = '';	if ($src < 0)		return false;	else if ($src <= 0x007f)		$dest .= chr($src);	else if ($src <= 0x07ff)	{		$dest .= chr(0xc0 | ($src >> 6));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src == 0xFEFF)	{		// nop -- zap the BOM	}	else if ($src >= 0xD800 && $src <= 0xDFFF)	{		// found a surrogate		return false;	}	else if ($src <= 0xffff)	{		$dest .= chr(0xe0 | ($src >> 12));		$dest .= chr(0x80 | (($src >> 6) & 0x003f));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src <= 0x10ffff)	{		$dest .= chr(0xf0 | ($src >> 18));		$dest .= chr(0x80 | (($src >> 12) & 0x3f));		$dest .= chr(0x80 | (($src >> 6) & 0x3f));		$dest .= chr(0x80 | ($src & 0x3f));	}	else	{		// out of range		return false;	}	return $dest;}//// Attemts to convert $str from $old_charset to UTF-8. Also converts HTML entities (including numeric entities) to UTF-8 characters.//function convert_to_utf8(&$str, $old_charset){	if ($str == '')		return false;	$save = $str;	// Replace literal entities (for non-UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '<') && $old_charset == 'ISO-8859-1' || $old_charset == 'ISO-8859-15')		$str = html_entity_decode($str, ENT_QUOTES, $old_charset);	if (!seems_utf8($str))	{		if ($old_charset == 'ISO-8859-1')			$str = utf8_encode($str);		else if (function_exists('iconv'))			$str = iconv($old_charset, 'UTF-8', $str);		else if (function_exists('mb_convert_encoding'))			$str = mb_convert_encoding($str, 'UTF-8', $old_charset);	}	// Replace literal entities (for UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '>='))		$str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');	// Replace numeric entities	$str = preg_replace_callback('/&#([0-9]+);/', 'utf8_callback_1', $str);	$str = preg_replace_callback('/&#x([a-f0-9]+);/i', 'utf8_callback_2', $str);	return ($save != $str);}function utf8_callback_1($matches){	return dcr2utf8($matches[1]);}function utf8_callback_2($matches){	return dcr2utf8(hexdec($matches[1]));}//// Tries to determine whether post data in the database is UTF-8 encoded or not//function db_seems_utf8(){	global $db_type, $forum_db;	$seems_utf8 = true;	$query = array(		'SELECT'	=> 'MIN(id), MAX(id), COUNT(id)',		'FROM'		=> 'posts'	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($min_id, $max_id, $count_id) = $forum_db->fetch_row($result);	if ($count_id == 0)		return false;	// Get a random soup of data and check if it appears to be UTF-8	for ($i = 0; $i < 100; ++$i)	{		$id = ($i == 0) ? $min_id : (($i == 1) ? $max_id : rand($min_id, $max_id));		$query = array(			'SELECT'	=> 'p.message, p.poster, t.subject, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'		=> 't.id = p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'		=> 'f.id = t.forum_id'				)			),			'WHERE'		=> 'p.id >= '.$id,			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$random_row = $forum_db->fetch_row($result);		if (!seems_utf8($random_row[0].$random_row[1].$random_row[2].$random_row[3]))		{			$seems_utf8 = false;			break;		}	}	return $seems_utf8;}//// Safely converts text type columns into utf8 (MySQL only)// Function based on update_convert_table_utf8() from the Drupal project (http://drupal.org/)//function convert_table_utf8($table){	global $forum_db;	$types = array(		'char' 			=> 'binary',		'varchar'		=> 'varbinary',		'tinytext'		=> 'tinyblob',		'mediumtext'	=> 'mediumblob',		'text'			=> 'blob',		'longtext'		=> 'longblob'	);	// Set table default charset to utf8	$forum_db->query('ALTER TABLE `'.$table.'` CHARACTER SET utf8') or error(__FILE__, __LINE__);	// Find out which columns need converting and build SQL statements	$result = $forum_db->query('SHOW FULL COLUMNS FROM `'.$table.'`') or error(__FILE__, __LINE__);	while ($cur_column = $forum_db->fetch_assoc($result))	{		list($type) = explode('(', $cur_column['Type']);		if (isset($types[$type]) && strpos($cur_column['Collation'], 'utf8') === false)		{			$allow_null = ($cur_column['Null'] == 'YES');			$forum_db->alter_field($table, $cur_column['Field'], preg_replace('/'.$type.'/i', $types[$type], $cur_column['Type']), $allow_null, $cur_column['Default']);			$forum_db->alter_field($table, $cur_column['Field'], $cur_column['Type'].' CHARACTER SET utf8', $allow_null, $cur_column['Default']);		}	}}// Move avatars to DBfunction convert_avatars(){	global $forum_config, $forum_db;	$avatar_dir = FORUM_ROOT.'img/avatars/';	if (!is_dir($avatar_dir))	{		return false;	}	if ($handle = opendir($avatar_dir))	{		while (false !== ($avatar = readdir($handle)))		{			$avatar_file =  $avatar_dir.$avatar;			if (!is_file($avatar_file))			{				continue;			}			//echo $avatar_file;			$avatar = basename($avatar_file);			if (preg_match('/^(\d+)\.(png|gif|jpg)/', $avatar, $matches))			{				$user_id = intval($matches[1], 10);				$avatar_ext = $matches[2];				$avatar_type = FORUM_AVATAR_NONE;				if ($avatar_ext == 'png')				{					$avatar_type = FORUM_AVATAR_PNG;				}				else if ($avatar_ext == 'gif')				{					$avatar_type = FORUM_AVATAR_GIF;				}				else if ($avatar_ext == 'jpg')				{					$avatar_type = FORUM_AVATAR_JPG;				}				// Check user and avatar type				if ($user_id < 2 || $avatar_type == FORUM_AVATAR_NONE)				{					continue;				}				// Now check the width/height				list($width, $height, $type,) = @/**/getimagesize($avatar_file);				if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])				{					@/**/unlink($avatar_file);				}				else				{					// Save to DB					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$height.'\', avatar_width=\''.$width.'\'',						'WHERE'		=> 'id='.$user_id					);					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}			}		}		closedir($handle);	}}header('Content-type: text/html; charset=utf-8');// Empty all output buffers and stop bufferingwhile (@ob_end_clean());$stage = isset($_GET['stage']) ? $_GET['stage'] : '';$old_charset = isset($_GET['req_old_charset']) ? str_replace('ISO8859', 'ISO-8859', strtoupper($_GET['req_old_charset'])) : 'ISO-8859-1';$start_at = isset($_GET['start_at']) ? intval($_GET['start_at']) : 0;$query_str = '';switch ($stage){	// Show form	case '':		$db_seems_utf8 = db_seems_utf8();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update: Perform update of database tables</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<ul class="spaced">				<li class="warn"><span><strong>WARNING!</strong> This script will update your PunBB forum database. The update procedure might take anything from a few seconds to a few minutes (or in extreme cases, hours) depending on the speed of the server, the size of the forum database and the number of changes required.</span></li>				<li><span>Do not forget to make a backup of the database before continuing.</span></li>				<li><span>Did you read the update instructions in the documentation? If not, start there.</span></li><?phpif (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force']))){	if (!function_exists('iconv') && !function_exists('mb_convert_encoding'))	{?>				<li class="important"><strong>IMPORTANT!</strong> PunBB has detected that this PHP environment does not have support for the encoding mechanisms required to do UTF-8 conversion from character sets other than ISO-8859-1. What this means is that if the current character set is not ISO-8859-1, PunBB won't be able to convert your forum database to UTF-8 and you will have to do it manually. Instructions for doing manual charset conversion can be found in the update instructions.</span></li><?php	}}$current_url = get_current_url();if (strpos($cur_version, '1.2') === 0 && $db_seems_utf8 && !isset($_GET['force'])){?>				<li class="important"><span><strong>IMPORTANT!</strong> Based on a random selection of 100 posts, topic subjects, usernames and forum names from the database, it appears as if text in the database is currently UTF-8 encoded. This is a good thing. Based on this, the update process will not attempt to do charset conversion. If you have reason to believe that the charset conversion is required nonetheless, you can <a href="<?php echo $current_url.((substr_count($current_url, '?') == 1) ? '&amp;' : '?').'force=1' ?>">force the conversion to run</a>.</span></li><?php}?>			</ul>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo $current_url ?>">			<div class="hidden">				<input type="hidden" name="stage" value="start" />			</div><?php		if (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force'])))		{?>			<div class="ct-box info-box">				<p class="important"><strong>Enable conversion:</strong> When enabled this update script will, after it has made the required structural changes to the database, convert all text in the database from the current character set to UTF-8. This conversion is required if you're upgrading from PunBB 1.2 and you are not currently using an UTF-8 language pack.</p>				<p class="important"><strong>Current character set:</strong> If the primary language in your forum is English, you can leave this at the default value. However, if your forum is non-English, you should enter the character set of the primary language pack used in the forum.</p>			</div>			<div id="req-msg" class="req-warn ct-box error-box">				<p class="important"><strong>Important!</strong> All fields labelled <em>(Required)</em> must be completed before submitting this form.</p>			</div>			<fieldset class="frm-group group1">				<legend class="group-legend"><span>Charset conversion</span></legend>				<div class="sf-set set1">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld1" name="convert_charset" value="1" checked="checked" /></span>						<label for="fld1"><span>Enable conversion:</span> Perform database charset conversion.</label>					</div>				</div>				<div class="sf-set set2">					<div class="sf-box text required">						<label for="fld2"><span>Current character set: <em>(Required)</em></span> <small>Accept default for English forums otherwise the character set of the primary langauge pack.</small></label><br />						<span class="fld-input"><input type="text" id="fld2" name="req_old_charset" size="12" maxlength="20" value="ISO-8859-1" /></span>					</div>				</div>			</fieldset><?php		}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="start" value="Start update" /></span>			</div>		</form>	</div></div></div></div></body></html><?php		break;	// Start by updating the database structure	case 'start':		// Put back dropped search tables		if (!$forum_db->table_exists('search_cache') && in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'ident'			=> array(						'datatype'		=> 'VARCHAR(200)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'search_data'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					)				),				'PRIMARY KEY'	=> array('id'),				'INDEXES'		=> array(					'ident_idx'	=> array('ident(8)')				)			);			$forum_db->create_table('search_cache', $schema);			$schema = array(				'FIELDS'		=> array(					'post_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'word_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'subject_match'	=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					)				),				'INDEXES'		=> array(					'word_id_idx'	=> array('word_id'),					'post_id_idx'	=> array('post_id')				)			);			$forum_db->create_table('search_matches', $schema);			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'SERIAL',						'allow_null'	=> false					),					'word'			=> array(						'datatype'		=> 'VARCHAR(20)',						'allow_null'	=> false,						'default'		=> '\'\'',						'collation'		=> 'bin'					)				),				'PRIMARY KEY'	=> array('word'),				'INDEXES'		=> array(					'id_idx'	=> array('id')				)			);			$forum_db->create_table('search_words', $schema);		}		// Add the extensions table if it doesn't already exist		if (!$forum_db->table_exists('extensions'))		{			$schema = array(				'FIELDS'		=> array(					'id'				=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'title'				=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'version'			=> array(						'datatype'		=> 'VARCHAR(25)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'description'		=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'author'			=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'uninstall'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'uninstall_note'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'disabled'			=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					),					'dependencies'		=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					)				),				'PRIMARY KEY'	=> array('id')			);			$forum_db->create_table('extensions', $schema);		}		// Make sure the collation on "word" in the search_words table is utf8_bin		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW FULL COLUMNS FROM '.$forum_db->prefix.'search_words') or error(__FILE__, __LINE__);			while ($cur_column = $forum_db->fetch_assoc($result))			{				if ($cur_column['Field'] === 'word')				{					if ($cur_column['Collation'] !== 'utf8_bin')						$forum_db->alter_field('search_words', 'word', 'VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin', false, '');					break;				}			}		}		// Add uninstall_note field to extensions		$forum_db->add_field('extensions', 'uninstall_note', 'TEXT', true, null, 'uninstall');		// Drop uninstall_notes (plural) field		$forum_db->drop_field('extensions', 'uninstall_notes');		// Add disabled field to extensions		$forum_db->add_field('extensions', 'disabled', 'TINYINT(1)', false, 0, 'uninstall_note');		// Add dependencies field to extensions		$forum_db->add_field('extensions', 'dependencies', 'VARCHAR(255)', false, '', 'disabled');		// Add the extension_hooks table		if (!$forum_db->table_exists('extension_hooks'))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'extension_id'	=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'code'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'installed'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'priority'		=> array(						'datatype'		=> 'TINYINT(1) UNSIGNED',						'allow_null'	=> false,						'default'		=> '5'					)				),				'PRIMARY KEY'	=> array('id', 'extension_id')			);			$forum_db->create_table('extension_hooks', $schema);		}		// Add priority field to extension_hooks		$forum_db->add_field('extension_hooks', 'priority', 'TINYINT(1)', false, 5, 'installed');		// Extend id field in extension_hooks to 150		$forum_db->alter_field('extension_hooks', 'id', 'VARCHAR(150)', false, '');		// Make all e-mail fields VARCHAR(80)		$forum_db->alter_field('bans', 'email', 'VARCHAR(80)', true);		$forum_db->alter_field('posts', 'poster_email', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'email', 'VARCHAR(80)', false, '');		$forum_db->alter_field('users', 'jabber', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'msn', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'activate_string', 'VARCHAR(80)', true);		// Add avatars field		$forum_db->add_field('users', 'avatar', 'TINYINT(3) UNSIGNED', false, 0);		$forum_db->add_field('users', 'avatar_width', 'TINYINT(3) UNSIGNED', false, 0, 'avatar');		$forum_db->add_field('users', 'avatar_height', 'TINYINT(3) UNSIGNED', false, 0, 'avatar_width');		// Add new profile fileds		$forum_db->add_field('users', 'facebook', 'VARCHAR(100)', true, null, 'url');		$forum_db->add_field('users', 'twitter', 'VARCHAR(100)', true, null, 'facebook');		$forum_db->add_field('users', 'linkedin', 'VARCHAR(100)', true, null, 'twitter');		$forum_db->add_field('users', 'skype', 'VARCHAR(100)', true, null, 'linkedin');		// Add avatars to DB		convert_avatars();		// Remove NOT NULL from TEXT fields for consistency. See http://dev.punbb.org/changeset/596		$forum_db->alter_field('posts', 'message', 'TEXT', true);		$forum_db->alter_field('reports', 'message', 'TEXT', true);		// Drop fulltext indexes  (should only apply to SVN installs)		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$forum_db->drop_index('topics', 'subject_idx');			$forum_db->drop_index('posts', 'message_idx');		}		// Make all IP fields VARCHAR(39) to support IPv6		$forum_db->alter_field('posts', 'poster_ip', 'VARCHAR(39)', true);		$forum_db->alter_field('users', 'registration_ip', 'VARCHAR(39)', false, '0.0.0.0');		// Add the DST option to the users table		$forum_db->add_field('users', 'dst', 'TINYINT(1)', false, 0, 'timezone');		// Add the salt field to the users table		$forum_db->add_field('users', 'salt', 'VARCHAR(12)', true, null, 'password');		// Add the access_keys field to the users table		$forum_db->add_field('users', 'access_keys', 'TINYINT(1)', false, 0, 'show_sig');		// Add the CSRF token field to the online table		$forum_db->add_field('online', 'csrf_token', 'VARCHAR(40)', false, '', null);		// Add the prev_url field to the online table		$forum_db->add_field('online', 'prev_url', 'VARCHAR(255)', true, null, null);		// Add the last_post field to the online table		$forum_db->add_field('online', 'last_post', 'INT(10) UNSIGNED', true, null, null);		// Add the last_search field to the online table		$forum_db->add_field('online', 'last_search', 'INT(10) UNSIGNED', true, null, null);		// Drop use_avatar column from users table		$forum_db->drop_field('users', 'use_avatar');		// Drop save_pass column from users table		$forum_db->drop_field('users', 'save_pass');		// Drop g_edit_subjects_interval column from groups table		$forum_db->drop_field('groups', 'g_edit_subjects_interval');		$new_config = array();		// Add quote depth option		if (!array_key_exists('o_quote_depth', $forum_config))			$new_config[] = '\'o_quote_depth\', \'3\'';		// Add database revision number		if (!array_key_exists('o_database_revision', $forum_config))			$new_config[] = '\'o_database_revision\', \'0\'';		// Add default email setting option		if (!array_key_exists('o_default_email_setting', $forum_config))			$new_config[] = '\'o_default_email_setting\', \'1\'';		// Make sure we have o_additional_navlinks (was added in 1.2.1)		if (!array_key_exists('o_additional_navlinks', $forum_config))			$new_config[] = '\'o_additional_navlinks\', \'\'';		// Insert new config options o_sef		if (!array_key_exists('o_sef', $forum_config))			$new_config[] = '\'o_sef\', \'Default\'';		// Insert new config option o_topic_views		if (!array_key_exists('o_topic_views', $forum_config))			$new_config[] = '\'o_topic_views\', \'1\'';		// Insert new config option o_signatures		if (!array_key_exists('o_signatures', $forum_config))			$new_config[] = '\'o_signatures\', \'1\'';		// Insert new config option o_smtp_ssl		if (!array_key_exists('o_smtp_ssl', $forum_config))			$new_config[] = '\'o_smtp_ssl\', \'0\'';		// Insert new config option o_check_for_updates		if (!array_key_exists('o_check_for_updates', $forum_config))		{			$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;			$new_config[] = '\'o_check_for_updates\', \''.$check_for_updates.'\'';		}		// Insert new config option o_check_for_version		if (!array_key_exists('o_check_for_versions', $forum_config))		{			$o_check_for_versions = array_key_exists('o_check_for_updates', $forum_config) ? $forum_config['o_check_for_updates'] : $check_for_updates;			$new_config[] = '\'o_check_for_versions\', \''.$o_check_for_versions.'\'';		}		// Insert new config option o_announcement_heading		if (!array_key_exists('o_announcement_heading', $forum_config))			$new_config[] = '\'o_announcement_heading\', \'\'';		// Insert new config option o_default_dst		if (!array_key_exists('o_default_dst', $forum_config))			$new_config[] = '\'o_default_dst\', \'0\'';		// Insert new config option o_show_moderators		if (!array_key_exists('o_show_moderators', $forum_config))			$new_config[] = '\'o_show_moderators\', \'0\'';		if (!empty($new_config))		{			$query = array(				'INSERT'	=> 'conf_name, conf_value',				'INTO'		=> 'config',				'VALUES'	=> $new_config			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		unset($new_config);		// Server timezone is now simply the default timezone		if (!array_key_exists('o_default_timezone', $forum_config))		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_name = \'o_default_timezone\'',				'WHERE'		=> 'conf_name = \'o_server_timezone\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Increase visit timeout to 30 minutes (only if it hasn't been changed from the default)		if ($forum_config['o_timeout_visit'] == '600')		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'1800\'',				'WHERE'		=> 'conf_name = \'o_timeout_visit\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove obsolete g_post_polls permission from groups table		$forum_db->drop_field('groups', 'g_post_polls');		// Make room for multiple moderator groups		if (!$forum_db->field_exists('groups', 'g_moderator'))		{			// Add g_moderator column to groups table			$forum_db->add_field('groups', 'g_moderator', 'TINYINT(1)', false, 0, 'g_user_title');			// Give the moderator group moderator privileges			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_moderator = 1',				'WHERE'		=> 'g_id = 2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Shuffle the group IDs around a bit			$query = array(				'SELECT'	=> 'MAX(g_id) + 1',				'FROM'		=> 'groups'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$temp_id = $forum_db->result($result);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id='.$temp_id,				'WHERE'		=> 'g_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=2',				'WHERE'		=> 'g_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=3',				'WHERE'		=> 'g_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=4',				'WHERE'		=> 'g_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Update the default usergroup if it uses the old ID for the members group			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'3\'',				'WHERE'		=> 'conf_name = \'o_default_user_group\' and conf_value = \'4\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_edit_users config setting with new per-group permission		if (array_key_exists('p_mod_edit_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_edit_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_edit_users', 'TINYINT(1)', false, 0, 'g_moderator');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_edit_users = '.$forum_config['p_mod_edit_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_rename_users config setting with new per-group permission		if (array_key_exists('p_mod_rename_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_rename_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_rename_users', 'TINYINT(1)', false, 0, 'g_mod_edit_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_rename_users = '.$forum_config['p_mod_rename_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_change_passwords config setting with new per-group permission		if (array_key_exists('p_mod_change_passwords', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_change_passwords\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_change_passwords', 'TINYINT(1)', false, 0, 'g_mod_rename_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_change_passwords = '.$forum_config['p_mod_change_passwords'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_ban_users config setting with new per-group permission		if (array_key_exists('p_mod_ban_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_ban_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_ban_users', 'TINYINT(1)', false, 0, 'g_mod_change_passwords');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_ban_users = '.$forum_config['p_mod_ban_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// We need to add a unique index to avoid users having multiple rows in the online table		if (!$forum_db->index_exists('online', 'user_id_ident_idx'))		{			$query = array(				'DELETE'	=> 'online'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			switch ($db_type)			{				case 'mysql':				case 'mysql_innodb':				case 'mysqli':				case 'mysqli_innodb':					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident(25)'), true);					break;				default:					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident'), true);					break;			}		}		// Remove the redundant user_id_idx on the online table		$forum_db->drop_index('online', 'user_id_idx');		// Add an index to ident on the online table		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$forum_db->add_index('online', 'ident_idx', array('ident(25)'));				break;			default:				$forum_db->add_index('online', 'ident_idx', array('ident'));				break;		}		// Add an index to logged on the online table		$forum_db->add_index('online', 'logged_idx', array('logged'));		// Add an index on last_post in the topics table		$forum_db->add_index('topics', 'last_post_idx', array('last_post'));		// Remove any remnants of the now defunct post approval system		$forum_db->drop_field('forums', 'approval');		$forum_db->drop_field('groups', 'g_posts_approved');		$forum_db->drop_field('posts', 'approved');		// Add g_view_users field to groups table		$forum_db->add_field('groups', 'g_view_users', 'TINYINT(1)', false, 1, 'g_read_board');		// Add the time/date format settings to the user table		$forum_db->add_field('users', 'time_format', 'INT(10)', false, 0, 'dst');		$forum_db->add_field('users', 'date_format', 'INT(10)', false, 0, 'dst');		// Add the last_search column to the users table		$forum_db->add_field('users', 'last_search', 'INT(10)', true, null, 'last_post');		// Add the last_email_sent column to the users table and the g_send_email and		// g_email_flood columns to the groups table		$forum_db->add_field('users', 'last_email_sent', 'INT(10)', true, null, 'last_search');		$forum_db->add_field('groups', 'g_send_email', 'TINYINT(1)', false, 1, 'g_search_users');		$forum_db->add_field('groups', 'g_email_flood', 'INT(10)', false, 60, 'g_search_flood');		// Set non-default g_send_email and g_flood_email values properly		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_send_email = 0',			'WHERE'		=> 'g_id = 2'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_email_flood = 0',			'WHERE'		=> 'g_id IN (1,2,4)'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the auto notify/subscription option to the users table		$forum_db->add_field('users', 'auto_notify', 'TINYINT(1)', false, 0, 'notify_with_post');		// Add the first_post_id column to the topics table		if (!$forum_db->field_exists('topics', 'first_post_id'))		{			$forum_db->add_field('topics', 'first_post_id', 'INT(10) UNSIGNED', false, 0, 'posted');			$forum_db->add_index('topics', 'first_post_id_idx', array('first_post_id'));			// Now that we've added the column and indexed it, we need to give it correct data			$query = array(				'SELECT'	=> 'MIN(id) AS first_post, topic_id',				'FROM'		=> 'posts',				'GROUP BY'	=> 'topic_id'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_post = $forum_db->fetch_assoc($result))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'first_post_id = '.$cur_post['first_post'],					'WHERE'		=> 'id = '.$cur_post['topic_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Add the index for the post time		if (!$forum_db->index_exists('posts', 'posted_idx'))			$forum_db->add_index('posts', 'posted_idx', array('posted'));		// Move any users with the old unverified status to their new group		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id=0',			'WHERE'		=> 'group_id=32000'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the ban_creator column to the bans table		$forum_db->add_field('bans', 'ban_creator', 'INT(10) UNSIGNED', false, 0);		// Remove any hotfix extensions this update supersedes		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'extensions',			'WHERE'		=> 'id LIKE \'hotfix_%\' AND version != \''.UPDATE_TO.'\''		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_ext = $forum_db->fetch_assoc($result))		{			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'DELETE'	=> 'extensions',				'WHERE'		=> 'id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Should we do charset conversion or not?		if (strpos($cur_version, '1.3') === 0)			$query_str = '?stage=finish';		elseif (strpos($cur_version, '1.2') === 0 && isset($_GET['convert_charset']))			$query_str = '?stage=conv_misc&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_tables';		break;	// Convert config, categories, forums, groups, ranks and censor words	case 'conv_misc':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Convert config		echo 'Converting configuration'."<br />\n";		foreach ($forum_config as $conf_name => $conf_value)		{			if (convert_to_utf8($conf_value, $old_charset))			{				$query = array(					'UPDATE'	=> 'config',					'SET'		=> 'conf_value = \''.$forum_db->escape($conf_value).'\'',					'WHERE'		=> 'conf_name = \''.$conf_name.'\''				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert categories		echo 'Converting categories'."<br />\n";		$query = array(			'SELECT'	=> 'id, cat_name',			'FROM'		=> 'categories',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['cat_name'], $old_charset))			{				$query = array(					'UPDATE'	=> 'categories',					'SET'		=> 'cat_name = \''.$forum_db->escape($cur_item['cat_name']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert forums		echo 'Converting forums'."<br />\n";		$query = array(			'SELECT'	=> 'id, forum_name, forum_desc, moderators',			'FROM'		=> 'forums',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			$moderators = ($cur_item['moderators'] != '') ? unserialize($cur_item['moderators']) : array();			$moderators_utf8 = array();			foreach ($moderators as $mod_username => $mod_user_id)			{				convert_to_utf8($mod_username, $old_charset);				$moderators_utf8[$mod_username] = $mod_user_id;			}			if (convert_to_utf8($cur_item['forum_name'], $old_charset) | convert_to_utf8($cur_item['forum_desc'], $old_charset) || $moderators !== $moderators_utf8)			{				$cur_item['forum_desc'] = $cur_item['forum_desc'] != '' ? '\''.$forum_db->escape($cur_item['forum_desc']).'\'' : 'NULL';				$cur_item['moderators'] = !empty($moderators_utf8) ? '\''.$forum_db->escape(serialize($moderators_utf8)).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'forum_name = \''.$forum_db->escape($cur_item['forum_name']).'\', forum_desc = '.$cur_item['forum_desc'].', moderators = '.$cur_item['moderators'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert groups		echo 'Converting groups'."<br />\n";		$query = array(			'SELECT'	=> 'g_id, g_title, g_user_title',			'FROM'		=> 'groups',			'ORDER BY'	=> 'g_id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['g_title'], $old_charset) | convert_to_utf8($cur_item['g_user_title'], $old_charset))			{				$cur_item['g_user_title'] = $cur_item['g_user_title'] != '' ? '\''.$forum_db->escape($cur_item['g_user_title']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'groups',					'SET'		=> 'g_title = \''.$forum_db->escape($cur_item['g_title']).'\', g_user_title = '.$cur_item['g_user_title'].'',					'WHERE'		=> 'g_id = '.$cur_item['g_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert ranks		echo 'Converting ranks'."<br />\n";		$query = array(			'SELECT'	=> 'id, rank',			'FROM'		=> 'ranks',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['rank'], $old_charset))			{				$query = array(					'UPDATE'	=> 'ranks',					'SET'		=> 'rank = \''.$forum_db->escape($cur_item['rank']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert censor words		echo 'Converting censor words'."<br />\n";		$query = array(			'SELECT'	=> 'id, search_for, replace_with',			'FROM'		=> 'censoring',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['search_for'], $old_charset) | convert_to_utf8($cur_item['replace_with'], $old_charset))			{				$query = array(					'UPDATE'	=> 'censoring',					'SET'		=> 'search_for = \''.$forum_db->escape($cur_item['search_for']).'\', replace_with = \''.$forum_db->escape($cur_item['replace_with']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		break;	// Convert reports	case 'conv_reports':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first report ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'reports',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch reports to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting report '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['message'], $old_charset))			{				$query = array(					'UPDATE'	=> 'reports',					'SET'		=> 'message = \''.$forum_db->escape($cur_item['message']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert search words	case 'conv_search_words':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first search word ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'search_words',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch words to process this cycle		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting search word '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['word'], $old_charset))			{				$query = array(					'UPDATE'	=> 'search_words',					'SET'		=> 'word = \''.$forum_db->escape($cur_item['word']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert users	case 'conv_users':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)			$start_at = 2;		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, username, title, realname, location, signature, admin_note',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting user '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['username'], $old_charset) | convert_to_utf8($cur_item['title'], $old_charset) | convert_to_utf8($cur_item['realname'], $old_charset) | convert_to_utf8($cur_item['location'], $old_charset) | convert_to_utf8($cur_item['signature'], $old_charset) | convert_to_utf8($cur_item['admin_note'], $old_charset))			{				$cur_item['title'] = $cur_item['title'] != '' ? '\''.$forum_db->escape($cur_item['title']).'\'' : 'NULL';				$cur_item['realname'] = $cur_item['realname'] != '' ? '\''.$forum_db->escape($cur_item['realname']).'\'' : 'NULL';				$cur_item['location'] = $cur_item['location'] != '' ? '\''.$forum_db->escape($cur_item['location']).'\'' : 'NULL';				$cur_item['signature'] = $cur_item['signature'] != '' ? '\''.$forum_db->escape($cur_item['signature']).'\'' : 'NULL';				$cur_item['admin_note'] = $cur_item['admin_note'] != '' ? '\''.$forum_db->escape($cur_item['admin_note']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'username = \''.$forum_db->escape($cur_item['username']).'\', title = '.$cur_item['title'].', realname = '.$cur_item['realname'].', location = '.$cur_item['location'].', signature = '.$cur_item['signature'].', admin_note = '.$cur_item['admin_note'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert topics	case 'conv_topics':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first topic ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'topics',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch topics to process this cycle		$query = array(			'SELECT'	=> 'id, poster, subject, last_poster',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting topic '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['subject'], $old_charset) | convert_to_utf8($cur_item['last_poster'], $old_charset))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', subject = \''.$forum_db->escape($cur_item['subject']).'\', last_poster = \''.$forum_db->escape($cur_item['last_poster']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert posts	case 'conv_posts':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, poster, message, edited_by',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting post '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['message'], $old_charset) | convert_to_utf8($cur_item['edited_by'], $old_charset))			{				$cur_item['edited_by'] = $cur_item['edited_by'] != '' ? '\''.$forum_db->escape($cur_item['edited_by']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'posts',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', message = \''.$forum_db->escape($cur_item['message']).'\', edited_by = '.$cur_item['edited_by'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_tables';		else			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert table columns to utf8 (MySQL only)	case 'conv_tables':		// Do the cumbersome charset conversion of MySQL tables/columns		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			echo 'Converting table '.$forum_db->prefix.'bans<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'bans');			echo 'Converting table '.$forum_db->prefix.'categories<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'categories');			echo 'Converting table '.$forum_db->prefix.'censoring<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'censoring');			echo 'Converting table '.$forum_db->prefix.'config<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'config');			echo 'Converting table '.$forum_db->prefix.'extension_hooks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extension_hooks');			echo 'Converting table '.$forum_db->prefix.'extensions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extensions');			echo 'Converting table '.$forum_db->prefix.'forum_perms<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forum_perms');			echo 'Converting table '.$forum_db->prefix.'forums<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forums');			echo 'Converting table '.$forum_db->prefix.'groups<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'groups');			echo 'Converting table '.$forum_db->prefix.'online<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'online');			echo 'Converting table '.$forum_db->prefix.'posts<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'posts');			echo 'Converting table '.$forum_db->prefix.'ranks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'ranks');			echo 'Converting table '.$forum_db->prefix.'reports<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'reports');			echo 'Converting table '.$forum_db->prefix.'search_cache<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_cache');			echo 'Converting table '.$forum_db->prefix.'search_matches<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_matches');			echo 'Converting table '.$forum_db->prefix.'search_words<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_words');			echo 'Converting table '.$forum_db->prefix.'subscriptions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'subscriptions');			echo 'Converting table '.$forum_db->prefix.'topics<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'topics');			echo 'Converting table '.$forum_db->prefix.'users<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'users');		}		$query_str = '?stage=preparse_posts';		break;	case 'preparse_posts':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing post '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'message = \''.$forum_db->escape(preparse_bbcode($cur_item['message'], $preparse_errors)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=preparse_sigs';		else			$query_str = '?stage=preparse_posts&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	case 'preparse_sigs':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			$start_at = 1;		}		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, signature',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing signature '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'signature = \''.$forum_db->escape(preparse_bbcode($cur_item['signature'], $preparse_errors, true)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=finish';		else			$query_str = '?stage=preparse_sigs&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Show results page	case 'finish':		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// We update the version number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO.'\'',			'WHERE'		=> 'conf_name = \'o_cur_version\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// And the database revision number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO_DB_REVISION.'\'',			'WHERE'		=> 'conf_name = \'o_database_revision\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// This feels like a good time to synchronize the forums		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'forums'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			sync_forum($row[0]);		// We'll empty the search cache table as well (using DELETE FROM since SQLite does not support TRUNCATE TABLE)		$query = array(			'DELETE'	=> 'search_cache'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the online table too (we did not convert strings there)		$query = array(			'DELETE'	=> 'online'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Drop Base URL row from database config		if (array_key_exists('o_base_url', $forum_config))		{			// Generate new config file			$new_config = "<?php\n\n\$db_type = '$db_type';\n\$db_host = '$db_host';\n\$db_name = '".addslashes($db_name)."';\n\$db_username = '".addslashes($db_username)."';\n\$db_password = '".addslashes($db_password)."';\n\$db_prefix = '".addslashes($db_prefix)."';\n\$p_connect = ".($p_connect ? 'true' : 'false').";\n\n\$base_url = '$base_url';\n\n\$cookie_name = '$cookie_name';\n\$cookie_domain = '$cookie_domain';\n\$cookie_path = '$cookie_path';\n\$cookie_secure = $cookie_secure;\n\ndefine('FORUM', 1);";			// Attempt to write config.php and display it if writing fails			$written = false;			if (is_writable(FORUM_ROOT))			{				// We rename the old config.php file just in case				if (rename(FORUM_ROOT.'config.php', FORUM_ROOT.'config.old.'.time().'.php'))				{					$fh = @fopen(FORUM_ROOT.'config.php', 'wb');					if ($fh)					{						fwrite($fh, $new_config);						fclose($fh);						$written = true;					}				}			}			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'o_base_url\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update completed!</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<p>Your forum database was updated successfully.</p><?php if (isset($new_config) && !$written): ?>			<p>In order to complete the process, you must now update your config.php script. <strong>Copy and paste the text in the text box below into the file called config.php in the root directory of your PunBB installation</strong>. The file already exists, so you must edit/overwrite the contents of the old file. You may then <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> once config.php has been updated.</p><?php else: ?>			<p>You may <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> now.</p><?php endif; ?>		</div><?php if (isset($new_config) && !$written): ?>		<form class="frm-form" action="foo">			<fieldset class="frm-group group1">				<legend class="group-legend"><span>New config.php contents</span></legend>				<div class="txt-set set1">					<div class="txt-box textarea">						<label for="fld1"><span>Copy contents:</span></label>						<div class="txt-input"><span class="frm-input"><textarea id="fld1" readonly="readonly" cols="80" rows="20"><?php echo forum_htmlencode($new_config) ?></textarea></span></div>					</div>				</div>			</fieldset>		</form><?php endif; ?>	</div></div></div></div></body></html><?php		break;}$forum_db->end_transaction();$forum_db->close();if ($query_str != '')	exit('<script type="text/javascript">window.location="db_update.php'.$query_str.'"</script><br />JavaScript seems to be disabled. <a href="db_update.php'.$query_str.'">Click here to continue</a>.');
