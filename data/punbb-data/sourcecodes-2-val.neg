<?php// Language definitions used in various scripts$lang_misc = array('Mark read redirect'		=>	'All topics and forums have been marked as read.','Mark forum read redirect'	=>	'All topics in the specified forum have been marked as read.',// Send e-mail'Form e-mail disabled'		=>	'The user you are trying to send an email to has disabled form email.','Form e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be sent:','No e-mail subject'			=>	'You must enter a subject.','No e-mail message'			=>	'You must enter a message.','Too long e-mail message'	=>	'Your message length is %s bytes. This exceeds the %s bytes limit.','Email flood'				=>	'At least %s seconds have to pass between sent emails. Please wait a while and try sending again.','E-mail sent redirect'		=>	'Email sent.','E-mail subject'			=>	'Subject','E-mail message'			=>	'Message','E-mail disclosure note'	=>	'<strong>Important!</strong> When you send an email using this form your email address will be disclosed to the recipient.','Write e-mail'				=>	'Compose email','Send forum e-mail'			=>	'Send email to %s via the forum',// Report'No reason'					=>	'You must enter a reason.','Report flood'				=>	'At least %s seconds have to pass between reports. Please wait a while and try sending again.','Report redirect'			=>	'Post reported.','Report post'				=>	'Report post','Reason'					=>	'Reason','Reason help'				=>	'Enter a short reason why you are reporting this post.','Too long reason'			=>	'Your report length is %s bytes. This exceeds the %s bytes limit.','Report errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before your report can be sent:',// Subscriptions'Already subscribed'		=>	'You are already subscribed to this topic.','Subscribe redirect'		=>	'Your subscription has been added.','Not subscribed'			=>	'You are not subscribed to this topic.','Unsubscribe redirect'		=>	'Your subscription has been removed.',// General forum and topic moderation'Moderate forum'			=>	'Moderate forum','Select'					=>	'Select',	// the header of a column of checkboxes'Move'						=>	'Move','Merge'						=>	'Merge','Open'						=>  'Open','Close'						=>  'Close','Select all'				=>	'Select all',// Hostname lookup'Hostname lookup'			=>	'The IP address is: %1$s<br />The host name is: %2$s<br /><br />%3$s','Show more users'			=>	'Show more users for this IP',// Moderate forum'Moderate forum head'		=>	'Moderate: %s','Topics'					=>	'Topics','Move topic'				=>	'Move topic','Move topics'				=>	'Move topics','Merge topics'				=>	'Merge topics','Delete topics'				=>	'Delete topics','Delete topic'				=>	'Delete topic','To new forum'				=>	'to a new forum','Move to'					=>	'Destination forum','Nowhere to move'			=>	'There are no forums into which you can move topics.','Leave redirect'			=>	'Leave a redirect topic in the forum from which the topic was moved.','Leave redirects'			=>	'Leave redirect topics in the forum from which topics were moved.','Leave merge redirects'		=>	'Leave redirect topics for those topics which were merged.','Move topic redirect'		=>	'Topic moved.','Move topics redirect'		=>	'Topics moved.','Merge topics redirect'		=>	'Topics merged.','Delete topic comply'		=>	'Are you sure you want to delete the selected topic?','Delete topics comply'		=>	'Are you sure you want to delete all the selected topics?','Delete topic redirect'		=>	'Topic deleted.','Delete topics redirect'	=>	'Topics deleted.','Open topic redirect'		=>	'Topic opened.','Open topics redirect'		=>	'Topics opened.','Close topic redirect'		=>	'Topic closed.','Close topics redirect'		=>	'Topics closed.','No topics selected'		=>	'You must select at least one topic.','Stick topic redirect'		=>	'Topic is now sticky.','Unstick topic redirect'	=>	'Topic no longer sticky.','Merge error'				=>	'You should select more than 1 topic to merge.',// Moderate topic'Posts'						=>	'Posts','Delete posts'				=>	'Delete selected posts','Split posts'				=>	'Split selected posts','Delete whole topic'		=>	'Delete whole topic','Moderate topic head'		=>	'Moderate topic: %s','New subject'				=>	'New topic subject:','Select post'				=>	'Select post', // Label for checkbox'Confirm post delete'		=>	'Confirm deletion of all selected posts','Confirm topic delete'		=>	'Confirm deletion of all selected topics','Confirm topic split'		=>	'Confirm splitting of all selected posts into a new topic','Confirm topic merge'		=>	'Confirm merging of all selected topics into one topic','Confirm post split'		=>	'Confirm splitting of all selected posts','Delete posts redirect'		=>	'Posts deleted.','Split posts redirect'		=>	'Posts split into a new topic.','No posts selected'			=>	'You must select at least one post.');
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
<?php/** * Loads various functions that are used for searching the forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_SEARCH_MIN_WORD'))	define('FORUM_SEARCH_MIN_WORD', 3);if (!defined('FORUM_SEARCH_MAX_WORD'))	define('FORUM_SEARCH_MAX_WORD', 20);//// Cache the results of a search and redirect the user to the results page//function create_search_cache($keywords, $author, $search_in = false, $forum = array(-1), $show_as = 'topics', $sort_by = null, $sort_dir = 'DESC'){	global $forum_db, $forum_user, $forum_config, $forum_url, $lang_search, $lang_common, $db_type;	$return = ($hook = get_hook('sf_fn_create_search_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	if (utf8_strlen(str_replace(array('*', '%'), '', $author)) < 2)		$author = '';	if (utf8_strlen(str_replace(array('*', '%'), '', $keywords)) < FORUM_SEARCH_MIN_WORD)		$keywords = '';	if (!$keywords && !$author)		message($lang_search['No terms']);	$keywords = utf8_strtolower($keywords);	$author = utf8_strtolower($author);	// Flood protection	if ($forum_user['last_search'] && (time() - $forum_user['last_search']) < $forum_user['g_search_flood'] && (time() - $forum_user['last_search']) >= 0)		message(sprintf($lang_search['Search flood'], $forum_user['g_search_flood']));	if ($forum_user['is_guest'])	{		$query = array(			'UPDATE'	=> 'online',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);	}	else	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'id='.$forum_user['id'],		);	}	($hook = get_hook('sf_fn_create_search_cache_qr_update_last_search_time')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// We need to grab results, insert them into the cache and reload with a search id before showing them	$keyword_results = $author_results = array();	// If it's a search for keywords	if ($keywords)	{		// Remove any apostrophes which aren't part of words		$keywords = substr(preg_replace('((?<=\W)\'|\'(?=\W))', '', ' '.$keywords.' '), 1, -1);		// Remove symbols and multiple whitespace		$keywords = preg_replace('/[\^\$&\(\)<>`"\|,@_\?%~\+\[\]{}:=\/#\\\\;!\.\s]+/', ' ', $keywords);		// Fill an array with all the words		$keywords_array = array_unique(explode(' ', $keywords));		// Remove any words that are not indexed		$keywords_array = array_filter($keywords_array, 'validate_search_word');  		if (empty($keywords_array))			no_search_results();		$word_count = 0;		$match_type = 'and';		$result_list = array();		foreach ($keywords_array as $cur_word)		{			switch ($cur_word)			{				case 'and':				case 'or':				case 'not':					$match_type = $cur_word;					break;				default:				{					$query = array(						'SELECT'	=> 'm.post_id',						'FROM'		=> 'search_words AS w',						'JOINS'		=> array(							array(								'INNER JOIN'	=> 'search_matches AS m',								'ON'			=> 'm.word_id=w.id'							)						),						'WHERE'		=> 'w.word LIKE \''.$forum_db->escape(str_replace('*', '%', $cur_word)).'\''					);					// Search in what?					if ($search_in)						$query['WHERE'] .= ($search_in > 0 ? ' AND m.subject_match=0' : ' AND m.subject_match=1');					($hook = get_hook('sf_fn_create_search_cache_qr_get_keyword_hits')) ? eval($hook) : null;					$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);					$row = array();					while (list($post_id) = $forum_db->fetch_row($result))					{						$row[$post_id] = 1;						if (!$word_count)							$result_list[$post_id] = 1;						else if ($match_type == 'or')							$result_list[$post_id] = 1;						else if ($match_type == 'not')							$result_list[$post_id] = 0;					}					if ($match_type == 'and' && $word_count)					{						foreach (array_keys($result_list) as $post_id)						{							if (!isset($row[$post_id]))								$result_list[$post_id] = 0;						}					}					++$word_count;					$forum_db->free_result($result);					break;				}			}		}		foreach ($result_list as $post_id => $matches)		{			if ($matches)				$keyword_results[] = $post_id;		}		unset($result_list);	}	// If it's a search for author name (and that author name isn't Guest)	if ($author && $author != 'guest' && $author != utf8_strtolower($lang_common['Guest']))	{		$query = array(			'SELECT'	=> 'u.id',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.username '.($db_type == 'pgsql' ? 'ILIKE' : 'LIKE').' \''.$forum_db->escape(str_replace('*', '%', $author)).'\''		);		($hook = get_hook('sf_fn_create_search_cache_qr_get_author')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$user_ids = array();		while ($row = $forum_db->fetch_row($result))		{			$user_ids[] = $row[0];		}		if (!empty($user_ids))		{			$query = array(				'SELECT'	=> 'p.id',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.poster_id IN('.implode(',', $user_ids).')'			);			($hook = get_hook('sf_fn_create_search_cache_qr_get_author_hits')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$search_ids = array();			while ($row = $forum_db->fetch_row($result))				$author_results[] = $row[0];			$forum_db->free_result($result);		}	}	if ($author && $keywords)	{		// If we searched for both keywords and author name we want the intersection between the results		$search_ids = array_intersect($keyword_results, $author_results);		unset($keyword_results, $author_results);	}	else if ($keywords)		$search_ids = $keyword_results;	else		$search_ids = $author_results;	if (count($search_ids) == 0)		no_search_results();	// Setup the default show_as topics search	$query = array(		'SELECT'	=> 't.id',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'topics AS t',				'ON'			=> 't.id=p.topic_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id IN('.implode(',', $search_ids).')',		'GROUP BY'	=> 't.id'	);	// Search a specific forum?	if (!in_array(-1, $forum) || ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod']))		$query['WHERE'] .= ' AND t.forum_id IN('.implode(',', $forum).')';	// Adjust the query if show_as posts	if ($show_as == 'posts')	{		$query['SELECT'] = 'p.id';		unset($query['GROUP BY']);	}	($hook = get_hook('sf_fn_create_search_cache_qr_get_hits')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_ids = array();	while ($row = $forum_db->fetch_row($result))		$search_ids[] = $row[0];	// Prune "old" search results	$query = array(		'SELECT'	=> 'o.ident',		'FROM'		=> 'online AS o'	);	($hook = get_hook('sf_fn_create_search_cache_qr_get_online_idents')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$online_idents = array();	while ($row = $forum_db->fetch_row($result))	{		$online_idents[] = '\''.$forum_db->escape($row[0]).'\'';	}	if (!empty($online_idents))	{		$query = array(			'DELETE'	=> 'search_cache',			'WHERE'		=> 'ident NOT IN('.implode(',', $online_idents).')'		);		($hook = get_hook('sf_fn_create_search_cache_qr_delete_old_cached_searches')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Final search results	$search_results = implode(',', $search_ids);	// Fill an array with our results and search properties	$search_data = serialize(compact('search_results', 'sort_by', 'sort_dir', 'show_as'));	$search_id = mt_rand(1, 2147483647);	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'INSERT'	=> 'id, ident, search_data',		'INTO'		=> 'search_cache',		'VALUES'	=> $search_id.', \''.$forum_db->escape($ident).'\', \''.$forum_db->escape($search_data).'\''	);	($hook = get_hook('sf_fn_create_search_cache_qr_cache_search')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$return = ($hook = get_hook('sf_fn_create_search_cache_end')) ? eval($hook) : null;	if ($return != null)		return;	$forum_db->end_transaction();	$forum_db->close();	// Redirect the user to the cached result page	header('Location: '.str_replace('&amp;', '&', forum_link($forum_url['search_results'], $search_id)));	exit;}//// Generate query to grab the results for a cached search//function generate_cached_search_query($search_id, &$show_as){	global $forum_db, $db_type, $forum_user, $forum_config;	$return = ($hook = get_hook('sf_fn_generate_cached_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'SELECT'	=> 'sc.search_data',		'FROM'		=> 'search_cache AS sc',		'WHERE'		=> 'sc.id='.$search_id.' AND sc.ident=\''.$forum_db->escape($ident).'\''	);	($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_search_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($row = $forum_db->fetch_assoc($result))	{		$search_data = unserialize($row['search_data']);		$search_results = $search_data['search_results'];		$sort_by = $search_data['sort_by'];		$sort_dir = $search_data['sort_dir'];		$show_as = $search_data['show_as'];		unset($search_data);	}	else		return false;	// If there are no posts, we don't need to execute the query	if (empty($search_results))		return false;	switch ($sort_by)	{		case 1:			$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';			break;		case 2:			$sort_by_sql = 't.subject';			break;		case 3:			$sort_by_sql = 't.forum_id';			break;		default:			$sort_by_sql = ($show_as == 'topics') ? 't.posted' : 'p.posted';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_cached_sort_by')) ? eval($hook) : null;			break;	}	if ($show_as == 'posts')	{		$query = array(			'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'			=> 't.id=p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 'p.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_posts')) ? eval($hook) : null;	}	else	{		$query = array(			'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 't.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		// With "has posted" indication		if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')		{			$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';			$query['JOINS'][]	= array(				'LEFT JOIN'		=> 'posts AS p',				'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'			);			// Must have same columns as in prev SELECT			$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_has_posted')) ? eval($hook) : null;		}		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_topics')) ? eval($hook) : null;	}	($hook = get_hook('sf_fn_generate_cached_search_query_end')) ? eval($hook) : null;	return $query;}//// Generate query to grab the results for an action search (i.e. quicksearch)//function generate_action_search_query($action, $value, &$search_id, &$url_type, &$show_as){	global $forum_db, $forum_user, $forum_config, $lang_common, $forum_url, $db_type;	$return = ($hook = get_hook('sf_fn_generate_action_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	switch ($action)	{		case 'show_new':			if ($forum_user['is_guest'])				message($lang_common['No permission']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.$forum_user['last_visit'].' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			if ($value != -1)				$query['WHERE'] .= ' AND f.id='.$value;			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_new_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new')) ? eval($hook) : null;			break;		case 'show_recent':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.(time() - $value).' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_recent_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent')) ? eval($hook) : null;			break;		case 'show_user_posts':			$query = array(				'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',				'FROM'		=> 'posts AS p',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'topics AS t',						'ON'			=> 't.id=p.topic_id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 'pposted DESC'			);			$url_type = $forum_url['search_user_posts'];			$search_id = $value;			$show_as = 'posts';			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_posts')) ? eval($hook) : null;			break;		case 'show_user_topics':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'posts AS p',						'ON'			=> 't.first_post_id=p.id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_user_topics'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics')) ? eval($hook) : null;			break;		case 'show_subscriptions':			if ($forum_user['is_guest'])				message($lang_common['Bad request']);			// Check we're allowed to see the subscriptions we're trying to look at			if ($forum_user['g_id'] != FORUM_ADMIN && $forum_user['id'] != $value)				message($lang_common['Bad request']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'subscriptions AS s',						'ON'			=> '(t.id=s.topic_id AND s.user_id='.$value.')'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1)',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_subscriptions'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions')) ? eval($hook) : null;			break;		case 'show_unanswered':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.num_replies=0 AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_unanswered'];			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered')) ? eval($hook) : null;			break;	}	($hook = get_hook('sf_fn_generate_action_search_query_end')) ? eval($hook) : null;	return $query;}//// Get search results for a specified query, returns number of results//function get_search_results($query, &$search_set){	global $forum_db, $forum_user, $forum_page, $lang_common;	$return = ($hook = get_hook('sf_fn_get_search_results_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_results = array();	while ($row = $forum_db->fetch_assoc($result))	{		$search_results[] = $row;	}	// Make sure we actually have some results	$num_hits = count($search_results);	if ($num_hits == 0)		return 0;	// Work out the settings for pagination	$forum_page['num_pages'] = ceil($num_hits / $forum_page['per_page']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];	// Determine the topic or post offset (based on $forum_page['page'])	$forum_page['start_from'] = $forum_page['per_page'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_page['per_page']), $num_hits);	// Fill $search_set with out search hits	$search_set = array();	$row_num = 0;	foreach ($search_results as $row)	{		if ($forum_page['start_from'] <= $row_num && $forum_page['finish_at'] > $row_num)			$search_set[] = $row;		++$row_num;	}	$forum_db->free_result($result);	$return = ($hook = get_hook('sf_fn_get_search_results_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $num_hits;}//// Output a message if there are no results//function no_search_results($action = 'search'){	global $forum_page, $lang_search, $forum_url;	$forum_page['search_again'] = '<a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a>';	$return = ($hook = get_hook('sf_fn_no_search_results_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			message($lang_search['No new posts'], $forum_page['search_again'], $lang_search['Topics with new']);			break;		case 'show_recent':			message($lang_search['No recent posts'], $forum_page['search_again'], $lang_search['Recently active topics']);			break;		case 'show_user_posts':			message($lang_search['No user posts'], $forum_page['search_again'], $lang_search['Posts by user']);			break;		case 'show_user_topics':			message($lang_search['No user topics'], $forum_page['search_again'], $lang_search['Topics by user']);			break;		case 'show_subscriptions':			message($lang_search['No subscriptions'], $forum_page['search_again'], $lang_search['Subscriptions']);			break;		case 'show_unanswered':			message($lang_search['No unanswered'], $forum_page['search_again'], $lang_search['Unanswered topics']);			break;		default:			message($lang_search['No hits'], $forum_page['search_again'], $lang_search['Search results']);			break;	}}//// Generate search breadcrumbs//function generate_search_crumbs($action = null){	global $forum_page, $lang_common, $lang_search, $forum_url, $forum_user, $num_hits, $search_set, $search_id, $show_as;	$return = ($hook = get_hook('sf_fn_generate_search_crumbs_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			$forum_page['crumbs'][] = $lang_search['Topics with new'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			$forum_page['main_foot_options']['mark_all'] = '<span'.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['mark_read'], generate_form_token('markread'.$forum_user['id'])).'">'.$lang_common['Mark all as read'].'</a></span>';			// Add link for show all topics, not only new (updated)			$forum_page['main_head_options']['show_all'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['forum'], $search_set[0]['forum_id']).'">'.$lang_search['All Topics'].'</a></span>';			break;		case 'show_recent':			$forum_page['crumbs'][] = $lang_search['Recently active topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_unanswered':			$forum_page['crumbs'][] = $lang_search['Unanswered topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_posts':			$forum_page['crumbs'][] = sprintf($lang_search['Posts by'], $search_set[0]['pposter'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['items_info'] = generate_items_info($lang_search['Posts found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_topics'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_topics'], $search_id).'">'.sprintf($lang_search['Topics by'], forum_htmlencode($search_set[0]['pposter'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_topics':			$forum_page['crumbs'][] = sprintf($lang_search['Topics by'], $search_set[0]['poster']);			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_posts'] =  '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_posts'], $search_id).'">'.sprintf($lang_search['Posts by'], forum_htmlencode($search_set[0]['poster'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_subscriptions':			$forum_page['crumbs'][] = $lang_search['Subscriptions'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		default:			$forum_page['crumbs'][] = $lang_search['Search results'];			$forum_page['items_info'] = generate_items_info((($show_as == 'topics') ? $lang_search['Topics found'] : $lang_search['Posts found']), ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['new_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a></span>';			break;	}}//// Checks to see if an action is valid//function validate_search_action($action){	// A list of valid actions (extensions can add their own actions to the array)	$valid_actions = array('search', 'show_new', 'show_recent', 'show_user_posts', 'show_user_topics', 'show_subscriptions', 'show_unanswered');	$return = ($hook = get_hook('sf_fn_validate_actions_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return in_array($action, $valid_actions);}
<?php/** * Group management page. * * Allows administrators to control group permissions. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('agr_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_groups.php';// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		($hook = get_hook('agr_add_group_form_submitted')) ? eval($hook) : null;		$base_group = intval($_POST['base_group']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$base_group		);		($hook = get_hook('agr_add_group_qr_get_base_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		$mode = 'add';	}	else	// We are editing a group	{		($hook = get_hook('agr_edit_group_form_submitted')) ? eval($hook) : null;		$group_id = intval($_GET['edit_group']);		if ($group_id < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$group_id		);		($hook = get_hook('agr_edit_group_qr_get_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		if (!$group)			message($lang_common['Bad request']);		$mode = 'edit';	}	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$mode == 'edit' ? $lang_admin_groups['Edit group heading'] : $lang_admin_groups['Add group heading']	);	($hook = get_hook('agr_add_edit_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_add_edit_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Group settings heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_admin_common['Required warn'], '<em>'.$lang_admin_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups'])) ?>" />				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; if ($mode == 'add'): ?>				<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group title head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Group title legend'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_group_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Group title label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo forum_htmlencode($group['g_title']); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_user_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['User title label'] ?></span> <small><?php echo $lang_admin_groups['User title help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="user_title" size="25" maxlength="50" value="<?php echo forum_htmlencode($group['g_user_title']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('agr_add_edit_group_basic_details_fieldset_end')) ? eval($hook) : null;	// The rest of the form is for non-admin groups only	if ($group['g_id'] != FORUM_ADMIN)	{		// Reset fieldset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group perms head'] ?></span></h3>			</div><?php if ($mode == 'edit' && $forum_config['o_default_user_group'] == $group['g_id']): ?>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_groups['Moderator default group'] ?></p>				</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_permissions_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_groups['Permissions'] ?></strong></legend><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): if ($mode != 'edit' || $forum_config['o_default_user_group'] != $group['g_id']): ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['Mod permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_moderate_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow moderate label'] ?> <?php echo $lang_admin_groups['Allow moderate help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_profiles_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit profiles label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_userbane_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit username label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_change_pass_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod change pass label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_ban_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod bans label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_mod_permissions_fieldset_end')) ? eval($hook) : null; endif; endif; ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['User permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_read_board_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow read board label'] ?> <?php echo $lang_admin_groups['Allow read board help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_view_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow view users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_replies_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post replies label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_edit_posts_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow edit posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_posts_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_set_user_title_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow set user title label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_allow_search_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow use search label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_search_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow search users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_send_email_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow send email label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_user_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_user_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		// Reset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group flood head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_flood_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Restrictions'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_post_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_search_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Search interval label'] ?></span> <small><?php echo $lang_admin_groups['Search interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" /></span>					</div>				</div><?php		($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null;		// The rest of the form is for non-guest groups only		if ($group['g_id'] != FORUM_GUEST)		{?>				<?php ($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Email flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Email flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" /></span>					</div>				</div><?php		}		($hook = get_hook('agr_add_edit_group_pre_flood_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php		($hook = get_hook('agr_add_edit_group_flood_fieldset_end')) ? eval($hook) : null;	}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_edit_group" value=" <?php echo $lang_admin_groups['Update group'] ?> " /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_add_edit_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == FORUM_ADMIN) ? true : false;	$title = forum_trim($_POST['req_title']);	$user_title = forum_trim($_POST['user_title']);	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = (isset($_POST['read_board']) && $_POST['read_board'] == '1') || $is_admin_group ? '1' : '0';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = (isset($_POST['post_replies']) && $_POST['post_replies'] == '1') || $is_admin_group ? '1' : '0';	$post_topics = (isset($_POST['post_topics']) && $_POST['post_topics'] == '1') || $is_admin_group ? '1' : '0';	$edit_posts = (isset($_POST['edit_posts']) && $_POST['edit_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_posts = (isset($_POST['delete_posts']) && $_POST['delete_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_topics = (isset($_POST['delete_topics']) && $_POST['delete_topics'] == '1') || $is_admin_group ? '1' : '0';	$set_title = (isset($_POST['set_title']) && $_POST['set_title'] == '1') || $is_admin_group ? '1' : '0';	$search = (isset($_POST['search']) && $_POST['search'] == '1') || $is_admin_group ? '1' : '0';	$search_users = (isset($_POST['search_users']) && $_POST['search_users'] == '1') || $is_admin_group ? '1' : '0';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = isset($_POST['post_flood']) ? intval($_POST['post_flood']) : '0';	$search_flood = isset($_POST['search_flood']) ? intval($_POST['search_flood']) : '0';	$email_flood = isset($_POST['email_flood']) ? intval($_POST['email_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter group message']);	$user_title = ($user_title != '') ? '\''.$forum_db->escape($user_title).'\'' : 'NULL';	($hook = get_hook('agr_add_edit_end_validation')) ? eval($hook) : null;	if ($_POST['mode'] == 'add')	{		($hook = get_hook('agr_add_add_group')) ? eval($hook) : null;		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\''		);		($hook = get_hook('agr_add_end_qr_check_add_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Insert the new group		$query = array(			'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',			'INTO'		=> 'groups',			'VALUES'	=> '\''.$forum_db->escape($title).'\', '.$user_title.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood		);		($hook = get_hook('agr_add_end_qr_add_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$new_group_id = $forum_db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$query = array(			'SELECT'	=> 'fp.forum_id, fp.read_forum, fp.post_replies, fp.post_topics',			'FROM'		=> 'forum_perms AS fp',			'WHERE'		=> 'group_id='.intval($_POST['base_group'])		);		($hook = get_hook('agr_add_end_qr_get_group_forum_perms')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_forum_perm = $forum_db->fetch_assoc($result))		{			$query = array(				'INSERT'	=> 'group_id, forum_id, read_forum, post_replies, post_topics',				'INTO'		=> 'forum_perms',				'VALUES'	=> $new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics']			);			($hook = get_hook('agr_add_end_qr_add_group_forum_perms')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	else	{		$group_id = intval($_POST['group_id']);		($hook = get_hook('agr_edit_end_edit_group')) ? eval($hook) : null;		// Make sure admins and guests don't get moderator privileges		if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)			$moderator = '0';		// Make sure the default group isn't assigned moderator privileges		if ($moderator == '1' && $forum_config['o_default_user_group'] == $group_id)			message($lang_admin_groups['Moderator default group']);		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\' AND g_id!='.$group_id		);		($hook = get_hook('agr_edit_end_qr_check_edit_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Save changes		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_title=\''.$forum_db->escape($title).'\', g_user_title='.$user_title.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood,			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_edit_end_qr_update_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If the group doesn't have moderator privileges (it might have had before), remove its users from the moderator list in all forums		if (!$moderator)			clean_forum_moderators();	}	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info((($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));	($hook = get_hook('agr_add_edit_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), (($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));}// Set default groupelse if (isset($_POST['set_default_group'])){	$group_id = intval($_POST['default_group']);	($hook = get_hook('agr_set_default_group_form_submitted')) ? eval($hook) : null;	// Make sure it's not the admin or guest groups	if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	$query = array(		'SELECT'	=> 'COUNT(g.g_id)',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$group_id.' AND g.g_moderator=0',		'LIMIT'		=> '1'	);	($hook = get_hook('agr_set_default_group_qr_get_group_moderation_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value='.$group_id,		'WHERE'		=> 'conf_name=\'o_default_user_group\''	);	($hook = get_hook('agr_set_default_group_qr_set_default_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_config_cache();	// Add flash message	$forum_flash->add_info($lang_admin_groups['Default group set']);	($hook = get_hook('agr_set_default_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Default group set']);}// Remove a groupelse if (isset($_GET['del_group'])){	$group_id = intval($_GET['del_group']);	if ($group_id <= FORUM_GUEST)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_group_cancel']))		redirect(forum_link($forum_url['admin_groups']), $lang_admin_common['Cancel redirect']);	// Make sure we don't remove the default group	if ($group_id == $forum_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default group']);	($hook = get_hook('agr_del_group_selected')) ? eval($hook) : null;	// Check if this group has any members	$query = array(		'SELECT'	=> 'g.g_title, COUNT(u.id)',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'g.g_id='.$group_id,		'GROUP BY'	=> 'g.g_id, g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_group_member_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$group_info = $forum_db->fetch_row($result);	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$group_info || isset($_POST['del_group']))	{		($hook = get_hook('agr_del_group_form_submitted')) ? eval($hook) : null;		if (isset($_POST['del_group']))	// Move users		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.intval($_POST['move_to_group']),				'WHERE'		=> 'group_id='.$group_id			);			($hook = get_hook('agr_del_group_qr_move_users')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Delete the group and any forum specific permissions		$query = array(			'DELETE'	=> 'groups',			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'group_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		clean_forum_moderators();		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_groups['Group removed']);		($hook = get_hook('agr_del_group_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Group removed']);	}	list($group_title, $num_members) = $group_info;	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$lang_admin_groups['Remove group']	);	($hook = get_hook('agr_del_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_del_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_groups['Remove group head'], forum_htmlencode($group_title), $num_members) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?del_group=<?php echo $group_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?del_group='.$group_id) ?>" />			</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group set<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Remove group legend'] ?></span></legend><?php ($hook = get_hook('agr_del_group_pre_move_to_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Move users to'] ?></span> <small><?php echo $lang_admin_groups['Remove group help'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_group"><?php	$query = array(		'SELECT'	=> 'g.g_id, g.g_title',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id!='.FORUM_GUEST.' AND g.g_id!='.$group_id,		'ORDER BY'	=> 'g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_groups')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_group = $forum_db->fetch_assoc($result))	{		if ($cur_group['g_id'] == $forum_config['o_default_user_group'])	// Pre-select the default Members group			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_del_group_del_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Remove group'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_group_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_del_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['item_count'] = $forum_page['fld_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])));($hook = get_hook('agr_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-groups');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('agr_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Add group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_add_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Add group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_add_base_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Base new group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="base_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST,	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_allowed_base_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result))	echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].($cur_group['g_id'] == $forum_config['o_default_user_group'] ? '" selected="selected">' : '">').forum_htmlencode($cur_group['g_title']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_add_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_add_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_group" value="<?php echo $lang_admin_groups['Add group'] ?> " /></span>			</div>		</form>	</div><?php	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Default group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_default_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Default group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_default_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Default group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="default_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST.' AND g_moderator=0',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result)){	if ($cur_group['g_id'] == $forum_config['o_default_user_group'])		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	else		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_default_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_default_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="set_default_group" value="<?php echo $lang_admin_groups['Set default'] ?>" /></span>			</div>		</form>	</div><?php	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Existing groups heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_groups['Existing groups intro'] ?></p>		</div>		<div class="ct-group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_group_list')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['item_num'] = 0;while ($cur_group = $forum_db->fetch_assoc($result)){	$forum_page['group_options'] = array(		'edit' => '<span class="first-item"><a href="'.forum_link($forum_url['admin_groups']).'?edit_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Edit group'].'</a></span>'	);	if ($cur_group['g_id'] > FORUM_GUEST)	{		if ($cur_group['g_id'] != $forum_config['o_default_user_group'])			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['admin_groups']).'?del_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Remove group'].'</a></span>';		else			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove default'].'</span>';	}	else		$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove group'].'</span>';	($hook = get_hook('agr_edit_group_row_pre_output')) ? eval($hook) : null;?>			<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($cur_group['g_title']) ?> <?php echo ($cur_group['g_id'] == $forum_config['o_default_user_group']) ? $lang_admin_groups['default'] : '' ?></span></h3>					<p class="options"><?php echo implode(' ', $forum_page['group_options']) ?></p>				</div>			</div><?php	($hook = get_hook('agr_edit_group_row_post_output')) ? eval($hook) : null;}?>		</div>	</div><?php($hook = get_hook('agr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads common data and performs various functions necessary for the site to work properly. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	exit('The constant FORUM_ROOT must be defined and point to a valid PunBB installation root directory.');if (!defined('FORUM_ESSENTIALS_LOADED'))	require FORUM_ROOT.'include/essentials.php';// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Strip slashes from GET/POST/COOKIE (if magic_quotes_gpc is enabled)if (get_magic_quotes_gpc()){	function stripslashes_array($array)	{		return is_array($array) ? array_map('stripslashes_array', $array) : stripslashes($array);	}	$_GET = stripslashes_array($_GET);	$_POST = stripslashes_array($_POST);	$_COOKIE = stripslashes_array($_COOKIE);}// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// Enable output bufferingif (!defined('FORUM_DISABLE_BUFFERING')){	// For some very odd reason, "Norton Internet Security" unsets this	$_SERVER['HTTP_ACCEPT_ENCODING'] = isset($_SERVER['HTTP_ACCEPT_ENCODING']) ? $_SERVER['HTTP_ACCEPT_ENCODING'] : '';	// Should we use gzip output compression?	if ($forum_config['o_gzip'] && extension_loaded('zlib') && (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') !== false))		ob_start('ob_gzhandler');	else		ob_start();}// Define standard date/time formats$forum_time_formats = array($forum_config['o_time_format'], 'H:i:s', 'H:i', 'g:i:s a', 'g:i a');$forum_date_formats = array($forum_config['o_date_format'], 'Y-m-d', 'Y-d-m', 'd-m-Y', 'm-d-Y', 'M j Y', 'jS M Y');// Create forum_page array$forum_page = array();// Login and fetch user info$forum_user = array();cookie_login($forum_user);// Attempt to load the common language fileif (file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php'))	include FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php';else	error('There is no valid language pack \''.forum_htmlencode($forum_user['language']).'\' installed. Please reinstall a language of that name.');// Setup the URL rewriting schemeif (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php'))	require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php';else	require FORUM_ROOT.'include/url/Default/forum_urls.php';// A good place to modify the URL scheme($hook = get_hook('co_modify_url_scheme')) ? eval($hook) : null;// Check if we are to display a maintenance messageif ($forum_config['o_maintenance'] && $forum_user['g_id'] > FORUM_ADMIN && !defined('FORUM_TURN_OFF_MAINT'))	maintenance_message();// Load cached updates infoif ($forum_user['g_id'] == FORUM_ADMIN){	if (file_exists(FORUM_CACHE_DIR.'cache_updates.php'))		include FORUM_CACHE_DIR.'cache_updates.php';	// Regenerate cache only if automatic updates are enabled and if the cache is more than 12 hours old	if ($forum_config['o_check_for_updates'] == '1' && (!defined('FORUM_UPDATES_LOADED') || $forum_updates['cached'] < (time() - 43200)))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_updates_cache();		require FORUM_CACHE_DIR.'cache_updates.php';	}}// Load cached bansif (file_exists(FORUM_CACHE_DIR.'cache_bans.php'))	include FORUM_CACHE_DIR.'cache_bans.php';if (!defined('FORUM_BANS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	require FORUM_CACHE_DIR.'cache_bans.php';}// Check if current user is bannedcheck_bans();// Update online listupdate_users_online();// Check to see if we logged in without a cookie being setif ($forum_user['is_guest'] && isset($_GET['login']))	message($lang_common['No cookie']);// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid (token in post.php is dealt with in post.php)if (!empty($_POST) && (isset($_POST['confirm_cancel']) || (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url()))) && !defined('FORUM_SKIP_CSRF_CONFIRM'))	csrf_confirm_form();($hook = get_hook('co_common')) ? eval($hook) : null;
<?php/** * Loads various functions used to parse posts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Load the IDNA class for international url handlingrequire FORUM_ROOT.'include/idna/idna_convert.class.php';// Here you can add additional smilies if you like (please note that you must escape singlequote and backslash)$smilies = array(':)' => 'smile.png', '=)' => 'smile.png', ':|' => 'neutral.png', '=|' => 'neutral.png', ':(' => 'sad.png', '=(' => 'sad.png', ':D' => 'big_smile.png', '=D' => 'big_smile.png', ':o' => 'yikes.png', ':O' => 'yikes.png', ';)' => 'wink.png', ':/' => 'hmm.png', ':P' => 'tongue.png', ':p' => 'tongue.png', ':lol:' => 'lol.png', ':mad:' => 'mad.png', ':rolleyes:' => 'roll.png', ':cool:' => 'cool.png');($hook = get_hook('ps_start')) ? eval($hook) : null;//// Make sure all BBCodes are lower case and do a little cleanup//function preparse_bbcode($text, &$errors, $is_signature = false){	global $forum_config;	$return = ($hook = get_hook('ps_preparse_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($is_signature)	{		global $lang_profile;		if (preg_match('#\[quote(=(&quot;|"|\'|)(.*)\\1)?\]|\[/quote\]|\[code\]|\[/code\]|\[list(=([1a\*]))?\]|\[/list\]#i', $text))			$errors[] = $lang_profile['Signature quote/code/list'];	}	if ($forum_config['p_sig_bbcode'] == '1' && $is_signature || $forum_config['p_message_bbcode'] == '1' && !$is_signature)	{		// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)		if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)		{			list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);			$text = implode("\xc1", $outside);		}		// Tidy up lists		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$text = preg_replace($pattern, $replace, $text);		$text = str_replace('*'."\0".']', '*]', $text);		if ($forum_config['o_make_links'] == '1')		{			// Check Unicode support			$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');			$text = do_clickable($text, $unicode);		}		// If we split up the message before we have to concatenate it together again (code tags)		if (isset($inside))		{			$outside = explode("\xc1", $text);			$text = '';			$num_tokens = count($outside);			for ($i = 0; $i < $num_tokens; ++$i)			{				$text .= $outside[$i];				if (isset($inside[$i]))					$text .= '[code]'.$inside[$i].'[/code]';			}		}		$temp_text = false;		if (empty($errors))			$temp_text = preparse_tags($text, $errors, $is_signature);		if ($temp_text !== false)			$text = $temp_text;		// Remove empty tags		while ($new_text = preg_replace('/\[(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]\[\/\1\]/', '', $text))		{			if ($new_text != $text)				$text = $new_text;			else				break;		}	}	$return = ($hook = get_hook('ps_preparse_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return forum_trim($text);}//// Check the structure of bbcode tags and fix simple mistakes where possible//function preparse_tags($text, &$errors, $is_signature = false){	global $lang_common, $forum_config;	// Start off by making some arrays of bbcode tags and what we need to do with each one	// List of all the tags	$tags = array('quote', 'code', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'img', 'list', '*', 'h');	// List of tags that we need to check are open (You could not put b,i,u in here then illegal nesting like [b][i][/b][/i] would be allowed)	$tags_opened = $tags;	// and tags we need to check are closed (the same as above, added it just in case)	$tags_closed = $tags;	// Tags we can nest and the depth they can be nested to (only quotes )	$tags_nested = array('quote' => $forum_config['o_quote_depth'], 'list' => 5, '*' => 5);	// Tags to ignore the contents of completely (just code)	$tags_ignore = array('code');	// Block tags, block tags can only go within another block tag, they cannot be in a normal tag	$tags_block = array('quote', 'code', 'list', 'h', '*');	// Inline tags, we do not allow new lines in these	$tags_inline = array('b', 'i', 'u', 'color', 'colour', 'h');	// Tags we trim interior space	$tags_trim = array('img');	// Tags we remove quotes from the argument	$tags_quotes = array('url', 'email', 'img');	// Tags we limit bbcode in	$tags_limit_bbcode = array(		'*' 	=> array('b', 'i', 'u', 'color', 'colour', 'url', 'email', 'list', 'img'),		'list' 	=> array('*'),		'url' 	=> array('b', 'i', 'u', 'color', 'colour', 'img'),		'email' => array('b', 'i', 'u', 'color', 'colour', 'img'),		'img' 	=> array()	);	// Tags we can automatically fix bad nesting	$tags_fix = array('quote', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'h');	$return = ($hook = get_hook('ps_preparse_tags_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$split_text = preg_split("/(\[[\*a-zA-Z0-9-\/]*?(?:=.*?)?\])/", $text, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);	$open_tags = array('post');	$open_args = array('');	$opened_tag = 0;	$new_text = '';	$current_ignore = '';	$current_nest = '';	$current_depth = array();	$limit_bbcode = $tags;	foreach ($split_text as $current)	{		if ($current == '')			continue;		// Are we dealing with a tag?		if (substr($current, 0, 1) != '[' || substr($current, -1, 1) != ']')		{			// Its not a bbcode tag so we put it on the end and continue			// If we are nested too deeply don't add to the end			if ($current_nest)				continue;			$current = str_replace("\r\n", "\n", $current);			$current = str_replace("\r", "\n", $current);			if (in_array($open_tags[$opened_tag], $tags_inline) && strpos($current, "\n") !== false)			{				// Deal with new lines				$split_current = preg_split("/(\n\n+)/", $current, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);				$current = '';				if (!forum_trim($split_current[0], "\n")) // the first part is a linebreak so we need to handle any open tags first					array_unshift($split_current, '');				for ($i = 1; $i < count($split_current); $i += 2)				{					$temp_opened = array();					$temp_opened_arg = array();					$temp = $split_current[$i - 1];					while (!empty($open_tags))					{						$temp_tag = array_pop($open_tags);						$temp_arg = array_pop($open_args);						if (in_array($temp_tag , $tags_inline))						{							array_push($temp_opened, $temp_tag);							array_push($temp_opened_arg, $temp_arg);							$temp .= '[/'.$temp_tag.']';						}						else						{							array_push($open_tags, $temp_tag);							array_push($open_args, $temp_arg);							break;						}					}					$current .= $temp.$split_current[$i];					$temp = '';					while (!empty($temp_opened))					{						$temp_tag = array_pop($temp_opened);						$temp_arg = array_pop($temp_opened_arg);						if (empty($temp_arg))							$temp .= '['.$temp_tag.']';						else							$temp .= '['.$temp_tag.'='.$temp_arg.']';						array_push($open_tags, $temp_tag);						array_push($open_args, $temp_arg);					}					$current .= $temp;				}				if (array_key_exists($i - 1, $split_current))					$current .= $split_current[$i - 1];			}			if (in_array($open_tags[$opened_tag], $tags_trim))				$new_text .= forum_trim($current);			else				$new_text .= $current;			continue;		}		// Get the name of the tag		$current_arg = '';		if (strpos($current, '/') === 1)		{			$current_tag = substr($current, 2, -1);		}		else if (strpos($current, '=') === false)		{			$current_tag = substr($current, 1, -1);		}		else		{			$current_tag = substr($current, 1, strpos($current, '=')-1);			$current_arg = substr($current, strpos($current, '=')+1, -1);		}		$current_tag = strtolower($current_tag);		// Is the tag defined?		if (!in_array($current_tag, $tags))		{			// Its not a bbcode tag so we put it on the end and continue			if (!$current_nest)				$new_text .= $current;			continue;		}		// We definitely have a bbcode tag.		// Make the tag string lower case		if ($equalpos = strpos($current,'='))		{			// We have an argument for the tag which we don't want to make lowercase			if (strlen(substr($current, $equalpos)) == 2)			{				// Empty tag argument				$errors[] = sprintf($lang_common['BBCode error 6'], $current_tag);				return false;			}			$current = strtolower(substr($current, 0, $equalpos)).substr($current, $equalpos);		}		else			$current = strtolower($current);		//This is if we are currently in a tag which escapes other bbcode such as code		if ($current_ignore)		{			if ('[/'.$current_ignore.']' == $current)			{				// We've finished the ignored section				$current = '[/'.$current_tag.']';				$current_ignore = '';			}			$new_text .= $current;			continue;		}		if ($current_nest)		{			// We are currently too deeply nested so lets see if we are closing the tag or not.			if ($current_tag != $current_nest)				continue;			if (substr($current, 1, 1) == '/')				$current_depth[$current_nest]--;			else				$current_depth[$current_nest]++;			if ($current_depth[$current_nest] <= $tags_nested[$current_nest])				$current_nest = '';			continue;		}		// Check the current tag is allowed here		if (!in_array($current_tag, $limit_bbcode) && $current_tag != $open_tags[$opened_tag])		{			$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);			return false;		}		if (substr($current, 1, 1) == '/')		{			//This is if we are closing a tag			if ($opened_tag == 0 || !in_array($current_tag, $open_tags))			{				//We tried to close a tag which is not open				if (in_array($current_tag, $tags_opened))				{					$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);					return false;				}			}			else			{				// Check nesting				while (true)				{					// Nesting is ok					if ($open_tags[$opened_tag] == $current_tag)					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;						break;					}					// Nesting isn't ok, try to fix it					if (in_array($open_tags[$opened_tag], $tags_closed) && in_array($current_tag, $tags_closed))					{						if (in_array($current_tag, $open_tags))						{							$temp_opened = array();							$temp_opened_arg = array();							$temp = '';							while (!empty($open_tags))							{								$temp_tag = array_pop($open_tags);								$temp_arg = array_pop($open_args);								if (!in_array($temp_tag, $tags_fix))								{									// We couldn't fix nesting									$errors[] = sprintf($lang_common['BBCode error 5'], array_pop($temp_opened));									return false;								}								array_push($temp_opened, $temp_tag);								array_push($temp_opened_arg, $temp_arg);								if ($temp_tag == $current_tag)									break;								else									$temp .= '[/'.$temp_tag.']';							}							$current = $temp.$current;							$temp = '';							array_pop($temp_opened);							array_pop($temp_opened_arg);							while (!empty($temp_opened))							{								$temp_tag = array_pop($temp_opened);								$temp_arg = array_pop($temp_opened_arg);								if (empty($temp_arg))									$temp .= '['.$temp_tag.']';								else									$temp .= '['.$temp_tag.'='.$temp_arg.']';								array_push($open_tags, $temp_tag);								array_push($open_args, $temp_arg);							}							$current .= $temp;							$opened_tag--;							break;						}						else						{							// We couldn't fix nesting							$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);							return false;						}					}					else if (in_array($open_tags[$opened_tag], $tags_closed))						break;					else					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;					}				}			}			if (in_array($current_tag, array_keys($tags_nested)))			{				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]--;			}			if (in_array($open_tags[$opened_tag], array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$open_tags[$opened_tag]];			else				$limit_bbcode = $tags;			$new_text .= $current;			continue;		}		else		{			// We are opening a tag			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			else				$limit_bbcode = $tags;			if (in_array($current_tag, $tags_block) && !in_array($open_tags[$opened_tag], $tags_block) && $opened_tag != 0)			{				// We tried to open a block tag within a non-block tag				$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);				return false;			}			if (in_array($current_tag, $tags_ignore))			{				// Its an ignore tag so we don't need to worry about whats inside it,				$current_ignore = $current_tag;				$new_text .= $current;				continue;			}			// Deal with nested tags			if (in_array($current_tag, $open_tags) && !in_array($current_tag, array_keys($tags_nested)))			{				// We nested a tag we shouldn't				$errors[] = sprintf($lang_common['BBCode error 4'], $current_tag);				return false;			}			else if (in_array($current_tag, array_keys($tags_nested)))			{				// We are allowed to nest this tag				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]++;				else					$current_depth[$current_tag] = 1;				// See if we are nested too deep				if ($current_depth[$current_tag] > $tags_nested[$current_tag])				{					$current_nest = $current_tag;					continue;				}			}			// Remove quotes from arguments for certain tags			if (strpos($current, '=') !== false && in_array($current_tag, $tags_quotes))			{				$current = preg_replace('#\['.$current_tag.'=("|\'|)(.*?)\\1\]\s*#i', '['.$current_tag.'=$2]', $current);			}			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			$open_tags[] = $current_tag;			$open_args[] = $current_arg;			$opened_tag++;			$new_text .= $current;			continue;		}	}	// Check we closed all the tags we needed to	foreach ($tags_closed as $check)	{		if (in_array($check, $open_tags))		{			// We left an important tag open			$errors[] = sprintf($lang_common['BBCode error 5'], $check);			return false;		}	}	if ($current_ignore)	{		// We left an ignore tag open		$errors[] = sprintf($lang_common['BBCode error 5'], $current_ignore);		return false;	}	$return = ($hook = get_hook('ps_preparse_tags_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $new_text;}//// Preparse the contents of [list] bbcode//function preparse_list_tag($content, $type = '*', &$errors){	global $lang_common;	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$content = preg_replace($pattern, $replace, $content);	}	$items = explode('[*]', str_replace('\"', '"', $content));	$content = '';	foreach ($items as $item)	{		if (forum_trim($item) != '')			$content .= '[*'."\0".']'.str_replace('[/*]', '', forum_trim($item)).'[/*'."\0".']'."\n";	}	return '[list='.$type.']'."\n".$content.'[/list]';}//// Split text into chunks ($inside contains all text inside $start and $end, and $outside contains all text outside)//function split_text($text, $start, $end, &$errors, $retab = true){	global $forum_config, $lang_common;	$tokens = explode($start, $text);	$outside[] = $tokens[0];	$num_tokens = count($tokens);	for ($i = 1; $i < $num_tokens; ++$i)	{		$temp = explode($end, $tokens[$i]);		if (count($temp) != 2)		{			$errors[] = $lang_common['BBCode code problem'];			return array(null, array($text));		}		$inside[] = $temp[0];		$outside[] = $temp[1];	}	if ($forum_config['o_indent_num_spaces'] != 8 && $retab)	{		$spaces = str_repeat(' ', $forum_config['o_indent_num_spaces']);		$inside = str_replace("\t", $spaces, $inside);	}	return array($inside, $outside);}//// Truncate URL if longer than 55 characters (add http:// or ftp:// if missing)//function handle_url_tag($url, $link = '', $bbcode = false){	$return = ($hook = get_hook('ps_handle_url_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$full_url = str_replace(array(' ', '\'', '`', '"'), array('%20', '', '', ''), $url);	if (strpos($url, 'www.') === 0)			// If it starts with www, we add http://		$full_url = 'http://'.$full_url;	else if (strpos($url, 'ftp.') === 0)	// Else if it starts with ftp, we add ftp://		$full_url = 'ftp://'.$full_url;	else if (!preg_match('#^([a-z0-9]{3,6})://#', $url)) 	// Else if it doesn't start with abcdef://, we add http://		$full_url = 'http://'.$full_url;	if (defined('FORUM_SUPPORT_PCRE_UNICODE'))	{		$idn = new idna_convert();		$idn->set_parameter('encoding', 'utf8');		$idn->set_parameter('strict', false);		$full_url = $idn->encode($full_url);	}	// Ok, not very pretty :-)	if (!$bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$link_name = ($link == '' || $link == $url) ? $url : $link;			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link_name))			{				$link = $idn->decode($link_name);			}		}		$link = ($link == '' || $link == $url) ? ((utf8_strlen($url) > 55) ? utf8_substr($url, 0 , 39).'  '.utf8_substr($url, -10) : $url) : stripslashes($link);	}	$return = ($hook = get_hook('ps_handle_url_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link))			{				$link = $idn->decode($link);			}		}		if ($full_url == $link)			return '[url]'.$link.'[/url]';		else			return '[url='.$full_url.']'.$link.'[/url]';	}	else		return '<a href="'.$full_url.'">'.$link.'</a>';}//// Turns an URL from the [img] tag into an <img> tag or a <a href...> tag//function handle_img_tag($url, $is_signature = false, $alt = null){	global $lang_common, $forum_user;	$return = ($hook = get_hook('ps_handle_img_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($alt == null)		$alt = $url;	$img_tag = '<a href="'.$url.'">&lt;'.$lang_common['Image link'].'&gt;</a>';	if ($is_signature && $forum_user['show_img_sig'] != '0')		$img_tag = '<img class="sigimage" src="'.$url.'" alt="'.forum_htmlencode($alt).'" />';	else if (!$is_signature && $forum_user['show_img'] != '0')		$img_tag = '<span class="postimg"><img src="'.$url.'" alt="'.forum_htmlencode($alt).'" /></span>';	$return = ($hook = get_hook('ps_handle_img_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $img_tag;}//// Parse the contents of [list] bbcode//function handle_list_tag($content, $type = '*'){	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('handle_list_tag(\'$2\', \'$1\')');		$content = preg_replace($pattern, $replace, $content);	}	$content = preg_replace('#\s*\[\*\](.*?)\[/\*\]\s*#s', '<li><p>$1</p></li>', forum_trim($content));	if ($type == '*')		$content = '<ul>'.$content.'</ul>';	else		if ($type == 'a')			$content = '<ol class="alpha">'.$content.'</ol>';		else			$content = '<ol class="decimal">'.$content.'</ol>';	return '</p>'.$content.'<p>';}//// Convert BBCodes to their HTML equivalent//function do_bbcode($text, $is_signature = false){	global $lang_common, $forum_user, $forum_config;	$return = ($hook = get_hook('ps_do_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strpos($text, '[quote') !== false)	{		$text = preg_replace('#\[quote=(&\#039;|&quot;|"|\'|)(.*?)\\1\]#e', '"</p><div class=\"quotebox\"><cite>".str_replace(array(\'[\', \'\\"\'), array(\'&#91;\', \'"\'), \'$2\')." ".$lang_common[\'wrote\'].":</cite><blockquote><p>"', $text);		$text = preg_replace('#\[quote\]\s*#', '</p><div class="quotebox"><blockquote><p>', $text);		$text = preg_replace('#\s*\[\/quote\]#S', '</p></blockquote></div><p>', $text);	}	if (!$is_signature)	{		$pattern[] = '%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise';		$replace[] = 'handle_list_tag(\'$2\', \'$1\')';	}	$pattern[] = '#\[b\](.*?)\[/b\]#ms';	$pattern[] = '#\[i\](.*?)\[/i\]#ms';	$pattern[] = '#\[u\](.*?)\[/u\]#ms';	$pattern[] = '#\[colou?r=([a-zA-Z]{3,20}|\#[0-9a-fA-F]{6}|\#[0-9a-fA-F]{3})](.*?)\[/colou?r\]#ms';	$pattern[] = '#\[h\](.*?)\[/h\]#ms';	$replace[] = '<strong>$1</strong>';	$replace[] = '<em>$1</em>';	$replace[] = '<span class="bbu">$1</span>';	$replace[] = '<span style="color: $1">$2</span>';	$replace[] = '</p><h5>$1</h5><p>';	if (($is_signature && $forum_config['p_sig_img_tag'] == '1') || (!$is_signature && $forum_config['p_message_img_tag'] == '1'))	{		$pattern[] = '#\[img\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		$pattern[] = '#\[img=([^\[]*?)\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		if ($is_signature)		{			$replace[] = 'handle_img_tag(\'$1$3\', true)';			$replace[] = 'handle_img_tag(\'$2$4\', true, \'$1\')';		}		else		{			$replace[] = 'handle_img_tag(\'$1$3\', false)';			$replace[] = 'handle_img_tag(\'$2$4\', false, \'$1\')';		}	}	$pattern[] = '#\[url\]([^\[]*?)\[/url\]#e';	$pattern[] = '#\[url=([^\[]+?)\](.*?)\[/url\]#e';	$pattern[] = '#\[email\]([^\[]*?)\[/email\]#';	$pattern[] = '#\[email=([^\[]+?)\](.*?)\[/email\]#';	$replace[] = 'handle_url_tag(\'$1\')';	$replace[] = 'handle_url_tag(\'$1\', \'$2\')';	$replace[] = '<a href="mailto:$1">$1</a>';	$replace[] = '<a href="mailto:$1">$2</a>';	$return = ($hook = get_hook('ps_do_bbcode_replace')) ? eval($hook) : null;	if ($return != null)		return $return;	// This thing takes a while! :)	$text = preg_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_do_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Make hyperlinks clickable//function do_clickable($text, $unicode = FALSE){	$text = ' '.$text;	if ($unicode)	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\p{Nd}\p{L}\-]+\.([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	else	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\w\-]+\.([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-]?)?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	return substr($text, 1);}//// Convert a series of smilies to images//function do_smilies($text){	global $forum_config, $base_url, $smilies;	$return = ($hook = get_hook('ps_do_smilies_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$text = ' '.$text.' ';	foreach ($smilies as $smiley_text => $smiley_img)	{		if (strpos($text, $smiley_text) !== false)			$text = preg_replace("#(?<=[>\s])".preg_quote($smiley_text, '#')."(?=\W)#m", '<img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.substr($smiley_img, 0, strrpos($smiley_img, '.')).'" />', $text);	}	$return = ($hook = get_hook('ps_do_smilies_end')) ? eval($hook) : null;	return substr($text, 1, -1);}//// Parse message text//function parse_message($text, $hide_smilies){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_message_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_message_pre_split')) ? eval($hook) : null;	if ($return != null)		return $return;	// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)	if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)	{		list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);		$text = implode("\xc1", $outside);	}	$return = ($hook = get_hook('ps_parse_message_post_split')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_message_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text);	if ($forum_config['o_smilies'] == '1' && $forum_user['show_smilies'] == '1' && $hide_smilies == '0')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_message_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_message_pre_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// If we split up the message before we have to concatenate it together again (code tags)	if (isset($inside))	{		$outside = explode("\xc1", $text);		$text = '';		$num_tokens = count($outside);		for ($i = 0; $i < $num_tokens; ++$i)		{			$text .= $outside[$i];			if (isset($inside[$i]))				$text .= '</p><div class="codebox"><pre><code>'.forum_trim($inside[$i], "\n\r").'</code></pre></div><p>';		}	}	$return = ($hook = get_hook('ps_parse_message_post_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// Add paragraph tag around post, but make sure there are no empty paragraphs	$text = preg_replace('#<br />\s*?<br />((\s*<br />)*)#i', "</p>$1<p>", $text);	$text = str_replace('<p><br />', '<p>', $text);	$text = str_replace('<p></p>', '', '<p>'.$text.'</p>');	$return = ($hook = get_hook('ps_parse_message_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Parse signature text//function parse_signature($text){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_signature_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_signature_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_signature_pre_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_sig_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text, true);	if ($forum_config['o_smilies_sig'] == '1' && $forum_user['show_smilies'] == '1')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_signature_post_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_signature_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}define('FORUM_PARSER_LOADED', 1);
<?php// Language definitions used in search.php$lang_search = array(// The search form'No search permission'		=>	'You do not have permission to use the search feature.','Search heading'			=>	'Search forums using your criteria','Search flood'				=>	'At least %s seconds have to pass between searches. Please wait a while and try searching again.','Search legend'				=>	'Search criteria','Results legend'			=>	'Search results','Keywords info'				=>	'You may search for a single keyword or for multiple keywords separated by spaces.','Refine info'				=>	'You may use <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> to refine your searches by keyword.','Wildcard info'				=>	'Use the wildcard character <strong>*</strong> for partial keyword or username matches.','Forum default info'		=>	'By default all forums are searched. You may narrow your search by selecting one or more forums to search.','Forum require info'		=>	'You may choose to search one or more forums. You <strong>must</strong> select at least one forum to search.','Keyword search'			=>	'Keyword or words','Author search'				=>	'Author\'s username','Forum search'				=>	'Select forums to search','Forum search default'		=>	'If no forums are selected then all forums will be searched.','Forum search require'		=>	'You must select at least one forum to search.','Sort by'					=>	'Sort results by','Sort order'				=>	'Results sort order','Sort by post time'			=>	'Post time','Sort by author'			=>	'Author','Sort by subject'			=>	'Subject','Sort by forum'				=>	'Forum','Ascending'					=>	'Ascending','Descending'				=>	'Descending','Display results'			=>	'Display results','Show as topics'			=>	'As topics','Show as posts'				=>	'As posts','Submit search'				=>	'Submit','User defined search'		=>	'User defined search','Advanced search'			=>	'Advanced search','Search in'					=>	'Search in','Message and subject'		=>	'Message text and topic subject','Message only'				=>	'Message text only','Topic only'				=>	'Topic subject only',// Results'Search results'			=>	'Search results','Topics with new'			=>	'Topics with new posts','All Topics'				=>	'Show all topics','Recently active topics'	=>	'Recently active topics','Unanswered topics'			=>	'Unanswered topics','Subscriptions'				=>	'Subscriptions','Topics found'				=>	'Topics found','Posts found'				=>	'Posts found','Topics by'					=>	'Topics by %s','Posts by'					=>	'Posts by %s','Topics by user'			=>	'Topics by this user','Posts by user'				=>	'Posts by this user','Perform new search'		=>	'Perform new search','Search options'			=>	'Search options','Posted in'					=>	'Posted in ','No terms'					=>	'You have to enter at least one keyword and/or an author to search for.','No hits'					=>	'Your search returned no hits.','No user posts'				=>	'There are no posts by this user in this forum.','No user topics'			=>	'There are no topics by this user in this forum.','No subscriptions'			=>	'There are no topics which have been subscribed to.','No new posts'				=>	'There are no topics with new posts since your last visit.','No recent posts'			=>	'No posts have been made recently.','No unanswered'				=>	'There are no unanswered posts in this forum.','Go to post'				=>	'Go to post','Go to forum'				=>	'Go to forum','Go to topic'				=>	'Go to topic','Go to profile'				=>	'Go to %s\'s profile');
<?php/** * Handles logins, logouts, and password reset requests. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (isset($_GET['action']))	define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('li_start')) ? eval($hook) : null;// Load the login.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/login.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$errors = array();// Loginif (isset($_POST['form_sent']) && empty($action)){	$form_username = forum_trim($_POST['req_username']);	$form_password = forum_trim($_POST['req_password']);	$save_pass = isset($_POST['save_pass']);	($hook = get_hook('li_login_form_submitted')) ? eval($hook) : null;	// Get user info matching login attempt	$query = array(		'SELECT'	=> 'u.id, u.group_id, u.password, u.salt',		'FROM'		=> 'users AS u'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$query['WHERE'] = 'username=\''.$forum_db->escape($form_username).'\'';	else		$query['WHERE'] = 'LOWER(username)=LOWER(\''.$forum_db->escape($form_username).'\')';	($hook = get_hook('li_login_qr_get_login_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($user_id, $group_id, $db_password_hash, $salt) = $forum_db->fetch_row($result);	$authorized = false;	if (!empty($db_password_hash))	{		$sha1_in_db = (strlen($db_password_hash) == 40) ? true : false;		$form_password_hash = forum_hash($form_password, $salt);		if ($sha1_in_db && $db_password_hash == $form_password_hash)			$authorized = true;		else if ((!$sha1_in_db && $db_password_hash == md5($form_password)) || ($sha1_in_db && $db_password_hash == sha1($form_password)))		{			$authorized = true;			$salt = random_key(12);			$form_password_hash = forum_hash($form_password, $salt);			// There's an old MD5 hash or an unsalted SHA1 hash in the database, so we replace it			// with a randomly generated salt and a new, salted SHA1 hash			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$form_password_hash.'\', salt=\''.$forum_db->escape($salt).'\'',				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_hash')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	($hook = get_hook('li_login_pre_auth_message')) ? eval($hook) : null;	if (!$authorized)		$errors[] = sprintf($lang_login['Wrong user/pass']);	// Did everything go according to plan?	if (empty($errors))	{		// Update the status if this is the first time the user logged in		if ($group_id == FORUM_UNVERIFIED)		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$forum_config['o_default_user_group'],				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_group')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove this user's guest entry from the online list		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);		($hook = get_hook('li_login_qr_delete_online_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$expire = ($save_pass) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];		forum_setcookie($cookie_name, base64_encode($user_id.'|'.$form_password_hash.'|'.$expire.'|'.sha1($salt.$form_password_hash.forum_hash($expire, $salt))), $expire);		($hook = get_hook('li_login_pre_redirect')) ? eval($hook) : null;		redirect(forum_htmlencode($_POST['redirect_url']).((substr_count($_POST['redirect_url'], '?') == 1) ? '&amp;' : '?').'login=1', $lang_login['Login redirect']);	}}// Logoutelse if ($action == 'out'){	if ($forum_user['is_guest'] || !isset($_GET['id']) || $_GET['id'] != $forum_user['id'])	{		header('Location: '.forum_link($forum_url['index']));		exit;	}	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('logout'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('li_logout_selected')) ? eval($hook) : null;	// Remove user from "users online" list.	$query = array(		'DELETE'	=> 'online',		'WHERE'		=> 'user_id='.$forum_user['id']	);	($hook = get_hook('li_logout_qr_delete_online_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Update last_visit (make sure there's something to update it with)	if (isset($forum_user['logged']))	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_visit='.$forum_user['logged'],			'WHERE'		=> 'id='.$forum_user['id']		);		($hook = get_hook('li_logout_qr_update_last_visit')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	$expire = time() + 1209600;	forum_setcookie($cookie_name, base64_encode('1|'.random_key(8, false, true).'|'.$expire.'|'.random_key(8, false, true)), $expire);	// Reset tracked topics	set_tracked_topics(null);	($hook = get_hook('li_logout_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['index']), $lang_login['Logout redirect']);}// New passwordelse if ($action == 'forget' || $action == 'forget_2'){	if (!$forum_user['is_guest'])		header('Location: '.forum_link($forum_url['index']));	($hook = get_hook('li_forgot_pass_selected')) ? eval($hook) : null;	if (isset($_POST['form_sent']))	{		// User pressed the cancel button		if (isset($_POST['cancel']))			redirect(forum_link($forum_url['index']), $lang_login['New password cancel redirect']);		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$email = strtolower(forum_trim($_POST['req_email']));		if (!is_valid_email($email))			$errors[] = $lang_login['Invalid e-mail'];		($hook = get_hook('li_forgot_pass_end_validation')) ? eval($hook) : null;		// Did everything go according to plan?		if (empty($errors))		{			$users_with_email = array();			// Fetch user matching $email			$query = array(				'SELECT'	=> 'u.id, u.username, u.salt, u.last_email_sent',				'FROM'		=> 'users AS u',				'WHERE'		=> 'u.email=\''.$forum_db->escape($email).'\''			);			($hook = get_hook('li_forgot_pass_qr_get_user_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_user = $forum_db->fetch_assoc($result))			{				$users_with_email[] = $cur_user;			}			if (!empty($users_with_email))			{				($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null;				// Load the "activate password" template				$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_password.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = forum_trim(substr($mail_tpl, $first_crlf));				// Do the generic replacements first (they apply to all e-mails sent out here)				$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);				$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);				($hook = get_hook('li_forgot_pass_new_general_replace_data')) ? eval($hook) : null;				// Loop through users we found				foreach ($users_with_email as $cur_hit)				{					$forgot_pass_timeout = 3600;					($hook = get_hook('li_forgot_pass_pre_flood_check')) ? eval($hook) : null;					if ($cur_hit['last_email_sent'] != '' && (time() - $cur_hit['last_email_sent']) < $forgot_pass_timeout && (time() - $cur_hit['last_email_sent']) >= 0)						message(sprintf($lang_login['Email flood'], $forgot_pass_timeout));					// Generate a new password activation key					$new_password_key = random_key(8, true);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'activate_key=\''.$new_password_key.'\', last_email_sent = '.time(),						'WHERE'		=> 'id='.$cur_hit['id']					);					($hook = get_hook('li_forgot_pass_qr_set_activate_key')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Do the user specific replacements to the template					$cur_mail_message = str_replace('<username>', $cur_hit['username'], $mail_message);					$cur_mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_password_key'], array($cur_hit['id'], $new_password_key))), $cur_mail_message);					($hook = get_hook('li_forgot_pass_new_user_replace_data')) ? eval($hook) : null;					forum_mail($email, $mail_subject, $cur_mail_message);				}				message(sprintf($lang_login['Forget mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			}			else				$errors[] = sprintf($lang_login['No e-mail match'], forum_htmlencode($email));		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['request_password']);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_login['New password request'], forum_link($forum_url['request_password']))	);	($hook = get_hook('li_forgot_pass_pre_header_load')) ? eval($hook) : null;	define ('FORUM_PAGE', 'reqpass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('li_forgot_pass_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_login['New password request'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p class="important"><?php echo $lang_login['New password info'] ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_forgot_pass_pre_new_password_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['New password errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('li_forgot_pass_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['E-mail address'] ?></span> <small><?php echo $lang_login['E-mail address help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="req_email" value="<?php echo isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : '' ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('li_forgot_pass_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_forgot_pass_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="request_pass" value="<?php echo $lang_login['Submit password request'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('li_forgot_pass_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}if (!$forum_user['is_guest'])	header('Location: '.forum_link($forum_url['index']));// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['login']);$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'redirect_url'	=> '<input type="hidden" name="redirect_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_login['Login info'], $forum_config['o_board_title']), forum_link($forum_url['login'])));($hook = get_hook('li_login_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'login');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('li_login_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_login['Login info'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="content-head">			<p class="hn"><?php printf($lang_login['Login options'], '<a href="'.forum_link($forum_url['register']).'">'.$lang_login['register'].'</a>', '<a href="'.forum_link($forum_url['request_password']).'">'.$lang_login['Obtain pass'].'</a>') ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();	foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_pre_login_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['Login errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('li_login_pre_login_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_login_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Username'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '' ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_pass')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Password'] ?></span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" value="<?php echo isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : '' ?>" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_remember_me_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="save_pass" value="1" <?php echo isset($_POST['save_pass']) ? 'checked="checked" ' : '' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_login['Remember me'] ?></label>					</div>				</div><?php ($hook = get_hook('li_login_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_login_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="login" value="<?php echo $lang_login['Login'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('li_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
