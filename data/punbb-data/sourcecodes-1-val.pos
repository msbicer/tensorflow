<?php/** * Load various functions used in indexing posts and topics for searching. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// The contents of this file are very much inspired by the file functions_search.php// from the phpBB Group forum software phpBB2 (http://www.phpbb.com).// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;if (!defined('FORUM_SEARCH_MIN_WORD'))	define('FORUM_SEARCH_MIN_WORD', 3);if (!defined('FORUM_SEARCH_MAX_WORD'))	define('FORUM_SEARCH_MAX_WORD', 20);//// "Cleans up" a text string and returns an array of unique words// This function depends on the current locale setting//function split_words($text){	// Remove BBCode	$text = preg_replace('/\[\/?(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]/', ' ', $text);	// Remove any apostrophes which aren't part of words	$text = substr(preg_replace('((?<=\W)\'|\'(?=\W))', '', ' '.$text.' '), 1, -1);	// Remove symbols and multiple whitespace	$text = preg_replace('/[\^\$&\(\)<>`"\|,@_\?%~\+\[\]{}:=\/#\\\\;!\*\.\s]+/', ' ', $text);	// Fill an array with all the words	$words = array_unique(explode(' ', $text));	// Remove any words that should not be indexed	$words = array_filter($words, 'validate_search_word');	$return = ($hook = get_hook('si_fn_split_words_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $words;}//// Updates the search index with the contents of $post_id (and $subject)//function update_search_index($mode, $post_id, $message, $subject = null){	global $db_type, $forum_db;	$return = ($hook = get_hook('si_fn_update_search_index_start')) ? eval($hook) : null;	if ($return != null)		return;	$message = utf8_strtolower($message);	$subject = utf8_strtolower($subject);	// Split old and new post/subject to obtain array of 'words'	$words_message = split_words($message);	$words_subject = empty($subject) ? array() : split_words($subject);	if ($mode == 'edit')	{		$query = array(			'SELECT'	=> 'w.id, w.word, m.subject_match',			'FROM'		=> 'search_words AS w',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'search_matches AS m',					'ON'			=> 'w.id=m.word_id'				)			),			'WHERE'		=> 'm.post_id='.$post_id		);		($hook = get_hook('si_fn_update_search_index_qr_get_current_words')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		// Declare here to stop array_keys() and array_diff() from complaining if not set		$cur_words = array(			'post'		=> array(),			'subject'	=> array()		);		while ($row = $forum_db->fetch_assoc($result))			$cur_words[$row['subject_match'] == 1 ? 'subject' : 'post'][$row['word']] = $row['id'];		$forum_db->free_result($result);		$words = array(			'add'	=> array(				'post'		=> array_diff($words_message, array_keys($cur_words['post'])),				'subject'	=> array_diff($words_subject, array_keys($cur_words['subject']))			),			'del'	=> array(				'post'		=> array_diff(array_keys($cur_words['post']), $words_message),				'subject'	=> array_diff(array_keys($cur_words['subject']), $words_subject)			)		);	}	else	{		$words = array(			'add'	=> array(				'post'		=> $words_message,				'subject'	=> $words_subject			),			'del'	=> array(				'post'		=> array(),				'subject'	=> array()			)		);	}	// Get unique words from the above arrays	$unique_words = array_unique(array_merge($words['add']['post'], $words['add']['subject']));	if (!empty($unique_words))	{		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'word IN(\''.implode('\',\'', array_map(array($forum_db, 'escape'), $unique_words)).'\')'		);		($hook = get_hook('si_fn_update_search_index_qr_get_existing_words')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$existing_words = array();		while ($row = $forum_db->fetch_row($result))			$existing_words[] = $row[1];		$forum_db->free_result($result);		$new_words = array_diff($unique_words, $existing_words);		if (!empty($new_words))		{			$query = array(				'INSERT'	=> 'word',				'INTO'		=> 'search_words',				'VALUES'	=> preg_replace('#^(.*)$#', '\'\1\'', array_map(array($forum_db, 'escape'), $new_words))			);			($hook = get_hook('si_fn_update_search_index_qr_insert_words')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	// Delete matches (only if editing a post)	foreach ($words['del'] as $match_in => $wordlist)	{		if (!empty($wordlist))		{			$word_ids = array();			foreach ($wordlist as $word)				$word_ids[] = $cur_words[$match_in][$word];			$query = array(				'DELETE'	=> 'search_matches',				'WHERE'		=> 'word_id IN ('.implode(', ', $word_ids).') AND post_id='.$post_id.' AND subject_match='.($match_in == 'subject' ? '1' : '0')			);			($hook = get_hook('si_fn_update_search_index_qr_delete_matches')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	// Add new matches	foreach ($words['add'] as $match_in => $wordlist)	{		if (!empty($wordlist))		{			$subquery = array(				'SELECT'	=> $post_id.', id, '.($match_in == 'subject' ? '1' : '0'),				'FROM'		=> 'search_words',				'WHERE'		=> 'word IN (\''.implode('\',\'', array_map(array($forum_db, 'escape'), $wordlist)).'\')'			);			// Really this should use the query builder too, though it doesn't currently support the syntax			$sql = 'INSERT INTO '.$forum_db->prefix.'search_matches (post_id, word_id, subject_match) '.$forum_db->query_build($subquery, true);			($hook = get_hook('si_fn_update_search_index_qr_add_matches')) ? eval($hook) : null;			$forum_db->query($sql) or error(__FILE__, __LINE__);		}	}	unset($words);}//// Strip search index of indexed words in $post_ids//function strip_search_index($post_ids){	global $db_type, $forum_db;	if (is_array($post_ids))		$post_ids = implode(',', $post_ids);	$return = ($hook = get_hook('si_fn_strip_search_index_start')) ? eval($hook) : null;	if ($return != null)		return;	$query = array(		'SELECT'	=> 'word_id',		'FROM'		=> 'search_matches',		'WHERE'		=> 'post_id IN('.$post_ids.')',		'GROUP BY'	=> 'word_id'	);	($hook = get_hook('si_fn_strip_search_index_qr_get_post_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$word_ids = array();	while ($row = $forum_db->fetch_row($result))	{		$word_ids[] = $row[0];	}	if (!empty($word_ids))	{		$query = array(			'SELECT'	=> 'word_id',			'FROM'		=> 'search_matches',			'WHERE'		=> 'word_id IN('.implode(',', $word_ids).')',			'GROUP BY'	=> 'word_id, subject_match',			'HAVING'	=> 'COUNT(word_id)=1'		);		($hook = get_hook('si_fn_strip_search_index_qr_get_removable_words')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$word_ids = array();		while ($row = $forum_db->fetch_row($result))		{			$word_ids[] = $row[0];		}		if (!empty($word_ids))		{			$query = array(				'DELETE'	=> 'search_words',				'WHERE'		=> 'id IN('.implode(',', $word_ids).')'			);			($hook = get_hook('si_fn_strip_search_index_qr_delete_words')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	$query = array(		'DELETE'	=> 'search_matches',		'WHERE'		=> 'post_id IN('.$post_ids.')'	);	($hook = get_hook('si_fn_strip_search_index_qr_delete_matches')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	($hook = get_hook('si_fn_strip_search_index_end')) ? eval($hook) : null;}define('FORUM_SEARCH_IDX_FUNCTIONS_LOADED', 1);
<?php// Language definitions used in viewforum.php$lang_forum = array('Forum subtitle'			=>	'%1$s in this forum with details of %2$s.','Search subtitle'			=>	'%1$s found with details of %2$s.','Topics'					=>	'Topics','topics'					=>	'topics','Reply'						=>	'Reply','Replies'					=>	'Replies','Forum'						=>	'Forum','reply'						=>	'reply','replies'					=>	'replies','View'						=>	'View','Views'						=>	'Views','views'						=>	'views','view'						=>	'view','Last post'					=>	'Last post','last post'					=>	'last post','Select topic'				=>	'Select topic: %s.','No replies info'			=>	'No reply information','No views info'				=>	'No viewing information','No lastpost info'			=>	'No last post information','by poster'					=>	'by %s','Item status'				=>	'%s:','Topic starter'				=>	'by <cite>%s</cite>','New posts'					=>	'New posts','Topic navigation'			=>	'( %s )','Location'					=>	'Found in forum: %s','Pages'						=>	'Pages','Post topic'				=>	'Post new topic','Login to post'				=>	'You must %1$s or %2$s to post a new topic','No permission'				=>	'Sorry! no permission to post new topics','Moved'						=>	'Moved','Sticky'					=>	'Sticky','Closed'					=>	'Closed','Empty forum'				=>	'Empty forum','No topics'					=>	'No topics have been posted','First topic nag'			=>	'Be the first to post a topic in this forum.','You posted indicator'		=>	'','Permalink forum'			=>	'Permanent link to this forum.','Forum options'				=>	'Forum options','Moderate forum'			=>	'Moderate forum','Mark forum read'			=>	'Mark forum as read','RSS forum feed'			=>	'RSS forum feed','New posts info'			=>	'Go to the first new post since your last visit.');
<?php/** * User search page. * * Allows administrators or moderators to search the existing users based on various criteria. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('aus_start')) ? eval($hook) : null;if (!$forum_user['is_admmod'])	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_users.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_bans.php';// Show IP statistics for a certain user IDif (isset($_GET['ip_stats'])){	$ip_stats = intval($_GET['ip_stats']);	if ($ip_stats < 1)		message($lang_common['Bad request']);	($hook = get_hook('aus_ip_stats_selected')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'p.poster_ip, MAX(p.posted) AS last_used, COUNT(p.id) AS used_times',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.poster_id='.$ip_stats,		'GROUP BY'	=> 'p.poster_ip',		'ORDER BY'	=> 'last_used DESC'	);	($hook = get_hook('aus_ip_stats_qr_get_user_ips')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$founded_ips = array();	while ($cur_ip = $forum_db->fetch_assoc($result))	{		$founded_ips[] = $cur_ip;	}	$forum_page['num_users'] = count($founded_ips);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index']))	);	if ($forum_user['g_id'] == FORUM_ADMIN)		$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = array($lang_admin_common['Searches'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = $lang_admin_users['User search results'];	($hook = get_hook('aus_ip_stats_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-iresults');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	// Set up table headers	$forum_page['table_header'] = array();	$forum_page['table_header']['ip'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['IP address'].'</th>';	$forum_page['table_header']['lastused'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Last used'].'</th>';	$forum_page['table_header']['timesfound'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Times found'].'</th>';	$forum_page['table_header']['actions'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Actions'].'</th>';	($hook = get_hook('aus_ip_stats_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['IP addresses found'], $forum_page['num_users']) ?></span></h2>	</div>	<div class="main-content main-forum">		<table>			<thead>				<tr>					<?php echo implode("\n\t\t\t\t", $forum_page['table_header'])."\n" ?>				</tr>			</thead>			<tbody><?php	if ($forum_page['num_users'])	{		$forum_page['item_count'] = 0;		foreach ($founded_ips as $cur_ip)		{			++$forum_page['item_count'];			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even');			if ($forum_page['item_count'] == 1)				$forum_page['item_style'] .= ' row1';			($hook = get_hook('aus_ip_stats_pre_row_generation')) ? eval($hook) : null;			$forum_page['table_row'] = array();			$forum_page['table_row']['ip'] = '<td class="tc'.count($forum_page['table_row']).'"><a href="'.forum_link($forum_url['get_host'], $cur_ip['poster_ip']).'">'.$cur_ip['poster_ip'].'</a></td>';			$forum_page['table_row']['lastused'] = '<td class="tc'.count($forum_page['table_row']).'">'.format_time($cur_ip['last_used']).'</td>';			$forum_page['table_row']['timesfound'] = '<td class="tc'.count($forum_page['table_row']).'">'.$cur_ip['used_times'].'</td>';			$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"><a href="'.forum_link($forum_url['admin_users']).'?show_users='.$cur_ip['poster_ip'].'">'.$lang_admin_users['Find more users'].'</a></td>';			($hook = get_hook('aus_ip_stats_pre_row_output')) ? eval($hook) : null;?>				<tr class="<?php echo $forum_page['item_style'] ?>">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php		}	}	else	{		($hook = get_hook('aus_ip_stats_pre_no_results_row_generation')) ? eval($hook) : null;		$forum_page['table_row'] = array();		$forum_page['table_row']['ip'] = '<td class="tc'.count($forum_page['table_row']).'">'.$lang_admin_users['No posts by user'].'</td>';		$forum_page['table_row']['lastused'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';		$forum_page['table_row']['timesfound'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';		$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';		($hook = get_hook('aus_ip_stats_pre_no_results_row_output')) ? eval($hook) : null;?>				<tr class="odd row1">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php	}?>			</tbody>		</table>	</div>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['IP addresses found'], $forum_page['num_users']) ?></span></h2>	</div><?php	($hook = get_hook('aus_ip_stats_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Show users that have at one time posted with the specified IP addresselse if (isset($_GET['show_users'])){	$ip = $_GET['show_users'];	if (empty($ip) || (!preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $ip) && !preg_match('/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/', $ip)))		message($lang_admin_users['Invalid IP address']);	($hook = get_hook('aus_show_users_selected')) ? eval($hook) : null;	// Load the misc.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';	$query = array(		'SELECT'	=> 'DISTINCT p.poster_id, p.poster',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.poster_ip=\''.$forum_db->escape($ip).'\'',		'ORDER BY'	=> 'p.poster DESC'	);	($hook = get_hook('aus_show_users_qr_get_users_matching_ip')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$users = array();	while ($cur_user = $forum_db->fetch_row($result))	{		$users[] = $cur_user;	}	$forum_page['num_users'] = count($users);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index']))	);	if ($forum_user['g_id'] == FORUM_ADMIN)		$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = array($lang_admin_common['Searches'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = $lang_admin_users['User search results'];	($hook = get_hook('aus_show_users_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-uresults');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	// Set up table headers	$forum_page['table_header'] = array();	$forum_page['table_header']['username'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['User information'].'</th>';	$forum_page['table_header']['title'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Title column'].'</th>';	$forum_page['table_header']['posts'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Posts'].'</th>';	$forum_page['table_header']['actions'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Actions'].'</th>';	$forum_page['table_header']['select'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_misc['Select'] .'</th>';	if ($forum_page['num_users'] > 0)		$forum_page['main_head_options']['select'] = $forum_page['main_foot_options']['select'] = '<a href="#" onclick="return Forum.toggleCheckboxes(document.getElementById(\'aus-show-users-results-form\'))">'.$lang_admin_common['Select all'].'</a>';	($hook = get_hook('aus_show_users_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['Users found'], $forum_page['num_users']) ?></span></h2>	</div>	<form id="aus-show-users-results-form" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>?action=modify_users">	<div class="main-content main-frm">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=modify_users') ?>" />		</div>		<table>			<thead>				<tr>					<?php echo implode("\n\t\t\t\t", $forum_page['table_header'])."\n" ?>				</tr>			</thead>			<tbody><?php	if ($forum_page['num_users'] > 0)	{		$forum_page['item_count'] = 0;		// Loop through users and print out some info		foreach ($users as $user)		{			list($poster_id, $poster) = $user;			$query = array(				'SELECT'	=> 'u.id, u.username, u.email, u.title, u.num_posts, u.admin_note, g.g_id, g.g_user_title',				'FROM'		=> 'users AS u',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'groups AS g',						'ON'			=> 'g.g_id=u.group_id'					)				),				'WHERE'		=> 'u.id>1 AND u.id='.$poster_id			);			($hook = get_hook('aus_show_users_qr_get_user_details')) ? eval($hook) : null;			$result2 = $forum_db->query_build($query) or error(__FILE__, __LINE__);			++$forum_page['item_count'];			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even');			if ($forum_page['item_count'] == 1)				$forum_page['item_style'] .= ' row1';			($hook = get_hook('aus_show_users_pre_row_generation')) ? eval($hook) : null;			if ($user_data = $forum_db->fetch_assoc($result2))			{				$forum_page['table_row'] = array();				$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'"><span>'.$lang_admin_users['Username'].' <a href="'.forum_link($forum_url['user'], $user_data['id']).'">'.forum_htmlencode($user_data['username']).'</a></span> <span class="usermail">'.$lang_admin_users['E-mail'].' <a href="mailto:'.forum_htmlencode($user_data['email']).'">'.forum_htmlencode($user_data['email']).'</a></span>'.(($user_data['admin_note'] != '') ? '<span class="usernote">'.$lang_admin_users['Admin note'].' '.forum_htmlencode($user_data['admin_note']).'</span>' : '').'</td>';				$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'">'.get_title($user_data).'</td>';				$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'">'.forum_number_format($user_data['num_posts']).'</td>';				$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"><span><a href="'.forum_link($forum_url['admin_users']).'?ip_stats='.$user_data['id'].'">'.$lang_admin_users['View IP stats'].'</a></span> <span><a href="'.forum_link($forum_url['search_user_posts'], $user_data['id']).'">'.$lang_admin_users['Show posts'].'</a></span></td>';				$forum_page['table_row']['select'] = '<td class="tc'.count($forum_page['table_row']).'"><input type="checkbox" name="users['.$user_data['id'].']" value="1" /></td>';			}			else			{				$forum_page['table_row'] = array();				$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'">'.forum_htmlencode($poster).'</td>';				$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'">'.$lang_admin_users['Guest'].'</td>';				$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';				$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';				$forum_page['table_row']['select'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			}			($hook = get_hook('aus_show_users_pre_row_output')) ? eval($hook) : null;?>				<tr class="<?php echo $forum_page['item_style'] ?>">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php		}	}	else	{			($hook = get_hook('aus_show_users_pre_no_results_row_generation')) ? eval($hook) : null;			$forum_page['table_row'] = array();			$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'">'.$lang_admin_users['Cannot find IP'].'</td>';			$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['select'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			($hook = get_hook('aus_show_users_pre_no_results_row_output')) ? eval($hook) : null;?>				<tr class="odd row1">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php	}?>			</tbody>		</table>	</div><?php	// Setup control buttons	$forum_page['mod_options'] = array();	if ($forum_page['num_users'] > 0)	{		if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_ban_users'] == '1'))			$forum_page['mod_options']['ban'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="ban_users" value="'.$lang_admin_users['Ban'].'" /></span>';		if ($forum_user['g_id'] == FORUM_ADMIN)		{			$forum_page['mod_options']['delete'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="delete_users" value="'.$lang_admin_common['Delete'].'" /></span>';			$forum_page['mod_options']['change_group'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="change_group" value="'.$lang_admin_users['Change group'].'" /></span>';		}	}	($hook = get_hook('aus_show_users_pre_moderation_buttons')) ? eval($hook) : null;	if (!empty($forum_page['mod_options']))	{?>	<div class="main-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div><?php	}?>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['Users found'], $forum_page['num_users']) ?></span></h2>	</div><?php	($hook = get_hook('aus_show_users_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_POST['delete_users']) || isset($_POST['delete_users_comply']) || isset($_POST['delete_users_cancel'])){	// User pressed the cancel button	if (isset($_POST['delete_users_cancel']))		redirect(forum_link($forum_url['admin_users']), $lang_admin_common['Cancel redirect']);	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	if (empty($_POST['users']))		message($lang_admin_users['No users selected']);	($hook = get_hook('aus_delete_users_selected')) ? eval($hook) : null;	if (!is_array($_POST['users']))		$users = explode(',', $_POST['users']);	else		$users = array_keys($_POST['users']);	$users = array_map('intval', $users);	// We check to make sure there are no administrators in this list	$query = array(		'SELECT'	=> 'COUNT(u.id)',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.id IN ('.implode(',', $users).') AND u.group_id='.FORUM_ADMIN	);	($hook = get_hook('aus_delete_users_qr_check_for_admins')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) > 0)		message($lang_admin_users['Delete admin message']);	if (isset($_POST['delete_users_comply']))	{		($hook = get_hook('aus_delete_users_form_submitted')) ? eval($hook) : null;		foreach ($users as $id)		{			// We don't want to delete the Guest user			if ($id > 1)				delete_user($id, isset($_POST['delete_posts']));		}		($hook = get_hook('aus_delete_users_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_users']), $lang_admin_users['Users deleted']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Searches'], forum_link($forum_url['admin_users'])),		$lang_admin_users['Delete users']	);	($hook = get_hook('aus_delete_users_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-users');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aus_delete_users_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_users['Confirm delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<p class="warn"><?php echo $lang_admin_users['Delete warning'] ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>?action=modify_users">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=modify_users') ?>" />				<input type="hidden" name="users" value="<?php echo implode(',', $users) ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_users['Delete posts legend'] ?></span></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Delete posts'] ?></span> <?php echo $lang_admin_users['Delete posts label'] ?></label>					</div>				</div>			</fieldset>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="delete_users_comply" value="<?php echo $lang_admin_users['Delete users'] ?>" /></span>				<span class="cancel"><input type="submit" name="delete_users_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aus_delete_users_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_POST['ban_users']) || isset($_POST['ban_users_comply'])){	if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission']);	if (empty($_POST['users']))		message($lang_admin_users['No users selected']);	($hook = get_hook('aus_ban_users_selected')) ? eval($hook) : null;	if (!is_array($_POST['users']))		$users = explode(',', $_POST['users']);	else		$users = array_keys($_POST['users']);	$users = array_map('intval', $users);	// We check to make sure there are no administrators in this list	$query = array(		'SELECT'	=> 'COUNT(u.id)',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.id IN ('.implode(',', $users).') AND u.group_id='.FORUM_ADMIN	);	($hook = get_hook('aus_ban_users_qr_check_for_admins')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) > 0)		message($lang_admin_users['Ban admin message']);	if (isset($_POST['ban_users_comply']))	{		$ban_message = forum_trim($_POST['ban_message']);		$ban_expire = forum_trim($_POST['ban_expire']);		($hook = get_hook('aus_ban_users_form_submitted')) ? eval($hook) : null;		if ($ban_expire != '' && $ban_expire != 'Never')		{			$ban_expire = strtotime($ban_expire);			if ($ban_expire == -1 || $ban_expire <= time())				message($lang_admin_bans['Invalid expire message']);		}		else			$ban_expire = 'NULL';		$ban_message = ($ban_message != '') ? '\''.$forum_db->escape($ban_message).'\'' : 'NULL';		// Get the latest IPs for the posters and store them for a little later		$query = array(			'SELECT'	=> 'p.poster_id, p.poster_ip',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.poster_id IN ('.implode(',', $users).') AND p.poster_id>1',			'ORDER BY'	=> 'p.posted ASC'		);		($hook = get_hook('aus_ban_users_qr_get_latest_user_ips')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ips = array();		while ($cur_post = $forum_db->fetch_assoc($result))			$ips[$cur_post['poster_id']] = $cur_post['poster_ip'];		// Get the rest of the data for the posters, merge in the IP information, create a ban		$query = array(			'SELECT'	=> 'u.id, u.username, u.email, u.registration_ip',			'FROM'		=> 'users AS u',			'WHERE'		=> 'id IN ('.implode(',', $users).') AND id>1'		);		($hook = get_hook('aus_ban_users_qr_get_users')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_user = $forum_db->fetch_assoc($result))		{			$ban_ip = isset($ips[$cur_user['id']]) ? $ips[$cur_user['id']] : $cur_user['registration_ip'];			$query = array(				'INSERT'	=> 'username, ip, email, message, expire, ban_creator',				'INTO'		=> 'bans',				'VALUES'	=> '\''.$forum_db->escape($cur_user['username']).'\', \''.$ban_ip.'\', \''.$forum_db->escape($cur_user['email']).'\', '.$ban_message.', '.$ban_expire.', '.$forum_user['id']			);			($hook = get_hook('aus_ban_users_qr_add_ban')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Regenerate the bans cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_bans_cache();		// Add flash message		$forum_flash->add_info($lang_admin_users['Users banned']);		($hook = get_hook('aus_ban_users_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_users']), $lang_admin_users['Users banned']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index']))	);	if ($forum_user['g_id'] == FORUM_ADMIN)		$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = array($lang_admin_common['Searches'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = $lang_admin_users['Ban users'];	($hook = get_hook('aus_ban_users_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-users');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aus_ban_users_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_users['Ban users'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_users['Mass ban info'] ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>?action=modify_users">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=modify_users') ?>" />				<input type="hidden" name="users" value="<?php echo implode(',', $users) ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_users['Ban settings legend'] ?></span></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Ban message label'] ?></span> <small><?php echo $lang_admin_bans['Ban message help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_message" size="50" maxlength="255" /></span>					</div>				</div>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Expire date label'] ?></span> <small><?php echo $lang_admin_bans['Expire date help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_expire" size="17" maxlength="10" /></span>					</div>				</div>			</fieldset>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="ban_users_comply" value="<?php echo $lang_admin_users['Ban'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aus_ban_users_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_POST['change_group']) || isset($_POST['change_group_comply']) || isset($_POST['change_group_cancel'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	// User pressed the cancel button	if (isset($_POST['change_group_cancel']))		redirect(forum_link($forum_url['admin_users']), $lang_admin_common['Cancel redirect']);	if (empty($_POST['users']))		message($lang_admin_users['No users selected']);	($hook = get_hook('aus_change_group_selected')) ? eval($hook) : null;	if (!is_array($_POST['users']))		$users = explode(',', $_POST['users']);	else		$users = array_keys($_POST['users']);	$users = array_map('intval', $users);	if (isset($_POST['change_group_comply']))	{		$move_to_group = intval($_POST['move_to_group']);		($hook = get_hook('aus_change_group_form_submitted')) ? eval($hook) : null;		// We need some information on the group		$query = array(			'SELECT'	=> 'g.g_moderator',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$move_to_group		);		($hook = get_hook('aus_change_group_qr_get_group_moderator_status')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group_is_mod = $forum_db->result($result);		if ($move_to_group == FORUM_GUEST || (is_null($group_is_mod) || $group_is_mod === false))			message($lang_common['Bad request']);		// Move users		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id='.$move_to_group,			'WHERE'		=> 'id IN ('.implode(',', $users).') AND id>1'		);		($hook = get_hook('aus_change_group_qr_change_user_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($move_to_group != FORUM_ADMIN && $group_is_mod == '0')			clean_forum_moderators();		($hook = get_hook('aus_change_group_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_users']), $lang_admin_users['User groups updated']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Searches'], forum_link($forum_url['admin_users'])),		$lang_admin_users['Change group']	);	($hook = get_hook('aus_change_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-users');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aus_change_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_users['Change group head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>?action=modify_users">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=modify_users') ?>" />				<input type="hidden" name="users" value="<?php echo implode(',', $users) ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_users['Move users legend'] ?></span></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Move users to label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_group"><?php	$query = array(		'SELECT'	=> 'g.g_id, g.g_title',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id!='.FORUM_GUEST,		'ORDER BY'	=> 'g.g_title'	);	($hook = get_hook('aus_change_group_qr_get_groups')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_group = $forum_db->fetch_assoc($result))	{		if ($cur_group['g_id'] == $forum_config['o_default_user_group'])	// Pre-select the default Members group			echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	}?>						</select></span>					</div>				</div>			</fieldset>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="change_group_comply" value="<?php echo $lang_admin_users['Change group'] ?>" /></span>				<span class="cancel"><input type="submit" name="change_group_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aus_change_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_GET['find_user'])){	$form = isset($_GET['form']) ? $_GET['form'] : array();	// trim() all elements in $form	$form = array_map('forum_trim', $form);	$conditions = $query_str = array();	//Check up for order_by and direction values	$order_by = isset($_GET['order_by']) ? forum_trim($_GET['order_by']) : null;	$direction = isset($_GET['direction']) ? forum_trim($_GET['direction']) : null;	if ($order_by == null || $direction == null)		message($lang_common['Bad request']);	if (!in_array($order_by, array('username', 'email', 'num_posts', 'num_posts', 'registered')) || !in_array($direction, array('ASC', 'DESC')))		message($lang_common['Bad request']);	($hook = get_hook('aus_find_user_selected')) ? eval($hook) : null;	$query_str[] = 'order_by='.$order_by;	$query_str[] = 'direction='.$direction;	$posts_greater = isset($_GET['posts_greater']) ? forum_trim($_GET['posts_greater']) : '';	$posts_less = isset($_GET['posts_less']) ? forum_trim($_GET['posts_less']) : '';	$last_post_after = isset($_GET['last_post_after']) ? forum_trim($_GET['last_post_after']) : '';	$last_post_before = isset($_GET['last_post_before']) ? forum_trim($_GET['last_post_before']) : '';	$registered_after = isset($_GET['registered_after']) ? forum_trim($_GET['registered_after']) : '';	$registered_before = isset($_GET['registered_before']) ? forum_trim($_GET['registered_before']) : '';	$user_group = isset($_GET['user_group']) ? intval($_GET['user_group']) : -1;	$query_str[] = 'user_group='.$user_group;	if ((!empty($posts_greater) || !empty($posts_less)) && !ctype_digit($posts_greater.$posts_less))		message($lang_admin_users['Non numeric value message']);	// Try to convert date/time to timestamps	if ($last_post_after != '')	{		$query_str[] = 'last_post_after='.$last_post_after;		$last_post_after = strtotime($last_post_after);		if ($last_post_after === false || $last_post_after == -1)			message($lang_admin_users['Invalid date/time message']);		$conditions[] = 'u.last_post>'.$last_post_after;	}	if ($last_post_before != '')	{		$query_str[] = 'last_post_before='.$last_post_before;		$last_post_before = strtotime($last_post_before);		if ($last_post_before === false || $last_post_before == -1)			message($lang_admin_users['Invalid date/time message']);		$conditions[] = 'u.last_post<'.$last_post_before;	}	if ($registered_after != '')	{		$query_str[] = 'registered_after='.$registered_after;		$registered_after = strtotime($registered_after);		if ($registered_after === false || $registered_after == -1)			message($lang_admin_users['Invalid date/time message']);		$conditions[] = 'u.registered>'.$registered_after;	}	if ($registered_before != '')	{		$query_str[] = 'registered_before='.$registered_before;		$registered_before = strtotime($registered_before);		if ($registered_before === false || $registered_before == -1)			message($lang_admin_users['Invalid date/time message']);		$conditions[] = 'u.registered<'.$registered_before;	}	$like_command = ($db_type == 'pgsql') ? 'ILIKE' : 'LIKE';	foreach ($form as $key => $input)	{		if ($input != '' && in_array($key, array('username', 'email', 'title', 'realname', 'url', 'jabber', 'icq', 'msn', 'aim', 'yahoo', 'location', 'signature', 'admin_note')))		{			$conditions[] = 'u.'.$forum_db->escape($key).' '.$like_command.' \''.$forum_db->escape(str_replace('*', '%', $input)).'\'';			$query_str[] = 'form%5B'.$key.'%5D='.urlencode($input);		}	}	if ($posts_greater != '')	{		$query_str[] = 'posts_greater='.$posts_greater;		$conditions[] = 'u.num_posts>'.$posts_greater;	}	if ($posts_less != '')	{		$query_str[] = 'posts_less='.$posts_less;		$conditions[] = 'u.num_posts<'.$posts_less;	}	if ($user_group > -1)		$conditions[] = 'u.group_id='.intval($user_group);	if (empty($conditions))		message($lang_admin_users['No search terms message']);	// Load the misc.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';	// Fetch user count	$query = array(		'SELECT'	=> 'COUNT(id)',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'u.id>1 AND '.implode(' AND ', $conditions)	);	($hook = get_hook('aus_find_user_qr_count_find_users')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['num_users'] = $forum_db->result($result);	$forum_page['num_pages'] = ceil($forum_page['num_users'] / $forum_user['disp_topics']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];	$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($forum_page['num_users']));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index']))	);	if ($forum_user['g_id'] == FORUM_ADMIN)		$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = array($lang_admin_common['Searches'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = $lang_admin_users['User search results'];	// Generate paging	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['admin_users'].'?find_user=&amp;'.implode('&amp;', $query_str), $lang_common['Paging separator'], null, true).'</p>';	($hook = get_hook('aus_find_user_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-uresults');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	// Set up table headers	$forum_page['table_header'] = array();	$forum_page['table_header']['username'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['User information'].'</th>';	$forum_page['table_header']['title'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Title column'].'</th>';	$forum_page['table_header']['posts'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Posts'].'</th>';	$forum_page['table_header']['actions'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_admin_users['Actions'].'</th>';	$forum_page['table_header']['select'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_misc['Select'] .'</th>';	if ($forum_page['num_users'] > 0)		$forum_page['main_head_options']['select'] = $forum_page['main_foot_options']['select'] = '<a href="#" onclick="return Forum.toggleCheckboxes(document.getElementById(\'aus-find-user-results-form\'))">'.$lang_admin_common['Select all'].'</a>';	($hook = get_hook('aus_find_user_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['Users found'], $forum_page['num_users']) ?></span></h2>	</div>	<form id="aus-find-user-results-form" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>?action=modify_users">	<div class="main-content main-forum">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=modify_users') ?>" />		</div>		<table>			<thead>				<tr>					<?php echo implode("\n\t\t\t\t", $forum_page['table_header'])."\n" ?>				</tr>			</thead>			<tbody><?php	// Find any users matching the conditions	$query = array(		'SELECT'	=> 'u.id, u.username, u.email, u.title, u.num_posts, u.admin_note, g.g_id, g.g_user_title',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'u.id>1 AND '.implode(' AND ', $conditions),		'ORDER BY'	=> $order_by.' '.$direction,		'LIMIT'		=> $forum_page['start_from'].', '.$forum_page['finish_at']	);	($hook = get_hook('aus_find_user_qr_find_users')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_page['num_users'] > 0)	{		$forum_page['item_count'] = 0;		while ($user_data = $forum_db->fetch_assoc($result))		{			++$forum_page['item_count'];			// This script is a special case in that we want to display "Not verified" for non-verified users			if (($user_data['g_id'] == '' || $user_data['g_id'] == FORUM_UNVERIFIED) && $user_data['title'] != $lang_common['Banned'])				$user_title = '<strong>'.$lang_admin_users['Not verified'].'</strong>';			else				$user_title = get_title($user_data);			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even');			if ($forum_page['item_count'] == 1)				$forum_page['item_style'] .= ' row1';			($hook = get_hook('aus_find_user_pre_row_generation')) ? eval($hook) : null;			$forum_page['table_row'] = array();			$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'"><span>'.$lang_admin_users['Username'].' <a href="'.forum_link($forum_url['user'], $user_data['id']).'">'.forum_htmlencode($user_data['username']).'</a></span> <span class="usermail">'.$lang_admin_users['E-mail'].' <a href="mailto:'.forum_htmlencode($user_data['email']).'">'.forum_htmlencode($user_data['email']).'</a></span>'.(($user_data['admin_note'] != '') ? '<span class="usernote">'.$lang_admin_users['Admin note'].' '.forum_htmlencode($user_data['admin_note']).'</span>' : '').'</td>';			$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'">'.$user_title.'</td>';			$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'">'.forum_number_format($user_data['num_posts']).'</td>';			$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"><span><a href="'.forum_link($forum_url['admin_users']).'?ip_stats='.$user_data['id'].'">'.$lang_admin_users['View IP stats'].'</a></span> <span><a href="'.forum_link($forum_url['search_user_posts'], $user_data['id']).'">'.$lang_admin_users['Show posts'].'</a></span></td>';			$forum_page['table_row']['select'] = '<td class="tc'.count($forum_page['table_row']).'"><input type="checkbox" name="users['.$user_data['id'].']" value="1" /></td>';			($hook = get_hook('aus_find_user_pre_row_output')) ? eval($hook) : null;?>				<tr class="<?php echo $forum_page['item_style'] ?>">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php		}	}	else	{			($hook = get_hook('aus_find_user_pre_no_results_row_generation')) ? eval($hook) : null;			$forum_page['table_row'] = array();			$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'">'.$lang_admin_users['No match'].'</td>';			$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['actions'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			$forum_page['table_row']['select'] = '<td class="tc'.count($forum_page['table_row']).'"> - </td>';			($hook = get_hook('aus_find_user_pre_no_results_row_output')) ? eval($hook) : null;?>				<tr class="odd row1">					<?php echo implode("\n\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php	}?>			</tbody>		</table>	</div><?php	// Setup control buttons	$forum_page['mod_options'] = array();	if ($forum_page['num_users'] > 0)	{		if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_ban_users'] == '1'))			$forum_page['mod_options']['ban'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="ban_users" value="'.$lang_admin_users['Ban'].'" /></span>';		if ($forum_user['g_id'] == FORUM_ADMIN)		{			$forum_page['mod_options']['delete'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="delete_users" value="'.$lang_admin_common['Delete'].'" /></span>';			$forum_page['mod_options']['change_group'] = '<span class="submit'.((empty($forum_page['mod_options'])) ? ' first-item' : '').'"><input type="submit" name="change_group" value="'.$lang_admin_users['Change group'].'" /></span>';		}	}	($hook = get_hook('aus_find_user_pre_moderation_buttons')) ? eval($hook) : null;	if (!empty($forum_page['mod_options']))	{?>	<div class="main-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div><?php	}?>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php printf($lang_admin_users['Users found'], $forum_page['num_users']) ?></span></h2>	</div><?php	($hook = get_hook('aus_find_user_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}($hook = get_hook('aus_new_action')) ? eval($hook) : null;// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])));if ($forum_user['g_id'] == FORUM_ADMIN)	$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));$forum_page['crumbs'][] = array($lang_admin_common['Searches'], forum_link($forum_url['admin_users']));($hook = get_hook('aus_search_form_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-users');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('aus_search_form_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_users['Search head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_users']).'?action=find_user') ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_users['User search head'] ?></span></h3>			</div><?php ($hook = get_hook('aus_search_form_pre_user_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_users['Searches personal legend'] ?></strong></legend><?php ($hook = get_hook('aus_search_form_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Username label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[username]" size="35" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_user_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Title label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[title]" size="35" maxlength="50" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_realname')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Real name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[realname]" size="35" maxlength="40" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_location')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Location label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[location]" size="35" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_signature')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Signature label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[signature]" size="35" maxlength="512" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_admin_note')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Admin note label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[admin_note]" size="35" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_user_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aus_search_form_user_details_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('aus_search_form_pre_user_contacts_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_users['Searches contact legend'] ?></strong></legend><?php ($hook = get_hook('aus_search_form_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['E-mail address label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[email]" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_website')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Website label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[url]" size="35" maxlength="100" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_jabber')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Jabber label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[jabber]" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_icq')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['ICQ label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[icq]" size="12" maxlength="12" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_msn')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['MSN Messenger label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[msn]" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_aim')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['AOL IM label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[aim]" size="20" maxlength="20" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_yahoo')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Yahoo Messenger label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[yahoo]" size="20" maxlength="20" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_user_contacts_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aus_search_form_user_contacts_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('aus_search_form_pre_user_activity_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_users['Searches activity legend'] ?></strong></legend><?php ($hook = get_hook('aus_search_form_pre_min_posts')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box frm-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['More posts label'] ?></span> <small><?php echo $lang_admin_users['Number of posts help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="posts_greater" size="5" maxlength="8" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_max_posts')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box frm-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Less posts label'] ?></span> <small><?php echo $lang_admin_users['Number of posts help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="posts_less" size="5" maxlength="8" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_last_post_after')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Last post after label'] ?></span> <small><?php echo $lang_admin_users['Date format help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="last_post_after" size="24" maxlength="19" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_last_post_before')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Last post before label'] ?></span><small><?php echo $lang_admin_users['Date format help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="last_post_before" size="24" maxlength="19" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_registered_after')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Registered after label'] ?></span> <small><?php echo $lang_admin_users['Date format help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="registered_after" size="24" maxlength="19" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_registered_before')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Registered before label'] ?></span> <small><?php echo $lang_admin_users['Date format help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="registered_before" size="24" maxlength="19" /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_user_activity_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('aus_search_form_user_activity_fieldset_end')) ? eval($hook) : null;// Reset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_users['User results head'] ?></span></h3>			</div><?php ($hook = get_hook('aus_search_form_pre_results_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_users['User results legend'] ?></strong></legend><?php ($hook = get_hook('aus_search_form_pre_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Order by label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="order_by">							<option value="username" selected="selected"><?php echo $lang_admin_users['Username'] ?></option>							<option value="email"><?php echo $lang_admin_users['E-mail'] ?></option>							<option value="num_posts"><?php echo $lang_admin_users['Posts'] ?></option>							<option value="last_post"><?php echo $lang_admin_users['Last post'] ?></option>							<option value="registered"><?php echo $lang_admin_users['Registered'] ?></option><?php ($hook = get_hook('aus_search_form_new_sort_by_option')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_sort_order')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['Sort order label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="direction">							<option value="ASC" selected="selected"><?php echo $lang_admin_users['Ascending'] ?></option>							<option value="DESC"><?php echo $lang_admin_users['Descending'] ?></option>						</select></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_filter_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['User group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="user_group">							<option value="-1" selected="selected"><?php echo $lang_admin_users['All groups'] ?></option>							<option value="<?php echo FORUM_UNVERIFIED ?>"><?php echo $lang_admin_users['Unverified users'] ?></option><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g.g_id!='.FORUM_GUEST,	'ORDER BY'	=> 'g.g_title');($hook = get_hook('aus_search_form_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result))	echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";($hook = get_hook('aus_search_form_new_filter_group_option')) ? eval($hook) : null;?>						</select></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_results_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aus_search_form_results_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="find_user" value="<?php echo $lang_admin_users['Submit search'] ?>" /></span>			</div>		</form>	</div><?php// Reset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_users['IP search head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_users']) ?>"><?php ($hook = get_hook('aus_search_form_pre_ip_search_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_users['IP search legend'] ?></strong></legend><?php ($hook = get_hook('aus_search_form_pre_ip_address')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_users['IP address label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="show_users" size="18" maxlength="15" required /></span>					</div>				</div><?php ($hook = get_hook('aus_search_form_pre_ip_search_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aus_search_form_ip_search_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" value=" <?php echo $lang_admin_users['Submit search'] ?> " /></span>			</div>		</form>	</div><?php($hook = get_hook('aus_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads the regular expressions used to match SEF URL requests to their proper URLs. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_rewrite_rules = array(	'/^topic[\/_-]?([0-9]+).*(new|last)[\/_-]?(posts?)(\.html?|\/)?$/i'														=>	'viewtopic.php?id=$1&action=$2',	'/^post[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'viewtopic.php?pid=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'view$1.php?id=$2&p=$4',	'/^feed[\/_-]?(rss|atom)[\/_-]?(f|t)(orum|opic)[\/_-]?([0-9]+)[\/_-]?(\.xml?|\/)?$/i'									=>	'extern.php?action=feed&$2id=$4&type=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*(\.html?|\/)?$/i'																		=>	'view$1.php?id=$2',	'/^new[\/_-]?reply[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?tid=$1',	'/^new[\/_-]?reply[\/_-]?([0-9]+)[\/_-]?quote[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'post.php?tid=$1&qid=$2',	'/^new[\/_-]?topic[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?fid=$1',	'/^(delete|edit)[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'$1.php?id=$2',	'/^(login|search|register)(\.html?|\/)?$/i'																				=>	'$1.php',	'/^logout[\/_-]?([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'																=>	'login.php?action=out&id=$1&csrf_token=$2',	'/^request[\/_-]?password(\.html?|\/)?$/i'																				=>	'login.php?action=forget',	'/^user[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'profile.php?id=$1',	'/^user[\/_-]?([0-9]+)[\/_-]?([a-z]+)(\.html?|\/)?$/i'																	=>	'profile.php?section=$2&id=$1',	'/^(delete)[\/_-]?(avatar|user)?[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'										=>	'profile.php?action=$1_$2&id=$3&csrf_token=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)[\/_-]([a-zA-Z0-9]+)(\.html?|\/)?$/i'									=>	'profile.php?action=change_$1&id=$3&key=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'														=>	'profile.php?action=change_$1&id=$3',	'/^search[\/_-]?advanced(\.html?|\/)?$/i'																				=>	'search.php?advanced=1',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_new&forum=$2',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_new&forum=$2&p=$4',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_recent&value=$2',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_recent&value=$2&p=$4',	'/^search[\/_-]?(new|recent|unanswered)(\.html?|\/)?$/i'																=>	'search.php?action=show_$1',	'/^search[\/_-]?(new|recent|unanswered)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'search.php?action=show_$1&p=$3',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)(\.html?|\/)?$/i'															=>	'search.php?action=show_subscriptions&user_id=$1',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'								=>	'search.php?action=show_subscriptions&user_id=$1&p=$3',	'/^search[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'search.php?search_id=$1',	'/^search[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'													=>	'search.php?search_id=$1&p=$3',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'search.php?action=show_user_$1&user_id=$2',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'					=>	'search.php?action=show_user_$1&user_id=$2&p=$4',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/?$/i'					=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/page\/([0-9]+)\/?$/i'	=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7&p=$8',	'/^search-k(.*)-([0-9-]+)-a(.*)-(message|subject|all)-([0-9]+)-(ASC|DESC)-(posts|topics).html?$/i'						=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search-k(.*)-(message|subject|all)-a(.*)-([0-9]+)-(ASC|DESC)-([0-9-]+)-(posts|topics)-p([0-9]+).html?$/i'			=>	'search.php?action=search&keywords=$1&author=$3&forum=$6&search_in=$2&sort_by=$4&sort_dir=$5&show_as=$7&p=$8',	'/^users(\.html?|\/)?$/i'																								=>	'userlist.php',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'						=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4&p=$6',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)(\.html?|\/)?$/i'													=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4',	'/^(email|report|subscribe|unsubscribe)[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'								=>	'misc.php?$1=$2&csrf_token=$3',	'/^(mark|rules)[\/_-]?(read)?[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'														=>	'misc.php?action=$1$2&csrf_token=$3',	'/^mark[\/_-](forum)[\/_-]?([0-9]+)[\/_-](read)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'										=>	'misc.php?action=markforumread&fid=$2&csrf_token=$4',	'/^help[\/_-]([a-z]+)(\.html?|\/)?$/i'																					=>	'help.php?section=$1',	'/^moderate[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'moderate.php?fid=$1',	'/^move_topics[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'															=>	'moderate.php?fid=$1&move_topics=$2',	'/^(open|close|stick|unstick)[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'							=>	'moderate.php?fid=$2&$1=$3&csrf_token=$4',	'/^moderate[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'moderate.php?fid=$1&p=$3',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'																=>	'moderate.php?fid=$1&tid=$2',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'moderate.php?fid=$1&tid=$2&p=$4',	'/^get_host[\/_-]?([0-9]+|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(\.html?|\/)?$/i'								=>	'moderate.php?get_host=$1',	'/^feed[\/_-]?(rss|atom)(\.xml?|\/)?$/i'																				=>	'extern.php?action=feed&type=$1');
<?php/** * Administration panel index page. * * Gives an overview of some statistics to administrators and moderators. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('ain_start')) ? eval($hook) : null;if (!$forum_user['is_admmod'])	message($lang_common['No permission']);// Load the admin.php language filesrequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_index.php';// Show phpinfo() outputif (isset($_GET['action']) && $_GET['action'] == 'phpinfo' && $forum_user['g_id'] == FORUM_ADMIN){	($hook = get_hook('ain_phpinfo_selected')) ? eval($hook) : null;	// Is phpinfo() a disabled function?	if (strpos(strtolower((string)@ini_get('disable_functions')), 'phpinfo') !== false)		message($lang_admin_index['phpinfo disabled']);	phpinfo();	exit;}// Generate check for updates text blockif ($forum_user['g_id'] == FORUM_ADMIN){	if ($forum_config['o_check_for_updates'] == '1')		$punbb_updates = $lang_admin_index['Check for updates enabled'];	else	{		// Get a list of installed hotfix extensions		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id LIKE \'hotfix_%\''		);		($hook = get_hook('ain_update_check_qr_get_hotfixes')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$hotfixes = array();		while ($row = $forum_db->fetch_row($result))		{			$hotfixes[] = urlencode($row[0]);		}		$punbb_updates = '<a href="http://punbb.informer.com/update/?version='.urlencode($forum_config['o_cur_version']).'&amp;hotfixes='.implode(',', $hotfixes).'">'.$lang_admin_index['Check for updates manual'].'</a>';	}}// Get the server load averages (if possible)if (function_exists('sys_getloadavg') && is_array(sys_getloadavg())){	$load_averages = sys_getloadavg();	array_walk($load_averages, create_function('&$v', '$v = round($v, 3);'));	$server_load = $load_averages[0].' '.$load_averages[1].' '.$load_averages[2];}else if (@is_readable('/proc/loadavg')){	// We use @ just in case	$fh = @fopen('/proc/loadavg', 'r');	$load_averages = @fread($fh, 64);	@fclose($fh);	$load_averages = empty($load_averages) ? array() : explode(' ', $load_averages);	$server_load = isset($load_averages[2]) ? $load_averages[0].' '.$load_averages[1].' '.$load_averages[2] : 'Not available';}else if (!in_array(PHP_OS, array('WINNT', 'WIN32')) && preg_match('/averages?: ([0-9\.]+),[\s]+([0-9\.]+),[\s]+([0-9\.]+)/i', @exec('uptime'), $load_averages))	$server_load = $load_averages[1].' '.$load_averages[2].' '.$load_averages[3];else	$server_load = $lang_admin_index['Not available'];// Get number of current visitors$query = array(	'SELECT'	=> 'COUNT(o.user_id)',	'FROM'		=> 'online AS o',	'WHERE'		=> 'o.idle=0');($hook = get_hook('ain_qr_get_users_online')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$num_online = $forum_db->result($result);// Get the database system version$db_version = $forum_db->get_version();// Collect some additional info about MySQLif (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$db_version = 'MySQL '.$db_version;	// Calculate total db size/row count	$result = $forum_db->query('SHOW TABLE STATUS FROM `'.$db_name.'` LIKE \''.$db_prefix.'%\'') or error(__FILE__, __LINE__);	$total_records = $total_size = 0;	while ($status = $forum_db->fetch_assoc($result))	{		$total_records += $status['Rows'];		$total_size += $status['Data_length'] + $status['Index_length'];	}	$total_size = $total_size / 1024;	if ($total_size > 1024)		$total_size = forum_number_format($total_size / 1024, 2).' MB';	else		$total_size = forum_number_format($total_size, 2).' KB';}// Check for the existance of various PHP opcode caches/optimizersif (function_exists('mmcache'))	$php_accelerator = '<a href="http://turck-mmcache.sourceforge.net/">Turck MMCache</a>';else if (isset($_PHPA))	$php_accelerator = '<a href="http://www.php-accelerator.co.uk/">ionCube PHP Accelerator</a>';else if (ini_get('apc.enabled'))	$php_accelerator ='<a href="http://www.php.net/apc/">Alternative PHP Cache (APC)</a>';else if (ini_get('zend_optimizer.optimization_level'))	$php_accelerator = '<a href="http://www.zend.com/products/zend_optimizer/">Zend Optimizer</a>';else if (ini_get('eaccelerator.enable'))	$php_accelerator = '<a href="http://eaccelerator.net/">eAccelerator</a>';else if (ini_get('xcache.cacher'))	$php_accelerator = '<a href="http://xcache.lighttpd.net/">XCache</a>';else	$php_accelerator = $lang_admin_index['Not applicable'];// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])));if ($forum_user['g_id'] == FORUM_ADMIN)	$forum_page['crumbs'][] = array($lang_admin_common['Start'], forum_link($forum_url['admin_index']));$forum_page['crumbs'][] = array($lang_admin_common['Information'], forum_link($forum_url['admin_index']));($hook = get_hook('ain_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-information');require FORUM_ROOT.'header.php';$forum_page['item_count'] = 0;// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ain_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_index['Information head'] ?></span></h2>	</div>	<div class="main-content main-frm"><?php if (!empty($alert_items)): ?>		<div id="admin-alerts" class="ct-set warn-set">			<div class="ct-box warn-box">				<h3 class="ct-legend hn warn"><span><?php echo $lang_admin_index['Alerts'] ?></span></h3>				<?php echo implode(' ', $alert_items)."\n" ?>			</div>		</div><?php endif; ?>		<div class="ct-group"><?php ($hook = get_hook('ain_pre_version')) ? eval($hook) : null; ?>			<div class="ct-set group-item<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo $lang_admin_index['PunBB version'] ?></span></h3>					<ul class="data-list">						<li><span>PunBB <?php echo $forum_config['o_cur_version'] ?></span></li>						<li><span><?php echo $lang_admin_index['Copyright message'] ?></span></li><?php if (isset($punbb_updates)): ?>						<li><span><?php echo $punbb_updates ?></span></li><?php endif; ?>					</ul>				</div>			</div><?php ($hook = get_hook('ain_pre_community')) ? eval($hook) : null; ?>			<div class="ct-set group-item<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo $lang_admin_index['PunBB community'] ?></span></h3>					<ul class="data-list">						<li><span><?php echo $lang_admin_index['Forums'] ?>: <a href="http://punbb.informer.com/forums/">Forums</a></span></li>						<li><span><?php echo $lang_admin_index['Twitter'] ?>: <a href="https://twitter.com/punbb_forum">@punbb_forum</a></span></li>						<li><span><?php echo $lang_admin_index['Development'] ?>: <a href="https://github.com/punbb/punbb">https://github.com/punbb</a></span></li>					</ul>				</div>			</div><?php ($hook = get_hook('ain_pre_server_load')) ? eval($hook) : null; ?>			<div class="ct-set group-item<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo $lang_admin_index['Server load'] ?></span></h3>					<p><span><?php echo $server_load ?> (<?php echo $num_online.' '.$lang_admin_index['users online']?>)</span></p>				</div>			</div><?php ($hook = get_hook('ain_pre_environment')) ? eval($hook) : null; if ($forum_user['g_id'] == FORUM_ADMIN): ?>			<div class="ct-set group-item<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo $lang_admin_index['Environment'] ?></span></h3>					<ul class="data-list">						<li><span><?php echo $lang_admin_index['Operating system'] ?>: <?php echo PHP_OS ?></span></li>						<li><span>PHP: <?php echo PHP_VERSION ?> - <a href="<?php echo forum_link($forum_url['admin_index']) ?>?action=phpinfo"><?php echo $lang_admin_index['Show info'] ?></a></span></li>						<li><span><?php echo $lang_admin_index['Accelerator'] ?>: <?php echo $php_accelerator ?></span></li>					</ul>				</div>			</div><?php ($hook = get_hook('ain_pre_database')) ? eval($hook) : null; ?>			<div class="ct-set group-item<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo $lang_admin_index['Database'] ?></span></h3>					<ul class="data-list">						<li><span><?php echo implode(' ', $forum_db->get_version()) ?></span></li><?php if (isset($total_records) && isset($total_size)): ?>						<li><span><?php echo $lang_admin_index['Rows'] ?>: <?php echo forum_number_format($total_records) ?></span></li>						<li><span><?php echo $lang_admin_index['Size'] ?>: <?php echo $total_size ?></span></li><?php endif; ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('ain_items_end')) ? eval($hook) : null; ?>		</div>	</div><?php($hook = get_hook('ain_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads the flash messenger class. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */class FlashMessenger{	const TEMPLATE_MSG_BLOCK = '%s';	const TEMPLATE_MSG = '<span class="%s">%s</span>';	//	const MSG_TYPE_ERROR = 'message_error';	const MSG_TYPE_WARNING = 'message_warning';	const MSG_TYPE_INFO = 'message_info';	//	private $messages;	public function __construct()	{		session_cache_limiter('private_no_expire');		$result = session_start();		$this->messages = $this->get_messages();	}	// Add error message	public function add_error($msg)	{		$this->add_message($msg, self::MSG_TYPE_ERROR);	}	// Add warning message	public function add_warning($msg)	{		$this->add_message($msg, self::MSG_TYPE_WARNING);	}	// Add info message	public function add_info($msg)	{		$this->add_message($msg, self::MSG_TYPE_INFO);	}	//	public function show($just_return = false)	{		if (empty($this->messages))			return;		$messages_list = array();		foreach ($this->messages as $msg)		{			$messages_list[] = sprintf(self::TEMPLATE_MSG, $msg[1], $msg[0]);		}		if (!empty($messages_list))		{			$m = sprintf(self::TEMPLATE_MSG_BLOCK, implode('', $messages_list));			if ($just_return) {				$this->clear();				return $m;			}			echo $m;		}		$this->clear();	}	//	private function clear()	{		$this->messages = array();		$this->save_messages();	}	//	private function add_message($message, $type)	{		array_push($this->messages, array($message, $type));		$this->save_messages();	}	private function save_messages()	{		 $_SESSION['forum_flash'] = serialize($this->messages);	}	private function get_messages()	{		$messages = array();		if (isset($_SESSION['forum_flash'])) {			$tmp_messages = unserialize($_SESSION['forum_flash']);			if (is_array($tmp_messages))				$messages = $tmp_messages;		}		return $messages;	}}// Create the flash messenger adapter object$forum_flash = new FlashMessenger();
<?php// Language definitions used in help.php$lang_help = array('Help'					=>	'Help','Help with'				=>	'Help with %s','produces'				=>	'produces','BBCode info'			=>	'Administrators have the ability to enable or disable BBCode. If BBCode is enabled a link to BBCode help will appear when you compose/edit a post or your signature. BBCode is a collection of formatting tags that are used to change the look of text in this forum. BBCode is based on the same principal as, and is very similar to, HTML. Below is a list of all the available BBCodes and instructions on how to use them.','Image info'			=>	'Administrators have the ability to enable or disable the display of images in posts and/or signatures. If image display is enabled a link to Image help will appear when you compose/edit a post or your signature. Images are inserted using the BBCode [img] tag. The text appearing after the "=" sign in the opening tag is used for the alt attribute and should be included whenever possible.','Text style'			=>	'Text appearance can be changed with the following tags which can be nested.','Bold text'				=>	'Bold text','Underlined text'		=>	'Underlined text','Italic text'			=>	'Italic text','Red text'				=>	'Red text','Blue text'				=>	'Blue text','Heading text'			=>	'Heading text','Links info'			=>	'You can create links to other documents or to email addresses using the following tags:','My e-mail address'		=>	'My email address','Quotes info'			=>	'To quote someone use the quote tag. You can use the quote tag without specifying a name.','Quote text'			=>	'This is the text I want to quote.','produces named'		=>	'produces a quote box citing the person being quoted.','produces unnamed'		=>	'produces a bare quote box.','Code info'				=>	'When displaying source code you should make sure that you use the code tag. Text displayed with the code tag will use a monospaced font and will not be affected by other tags. Long items of code will cause the text to scroll.','Code text'				=>	'This is some code.','Code text long'		=>	'This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code.','produces code box'		=>	'produces a code box.','produces scroll box'	=>	'produces a scrolling code box.','List info'				=>	'To create a list you can use the list tag. You can create 3 types of lists using the list tag.','List text 1'			=>	'Example list item 1.','List text 2'			=>	'Example list item 2.','List text 3'			=>	'Example list item 3.','produces list'			=>	'produces a bulleted list.','produces decimal list'	=>	'produces a numbered list.','produces alpha list'	=>	'produces an alphabetically labelled list.','Bold, underlined text'	=>	'Bold, underlined text','Smilies info'			=>	'If you like (and if it is enabled), the forum can convert a selection of smilies to image representations of those smilies. This forum recognizes the smilies listed below and replaces them with images.');
<?php/** * Loads the regular expressions used to match SEF URL requests to their proper URLs. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_rewrite_rules = array(	'/^topic[\/_-]?([0-9]+).*(new|last)[\/_-]?(posts?)(\.html?|\/)?$/i'														=>	'viewtopic.php?id=$1&action=$2',	'/^post[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'viewtopic.php?pid=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'view$1.php?id=$2&p=$4',	'/^feed[\/_-]?(rss|atom)[\/_-]?(f|t)(orum|opic)[\/_-]?([0-9]+)[\/_-]?(\.xml?|\/)?$/i'									=>	'extern.php?action=feed&$2id=$4&type=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*(\.html?|\/)?$/i'																		=>	'view$1.php?id=$2',	'/^new[\/_-]?reply[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?tid=$1',	'/^new[\/_-]?reply[\/_-]?([0-9]+)[\/_-]?quote[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'post.php?tid=$1&qid=$2',	'/^new[\/_-]?topic[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?fid=$1',	'/^(delete|edit)[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'$1.php?id=$2',	'/^(login|search|register)(\.html?|\/)?$/i'																				=>	'$1.php',	'/^logout[\/_-]?([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'																=>	'login.php?action=out&id=$1&csrf_token=$2',	'/^request[\/_-]?password(\.html?|\/)?$/i'																				=>	'login.php?action=forget',	'/^user[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'profile.php?id=$1',	'/^user[\/_-]?([0-9]+)[\/_-]?([a-z]+)(\.html?|\/)?$/i'																	=>	'profile.php?section=$2&id=$1',	'/^(delete)[\/_-]?(avatar|user)?[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'										=>	'profile.php?action=$1_$2&id=$3&csrf_token=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)[\/_-]([a-zA-Z0-9]+)(\.html?|\/)?$/i'									=>	'profile.php?action=change_$1&id=$3&key=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'														=>	'profile.php?action=change_$1&id=$3',	'/^search[\/_-]?advanced(\.html?|\/)?$/i'																				=>	'search.php?advanced=1',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_new&forum=$2',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_new&forum=$2&p=$4',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_recent&value=$2',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_recent&value=$2&p=$4',	'/^search[\/_-]?(new|recent|unanswered)(\.html?|\/)?$/i'																=>	'search.php?action=show_$1',	'/^search[\/_-]?(new|recent|unanswered)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'search.php?action=show_$1&p=$3',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)(\.html?|\/)?$/i'															=>	'search.php?action=show_subscriptions&user_id=$1',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'								=>	'search.php?action=show_subscriptions&user_id=$1&p=$3',	'/^search[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'search.php?search_id=$1',	'/^search[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'													=>	'search.php?search_id=$1&p=$3',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'search.php?action=show_user_$1&user_id=$2',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'					=>	'search.php?action=show_user_$1&user_id=$2&p=$4',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/?$/i'					=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/page\/([0-9]+)\/?$/i'	=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7&p=$8',	'/^search-k(.*)-([0-9-]+)-a(.*)-(message|subject|all)-([0-9]+)-(ASC|DESC)-(posts|topics).html?$/i'						=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search-k(.*)-(message|subject|all)-a(.*)-([0-9]+)-(ASC|DESC)-([0-9-]+)-(posts|topics)-p([0-9]+).html?$/i'			=>	'search.php?action=search&keywords=$1&author=$3&forum=$6&search_in=$2&sort_by=$4&sort_dir=$5&show_as=$7&p=$8',	'/^users(\.html?|\/)?$/i'																								=>	'userlist.php',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'						=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4&p=$6',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)(\.html?|\/)?$/i'													=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4',	'/^(email|report|subscribe|unsubscribe)[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'								=>	'misc.php?$1=$2&csrf_token=$3',	'/^(mark|rules)[\/_-]?(read)?[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'														=>	'misc.php?action=$1$2&csrf_token=$3',	'/^mark[\/_-](forum)[\/_-]?([0-9]+)[\/_-](read)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'										=>	'misc.php?action=markforumread&fid=$2&csrf_token=$4',	'/^help[\/_-]([a-z]+)(\.html?|\/)?$/i'																					=>	'help.php?section=$1',	'/^moderate[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'moderate.php?fid=$1',	'/^move_topics[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'															=>	'moderate.php?fid=$1&move_topics=$2',	'/^(open|close|stick|unstick)[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'							=>	'moderate.php?fid=$2&$1=$3&csrf_token=$4',	'/^moderate[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'moderate.php?fid=$1&p=$3',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'																=>	'moderate.php?fid=$1&tid=$2',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'moderate.php?fid=$1&tid=$2&p=$4',	'/^get_host[\/_-]?([0-9]+|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(\.html?|\/)?$/i'								=>	'moderate.php?get_host=$1',	'/^feed[\/_-]?(rss|atom)(\.xml?|\/)?$/i'																				=>	'extern.php?action=feed&type=$1');
<?php/*** Utilities for processing "special" characters in UTF-8. "Special" largely means anything which would* be regarded as a non-word character, like ASCII control characters and punctuation. This has a "Roman"* bias - it would be unaware of modern Chinese "punctuation" characters for example.* Note: requires utils/unicode.php to be loaded* @version $Id: specials.php,v 1.2 2006/10/16 21:13:59 harryf Exp $* @package utf8* @subpackage utils* @see utf8_is_valid*///--------------------------------------------------------------------/*** Used internally. Builds a PCRE pattern from the $UTF8_SPECIAL_CHARS * array defined in this file* The $UTF8_SPECIAL_CHARS should contain all special characters (non-letter/non-digit)* defined in the various local charsets - it's not a complete list of* non-alphanum characters in UTF-8. It's not perfect but should match most* cases of special chars.* This function adds the control chars 0x00 to 0x19 to the array of* special chars (they are not included in $UTF8_SPECIAL_CHARS)* @package utf8* @subpackage utils* @return string* @see utf8_from_unicode* @see utf8_is_word_chars* @see utf8_strip_specials*/function utf8_specials_pattern() {    static $pattern = NULL;    if ( !$pattern ) {        $UTF8_SPECIAL_CHARS = array(    0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022, 0x0023,    0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 0x002c,    0x002f,         0x003b, 0x003c, 0x003d, 0x003e, 0x003f, 0x0040, 0x005b,    0x005c, 0x005d, 0x005e,         0x0060, 0x007b, 0x007c, 0x007d, 0x007e,    0x007f, 0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x0085, 0x0086, 0x0087, 0x0088,    0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 0x008e, 0x008f, 0x0090, 0x0091, 0x0092,    0x0093, 0x0094, 0x0095, 0x0096, 0x0097, 0x0098, 0x0099, 0x009a, 0x009b, 0x009c,    0x009d, 0x009e, 0x009f, 0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00a4, 0x00a5, 0x00a6,    0x00a7, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x00af, 0x00b0,    0x00b1, 0x00b2, 0x00b3, 0x00b4, 0x00b5, 0x00b6, 0x00b7, 0x00b8, 0x00b9, 0x00ba,    0x00bb, 0x00bc, 0x00bd, 0x00be, 0x00bf, 0x00d7, 0x00f7, 0x02c7, 0x02d8, 0x02d9,    0x02da, 0x02db, 0x02dc, 0x02dd, 0x0300, 0x0301, 0x0303, 0x0309, 0x0323, 0x0384,    0x0385, 0x0387, 0x03b2, 0x03c6, 0x03d1, 0x03d2, 0x03d5, 0x03d6, 0x05b0, 0x05b1,    0x05b2, 0x05b3, 0x05b4, 0x05b5, 0x05b6, 0x05b7, 0x05b8, 0x05b9, 0x05bb, 0x05bc,    0x05bd, 0x05be, 0x05bf, 0x05c0, 0x05c1, 0x05c2, 0x05c3, 0x05f3, 0x05f4, 0x060c,    0x061b, 0x061f, 0x0640, 0x064b, 0x064c, 0x064d, 0x064e, 0x064f, 0x0650, 0x0651,    0x0652, 0x066a, 0x0e3f, 0x200c, 0x200d, 0x200e, 0x200f, 0x2013, 0x2014, 0x2015,    0x2017, 0x2018, 0x2019, 0x201a, 0x201c, 0x201d, 0x201e, 0x2020, 0x2021, 0x2022,    0x2026, 0x2030, 0x2032, 0x2033, 0x2039, 0x203a, 0x2044, 0x20a7, 0x20aa, 0x20ab,    0x20ac, 0x2116, 0x2118, 0x2122, 0x2126, 0x2135, 0x2190, 0x2191, 0x2192, 0x2193,    0x2194, 0x2195, 0x21b5, 0x21d0, 0x21d1, 0x21d2, 0x21d3, 0x21d4, 0x2200, 0x2202,    0x2203, 0x2205, 0x2206, 0x2207, 0x2208, 0x2209, 0x220b, 0x220f, 0x2211, 0x2212,    0x2215, 0x2217, 0x2219, 0x221a, 0x221d, 0x221e, 0x2220, 0x2227, 0x2228, 0x2229,    0x222a, 0x222b, 0x2234, 0x223c, 0x2245, 0x2248, 0x2260, 0x2261, 0x2264, 0x2265,    0x2282, 0x2283, 0x2284, 0x2286, 0x2287, 0x2295, 0x2297, 0x22a5, 0x22c5, 0x2310,    0x2320, 0x2321, 0x2329, 0x232a, 0x2469, 0x2500, 0x2502, 0x250c, 0x2510, 0x2514,    0x2518, 0x251c, 0x2524, 0x252c, 0x2534, 0x253c, 0x2550, 0x2551, 0x2552, 0x2553,    0x2554, 0x2555, 0x2556, 0x2557, 0x2558, 0x2559, 0x255a, 0x255b, 0x255c, 0x255d,    0x255e, 0x255f, 0x2560, 0x2561, 0x2562, 0x2563, 0x2564, 0x2565, 0x2566, 0x2567,    0x2568, 0x2569, 0x256a, 0x256b, 0x256c, 0x2580, 0x2584, 0x2588, 0x258c, 0x2590,    0x2591, 0x2592, 0x2593, 0x25a0, 0x25b2, 0x25bc, 0x25c6, 0x25ca, 0x25cf, 0x25d7,    0x2605, 0x260e, 0x261b, 0x261e, 0x2660, 0x2663, 0x2665, 0x2666, 0x2701, 0x2702,    0x2703, 0x2704, 0x2706, 0x2707, 0x2708, 0x2709, 0x270c, 0x270d, 0x270e, 0x270f,    0x2710, 0x2711, 0x2712, 0x2713, 0x2714, 0x2715, 0x2716, 0x2717, 0x2718, 0x2719,    0x271a, 0x271b, 0x271c, 0x271d, 0x271e, 0x271f, 0x2720, 0x2721, 0x2722, 0x2723,    0x2724, 0x2725, 0x2726, 0x2727, 0x2729, 0x272a, 0x272b, 0x272c, 0x272d, 0x272e,    0x272f, 0x2730, 0x2731, 0x2732, 0x2733, 0x2734, 0x2735, 0x2736, 0x2737, 0x2738,    0x2739, 0x273a, 0x273b, 0x273c, 0x273d, 0x273e, 0x273f, 0x2740, 0x2741, 0x2742,    0x2743, 0x2744, 0x2745, 0x2746, 0x2747, 0x2748, 0x2749, 0x274a, 0x274b, 0x274d,    0x274f, 0x2750, 0x2751, 0x2752, 0x2756, 0x2758, 0x2759, 0x275a, 0x275b, 0x275c,    0x275d, 0x275e, 0x2761, 0x2762, 0x2763, 0x2764, 0x2765, 0x2766, 0x2767, 0x277f,    0x2789, 0x2793, 0x2794, 0x2798, 0x2799, 0x279a, 0x279b, 0x279c, 0x279d, 0x279e,    0x279f, 0x27a0, 0x27a1, 0x27a2, 0x27a3, 0x27a4, 0x27a5, 0x27a6, 0x27a7, 0x27a8,    0x27a9, 0x27aa, 0x27ab, 0x27ac, 0x27ad, 0x27ae, 0x27af, 0x27b1, 0x27b2, 0x27b3,    0x27b4, 0x27b5, 0x27b6, 0x27b7, 0x27b8, 0x27b9, 0x27ba, 0x27bb, 0x27bc, 0x27bd,    0x27be, 0xf6d9, 0xf6da, 0xf6db, 0xf8d7, 0xf8d8, 0xf8d9, 0xf8da, 0xf8db, 0xf8dc,    0xf8dd, 0xf8de, 0xf8df, 0xf8e0, 0xf8e1, 0xf8e2, 0xf8e3, 0xf8e4, 0xf8e5, 0xf8e6,    0xf8e7, 0xf8e8, 0xf8e9, 0xf8ea, 0xf8eb, 0xf8ec, 0xf8ed, 0xf8ee, 0xf8ef, 0xf8f0,    0xf8f1, 0xf8f2, 0xf8f3, 0xf8f4, 0xf8f5, 0xf8f6, 0xf8f7, 0xf8f8, 0xf8f9, 0xf8fa,    0xf8fb, 0xf8fc, 0xf8fd, 0xf8fe, 0xfe7c, 0xfe7d,            );        $pattern = preg_quote(utf8_from_unicode($UTF8_SPECIAL_CHARS), '/');        $pattern = '/[\x00-\x19'.$pattern.']/u';    }    return $pattern;}//--------------------------------------------------------------------/*** Checks a string for whether it contains only word characters. This* is logically equivalent to the \w PCRE meta character. Note that* this is not a 100% guarantee that the string only contains alpha /* numeric characters but just that common non-alphanumeric are not* in the string, including ASCII device control characters.* @package utf8* @subpackage utils* @param string to check* @return boolean TRUE if the string only contains word characters* @see utf8_specials_pattern*/function utf8_is_word_chars($str) {    return !(bool)preg_match(utf8_specials_pattern(),$str);}//--------------------------------------------------------------------/*** Removes special characters (nonalphanumeric) from a UTF-8 string* * This can be useful as a helper for sanitizing a string for use as* something like a file name or a unique identifier. Be warned though* it does not handle all possible non-alphanumeric characters and is* not intended is some kind of security / injection filter.** @package utf8* @subpackage utils* @author Andreas Gohr <andi@splitbrain.org>* @param string $string The UTF8 string to strip of special chars* @param string (optional) $repl   Replace special with this string* @return string with common non-alphanumeric characters removed* @see utf8_specials_pattern*/function utf8_strip_specials($string, $repl=''){    return preg_replace(utf8_specials_pattern(), $repl, $string);}
<?php// {{{ license/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4 foldmethod=marker: *///// +----------------------------------------------------------------------+// | This library is free software; you can redistribute it and/or modify |// | it under the terms of the GNU Lesser General Public License as       |// | published by the Free Software Foundation; either version 2.1 of the |// | License, or (at your option) any later version.                      |// |                                                                      |// | This library is distributed in the hope that it will be useful, but  |// | WITHOUT ANY WARRANTY; without even the implied warranty of           |// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    |// | Lesser General Public License for more details.                      |// |                                                                      |// | You should have received a copy of the GNU Lesser General Public     |// | License along with this library; if not, write to the Free Software  |// | Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 |// | USA.                                                                 |// +----------------------------------------------------------------------+//// }}}/** * Encode/decode Internationalized Domain Names. * * The class allows to convert internationalized domain names * (see RFC 3490 for details) as they can be used with various registries worldwide * to be translated between their original (localized) form and their encoded form * as it will be used in the DNS (Domain Name System). * * The class provides two public methods, encode() and decode(), which do exactly * what you would expect them to do. You are allowed to use complete domain names, * simple strings and complete email addresses as well. That means, that you might * use any of the following notations: * * - www.nrgler.com * - xn--nrgler-wxa * - xn--brse-5qa.xn--knrz-1ra.info * * Unicode input might be given as either UTF-8 string, UCS-4 string or UCS-4 array. * Unicode output is available in the same formats. * You can select your preferred format via {@link set_paramter()}. * * ACE input and output is always expected to be ASCII. * * @author  Matthias Sommerfeld <mso@phlylabs.de> * @copyright 2004-2011 phlyLabs Berlin, http://phlylabs.de * @version 0.8.0 2011-03-11 */class idna_convert{    // NP See below    // Internal settings, do not mess with them    protected $_punycode_prefix = 'xn--';    protected $_invalid_ucs = 0x80000000;    protected $_max_ucs = 0x10FFFF;    protected $_base = 36;    protected $_tmin = 1;    protected $_tmax = 26;    protected $_skew = 38;    protected $_damp = 700;    protected $_initial_bias = 72;    protected $_initial_n = 0x80;    protected $_sbase = 0xAC00;    protected $_lbase = 0x1100;    protected $_vbase = 0x1161;    protected $_tbase = 0x11A7;    protected $_lcount = 19;    protected $_vcount = 21;    protected $_tcount = 28;    protected $_ncount = 588;   // _vcount * _tcount    protected $_scount = 11172; // _lcount * _tcount * _vcount    protected $_error = false;    protected static $_mb_string_overload = null;    // See {@link set_paramter()} for details of how to change the following    // settings from within your script / application    protected $_api_encoding = 'utf8';   // Default input charset is UTF-8    protected $_allow_overlong = false;  // Overlong UTF-8 encodings are forbidden    protected $_strict_mode = false;     // Behave strict or not    protected $_idn_version = 2003;      // Can be either 2003 (old, default) or 2008    /**     * the constructor     *     * @param array $options     * @return boolean     * @since 0.5.2     */    public function __construct($options = false)    {        $this->slast = $this->_sbase + $this->_lcount * $this->_vcount * $this->_tcount;        // If parameters are given, pass these to the respective method        if (is_array($options)) {            $this->set_parameter($options);        }        // populate mbstring overloading cache if not set        if (self::$_mb_string_overload === null) {            self::$_mb_string_overload = (extension_loaded('mbstring')                && (ini_get('mbstring.func_overload') & 0x02) === 0x02);        }    }    /**     * Sets a new option value. Available options and values:     * [encoding - Use either UTF-8, UCS4 as array or UCS4 as string as input ('utf8' for UTF-8,     *         'ucs4_string' and 'ucs4_array' respectively for UCS4); The output is always UTF-8]     * [overlong - Unicode does not allow unnecessarily long encodings of chars,     *             to allow this, set this parameter to true, else to false;     *             default is false.]     * [strict - true: strict mode, good for registration purposes - Causes errors     *           on failures; false: loose mode, ideal for "wildlife" applications     *           by silently ignoring errors and returning the original input instead     *     * @param    mixed     Parameter to set (string: single parameter; array of Parameter => Value pairs)     * @param    string    Value to use (if parameter 1 is a string)     * @return   boolean   true on success, false otherwise     */    public function set_parameter($option, $value = false)    {        if (!is_array($option)) {            $option = array($option => $value);        }        foreach ($option as $k => $v) {            switch ($k) {            case 'encoding':                switch ($v) {                case 'utf8':                case 'ucs4_string':                case 'ucs4_array':                    $this->_api_encoding = $v;                    break;                default:                    $this->_error('Set Parameter: Unknown parameter '.$v.' for option '.$k);                    return false;                }                break;            case 'overlong':                $this->_allow_overlong = ($v) ? true : false;                break;            case 'strict':                $this->_strict_mode = ($v) ? true : false;                break;            case 'idn_version':                if (in_array($v, array('2003', '2008'))) {                    $this->_idn_version = $v;                } else {                    $this->_error('Set Parameter: Unknown parameter '.$v.' for option '.$k);                }                break;            case 'encode_german_sz': // Deprecated                if (!$v) {                    self::$NP['replacemaps'][0xDF] = array(0x73, 0x73);                } else {                    unset(self::$NP['replacemaps'][0xDF]);                }                break;            default:                $this->_error('Set Parameter: Unknown option '.$k);                return false;            }        }        return true;    }    /**     * Decode a given ACE domain name     * @param    string   Domain name (ACE string)     * [@param    string   Desired output encoding, see {@link set_parameter}]     * @return   string   Decoded Domain name (UTF-8 or UCS-4)     */    public function decode($input, $one_time_encoding = false)    {        // Optionally set        if ($one_time_encoding) {            switch ($one_time_encoding) {            case 'utf8':            case 'ucs4_string':            case 'ucs4_array':                break;            default:                $this->_error('Unknown encoding '.$one_time_encoding);                return false;            }        }        // Make sure to drop any newline characters around        $input = trim($input);        // Negotiate input and try to determine, whether it is a plain string,        // an email address or something like a complete URL        if (strpos($input, '@')) { // Maybe it is an email address            // No no in strict mode            if ($this->_strict_mode) {                $this->_error('Only simple domain name parts can be handled in strict mode');                return false;            }            list ($email_pref, $input) = explode('@', $input, 2);            $arr = explode('.', $input);            foreach ($arr as $k => $v) {                if (preg_match('!^'.preg_quote($this->_punycode_prefix, '!').'!', $v)) {                    $conv = $this->_decode($v);                    if ($conv) $arr[$k] = $conv;                }            }            $input = join('.', $arr);            $arr = explode('.', $email_pref);            foreach ($arr as $k => $v) {                if (preg_match('!^'.preg_quote($this->_punycode_prefix, '!').'!', $v)) {                    $conv = $this->_decode($v);                    if ($conv) $arr[$k] = $conv;                }            }            $email_pref = join('.', $arr);            $return = $email_pref . '@' . $input;        } elseif (preg_match('![:\./]!', $input)) { // Or a complete domain name (with or without paths / parameters)            // No no in strict mode            if ($this->_strict_mode) {                $this->_error('Only simple domain name parts can be handled in strict mode');                return false;            }            $parsed = parse_url($input);            if (isset($parsed['host'])) {                $arr = explode('.', $parsed['host']);                foreach ($arr as $k => $v) {                    $conv = $this->_decode($v);                    if ($conv) $arr[$k] = $conv;                }                $parsed['host'] = join('.', $arr);                $return =                        (empty($parsed['scheme']) ? '' : $parsed['scheme'].(strtolower($parsed['scheme']) == 'mailto' ? ':' : '://'))                        .(empty($parsed['user']) ? '' : $parsed['user'].(empty($parsed['pass']) ? '' : ':'.$parsed['pass']).'@')                        .$parsed['host']                        .(empty($parsed['port']) ? '' : ':'.$parsed['port'])                        .(empty($parsed['path']) ? '' : $parsed['path'])                        .(empty($parsed['query']) ? '' : '?'.$parsed['query'])                        .(empty($parsed['fragment']) ? '' : '#'.$parsed['fragment']);            } else { // parse_url seems to have failed, try without it                $arr = explode('.', $input);                foreach ($arr as $k => $v) {                    $conv = $this->_decode($v);                    $arr[$k] = ($conv) ? $conv : $v;                }                $return = join('.', $arr);            }        } else { // Otherwise we consider it being a pure domain name string            $return = $this->_decode($input);            if (!$return) $return = $input;        }        // The output is UTF-8 by default, other output formats need conversion here        // If one time encoding is given, use this, else the objects property        switch (($one_time_encoding) ? $one_time_encoding : $this->_api_encoding) {        case 'utf8':            return $return;            break;        case 'ucs4_string':           return $this->_ucs4_to_ucs4_string($this->_utf8_to_ucs4($return));           break;        case 'ucs4_array':            return $this->_utf8_to_ucs4($return);            break;        default:            $this->_error('Unsupported output format');            return false;        }    }    /**     * Encode a given UTF-8 domain name     * @param    string   Domain name (UTF-8 or UCS-4)     * [@param    string   Desired input encoding, see {@link set_parameter}]     * @return   string   Encoded Domain name (ACE string)     */    public function encode($decoded, $one_time_encoding = false)    {        // Forcing conversion of input to UCS4 array        // If one time encoding is given, use this, else the objects property        switch ($one_time_encoding ? $one_time_encoding : $this->_api_encoding) {        case 'utf8':            $decoded = $this->_utf8_to_ucs4($decoded);            break;        case 'ucs4_string':           $decoded = $this->_ucs4_string_to_ucs4($decoded);        case 'ucs4_array':           break;        default:            $this->_error('Unsupported input format: '.($one_time_encoding ? $one_time_encoding : $this->_api_encoding));            return false;        }        // No input, no output, what else did you expect?        if (empty($decoded)) return '';        // Anchors for iteration        $last_begin = 0;        // Output string        $output = '';        foreach ($decoded as $k => $v) {            // Make sure to use just the plain dot            switch($v) {            case 0x3002:            case 0xFF0E:            case 0xFF61:                $decoded[$k] = 0x2E;                // Right, no break here, the above are converted to dots anyway            // Stumbling across an anchoring character            case 0x2E:            case 0x2F:            case 0x3A:            case 0x3F:            case 0x40:                // Neither email addresses nor URLs allowed in strict mode                if ($this->_strict_mode) {                   $this->_error('Neither email addresses nor URLs are allowed in strict mode.');                   return false;                } else {                    // Skip first char                    if ($k) {                        $encoded = '';                        $encoded = $this->_encode(array_slice($decoded, $last_begin, (($k)-$last_begin)));                        if ($encoded) {                            $output .= $encoded;                        } else {                            $output .= $this->_ucs4_to_utf8(array_slice($decoded, $last_begin, (($k)-$last_begin)));                        }                        $output .= chr($decoded[$k]);                    }                    $last_begin = $k + 1;                }            }        }        // Catch the rest of the string        if ($last_begin) {            $inp_len = sizeof($decoded);            $encoded = '';            $encoded = $this->_encode(array_slice($decoded, $last_begin, (($inp_len)-$last_begin)));            if ($encoded) {                $output .= $encoded;            } else {                $output .= $this->_ucs4_to_utf8(array_slice($decoded, $last_begin, (($inp_len)-$last_begin)));            }            return $output;        } else {            if ($output = $this->_encode($decoded)) {                return $output;            } else {                return $this->_ucs4_to_utf8($decoded);            }        }    }    /**     * Removes a weakness of encode(), which cannot properly handle URIs but instead encodes their     * path or query components, too.     * @param string  $uri  Expects the URI as a UTF-8 (or ASCII) string     * @return  string  The URI encoded to Punycode, everything but the host component is left alone     * @since 0.6.4     */    public function encode_uri($uri)    {        $parsed = parse_url($uri);        if (!isset($parsed['host'])) {            $this->_error('The given string does not look like a URI');            return false;        }        $arr = explode('.', $parsed['host']);        foreach ($arr as $k => $v) {            $conv = $this->encode($v, 'utf8');            if ($conv) $arr[$k] = $conv;        }        $parsed['host'] = join('.', $arr);        $return =                (empty($parsed['scheme']) ? '' : $parsed['scheme'].(strtolower($parsed['scheme']) == 'mailto' ? ':' : '://'))                .(empty($parsed['user']) ? '' : $parsed['user'].(empty($parsed['pass']) ? '' : ':'.$parsed['pass']).'@')                .$parsed['host']                .(empty($parsed['port']) ? '' : ':'.$parsed['port'])                .(empty($parsed['path']) ? '' : $parsed['path'])                .(empty($parsed['query']) ? '' : '?'.$parsed['query'])                .(empty($parsed['fragment']) ? '' : '#'.$parsed['fragment']);        return $return;    }    /**     * Use this method to get the last error ocurred     * @param    void     * @return   string   The last error, that occured     */    public function get_last_error()    {        return $this->_error;    }    /**     * The actual decoding algorithm     * @param string     * @return mixed     */    protected function _decode($encoded)    {        $decoded = array();        // find the Punycode prefix        if (!preg_match('!^'.preg_quote($this->_punycode_prefix, '!').'!', $encoded)) {            $this->_error('This is not a punycode string');            return false;        }        $encode_test = preg_replace('!^'.preg_quote($this->_punycode_prefix, '!').'!', '', $encoded);        // If nothing left after removing the prefix, it is hopeless        if (!$encode_test) {            $this->_error('The given encoded string was empty');            return false;        }        // Find last occurence of the delimiter        $delim_pos = strrpos($encoded, '-');        if ($delim_pos > self::byteLength($this->_punycode_prefix)) {            for ($k = self::byteLength($this->_punycode_prefix); $k < $delim_pos; ++$k) {                $decoded[] = ord($encoded{$k});            }        }        $deco_len = count($decoded);        $enco_len = self::byteLength($encoded);        // Wandering through the strings; init        $is_first = true;        $bias = $this->_initial_bias;        $idx = 0;        $char = $this->_initial_n;        for ($enco_idx = ($delim_pos) ? ($delim_pos + 1) : 0; $enco_idx < $enco_len; ++$deco_len) {            for ($old_idx = $idx, $w = 1, $k = $this->_base; 1 ; $k += $this->_base) {                $digit = $this->_decode_digit($encoded{$enco_idx++});                $idx += $digit * $w;                $t = ($k <= $bias) ? $this->_tmin :                        (($k >= $bias + $this->_tmax) ? $this->_tmax : ($k - $bias));                if ($digit < $t) break;                $w = (int) ($w * ($this->_base - $t));            }            $bias = $this->_adapt($idx - $old_idx, $deco_len + 1, $is_first);            $is_first = false;            $char += (int) ($idx / ($deco_len + 1));            $idx %= ($deco_len + 1);            if ($deco_len > 0) {                // Make room for the decoded char                for ($i = $deco_len; $i > $idx; $i--) $decoded[$i] = $decoded[($i - 1)];            }            $decoded[$idx++] = $char;        }        return $this->_ucs4_to_utf8($decoded);    }    /**     * The actual encoding algorithm     * @param  string     * @return mixed     */    protected function _encode($decoded)    {        // We cannot encode a domain name containing the Punycode prefix        $extract = self::byteLength($this->_punycode_prefix);        $check_pref = $this->_utf8_to_ucs4($this->_punycode_prefix);        $check_deco = array_slice($decoded, 0, $extract);        if ($check_pref == $check_deco) {            $this->_error('This is already a punycode string');            return false;        }        // We will not try to encode strings consisting of basic code points only        $encodable = false;        foreach ($decoded as $k => $v) {            if ($v > 0x7a) {                $encodable = true;                break;            }        }        if (!$encodable) {            $this->_error('The given string does not contain encodable chars');            return false;        }        // Do NAMEPREP        $decoded = $this->_nameprep($decoded);        if (!$decoded || !is_array($decoded)) return false; // NAMEPREP failed        $deco_len  = count($decoded);        if (!$deco_len) return false; // Empty array        $codecount = 0; // How many chars have been consumed        $encoded = '';        // Copy all basic code points to output        for ($i = 0; $i < $deco_len; ++$i) {            $test = $decoded[$i];            // Will match [-0-9a-zA-Z]            if ((0x2F < $test && $test < 0x40) || (0x40 < $test && $test < 0x5B)                    || (0x60 < $test && $test <= 0x7B) || (0x2D == $test)) {                $encoded .= chr($decoded[$i]);                $codecount++;            }        }        if ($codecount == $deco_len) return $encoded; // All codepoints were basic ones        // Start with the prefix; copy it to output        $encoded = $this->_punycode_prefix.$encoded;        // If we have basic code points in output, add an hyphen to the end        if ($codecount) $encoded .= '-';        // Now find and encode all non-basic code points        $is_first = true;        $cur_code = $this->_initial_n;        $bias = $this->_initial_bias;        $delta = 0;        while ($codecount < $deco_len) {            // Find the smallest code point >= the current code point and            // remember the last ouccrence of it in the input            for ($i = 0, $next_code = $this->_max_ucs; $i < $deco_len; $i++) {                if ($decoded[$i] >= $cur_code && $decoded[$i] <= $next_code) {                    $next_code = $decoded[$i];                }            }            $delta += ($next_code - $cur_code) * ($codecount + 1);            $cur_code = $next_code;            // Scan input again and encode all characters whose code point is $cur_code            for ($i = 0; $i < $deco_len; $i++) {                if ($decoded[$i] < $cur_code) {                    $delta++;                } elseif ($decoded[$i] == $cur_code) {                    for ($q = $delta, $k = $this->_base; 1; $k += $this->_base) {                        $t = ($k <= $bias) ? $this->_tmin :                                (($k >= $bias + $this->_tmax) ? $this->_tmax : $k - $bias);                        if ($q < $t) break;                        $encoded .= $this->_encode_digit(intval($t + (($q - $t) % ($this->_base - $t)))); //v0.4.5 Changed from ceil() to intval()                        $q = (int) (($q - $t) / ($this->_base - $t));                    }                    $encoded .= $this->_encode_digit($q);                    $bias = $this->_adapt($delta, $codecount+1, $is_first);                    $codecount++;                    $delta = 0;                    $is_first = false;                }            }            $delta++;            $cur_code++;        }        return $encoded;    }    /**     * Adapt the bias according to the current code point and position     * @param int $delta     * @param int $npoints     * @param int $is_first     * @return int     */    protected function _adapt($delta, $npoints, $is_first)    {        $delta = intval($is_first ? ($delta / $this->_damp) : ($delta / 2));        $delta += intval($delta / $npoints);        for ($k = 0; $delta > (($this->_base - $this->_tmin) * $this->_tmax) / 2; $k += $this->_base) {            $delta = intval($delta / ($this->_base - $this->_tmin));        }        return intval($k + ($this->_base - $this->_tmin + 1) * $delta / ($delta + $this->_skew));    }    /**     * Encoding a certain digit     * @param    int $d     * @return string     */    protected function _encode_digit($d)    {        return chr($d + 22 + 75 * ($d < 26));    }    /**     * Decode a certain digit     * @param    int $cp     * @return int     */    protected function _decode_digit($cp)    {        $cp = ord($cp);        return ($cp - 48 < 10) ? $cp - 22 : (($cp - 65 < 26) ? $cp - 65 : (($cp - 97 < 26) ? $cp - 97 : $this->_base));    }    /**     * Internal error handling method     * @param  string $error     */    protected function _error($error = '')    {        $this->_error = $error;    }    /**     * Do Nameprep according to RFC3491 and RFC3454     * @param    array    Unicode Characters     * @return   string   Unicode Characters, Nameprep'd     */    protected function _nameprep($input)    {        $output = array();        $error = false;        //        // Mapping        // Walking through the input array, performing the required steps on each of        // the input chars and putting the result into the output array        // While mapping required chars we apply the cannonical ordering        foreach ($input as $v) {            // Map to nothing == skip that code point            if (in_array($v, self::$NP['map_nothing'])) continue;            // Try to find prohibited input            if (in_array($v, self::$NP['prohibit']) || in_array($v, self::$NP['general_prohibited'])) {                $this->_error('NAMEPREP: Prohibited input U+'.sprintf('%08X', $v));                return false;            }            foreach (self::$NP['prohibit_ranges'] as $range) {                if ($range[0] <= $v && $v <= $range[1]) {                    $this->_error('NAMEPREP: Prohibited input U+'.sprintf('%08X', $v));                    return false;                }            }            if (0xAC00 <= $v && $v <= 0xD7AF) {                // Hangul syllable decomposition                foreach ($this->_hangul_decompose($v) as $out) {                    $output[] = (int) $out;                }            } elseif (($this->_idn_version == '2003') && isset(self::$NP['replacemaps'][$v])) {                // There's a decomposition mapping for that code point                // Decompositions only in version 2003 (original) of IDNA                foreach ($this->_apply_cannonical_ordering(self::$NP['replacemaps'][$v]) as $out) {                    $output[] = (int) $out;                }            } else {                $output[] = (int) $v;            }        }        // Before applying any Combining, try to rearrange any Hangul syllables        $output = $this->_hangul_compose($output);        //        // Combine code points        //        $last_class = 0;        $last_starter = 0;        $out_len = count($output);        for ($i = 0; $i < $out_len; ++$i) {            $class = $this->_get_combining_class($output[$i]);            if ((!$last_class || $last_class > $class) && $class) {                // Try to match                $seq_len = $i - $last_starter;                $out = $this->_combine(array_slice($output, $last_starter, $seq_len));                // On match: Replace the last starter with the composed character and remove                // the now redundant non-starter(s)                if ($out) {                    $output[$last_starter] = $out;                    if (count($out) != $seq_len) {                        for ($j = $i+1; $j < $out_len; ++$j) $output[$j-1] = $output[$j];                        unset($output[$out_len]);                    }                    // Rewind the for loop by one, since there can be more possible compositions                    $i--;                    $out_len--;                    $last_class = ($i == $last_starter) ? 0 : $this->_get_combining_class($output[$i-1]);                    continue;                }            }            // The current class is 0            if (!$class) $last_starter = $i;            $last_class = $class;        }        return $output;    }    /**     * Decomposes a Hangul syllable     * (see http://www.unicode.org/unicode/reports/tr15/#Hangul     * @param    integer  32bit UCS4 code point     * @return   array    Either Hangul Syllable decomposed or original 32bit value as one value array     */    protected function _hangul_decompose($char)    {        $sindex = (int) $char - $this->_sbase;        if ($sindex < 0 || $sindex >= $this->_scount) return array($char);        $result = array();        $result[] = (int) $this->_lbase + $sindex / $this->_ncount;        $result[] = (int) $this->_vbase + ($sindex % $this->_ncount) / $this->_tcount;        $T = intval($this->_tbase + $sindex % $this->_tcount);        if ($T != $this->_tbase) $result[] = $T;        return $result;    }    /**     * Ccomposes a Hangul syllable     * (see http://www.unicode.org/unicode/reports/tr15/#Hangul     * @param    array    Decomposed UCS4 sequence     * @return   array    UCS4 sequence with syllables composed     */    protected function _hangul_compose($input)    {        $inp_len = count($input);        if (!$inp_len) return array();        $result = array();        $last = (int) $input[0];        $result[] = $last; // copy first char from input to output        for ($i = 1; $i < $inp_len; ++$i) {            $char = (int) $input[$i];            $sindex = $last - $this->_sbase;            $lindex = $last - $this->_lbase;            $vindex = $char - $this->_vbase;            $tindex = $char - $this->_tbase;            // Find out, whether two current characters are LV and T            if (0 <= $sindex && $sindex < $this->_scount && ($sindex % $this->_tcount == 0)                    && 0 <= $tindex && $tindex <= $this->_tcount) {                // create syllable of form LVT                $last += $tindex;                $result[(count($result) - 1)] = $last; // reset last                continue; // discard char            }            // Find out, whether two current characters form L and V            if (0 <= $lindex && $lindex < $this->_lcount && 0 <= $vindex && $vindex < $this->_vcount) {                // create syllable of form LV                $last = (int) $this->_sbase + ($lindex * $this->_vcount + $vindex) * $this->_tcount;                $result[(count($result) - 1)] = $last; // reset last                continue; // discard char            }            // if neither case was true, just add the character            $last = $char;            $result[] = $char;        }        return $result;    }    /**     * Returns the combining class of a certain wide char     * @param    integer    Wide char to check (32bit integer)     * @return   integer    Combining class if found, else 0     */    protected function _get_combining_class($char)    {        return isset(self::$NP['norm_combcls'][$char]) ? self::$NP['norm_combcls'][$char] : 0;    }    /**     * Applies the cannonical ordering of a decomposed UCS4 sequence     * @param    array      Decomposed UCS4 sequence     * @return   array      Ordered USC4 sequence     */    protected function _apply_cannonical_ordering($input)    {        $swap = true;        $size = count($input);        while ($swap) {            $swap = false;            $last = $this->_get_combining_class(intval($input[0]));            for ($i = 0; $i < $size-1; ++$i) {                $next = $this->_get_combining_class(intval($input[$i+1]));                if ($next != 0 && $last > $next) {                    // Move item leftward until it fits                    for ($j = $i + 1; $j > 0; --$j) {                        if ($this->_get_combining_class(intval($input[$j-1])) <= $next) break;                        $t = intval($input[$j]);                        $input[$j] = intval($input[$j-1]);                        $input[$j-1] = $t;                        $swap = true;                    }                    // Reentering the loop looking at the old character again                    $next = $last;                }                $last = $next;            }        }        return $input;    }    /**     * Do composition of a sequence of starter and non-starter     * @param    array      UCS4 Decomposed sequence     * @return   array      Ordered USC4 sequence     */    protected function _combine($input)    {        $inp_len = count($input);        foreach (self::$NP['replacemaps'] as $np_src => $np_target) {            if ($np_target[0] != $input[0]) continue;            if (count($np_target) != $inp_len) continue;            $hit = false;            foreach ($input as $k2 => $v2) {                if ($v2 == $np_target[$k2]) {                    $hit = true;                } else {                    $hit = false;                    break;                }            }            if ($hit) return $np_src;        }        return false;    }    /**     * This converts an UTF-8 encoded string to its UCS-4 representation     * By talking about UCS-4 "strings" we mean arrays of 32bit integers representing     * each of the "chars". This is due to PHP not being able to handle strings with     * bit depth different from 8. This apllies to the reverse method _ucs4_to_utf8(), too.     * The following UTF-8 encodings are supported:     * bytes bits  representation     * 1        7  0xxxxxxx     * 2       11  110xxxxx 10xxxxxx     * 3       16  1110xxxx 10xxxxxx 10xxxxxx     * 4       21  11110xxx 10xxxxxx 10xxxxxx 10xxxxxx     * 5       26  111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx     * 6       31  1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx     * Each x represents a bit that can be used to store character data.     * The five and six byte sequences are part of Annex D of ISO/IEC 10646-1:2000     * @param string $input     * @return string     */    protected function _utf8_to_ucs4($input)    {        $output = array();        $out_len = 0;        $inp_len = self::byteLength($input);        $mode = 'next';        $test = 'none';        for ($k = 0; $k < $inp_len; ++$k) {            $v = ord($input{$k}); // Extract byte from input string            if ($v < 128) { // We found an ASCII char - put into stirng as is                $output[$out_len] = $v;                ++$out_len;                if ('add' == $mode) {                    $this->_error('Conversion from UTF-8 to UCS-4 failed: malformed input at byte '.$k);                    return false;                }                continue;            }            if ('next' == $mode) { // Try to find the next start byte; determine the width of the Unicode char                $start_byte = $v;                $mode = 'add';                $test = 'range';                if ($v >> 5 == 6) { // &110xxxxx 10xxxxx                    $next_byte = 0; // Tells, how many times subsequent bitmasks must rotate 6bits to the left                    $v = ($v - 192) << 6;                } elseif ($v >> 4 == 14) { // &1110xxxx 10xxxxxx 10xxxxxx                    $next_byte = 1;                    $v = ($v - 224) << 12;                } elseif ($v >> 3 == 30) { // &11110xxx 10xxxxxx 10xxxxxx 10xxxxxx                    $next_byte = 2;                    $v = ($v - 240) << 18;                } elseif ($v >> 2 == 62) { // &111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx                    $next_byte = 3;                    $v = ($v - 248) << 24;                } elseif ($v >> 1 == 126) { // &1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx                    $next_byte = 4;                    $v = ($v - 252) << 30;                } else {                    $this->_error('This might be UTF-8, but I don\'t understand it at byte '.$k);                    return false;                }                if ('add' == $mode) {                    $output[$out_len] = (int) $v;                    ++$out_len;                    continue;                }            }            if ('add' == $mode) {                if (!$this->_allow_overlong && $test == 'range') {                    $test = 'none';                    if (($v < 0xA0 && $start_byte == 0xE0) || ($v < 0x90 && $start_byte == 0xF0) || ($v > 0x8F && $start_byte == 0xF4)) {                        $this->_error('Bogus UTF-8 character detected (out of legal range) at byte '.$k);                        return false;                    }                }                if ($v >> 6 == 2) { // Bit mask must be 10xxxxxx                    $v = ($v - 128) << ($next_byte * 6);                    $output[($out_len - 1)] += $v;                    --$next_byte;                } else {                    $this->_error('Conversion from UTF-8 to UCS-4 failed: malformed input at byte '.$k);                    return false;                }                if ($next_byte < 0) {                    $mode = 'next';                }            }        } // for        return $output;    }    /**     * Convert UCS-4 string into UTF-8 string     * See _utf8_to_ucs4() for details     * @param string  $input     * @return string     */    protected function _ucs4_to_utf8($input)    {        $output = '';        foreach ($input as $k => $v) {            if ($v < 128) { // 7bit are transferred literally                $output .= chr($v);            } elseif ($v < (1 << 11)) { // 2 bytes                $output .= chr(192+($v >> 6)).chr(128+($v & 63));            } elseif ($v < (1 << 16)) { // 3 bytes                $output .= chr(224+($v >> 12)).chr(128+(($v >> 6) & 63)).chr(128+($v & 63));            } elseif ($v < (1 << 21)) { // 4 bytes                $output .= chr(240+($v >> 18)).chr(128+(($v >> 12) & 63)).chr(128+(($v >> 6) & 63)).chr(128+($v & 63));            } elseif (self::$safe_mode) {                $output .= self::$safe_char;            } else {                $this->_error('Conversion from UCS-4 to UTF-8 failed: malformed input at byte '.$k);                return false;            }        }        return $output;    }    /**     * Convert UCS-4 array into UCS-4 string     *     * @param array $input     * @return string     */    protected function _ucs4_to_ucs4_string($input)    {        $output = '';        // Take array values and split output to 4 bytes per value        // The bit mask is 255, which reads &11111111        foreach ($input as $v) {            $output .= chr(($v >> 24) & 255).chr(($v >> 16) & 255).chr(($v >> 8) & 255).chr($v & 255);        }        return $output;    }    /**     * Convert UCS-4 strin into UCS-4 garray     *     * @param  string $input     * @return array     */    protected function _ucs4_string_to_ucs4($input)    {        $output = array();        $inp_len = self::byteLength($input);        // Input length must be dividable by 4        if ($inp_len % 4) {            $this->_error('Input UCS4 string is broken');            return false;        }        // Empty input - return empty output        if (!$inp_len) return $output;        for ($i = 0, $out_len = -1; $i < $inp_len; ++$i) {            // Increment output position every 4 input bytes            if (!($i % 4)) {                $out_len++;                $output[$out_len] = 0;            }            $output[$out_len] += ord($input{$i}) << (8 * (3 - ($i % 4) ) );        }        return $output;    }    /**     * Gets the length of a string in bytes even if mbstring function     * overloading is turned on     *     * @param string $string the string for which to get the length.     * @return integer the length of the string in bytes.     */    protected static function byteLength($string)    {        if (self::$_mb_string_overload) {            return mb_strlen($string, '8bit');        }        return strlen(/*(binary)*/ $string);    }    /**     * Attempts to return a concrete IDNA instance.     *     * @param array $params Set of paramaters     * @return idna_convert     * @access public     */    public function getInstance($params = array())    {        return new idna_convert($params);    }    /**     * Attempts to return a concrete IDNA instance for either php4 or php5,     * only creating a new instance if no IDNA instance with the same     * parameters currently exists.     *     * @param array $params Set of paramaters     *     * @return object idna_convert     * @access public     */    public function singleton($params = array())    {        static $instances;        if (!isset($instances)) {            $instances = array();        }        $signature = serialize($params);        if (!isset($instances[$signature])) {            $instances[$signature] = idna_convert::getInstance($params);        }        return $instances[$signature];    }    /**     * Holds all relevant mapping tables     * See RFC3454 for details     *     * @private array     * @since 0.5.2     */    protected static $NP = array            ('map_nothing' => array(0xAD, 0x34F, 0x1806, 0x180B, 0x180C, 0x180D, 0x200B, 0x200C                    ,0x200D, 0x2060, 0xFE00, 0xFE01, 0xFE02, 0xFE03, 0xFE04, 0xFE05, 0xFE06, 0xFE07                    ,0xFE08, 0xFE09, 0xFE0A, 0xFE0B, 0xFE0C, 0xFE0D, 0xFE0E, 0xFE0F, 0xFEFF                    )            ,'general_prohibited' => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19                    ,20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ,33, 34, 35, 36, 37, 38, 39, 40, 41, 42                    ,43, 44, 47, 59, 60, 61, 62, 63, 64, 91, 92, 93, 94, 95, 96, 123, 124, 125, 126, 127, 0x3002                    )            ,'prohibit' => array(0xA0, 0x340, 0x341, 0x6DD, 0x70F, 0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003                    ,0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x200B, 0x200C, 0x200D, 0x200E, 0x200F                    ,0x2028, 0x2029, 0x202A, 0x202B, 0x202C, 0x202D, 0x202E, 0x202F, 0x205F, 0x206A, 0x206B, 0x206C                    ,0x206D, 0x206E, 0x206F, 0x3000, 0xFEFF, 0xFFF9, 0xFFFA, 0xFFFB, 0xFFFC, 0xFFFD, 0xFFFE, 0xFFFF                    ,0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF, 0x3FFFE, 0x3FFFF, 0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE                    ,0x6FFFF, 0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF, 0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF                    ,0xCFFFE, 0xCFFFF, 0xDFFFE, 0xDFFFF, 0xE0001, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF, 0x10FFFE, 0x10FFFF                    )            ,'prohibit_ranges' => array(array(0x80, 0x9F), array(0x2060, 0x206F), array(0x1D173, 0x1D17A)                    ,array(0xE000, 0xF8FF) ,array(0xF0000, 0xFFFFD), array(0x100000, 0x10FFFD)                    ,array(0xFDD0, 0xFDEF), array(0xD800, 0xDFFF), array(0x2FF0, 0x2FFB), array(0xE0020, 0xE007F)                    )            ,'replacemaps' => array(0x41 => array(0x61), 0x42 => array(0x62), 0x43 => array(0x63)                    ,0x44 => array(0x64), 0x45 => array(0x65), 0x46 => array(0x66), 0x47 => array(0x67)                    ,0x48 => array(0x68), 0x49 => array(0x69), 0x4A => array(0x6A), 0x4B => array(0x6B)                    ,0x4C => array(0x6C), 0x4D => array(0x6D), 0x4E => array(0x6E), 0x4F => array(0x6F)                    ,0x50 => array(0x70), 0x51 => array(0x71), 0x52 => array(0x72), 0x53 => array(0x73)                    ,0x54 => array(0x74), 0x55 => array(0x75), 0x56 => array(0x76), 0x57 => array(0x77)                    ,0x58 => array(0x78), 0x59 => array(0x79), 0x5A => array(0x7A), 0xB5 => array(0x3BC)                    ,0xC0 => array(0xE0), 0xC1 => array(0xE1), 0xC2 => array(0xE2), 0xC3 => array(0xE3)                    ,0xC4 => array(0xE4), 0xC5 => array(0xE5), 0xC6 => array(0xE6), 0xC7 => array(0xE7)                    ,0xC8 => array(0xE8), 0xC9 => array(0xE9), 0xCA => array(0xEA), 0xCB => array(0xEB)                    ,0xCC => array(0xEC), 0xCD => array(0xED), 0xCE => array(0xEE), 0xCF => array(0xEF)                    ,0xD0 => array(0xF0), 0xD1 => array(0xF1), 0xD2 => array(0xF2), 0xD3 => array(0xF3)                    ,0xD4 => array(0xF4), 0xD5 => array(0xF5), 0xD6 => array(0xF6), 0xD8 => array(0xF8)                    ,0xD9 => array(0xF9), 0xDA => array(0xFA), 0xDB => array(0xFB), 0xDC => array(0xFC)                    ,0xDD => array(0xFD), 0xDE => array(0xFE), 0xDF => array(0x73, 0x73)                    ,0x100 => array(0x101), 0x102 => array(0x103), 0x104 => array(0x105)                    ,0x106 => array(0x107), 0x108 => array(0x109), 0x10A => array(0x10B)                    ,0x10C => array(0x10D), 0x10E => array(0x10F), 0x110 => array(0x111)                    ,0x112 => array(0x113), 0x114 => array(0x115), 0x116 => array(0x117)                    ,0x118 => array(0x119), 0x11A => array(0x11B), 0x11C => array(0x11D)                    ,0x11E => array(0x11F), 0x120 => array(0x121), 0x122 => array(0x123)                    ,0x124 => array(0x125), 0x126 => array(0x127), 0x128 => array(0x129)                    ,0x12A => array(0x12B), 0x12C => array(0x12D), 0x12E => array(0x12F)                    ,0x130 => array(0x69, 0x307), 0x132 => array(0x133), 0x134 => array(0x135)                    ,0x136 => array(0x137), 0x139 => array(0x13A), 0x13B => array(0x13C)                    ,0x13D => array(0x13E), 0x13F => array(0x140), 0x141 => array(0x142)                    ,0x143 => array(0x144), 0x145 => array(0x146), 0x147 => array(0x148)                    ,0x149 => array(0x2BC, 0x6E), 0x14A => array(0x14B), 0x14C => array(0x14D)                    ,0x14E => array(0x14F), 0x150 => array(0x151), 0x152 => array(0x153)                    ,0x154 => array(0x155), 0x156 => array(0x157), 0x158 => array(0x159)                    ,0x15A => array(0x15B), 0x15C => array(0x15D), 0x15E => array(0x15F)                    ,0x160 => array(0x161), 0x162 => array(0x163), 0x164 => array(0x165)                    ,0x166 => array(0x167), 0x168 => array(0x169), 0x16A => array(0x16B)                    ,0x16C => array(0x16D), 0x16E => array(0x16F), 0x170 => array(0x171)                    ,0x172 => array(0x173), 0x174 => array(0x175), 0x176 => array(0x177)                    ,0x178 => array(0xFF), 0x179 => array(0x17A), 0x17B => array(0x17C)                    ,0x17D => array(0x17E), 0x17F => array(0x73), 0x181 => array(0x253)                    ,0x182 => array(0x183), 0x184 => array(0x185), 0x186 => array(0x254)                    ,0x187 => array(0x188), 0x189 => array(0x256), 0x18A => array(0x257)                    ,0x18B => array(0x18C), 0x18E => array(0x1DD), 0x18F => array(0x259)                    ,0x190 => array(0x25B), 0x191 => array(0x192), 0x193 => array(0x260)                    ,0x194 => array(0x263), 0x196 => array(0x269), 0x197 => array(0x268)                    ,0x198 => array(0x199), 0x19C => array(0x26F), 0x19D => array(0x272)                    ,0x19F => array(0x275), 0x1A0 => array(0x1A1), 0x1A2 => array(0x1A3)                    ,0x1A4 => array(0x1A5), 0x1A6 => array(0x280), 0x1A7 => array(0x1A8)                    ,0x1A9 => array(0x283), 0x1AC => array(0x1AD), 0x1AE => array(0x288)                    ,0x1AF => array(0x1B0), 0x1B1 => array(0x28A), 0x1B2 => array(0x28B)                    ,0x1B3 => array(0x1B4), 0x1B5 => array(0x1B6), 0x1B7 => array(0x292)                    ,0x1B8 => array(0x1B9), 0x1BC => array(0x1BD), 0x1C4 => array(0x1C6)                    ,0x1C5 => array(0x1C6), 0x1C7 => array(0x1C9), 0x1C8 => array(0x1C9)                    ,0x1CA => array(0x1CC), 0x1CB => array(0x1CC), 0x1CD => array(0x1CE)                    ,0x1CF => array(0x1D0), 0x1D1   => array(0x1D2), 0x1D3   => array(0x1D4)                    ,0x1D5   => array(0x1D6), 0x1D7   => array(0x1D8), 0x1D9   => array(0x1DA)                    ,0x1DB   => array(0x1DC), 0x1DE   => array(0x1DF), 0x1E0   => array(0x1E1)                    ,0x1E2   => array(0x1E3), 0x1E4   => array(0x1E5), 0x1E6   => array(0x1E7)                    ,0x1E8   => array(0x1E9), 0x1EA   => array(0x1EB), 0x1EC   => array(0x1ED)                    ,0x1EE   => array(0x1EF), 0x1F0   => array(0x6A, 0x30C), 0x1F1   => array(0x1F3)                    ,0x1F2   => array(0x1F3), 0x1F4   => array(0x1F5), 0x1F6   => array(0x195)                    ,0x1F7   => array(0x1BF), 0x1F8   => array(0x1F9), 0x1FA   => array(0x1FB)                    ,0x1FC   => array(0x1FD), 0x1FE   => array(0x1FF), 0x200   => array(0x201)                    ,0x202   => array(0x203), 0x204   => array(0x205), 0x206   => array(0x207)                    ,0x208   => array(0x209), 0x20A   => array(0x20B), 0x20C   => array(0x20D)                    ,0x20E   => array(0x20F), 0x210   => array(0x211), 0x212   => array(0x213)                    ,0x214   => array(0x215), 0x216   => array(0x217), 0x218   => array(0x219)                    ,0x21A   => array(0x21B), 0x21C   => array(0x21D), 0x21E   => array(0x21F)                    ,0x220   => array(0x19E), 0x222   => array(0x223), 0x224   => array(0x225)                    ,0x226   => array(0x227), 0x228   => array(0x229), 0x22A   => array(0x22B)                    ,0x22C   => array(0x22D), 0x22E   => array(0x22F), 0x230   => array(0x231)                    ,0x232   => array(0x233), 0x345   => array(0x3B9), 0x37A   => array(0x20, 0x3B9)                    ,0x386   => array(0x3AC), 0x388   => array(0x3AD), 0x389   => array(0x3AE)                    ,0x38A   => array(0x3AF), 0x38C   => array(0x3CC), 0x38E   => array(0x3CD)                    ,0x38F   => array(0x3CE), 0x390   => array(0x3B9, 0x308, 0x301)                    ,0x391   => array(0x3B1), 0x392   => array(0x3B2), 0x393   => array(0x3B3)                    ,0x394   => array(0x3B4), 0x395   => array(0x3B5), 0x396   => array(0x3B6)                    ,0x397   => array(0x3B7), 0x398   => array(0x3B8), 0x399   => array(0x3B9)                    ,0x39A   => array(0x3BA), 0x39B   => array(0x3BB), 0x39C   => array(0x3BC)                    ,0x39D   => array(0x3BD), 0x39E   => array(0x3BE), 0x39F   => array(0x3BF)                    ,0x3A0   => array(0x3C0), 0x3A1   => array(0x3C1), 0x3A3   => array(0x3C3)                    ,0x3A4   => array(0x3C4), 0x3A5   => array(0x3C5), 0x3A6   => array(0x3C6)                    ,0x3A7   => array(0x3C7), 0x3A8   => array(0x3C8), 0x3A9   => array(0x3C9)                    ,0x3AA   => array(0x3CA), 0x3AB   => array(0x3CB), 0x3B0   => array(0x3C5, 0x308, 0x301)                    ,0x3C2   => array(0x3C3), 0x3D0   => array(0x3B2), 0x3D1   => array(0x3B8)                    ,0x3D2   => array(0x3C5), 0x3D3   => array(0x3CD), 0x3D4   => array(0x3CB)                    ,0x3D5   => array(0x3C6), 0x3D6   => array(0x3C0), 0x3D8   => array(0x3D9)                    ,0x3DA   => array(0x3DB), 0x3DC   => array(0x3DD), 0x3DE   => array(0x3DF)                    ,0x3E0   => array(0x3E1), 0x3E2   => array(0x3E3), 0x3E4   => array(0x3E5)                    ,0x3E6   => array(0x3E7), 0x3E8   => array(0x3E9), 0x3EA   => array(0x3EB)                    ,0x3EC   => array(0x3ED), 0x3EE   => array(0x3EF), 0x3F0   => array(0x3BA)                    ,0x3F1   => array(0x3C1), 0x3F2   => array(0x3C3), 0x3F4   => array(0x3B8)                    ,0x3F5   => array(0x3B5), 0x400   => array(0x450), 0x401   => array(0x451)                    ,0x402   => array(0x452), 0x403   => array(0x453), 0x404   => array(0x454)                    ,0x405   => array(0x455), 0x406   => array(0x456), 0x407   => array(0x457)                    ,0x408   => array(0x458), 0x409   => array(0x459), 0x40A   => array(0x45A)                    ,0x40B   => array(0x45B), 0x40C   => array(0x45C), 0x40D   => array(0x45D)                    ,0x40E   => array(0x45E), 0x40F   => array(0x45F), 0x410   => array(0x430)                    ,0x411   => array(0x431), 0x412   => array(0x432), 0x413   => array(0x433)                    ,0x414   => array(0x434), 0x415   => array(0x435), 0x416   => array(0x436)                    ,0x417   => array(0x437), 0x418   => array(0x438), 0x419   => array(0x439)                    ,0x41A   => array(0x43A), 0x41B   => array(0x43B), 0x41C   => array(0x43C)                    ,0x41D   => array(0x43D), 0x41E   => array(0x43E), 0x41F   => array(0x43F)                    ,0x420   => array(0x440), 0x421   => array(0x441), 0x422   => array(0x442)                    ,0x423   => array(0x443), 0x424   => array(0x444), 0x425   => array(0x445)                    ,0x426   => array(0x446), 0x427   => array(0x447), 0x428   => array(0x448)                    ,0x429   => array(0x449), 0x42A   => array(0x44A), 0x42B   => array(0x44B)                    ,0x42C   => array(0x44C), 0x42D   => array(0x44D), 0x42E   => array(0x44E)                    ,0x42F   => array(0x44F), 0x460   => array(0x461), 0x462   => array(0x463)                    ,0x464   => array(0x465), 0x466   => array(0x467), 0x468   => array(0x469)                    ,0x46A   => array(0x46B), 0x46C   => array(0x46D), 0x46E   => array(0x46F)                    ,0x470   => array(0x471), 0x472   => array(0x473), 0x474   => array(0x475)                    ,0x476   => array(0x477), 0x478   => array(0x479), 0x47A   => array(0x47B)                    ,0x47C   => array(0x47D), 0x47E   => array(0x47F), 0x480   => array(0x481)                    ,0x48A   => array(0x48B), 0x48C   => array(0x48D), 0x48E   => array(0x48F)                    ,0x490   => array(0x491), 0x492   => array(0x493), 0x494   => array(0x495)                    ,0x496   => array(0x497), 0x498   => array(0x499), 0x49A   => array(0x49B)                    ,0x49C   => array(0x49D), 0x49E   => array(0x49F), 0x4A0   => array(0x4A1)                    ,0x4A2   => array(0x4A3), 0x4A4   => array(0x4A5), 0x4A6   => array(0x4A7)                    ,0x4A8   => array(0x4A9), 0x4AA   => array(0x4AB), 0x4AC   => array(0x4AD)                    ,0x4AE   => array(0x4AF), 0x4B0   => array(0x4B1), 0x4B2   => array(0x4B3)                    ,0x4B4   => array(0x4B5), 0x4B6   => array(0x4B7), 0x4B8   => array(0x4B9)                    ,0x4BA   => array(0x4BB), 0x4BC   => array(0x4BD), 0x4BE   => array(0x4BF)                    ,0x4C1   => array(0x4C2), 0x4C3   => array(0x4C4), 0x4C5   => array(0x4C6)                    ,0x4C7   => array(0x4C8), 0x4C9   => array(0x4CA), 0x4CB   => array(0x4CC)                    ,0x4CD   => array(0x4CE), 0x4D0   => array(0x4D1), 0x4D2   => array(0x4D3)                    ,0x4D4   => array(0x4D5), 0x4D6   => array(0x4D7), 0x4D8   => array(0x4D9)                    ,0x4DA   => array(0x4DB), 0x4DC   => array(0x4DD), 0x4DE   => array(0x4DF)                    ,0x4E0   => array(0x4E1), 0x4E2   => array(0x4E3), 0x4E4   => array(0x4E5)                    ,0x4E6   => array(0x4E7), 0x4E8   => array(0x4E9), 0x4EA   => array(0x4EB)                    ,0x4EC   => array(0x4ED), 0x4EE   => array(0x4EF), 0x4F0   => array(0x4F1)                    ,0x4F2   => array(0x4F3), 0x4F4   => array(0x4F5), 0x4F8   => array(0x4F9)                    ,0x500   => array(0x501), 0x502   => array(0x503), 0x504   => array(0x505)                    ,0x506   => array(0x507), 0x508   => array(0x509), 0x50A   => array(0x50B)                    ,0x50C   => array(0x50D), 0x50E   => array(0x50F), 0x531   => array(0x561)                    ,0x532   => array(0x562), 0x533   => array(0x563), 0x534   => array(0x564)                    ,0x535   => array(0x565), 0x536   => array(0x566), 0x537   => array(0x567)                    ,0x538   => array(0x568), 0x539   => array(0x569), 0x53A   => array(0x56A)                    ,0x53B   => array(0x56B), 0x53C   => array(0x56C), 0x53D   => array(0x56D)                    ,0x53E   => array(0x56E), 0x53F   => array(0x56F), 0x540   => array(0x570)                    ,0x541   => array(0x571), 0x542   => array(0x572), 0x543   => array(0x573)                    ,0x544   => array(0x574), 0x545   => array(0x575), 0x546   => array(0x576)                    ,0x547   => array(0x577), 0x548   => array(0x578), 0x549   => array(0x579)                    ,0x54A   => array(0x57A), 0x54B   => array(0x57B), 0x54C   => array(0x57C)                    ,0x54D   => array(0x57D), 0x54E   => array(0x57E), 0x54F   => array(0x57F)                    ,0x550   => array(0x580), 0x551   => array(0x581), 0x552   => array(0x582)                    ,0x553   => array(0x583), 0x554   => array(0x584), 0x555   => array(0x585)                    ,0x556 => array(0x586), 0x587 => array(0x565, 0x582), 0xE33 => array(0xE4D, 0xE32)                    ,0x1E00  => array(0x1E01), 0x1E02  => array(0x1E03), 0x1E04  => array(0x1E05)                    ,0x1E06  => array(0x1E07), 0x1E08  => array(0x1E09), 0x1E0A  => array(0x1E0B)                    ,0x1E0C  => array(0x1E0D), 0x1E0E  => array(0x1E0F), 0x1E10  => array(0x1E11)                    ,0x1E12  => array(0x1E13), 0x1E14  => array(0x1E15), 0x1E16  => array(0x1E17)                    ,0x1E18  => array(0x1E19), 0x1E1A  => array(0x1E1B), 0x1E1C  => array(0x1E1D)                    ,0x1E1E  => array(0x1E1F), 0x1E20  => array(0x1E21), 0x1E22  => array(0x1E23)                    ,0x1E24  => array(0x1E25), 0x1E26  => array(0x1E27), 0x1E28  => array(0x1E29)                    ,0x1E2A  => array(0x1E2B), 0x1E2C  => array(0x1E2D), 0x1E2E  => array(0x1E2F)                    ,0x1E30  => array(0x1E31), 0x1E32  => array(0x1E33), 0x1E34  => array(0x1E35)                    ,0x1E36  => array(0x1E37), 0x1E38  => array(0x1E39), 0x1E3A  => array(0x1E3B)                    ,0x1E3C  => array(0x1E3D), 0x1E3E  => array(0x1E3F), 0x1E40  => array(0x1E41)                    ,0x1E42  => array(0x1E43), 0x1E44  => array(0x1E45), 0x1E46  => array(0x1E47)                    ,0x1E48  => array(0x1E49), 0x1E4A  => array(0x1E4B), 0x1E4C  => array(0x1E4D)                    ,0x1E4E  => array(0x1E4F), 0x1E50  => array(0x1E51), 0x1E52  => array(0x1E53)                    ,0x1E54  => array(0x1E55), 0x1E56  => array(0x1E57), 0x1E58  => array(0x1E59)                    ,0x1E5A  => array(0x1E5B), 0x1E5C  => array(0x1E5D), 0x1E5E  => array(0x1E5F)                    ,0x1E60  => array(0x1E61), 0x1E62  => array(0x1E63), 0x1E64  => array(0x1E65)                    ,0x1E66  => array(0x1E67), 0x1E68  => array(0x1E69), 0x1E6A  => array(0x1E6B)                    ,0x1E6C  => array(0x1E6D), 0x1E6E  => array(0x1E6F), 0x1E70  => array(0x1E71)                    ,0x1E72  => array(0x1E73), 0x1E74  => array(0x1E75), 0x1E76  => array(0x1E77)                    ,0x1E78  => array(0x1E79), 0x1E7A  => array(0x1E7B), 0x1E7C  => array(0x1E7D)                    ,0x1E7E  => array(0x1E7F), 0x1E80  => array(0x1E81), 0x1E82  => array(0x1E83)                    ,0x1E84  => array(0x1E85), 0x1E86  => array(0x1E87), 0x1E88  => array(0x1E89)                    ,0x1E8A  => array(0x1E8B), 0x1E8C  => array(0x1E8D), 0x1E8E  => array(0x1E8F)                    ,0x1E90  => array(0x1E91), 0x1E92  => array(0x1E93), 0x1E94  => array(0x1E95)                    ,0x1E96  => array(0x68, 0x331), 0x1E97  => array(0x74, 0x308), 0x1E98  => array(0x77, 0x30A)                    ,0x1E99  => array(0x79, 0x30A), 0x1E9A  => array(0x61, 0x2BE), 0x1E9B  => array(0x1E61)                    ,0x1EA0  => array(0x1EA1), 0x1EA2  => array(0x1EA3), 0x1EA4  => array(0x1EA5)                    ,0x1EA6  => array(0x1EA7), 0x1EA8  => array(0x1EA9), 0x1EAA  => array(0x1EAB)                    ,0x1EAC  => array(0x1EAD), 0x1EAE  => array(0x1EAF), 0x1EB0  => array(0x1EB1)                    ,0x1EB2  => array(0x1EB3), 0x1EB4  => array(0x1EB5), 0x1EB6  => array(0x1EB7)                    ,0x1EB8  => array(0x1EB9), 0x1EBA  => array(0x1EBB), 0x1EBC  => array(0x1EBD)                    ,0x1EBE  => array(0x1EBF), 0x1EC0  => array(0x1EC1), 0x1EC2  => array(0x1EC3)                    ,0x1EC4  => array(0x1EC5), 0x1EC6  => array(0x1EC7), 0x1EC8  => array(0x1EC9)                    ,0x1ECA  => array(0x1ECB), 0x1ECC  => array(0x1ECD), 0x1ECE  => array(0x1ECF)                    ,0x1ED0  => array(0x1ED1), 0x1ED2  => array(0x1ED3), 0x1ED4  => array(0x1ED5)                    ,0x1ED6  => array(0x1ED7), 0x1ED8  => array(0x1ED9), 0x1EDA  => array(0x1EDB)                    ,0x1EDC  => array(0x1EDD), 0x1EDE  => array(0x1EDF), 0x1EE0  => array(0x1EE1)                    ,0x1EE2  => array(0x1EE3), 0x1EE4  => array(0x1EE5), 0x1EE6  => array(0x1EE7)                    ,0x1EE8  => array(0x1EE9), 0x1EEA  => array(0x1EEB), 0x1EEC  => array(0x1EED)                    ,0x1EEE  => array(0x1EEF), 0x1EF0  => array(0x1EF1), 0x1EF2  => array(0x1EF3)                    ,0x1EF4  => array(0x1EF5), 0x1EF6  => array(0x1EF7), 0x1EF8  => array(0x1EF9)                    ,0x1F08  => array(0x1F00), 0x1F09  => array(0x1F01), 0x1F0A  => array(0x1F02)                    ,0x1F0B  => array(0x1F03), 0x1F0C  => array(0x1F04), 0x1F0D  => array(0x1F05)                    ,0x1F0E  => array(0x1F06), 0x1F0F  => array(0x1F07), 0x1F18  => array(0x1F10)                    ,0x1F19  => array(0x1F11), 0x1F1A  => array(0x1F12), 0x1F1B  => array(0x1F13)                    ,0x1F1C  => array(0x1F14), 0x1F1D  => array(0x1F15), 0x1F28  => array(0x1F20)                    ,0x1F29  => array(0x1F21), 0x1F2A  => array(0x1F22), 0x1F2B  => array(0x1F23)                    ,0x1F2C  => array(0x1F24), 0x1F2D  => array(0x1F25), 0x1F2E  => array(0x1F26)                    ,0x1F2F  => array(0x1F27), 0x1F38  => array(0x1F30), 0x1F39  => array(0x1F31)                    ,0x1F3A  => array(0x1F32), 0x1F3B  => array(0x1F33), 0x1F3C  => array(0x1F34)                    ,0x1F3D  => array(0x1F35), 0x1F3E  => array(0x1F36), 0x1F3F  => array(0x1F37)                    ,0x1F48  => array(0x1F40), 0x1F49  => array(0x1F41), 0x1F4A  => array(0x1F42)                    ,0x1F4B  => array(0x1F43), 0x1F4C  => array(0x1F44), 0x1F4D  => array(0x1F45)                    ,0x1F50  => array(0x3C5, 0x313), 0x1F52  => array(0x3C5, 0x313, 0x300)                    ,0x1F54  => array(0x3C5, 0x313, 0x301), 0x1F56  => array(0x3C5, 0x313, 0x342)                    ,0x1F59  => array(0x1F51), 0x1F5B  => array(0x1F53), 0x1F5D  => array(0x1F55)                    ,0x1F5F  => array(0x1F57), 0x1F68  => array(0x1F60), 0x1F69  => array(0x1F61)                    ,0x1F6A  => array(0x1F62), 0x1F6B  => array(0x1F63), 0x1F6C  => array(0x1F64)                    ,0x1F6D  => array(0x1F65), 0x1F6E  => array(0x1F66), 0x1F6F  => array(0x1F67)                    ,0x1F80  => array(0x1F00, 0x3B9), 0x1F81  => array(0x1F01, 0x3B9)                    ,0x1F82  => array(0x1F02, 0x3B9), 0x1F83  => array(0x1F03, 0x3B9)                    ,0x1F84  => array(0x1F04, 0x3B9), 0x1F85  => array(0x1F05, 0x3B9)                    ,0x1F86  => array(0x1F06, 0x3B9), 0x1F87  => array(0x1F07, 0x3B9)                    ,0x1F88  => array(0x1F00, 0x3B9), 0x1F89  => array(0x1F01, 0x3B9)                    ,0x1F8A  => array(0x1F02, 0x3B9), 0x1F8B  => array(0x1F03, 0x3B9)                    ,0x1F8C  => array(0x1F04, 0x3B9), 0x1F8D  => array(0x1F05, 0x3B9)                    ,0x1F8E  => array(0x1F06, 0x3B9), 0x1F8F  => array(0x1F07, 0x3B9)                    ,0x1F90  => array(0x1F20, 0x3B9), 0x1F91  => array(0x1F21, 0x3B9)                    ,0x1F92  => array(0x1F22, 0x3B9), 0x1F93  => array(0x1F23, 0x3B9)                    ,0x1F94  => array(0x1F24, 0x3B9), 0x1F95  => array(0x1F25, 0x3B9)                    ,0x1F96  => array(0x1F26, 0x3B9), 0x1F97  => array(0x1F27, 0x3B9)                    ,0x1F98  => array(0x1F20, 0x3B9), 0x1F99  => array(0x1F21, 0x3B9)                    ,0x1F9A  => array(0x1F22, 0x3B9), 0x1F9B  => array(0x1F23, 0x3B9)                    ,0x1F9C  => array(0x1F24, 0x3B9), 0x1F9D  => array(0x1F25, 0x3B9)                    ,0x1F9E  => array(0x1F26, 0x3B9), 0x1F9F  => array(0x1F27, 0x3B9)                    ,0x1FA0  => array(0x1F60, 0x3B9), 0x1FA1  => array(0x1F61, 0x3B9)                    ,0x1FA2  => array(0x1F62, 0x3B9), 0x1FA3  => array(0x1F63, 0x3B9)                    ,0x1FA4  => array(0x1F64, 0x3B9), 0x1FA5  => array(0x1F65, 0x3B9)                    ,0x1FA6  => array(0x1F66, 0x3B9), 0x1FA7  => array(0x1F67, 0x3B9)                    ,0x1FA8  => array(0x1F60, 0x3B9), 0x1FA9  => array(0x1F61, 0x3B9)                    ,0x1FAA  => array(0x1F62, 0x3B9), 0x1FAB  => array(0x1F63, 0x3B9)                    ,0x1FAC  => array(0x1F64, 0x3B9), 0x1FAD  => array(0x1F65, 0x3B9)                    ,0x1FAE  => array(0x1F66, 0x3B9), 0x1FAF  => array(0x1F67, 0x3B9)                    ,0x1FB2  => array(0x1F70, 0x3B9), 0x1FB3  => array(0x3B1, 0x3B9)                    ,0x1FB4  => array(0x3AC, 0x3B9), 0x1FB6  => array(0x3B1, 0x342)                    ,0x1FB7  => array(0x3B1, 0x342, 0x3B9), 0x1FB8  => array(0x1FB0)                    ,0x1FB9  => array(0x1FB1), 0x1FBA  => array(0x1F70), 0x1FBB  => array(0x1F71)                    ,0x1FBC  => array(0x3B1, 0x3B9), 0x1FBE  => array(0x3B9)                    ,0x1FC2  => array(0x1F74, 0x3B9), 0x1FC3  => array(0x3B7, 0x3B9)                    ,0x1FC4  => array(0x3AE, 0x3B9), 0x1FC6  => array(0x3B7, 0x342)                    ,0x1FC7  => array(0x3B7, 0x342, 0x3B9), 0x1FC8  => array(0x1F72)                    ,0x1FC9  => array(0x1F73), 0x1FCA  => array(0x1F74), 0x1FCB  => array(0x1F75)                    ,0x1FCC  => array(0x3B7, 0x3B9), 0x1FD2  => array(0x3B9, 0x308, 0x300)                    ,0x1FD3  => array(0x3B9, 0x308, 0x301), 0x1FD6  => array(0x3B9, 0x342)                    ,0x1FD7  => array(0x3B9, 0x308, 0x342), 0x1FD8  => array(0x1FD0)                    ,0x1FD9  => array(0x1FD1), 0x1FDA  => array(0x1F76)                    ,0x1FDB  => array(0x1F77), 0x1FE2  => array(0x3C5, 0x308, 0x300)                    ,0x1FE3  => array(0x3C5, 0x308, 0x301), 0x1FE4  => array(0x3C1, 0x313)                    ,0x1FE6  => array(0x3C5, 0x342), 0x1FE7  => array(0x3C5, 0x308, 0x342)                    ,0x1FE8  => array(0x1FE0), 0x1FE9  => array(0x1FE1)                    ,0x1FEA  => array(0x1F7A), 0x1FEB  => array(0x1F7B)                    ,0x1FEC  => array(0x1FE5), 0x1FF2  => array(0x1F7C, 0x3B9)                    ,0x1FF3  => array(0x3C9, 0x3B9), 0x1FF4  => array(0x3CE, 0x3B9)                    ,0x1FF6  => array(0x3C9, 0x342), 0x1FF7  => array(0x3C9, 0x342, 0x3B9)                    ,0x1FF8  => array(0x1F78), 0x1FF9  => array(0x1F79), 0x1FFA  => array(0x1F7C)                    ,0x1FFB  => array(0x1F7D), 0x1FFC  => array(0x3C9, 0x3B9)                    ,0x20A8  => array(0x72, 0x73), 0x2102  => array(0x63), 0x2103  => array(0xB0, 0x63)                    ,0x2107  => array(0x25B), 0x2109  => array(0xB0, 0x66), 0x210B  => array(0x68)                    ,0x210C  => array(0x68), 0x210D  => array(0x68), 0x2110  => array(0x69)                    ,0x2111  => array(0x69), 0x2112  => array(0x6C), 0x2115  => array(0x6E)                    ,0x2116  => array(0x6E, 0x6F), 0x2119  => array(0x70), 0x211A  => array(0x71)                    ,0x211B  => array(0x72), 0x211C  => array(0x72), 0x211D  => array(0x72)                    ,0x2120  => array(0x73, 0x6D), 0x2121  => array(0x74, 0x65, 0x6C)                    ,0x2122  => array(0x74, 0x6D), 0x2124  => array(0x7A), 0x2126  => array(0x3C9)                    ,0x2128  => array(0x7A), 0x212A  => array(0x6B), 0x212B  => array(0xE5)                    ,0x212C  => array(0x62), 0x212D  => array(0x63), 0x2130  => array(0x65)                    ,0x2131  => array(0x66), 0x2133  => array(0x6D), 0x213E  => array(0x3B3)                    ,0x213F  => array(0x3C0), 0x2145  => array(0x64) ,0x2160  => array(0x2170)                    ,0x2161  => array(0x2171), 0x2162  => array(0x2172), 0x2163  => array(0x2173)                    ,0x2164  => array(0x2174), 0x2165  => array(0x2175), 0x2166  => array(0x2176)                    ,0x2167  => array(0x2177), 0x2168  => array(0x2178), 0x2169  => array(0x2179)                    ,0x216A  => array(0x217A), 0x216B  => array(0x217B), 0x216C  => array(0x217C)                    ,0x216D  => array(0x217D), 0x216E  => array(0x217E), 0x216F  => array(0x217F)                    ,0x24B6  => array(0x24D0), 0x24B7  => array(0x24D1), 0x24B8  => array(0x24D2)                    ,0x24B9  => array(0x24D3), 0x24BA  => array(0x24D4), 0x24BB  => array(0x24D5)                    ,0x24BC  => array(0x24D6), 0x24BD  => array(0x24D7), 0x24BE  => array(0x24D8)                    ,0x24BF  => array(0x24D9), 0x24C0  => array(0x24DA), 0x24C1  => array(0x24DB)                    ,0x24C2  => array(0x24DC), 0x24C3  => array(0x24DD), 0x24C4  => array(0x24DE)                    ,0x24C5  => array(0x24DF), 0x24C6  => array(0x24E0), 0x24C7  => array(0x24E1)                    ,0x24C8  => array(0x24E2), 0x24C9  => array(0x24E3), 0x24CA  => array(0x24E4)                    ,0x24CB  => array(0x24E5), 0x24CC  => array(0x24E6), 0x24CD  => array(0x24E7)                    ,0x24CE  => array(0x24E8), 0x24CF  => array(0x24E9), 0x3371  => array(0x68, 0x70, 0x61)                    ,0x3373  => array(0x61, 0x75), 0x3375  => array(0x6F, 0x76)                    ,0x3380  => array(0x70, 0x61), 0x3381  => array(0x6E, 0x61)                    ,0x3382  => array(0x3BC, 0x61), 0x3383  => array(0x6D, 0x61)                    ,0x3384  => array(0x6B, 0x61), 0x3385  => array(0x6B, 0x62)                    ,0x3386  => array(0x6D, 0x62), 0x3387  => array(0x67, 0x62)                    ,0x338A  => array(0x70, 0x66), 0x338B  => array(0x6E, 0x66)                    ,0x338C  => array(0x3BC, 0x66), 0x3390  => array(0x68, 0x7A)                    ,0x3391  => array(0x6B, 0x68, 0x7A), 0x3392  => array(0x6D, 0x68, 0x7A)                    ,0x3393  => array(0x67, 0x68, 0x7A), 0x3394  => array(0x74, 0x68, 0x7A)                    ,0x33A9  => array(0x70, 0x61), 0x33AA  => array(0x6B, 0x70, 0x61)                    ,0x33AB  => array(0x6D, 0x70, 0x61), 0x33AC  => array(0x67, 0x70, 0x61)                    ,0x33B4  => array(0x70, 0x76), 0x33B5  => array(0x6E, 0x76)                    ,0x33B6  => array(0x3BC, 0x76), 0x33B7  => array(0x6D, 0x76)                    ,0x33B8  => array(0x6B, 0x76), 0x33B9  => array(0x6D, 0x76)                    ,0x33BA  => array(0x70, 0x77), 0x33BB  => array(0x6E, 0x77)                    ,0x33BC  => array(0x3BC, 0x77), 0x33BD  => array(0x6D, 0x77)                    ,0x33BE  => array(0x6B, 0x77), 0x33BF  => array(0x6D, 0x77)                    ,0x33C0  => array(0x6B, 0x3C9), 0x33C1  => array(0x6D, 0x3C9) /*                    ,0x33C2  => array(0x61, 0x2E, 0x6D, 0x2E) */                    ,0x33C3  => array(0x62, 0x71), 0x33C6  => array(0x63, 0x2215, 0x6B, 0x67)                    ,0x33C7  => array(0x63, 0x6F, 0x2E), 0x33C8  => array(0x64, 0x62)                    ,0x33C9  => array(0x67, 0x79), 0x33CB  => array(0x68, 0x70)                    ,0x33CD  => array(0x6B, 0x6B), 0x33CE  => array(0x6B, 0x6D)                    ,0x33D7  => array(0x70, 0x68), 0x33D9  => array(0x70, 0x70, 0x6D)                    ,0x33DA  => array(0x70, 0x72), 0x33DC  => array(0x73, 0x76)                    ,0x33DD  => array(0x77, 0x62), 0xFB00  => array(0x66, 0x66)                    ,0xFB01  => array(0x66, 0x69), 0xFB02  => array(0x66, 0x6C)                    ,0xFB03  => array(0x66, 0x66, 0x69), 0xFB04  => array(0x66, 0x66, 0x6C)                    ,0xFB05  => array(0x73, 0x74), 0xFB06  => array(0x73, 0x74)                    ,0xFB13  => array(0x574, 0x576), 0xFB14  => array(0x574, 0x565)                    ,0xFB15  => array(0x574, 0x56B), 0xFB16  => array(0x57E, 0x576)                    ,0xFB17  => array(0x574, 0x56D), 0xFF21  => array(0xFF41)                    ,0xFF22  => array(0xFF42), 0xFF23  => array(0xFF43), 0xFF24  => array(0xFF44)                    ,0xFF25  => array(0xFF45), 0xFF26  => array(0xFF46), 0xFF27  => array(0xFF47)                    ,0xFF28  => array(0xFF48), 0xFF29  => array(0xFF49), 0xFF2A  => array(0xFF4A)                    ,0xFF2B  => array(0xFF4B), 0xFF2C  => array(0xFF4C), 0xFF2D  => array(0xFF4D)                    ,0xFF2E  => array(0xFF4E), 0xFF2F  => array(0xFF4F), 0xFF30  => array(0xFF50)                    ,0xFF31  => array(0xFF51), 0xFF32  => array(0xFF52), 0xFF33  => array(0xFF53)                    ,0xFF34  => array(0xFF54), 0xFF35  => array(0xFF55), 0xFF36  => array(0xFF56)                    ,0xFF37  => array(0xFF57), 0xFF38  => array(0xFF58), 0xFF39  => array(0xFF59)                    ,0xFF3A  => array(0xFF5A), 0x10400 => array(0x10428), 0x10401 => array(0x10429)                    ,0x10402 => array(0x1042A), 0x10403 => array(0x1042B), 0x10404 => array(0x1042C)                    ,0x10405 => array(0x1042D), 0x10406 => array(0x1042E), 0x10407 => array(0x1042F)                    ,0x10408 => array(0x10430), 0x10409 => array(0x10431), 0x1040A => array(0x10432)                    ,0x1040B => array(0x10433), 0x1040C => array(0x10434), 0x1040D => array(0x10435)                    ,0x1040E => array(0x10436), 0x1040F => array(0x10437), 0x10410 => array(0x10438)                    ,0x10411 => array(0x10439), 0x10412 => array(0x1043A), 0x10413 => array(0x1043B)                    ,0x10414 => array(0x1043C), 0x10415 => array(0x1043D), 0x10416 => array(0x1043E)                    ,0x10417 => array(0x1043F), 0x10418 => array(0x10440), 0x10419 => array(0x10441)                    ,0x1041A => array(0x10442), 0x1041B => array(0x10443), 0x1041C => array(0x10444)                    ,0x1041D => array(0x10445), 0x1041E => array(0x10446), 0x1041F => array(0x10447)                    ,0x10420 => array(0x10448), 0x10421 => array(0x10449), 0x10422 => array(0x1044A)                    ,0x10423 => array(0x1044B), 0x10424 => array(0x1044C), 0x10425 => array(0x1044D)                    ,0x1D400 => array(0x61), 0x1D401 => array(0x62), 0x1D402 => array(0x63)                    ,0x1D403 => array(0x64), 0x1D404 => array(0x65), 0x1D405 => array(0x66)                    ,0x1D406 => array(0x67), 0x1D407 => array(0x68), 0x1D408 => array(0x69)                    ,0x1D409 => array(0x6A), 0x1D40A => array(0x6B), 0x1D40B => array(0x6C)                    ,0x1D40C => array(0x6D), 0x1D40D => array(0x6E), 0x1D40E => array(0x6F)                    ,0x1D40F => array(0x70), 0x1D410 => array(0x71), 0x1D411 => array(0x72)                    ,0x1D412 => array(0x73), 0x1D413 => array(0x74), 0x1D414 => array(0x75)                    ,0x1D415 => array(0x76), 0x1D416 => array(0x77), 0x1D417 => array(0x78)                    ,0x1D418 => array(0x79), 0x1D419 => array(0x7A), 0x1D434 => array(0x61)                    ,0x1D435 => array(0x62), 0x1D436 => array(0x63), 0x1D437 => array(0x64)                    ,0x1D438 => array(0x65), 0x1D439 => array(0x66), 0x1D43A => array(0x67)                    ,0x1D43B => array(0x68), 0x1D43C => array(0x69), 0x1D43D => array(0x6A)                    ,0x1D43E => array(0x6B), 0x1D43F => array(0x6C), 0x1D440 => array(0x6D)                    ,0x1D441 => array(0x6E), 0x1D442 => array(0x6F), 0x1D443 => array(0x70)                    ,0x1D444 => array(0x71), 0x1D445 => array(0x72), 0x1D446 => array(0x73)                    ,0x1D447 => array(0x74), 0x1D448 => array(0x75), 0x1D449 => array(0x76)                    ,0x1D44A => array(0x77), 0x1D44B => array(0x78), 0x1D44C => array(0x79)                    ,0x1D44D => array(0x7A), 0x1D468 => array(0x61), 0x1D469 => array(0x62)                    ,0x1D46A => array(0x63), 0x1D46B => array(0x64), 0x1D46C => array(0x65)                    ,0x1D46D => array(0x66), 0x1D46E => array(0x67), 0x1D46F => array(0x68)                    ,0x1D470 => array(0x69), 0x1D471 => array(0x6A), 0x1D472 => array(0x6B)                    ,0x1D473 => array(0x6C), 0x1D474 => array(0x6D), 0x1D475 => array(0x6E)                    ,0x1D476 => array(0x6F), 0x1D477 => array(0x70), 0x1D478 => array(0x71)                    ,0x1D479 => array(0x72), 0x1D47A => array(0x73), 0x1D47B => array(0x74)                    ,0x1D47C => array(0x75), 0x1D47D => array(0x76), 0x1D47E => array(0x77)                    ,0x1D47F => array(0x78), 0x1D480 => array(0x79), 0x1D481 => array(0x7A)                    ,0x1D49C => array(0x61), 0x1D49E => array(0x63), 0x1D49F => array(0x64)                    ,0x1D4A2 => array(0x67), 0x1D4A5 => array(0x6A), 0x1D4A6 => array(0x6B)                    ,0x1D4A9 => array(0x6E), 0x1D4AA => array(0x6F), 0x1D4AB => array(0x70)                    ,0x1D4AC => array(0x71), 0x1D4AE => array(0x73), 0x1D4AF => array(0x74)                    ,0x1D4B0 => array(0x75), 0x1D4B1 => array(0x76), 0x1D4B2 => array(0x77)                    ,0x1D4B3 => array(0x78), 0x1D4B4 => array(0x79), 0x1D4B5 => array(0x7A)                    ,0x1D4D0 => array(0x61), 0x1D4D1 => array(0x62), 0x1D4D2 => array(0x63)                    ,0x1D4D3 => array(0x64), 0x1D4D4 => array(0x65), 0x1D4D5 => array(0x66)                    ,0x1D4D6 => array(0x67), 0x1D4D7 => array(0x68), 0x1D4D8 => array(0x69)                    ,0x1D4D9 => array(0x6A), 0x1D4DA => array(0x6B), 0x1D4DB => array(0x6C)                    ,0x1D4DC => array(0x6D), 0x1D4DD => array(0x6E), 0x1D4DE => array(0x6F)                    ,0x1D4DF => array(0x70), 0x1D4E0 => array(0x71), 0x1D4E1 => array(0x72)                    ,0x1D4E2 => array(0x73), 0x1D4E3 => array(0x74), 0x1D4E4 => array(0x75)                    ,0x1D4E5 => array(0x76), 0x1D4E6 => array(0x77), 0x1D4E7 => array(0x78)                    ,0x1D4E8 => array(0x79), 0x1D4E9 => array(0x7A), 0x1D504 => array(0x61)                    ,0x1D505 => array(0x62), 0x1D507 => array(0x64), 0x1D508 => array(0x65)                    ,0x1D509 => array(0x66), 0x1D50A => array(0x67), 0x1D50D => array(0x6A)                    ,0x1D50E => array(0x6B), 0x1D50F => array(0x6C), 0x1D510 => array(0x6D)                    ,0x1D511 => array(0x6E), 0x1D512 => array(0x6F), 0x1D513 => array(0x70)                    ,0x1D514 => array(0x71), 0x1D516 => array(0x73), 0x1D517 => array(0x74)                    ,0x1D518 => array(0x75), 0x1D519 => array(0x76), 0x1D51A => array(0x77)                    ,0x1D51B => array(0x78), 0x1D51C => array(0x79), 0x1D538 => array(0x61)                    ,0x1D539 => array(0x62), 0x1D53B => array(0x64), 0x1D53C => array(0x65)                    ,0x1D53D => array(0x66), 0x1D53E => array(0x67), 0x1D540 => array(0x69)                    ,0x1D541 => array(0x6A), 0x1D542 => array(0x6B), 0x1D543 => array(0x6C)                    ,0x1D544 => array(0x6D), 0x1D546 => array(0x6F), 0x1D54A => array(0x73)                    ,0x1D54B => array(0x74), 0x1D54C => array(0x75), 0x1D54D => array(0x76)                    ,0x1D54E => array(0x77), 0x1D54F => array(0x78), 0x1D550 => array(0x79)                    ,0x1D56C => array(0x61), 0x1D56D => array(0x62), 0x1D56E => array(0x63)                    ,0x1D56F => array(0x64), 0x1D570 => array(0x65), 0x1D571 => array(0x66)                    ,0x1D572 => array(0x67), 0x1D573 => array(0x68), 0x1D574 => array(0x69)                    ,0x1D575 => array(0x6A), 0x1D576 => array(0x6B), 0x1D577 => array(0x6C)                    ,0x1D578 => array(0x6D), 0x1D579 => array(0x6E), 0x1D57A => array(0x6F)                    ,0x1D57B => array(0x70), 0x1D57C => array(0x71), 0x1D57D => array(0x72)                    ,0x1D57E => array(0x73), 0x1D57F => array(0x74), 0x1D580 => array(0x75)                    ,0x1D581 => array(0x76), 0x1D582 => array(0x77), 0x1D583 => array(0x78)                    ,0x1D584 => array(0x79), 0x1D585 => array(0x7A), 0x1D5A0 => array(0x61)                    ,0x1D5A1 => array(0x62), 0x1D5A2 => array(0x63), 0x1D5A3 => array(0x64)                    ,0x1D5A4 => array(0x65), 0x1D5A5 => array(0x66), 0x1D5A6 => array(0x67)                    ,0x1D5A7 => array(0x68), 0x1D5A8 => array(0x69), 0x1D5A9 => array(0x6A)                    ,0x1D5AA => array(0x6B), 0x1D5AB => array(0x6C), 0x1D5AC => array(0x6D)                    ,0x1D5AD => array(0x6E), 0x1D5AE => array(0x6F), 0x1D5AF => array(0x70)                    ,0x1D5B0 => array(0x71), 0x1D5B1 => array(0x72), 0x1D5B2 => array(0x73)                    ,0x1D5B3 => array(0x74), 0x1D5B4 => array(0x75), 0x1D5B5 => array(0x76)                    ,0x1D5B6 => array(0x77), 0x1D5B7 => array(0x78), 0x1D5B8 => array(0x79)                    ,0x1D5B9 => array(0x7A), 0x1D5D4 => array(0x61), 0x1D5D5 => array(0x62)                    ,0x1D5D6 => array(0x63), 0x1D5D7 => array(0x64), 0x1D5D8 => array(0x65)                    ,0x1D5D9 => array(0x66), 0x1D5DA => array(0x67), 0x1D5DB => array(0x68)                    ,0x1D5DC => array(0x69), 0x1D5DD => array(0x6A), 0x1D5DE => array(0x6B)                    ,0x1D5DF => array(0x6C), 0x1D5E0 => array(0x6D), 0x1D5E1 => array(0x6E)                    ,0x1D5E2 => array(0x6F), 0x1D5E3 => array(0x70), 0x1D5E4 => array(0x71)                    ,0x1D5E5 => array(0x72), 0x1D5E6 => array(0x73), 0x1D5E7 => array(0x74)                    ,0x1D5E8 => array(0x75), 0x1D5E9 => array(0x76), 0x1D5EA => array(0x77)                    ,0x1D5EB => array(0x78), 0x1D5EC => array(0x79), 0x1D5ED => array(0x7A)                    ,0x1D608 => array(0x61), 0x1D609 => array(0x62) ,0x1D60A => array(0x63)                    ,0x1D60B => array(0x64), 0x1D60C => array(0x65), 0x1D60D => array(0x66)                    ,0x1D60E => array(0x67), 0x1D60F => array(0x68), 0x1D610 => array(0x69)                    ,0x1D611 => array(0x6A), 0x1D612 => array(0x6B), 0x1D613 => array(0x6C)                    ,0x1D614 => array(0x6D), 0x1D615 => array(0x6E), 0x1D616 => array(0x6F)                    ,0x1D617 => array(0x70), 0x1D618 => array(0x71), 0x1D619 => array(0x72)                    ,0x1D61A => array(0x73), 0x1D61B => array(0x74), 0x1D61C => array(0x75)                    ,0x1D61D => array(0x76), 0x1D61E => array(0x77), 0x1D61F => array(0x78)                    ,0x1D620 => array(0x79), 0x1D621 => array(0x7A), 0x1D63C => array(0x61)                    ,0x1D63D => array(0x62), 0x1D63E => array(0x63), 0x1D63F => array(0x64)                    ,0x1D640 => array(0x65), 0x1D641 => array(0x66), 0x1D642 => array(0x67)                    ,0x1D643 => array(0x68), 0x1D644 => array(0x69), 0x1D645 => array(0x6A)                    ,0x1D646 => array(0x6B), 0x1D647 => array(0x6C), 0x1D648 => array(0x6D)                    ,0x1D649 => array(0x6E), 0x1D64A => array(0x6F), 0x1D64B => array(0x70)                    ,0x1D64C => array(0x71), 0x1D64D => array(0x72), 0x1D64E => array(0x73)                    ,0x1D64F => array(0x74), 0x1D650 => array(0x75), 0x1D651 => array(0x76)                    ,0x1D652 => array(0x77), 0x1D653 => array(0x78), 0x1D654 => array(0x79)                    ,0x1D655 => array(0x7A), 0x1D670 => array(0x61), 0x1D671 => array(0x62)                    ,0x1D672 => array(0x63), 0x1D673 => array(0x64), 0x1D674 => array(0x65)                    ,0x1D675 => array(0x66), 0x1D676 => array(0x67), 0x1D677 => array(0x68)                    ,0x1D678 => array(0x69), 0x1D679 => array(0x6A), 0x1D67A => array(0x6B)                    ,0x1D67B => array(0x6C), 0x1D67C => array(0x6D), 0x1D67D => array(0x6E)                    ,0x1D67E => array(0x6F), 0x1D67F => array(0x70), 0x1D680 => array(0x71)                    ,0x1D681 => array(0x72), 0x1D682 => array(0x73), 0x1D683 => array(0x74)                    ,0x1D684 => array(0x75), 0x1D685 => array(0x76), 0x1D686 => array(0x77)                    ,0x1D687 => array(0x78), 0x1D688 => array(0x79), 0x1D689 => array(0x7A)                    ,0x1D6A8 => array(0x3B1), 0x1D6A9 => array(0x3B2), 0x1D6AA => array(0x3B3)                    ,0x1D6AB => array(0x3B4), 0x1D6AC => array(0x3B5), 0x1D6AD => array(0x3B6)                    ,0x1D6AE => array(0x3B7), 0x1D6AF => array(0x3B8), 0x1D6B0 => array(0x3B9)                    ,0x1D6B1 => array(0x3BA), 0x1D6B2 => array(0x3BB), 0x1D6B3 => array(0x3BC)                    ,0x1D6B4 => array(0x3BD), 0x1D6B5 => array(0x3BE), 0x1D6B6 => array(0x3BF)                    ,0x1D6B7 => array(0x3C0), 0x1D6B8 => array(0x3C1), 0x1D6B9 => array(0x3B8)                    ,0x1D6BA => array(0x3C3), 0x1D6BB => array(0x3C4), 0x1D6BC => array(0x3C5)                    ,0x1D6BD => array(0x3C6), 0x1D6BE => array(0x3C7), 0x1D6BF => array(0x3C8)                    ,0x1D6C0 => array(0x3C9), 0x1D6D3 => array(0x3C3), 0x1D6E2 => array(0x3B1)                    ,0x1D6E3 => array(0x3B2), 0x1D6E4 => array(0x3B3), 0x1D6E5 => array(0x3B4)                    ,0x1D6E6 => array(0x3B5), 0x1D6E7 => array(0x3B6), 0x1D6E8 => array(0x3B7)                    ,0x1D6E9 => array(0x3B8), 0x1D6EA => array(0x3B9), 0x1D6EB => array(0x3BA)                    ,0x1D6EC => array(0x3BB), 0x1D6ED => array(0x3BC), 0x1D6EE => array(0x3BD)                    ,0x1D6EF => array(0x3BE), 0x1D6F0 => array(0x3BF), 0x1D6F1 => array(0x3C0)                    ,0x1D6F2 => array(0x3C1), 0x1D6F3 => array(0x3B8) ,0x1D6F4 => array(0x3C3)                    ,0x1D6F5 => array(0x3C4), 0x1D6F6 => array(0x3C5), 0x1D6F7 => array(0x3C6)                    ,0x1D6F8 => array(0x3C7), 0x1D6F9 => array(0x3C8) ,0x1D6FA => array(0x3C9)                    ,0x1D70D => array(0x3C3), 0x1D71C => array(0x3B1), 0x1D71D => array(0x3B2)                    ,0x1D71E => array(0x3B3), 0x1D71F => array(0x3B4), 0x1D720 => array(0x3B5)                    ,0x1D721 => array(0x3B6), 0x1D722 => array(0x3B7), 0x1D723 => array(0x3B8)                    ,0x1D724 => array(0x3B9), 0x1D725 => array(0x3BA), 0x1D726 => array(0x3BB)                    ,0x1D727 => array(0x3BC), 0x1D728 => array(0x3BD), 0x1D729 => array(0x3BE)                    ,0x1D72A => array(0x3BF), 0x1D72B => array(0x3C0), 0x1D72C => array(0x3C1)                    ,0x1D72D => array(0x3B8), 0x1D72E => array(0x3C3), 0x1D72F => array(0x3C4)                    ,0x1D730 => array(0x3C5), 0x1D731 => array(0x3C6), 0x1D732 => array(0x3C7)                    ,0x1D733 => array(0x3C8), 0x1D734 => array(0x3C9), 0x1D747 => array(0x3C3)                    ,0x1D756 => array(0x3B1), 0x1D757 => array(0x3B2), 0x1D758 => array(0x3B3)                    ,0x1D759 => array(0x3B4), 0x1D75A => array(0x3B5), 0x1D75B => array(0x3B6)                    ,0x1D75C => array(0x3B7), 0x1D75D => array(0x3B8), 0x1D75E => array(0x3B9)                    ,0x1D75F => array(0x3BA), 0x1D760 => array(0x3BB), 0x1D761 => array(0x3BC)                    ,0x1D762 => array(0x3BD), 0x1D763 => array(0x3BE), 0x1D764 => array(0x3BF)                    ,0x1D765 => array(0x3C0), 0x1D766 => array(0x3C1), 0x1D767 => array(0x3B8)                    ,0x1D768 => array(0x3C3), 0x1D769 => array(0x3C4), 0x1D76A => array(0x3C5)                    ,0x1D76B => array(0x3C6), 0x1D76C => array(0x3C7), 0x1D76D => array(0x3C8)                    ,0x1D76E => array(0x3C9), 0x1D781 => array(0x3C3), 0x1D790 => array(0x3B1)                    ,0x1D791 => array(0x3B2), 0x1D792 => array(0x3B3), 0x1D793 => array(0x3B4)                    ,0x1D794 => array(0x3B5), 0x1D795 => array(0x3B6), 0x1D796 => array(0x3B7)                    ,0x1D797 => array(0x3B8), 0x1D798 => array(0x3B9), 0x1D799 => array(0x3BA)                    ,0x1D79A => array(0x3BB), 0x1D79B => array(0x3BC), 0x1D79C => array(0x3BD)                    ,0x1D79D => array(0x3BE), 0x1D79E => array(0x3BF), 0x1D79F => array(0x3C0)                    ,0x1D7A0 => array(0x3C1), 0x1D7A1 => array(0x3B8), 0x1D7A2 => array(0x3C3)                    ,0x1D7A3 => array(0x3C4), 0x1D7A4 => array(0x3C5), 0x1D7A5 => array(0x3C6)                    ,0x1D7A6 => array(0x3C7), 0x1D7A7 => array(0x3C8), 0x1D7A8 => array(0x3C9)                    ,0x1D7BB => array(0x3C3), 0x3F9   => array(0x3C3), 0x1D2C  => array(0x61)                    ,0x1D2D  => array(0xE6), 0x1D2E  => array(0x62), 0x1D30  => array(0x64)                    ,0x1D31  => array(0x65), 0x1D32  => array(0x1DD), 0x1D33  => array(0x67)                    ,0x1D34  => array(0x68), 0x1D35  => array(0x69), 0x1D36  => array(0x6A)                    ,0x1D37  => array(0x6B), 0x1D38  => array(0x6C), 0x1D39  => array(0x6D)                    ,0x1D3A  => array(0x6E), 0x1D3C  => array(0x6F), 0x1D3D  => array(0x223)                    ,0x1D3E  => array(0x70), 0x1D3F  => array(0x72), 0x1D40  => array(0x74)                    ,0x1D41  => array(0x75), 0x1D42  => array(0x77), 0x213B  => array(0x66, 0x61, 0x78)                    ,0x3250  => array(0x70, 0x74, 0x65), 0x32CC  => array(0x68, 0x67)                    ,0x32CE  => array(0x65, 0x76), 0x32CF  => array(0x6C, 0x74, 0x64)                    ,0x337A  => array(0x69, 0x75), 0x33DE  => array(0x76, 0x2215, 0x6D)                    ,0x33DF  => array(0x61, 0x2215, 0x6D)                    )            ,'norm_combcls' => array(0x334   => 1,   0x335   => 1,   0x336   => 1,   0x337   => 1                    ,0x338   => 1,   0x93C   => 7,   0x9BC   => 7,   0xA3C   => 7,   0xABC   => 7                    ,0xB3C   => 7,   0xCBC   => 7,   0x1037  => 7,   0x3099  => 8,   0x309A  => 8                    ,0x94D   => 9,   0x9CD   => 9,   0xA4D   => 9,   0xACD   => 9,   0xB4D   => 9                    ,0xBCD   => 9,   0xC4D   => 9,   0xCCD   => 9,   0xD4D   => 9,   0xDCA   => 9                    ,0xE3A   => 9,   0xF84   => 9,   0x1039  => 9,   0x1714  => 9,   0x1734  => 9                    ,0x17D2  => 9,   0x5B0   => 10,  0x5B1   => 11,  0x5B2   => 12,  0x5B3   => 13                    ,0x5B4   => 14,  0x5B5   => 15,  0x5B6   => 16,  0x5B7   => 17,  0x5B8   => 18                    ,0x5B9   => 19,  0x5BB   => 20,  0x5Bc   => 21,  0x5BD   => 22,  0x5BF   => 23                    ,0x5C1   => 24,  0x5C2   => 25,  0xFB1E  => 26,  0x64B   => 27,  0x64C   => 28                    ,0x64D   => 29,  0x64E   => 30,  0x64F   => 31,  0x650   => 32,  0x651   => 33                    ,0x652   => 34,  0x670   => 35,  0x711   => 36,  0xC55   => 84,  0xC56   => 91                    ,0xE38   => 103, 0xE39   => 103, 0xE48   => 107, 0xE49   => 107, 0xE4A   => 107                    ,0xE4B   => 107, 0xEB8   => 118, 0xEB9   => 118, 0xEC8   => 122, 0xEC9   => 122                    ,0xECA   => 122, 0xECB   => 122, 0xF71   => 129, 0xF72   => 130, 0xF7A   => 130                    ,0xF7B   => 130, 0xF7C   => 130, 0xF7D   => 130, 0xF80   => 130, 0xF74   => 132                    ,0x321   => 202, 0x322   => 202, 0x327   => 202, 0x328   => 202, 0x31B   => 216                    ,0xF39   => 216, 0x1D165 => 216, 0x1D166 => 216, 0x1D16E => 216, 0x1D16F => 216                    ,0x1D170 => 216, 0x1D171 => 216, 0x1D172 => 216, 0x302A  => 218, 0x316   => 220                    ,0x317   => 220, 0x318   => 220, 0x319   => 220, 0x31C   => 220, 0x31D   => 220                    ,0x31E   => 220, 0x31F   => 220, 0x320   => 220, 0x323   => 220, 0x324   => 220                    ,0x325   => 220, 0x326   => 220, 0x329   => 220, 0x32A   => 220, 0x32B   => 220                    ,0x32C   => 220, 0x32D   => 220, 0x32E   => 220, 0x32F   => 220, 0x330   => 220                    ,0x331   => 220, 0x332   => 220, 0x333   => 220, 0x339   => 220, 0x33A   => 220                    ,0x33B   => 220, 0x33C   => 220, 0x347   => 220, 0x348   => 220, 0x349   => 220                    ,0x34D   => 220, 0x34E   => 220, 0x353   => 220, 0x354   => 220, 0x355   => 220                    ,0x356   => 220, 0x591   => 220, 0x596   => 220, 0x59B   => 220, 0x5A3   => 220                    ,0x5A4   => 220, 0x5A5   => 220, 0x5A6   => 220, 0x5A7   => 220, 0x5AA   => 220                    ,0x655   => 220, 0x656   => 220, 0x6E3   => 220, 0x6EA   => 220, 0x6ED   => 220                    ,0x731   => 220, 0x734   => 220, 0x737   => 220, 0x738   => 220, 0x739   => 220                    ,0x73B   => 220, 0x73C   => 220, 0x73E   => 220, 0x742   => 220, 0x744   => 220                    ,0x746   => 220, 0x748   => 220, 0x952   => 220, 0xF18   => 220, 0xF19   => 220                    ,0xF35   => 220, 0xF37   => 220, 0xFC6   => 220, 0x193B  => 220, 0x20E8  => 220                    ,0x1D17B => 220, 0x1D17C => 220, 0x1D17D => 220, 0x1D17E => 220, 0x1D17F => 220                    ,0x1D180 => 220, 0x1D181 => 220, 0x1D182 => 220, 0x1D18A => 220, 0x1D18B => 220                    ,0x59A   => 222, 0x5AD   => 222, 0x1929  => 222, 0x302D  => 222, 0x302E  => 224                    ,0x302F  => 224, 0x1D16D => 226, 0x5AE   => 228, 0x18A9  => 228, 0x302B  => 228                    ,0x300   => 230, 0x301   => 230, 0x302   => 230, 0x303   => 230, 0x304   => 230                    ,0x305   => 230, 0x306   => 230, 0x307   => 230, 0x308   => 230, 0x309   => 230                    ,0x30A   => 230, 0x30B   => 230, 0x30C   => 230, 0x30D   => 230, 0x30E   => 230                    ,0x30F   => 230, 0x310   => 230, 0x311   => 230, 0x312   => 230, 0x313   => 230                    ,0x314   => 230, 0x33D   => 230, 0x33E   => 230, 0x33F   => 230, 0x340   => 230                    ,0x341   => 230, 0x342   => 230, 0x343   => 230, 0x344   => 230, 0x346   => 230                    ,0x34A   => 230, 0x34B   => 230, 0x34C   => 230, 0x350   => 230, 0x351   => 230                    ,0x352   => 230, 0x357   => 230, 0x363   => 230, 0x364   => 230, 0x365   => 230                    ,0x366   => 230, 0x367   => 230, 0x368   => 230, 0x369   => 230, 0x36A   => 230                    ,0x36B   => 230, 0x36C   => 230, 0x36D   => 230, 0x36E   => 230, 0x36F   => 230                    ,0x483   => 230, 0x484   => 230, 0x485   => 230, 0x486   => 230, 0x592   => 230                    ,0x593   => 230, 0x594   => 230, 0x595   => 230, 0x597   => 230, 0x598   => 230                    ,0x599   => 230, 0x59C   => 230, 0x59D   => 230, 0x59E   => 230, 0x59F   => 230                    ,0x5A0   => 230, 0x5A1   => 230, 0x5A8   => 230, 0x5A9   => 230, 0x5AB   => 230                    ,0x5AC   => 230, 0x5AF   => 230, 0x5C4   => 230, 0x610   => 230, 0x611   => 230                    ,0x612   => 230, 0x613   => 230, 0x614   => 230, 0x615   => 230, 0x653   => 230                    ,0x654   => 230, 0x657   => 230, 0x658   => 230, 0x6D6   => 230, 0x6D7   => 230                    ,0x6D8   => 230, 0x6D9   => 230, 0x6DA   => 230, 0x6DB   => 230, 0x6DC   => 230                    ,0x6DF   => 230, 0x6E0   => 230, 0x6E1   => 230, 0x6E2   => 230, 0x6E4   => 230                    ,0x6E7   => 230, 0x6E8   => 230, 0x6EB   => 230, 0x6EC   => 230, 0x730   => 230                    ,0x732   => 230, 0x733   => 230, 0x735   => 230, 0x736   => 230, 0x73A   => 230                    ,0x73D   => 230, 0x73F   => 230, 0x740   => 230, 0x741   => 230, 0x743   => 230                    ,0x745   => 230, 0x747   => 230, 0x749   => 230, 0x74A   => 230, 0x951   => 230                    ,0x953   => 230, 0x954   => 230, 0xF82   => 230, 0xF83   => 230, 0xF86   => 230                    ,0xF87   => 230, 0x170D  => 230, 0x193A  => 230, 0x20D0  => 230, 0x20D1  => 230                    ,0x20D4  => 230, 0x20D5  => 230, 0x20D6  => 230, 0x20D7  => 230, 0x20DB  => 230                    ,0x20DC  => 230, 0x20E1  => 230, 0x20E7  => 230, 0x20E9  => 230, 0xFE20  => 230                    ,0xFE21  => 230, 0xFE22  => 230, 0xFE23  => 230, 0x1D185 => 230, 0x1D186 => 230                    ,0x1D187 => 230, 0x1D189 => 230, 0x1D188 => 230, 0x1D1AA => 230, 0x1D1AB => 230                    ,0x1D1AC => 230, 0x1D1AD => 230, 0x315   => 232, 0x31A   => 232, 0x302C  => 232                    ,0x35F   => 233, 0x362   => 233, 0x35D   => 234, 0x35E   => 234, 0x360   => 234                    ,0x361   => 234, 0x345   => 240                    )            );}?>
<?php/*** Locate a byte index given a UTF-8 character index* @version $Id: position.php,v 1.1 2006/10/01 00:01:31 harryf Exp $* @package utf8* @subpackage position*///--------------------------------------------------------------------/*** Given a string and a character index in the string, in* terms of the UTF-8 character position, returns the byte* index of that character. Can be useful when you want to* PHP's native string functions but we warned, locating* the byte can be expensive* Takes variable number of parameters - first must be* the search string then 1 to n UTF-8 character positions* to obtain byte indexes for - it is more efficient to search* the string for multiple characters at once, than make* repeated calls to this function** @author Chris Smith<chris@jalakai.co.uk>* @param string string to locate index in* @param int (n times)* @return mixed - int if only one input int, array if more* @return boolean TRUE if it's all ASCII* @package utf8* @subpackage position*/function utf8_byte_position() {    $args = func_get_args();    $str =& array_shift($args);    if (!is_string($str)) return false;    $result = array();    // trivial byte index, character offset pair    $prev = array(0,0);    // use a short piece of str to estimate bytes per character    // $i (& $j) -> byte indexes into $str    $i = utf8_locate_next_chr($str, 300);    // $c -> character offset into $str    $c = strlen(utf8_decode(substr($str,0,$i)));    // deal with arguments from lowest to highest    sort($args);    foreach ($args as $offset) {        // sanity checks FIXME        // 0 is an easy check        if ($offset == 0) { $result[] = 0; continue; }        // ensure no endless looping        $safety_valve = 50;        do {            if ( ($c - $prev[1]) == 0 ) {                // Hack: gone past end of string                $error = 0;                $i = strlen($str);                break;            }            $j = $i + (int)(($offset-$c) * ($i - $prev[0]) / ($c - $prev[1]));            // correct to utf8 character boundary            $j = utf8_locate_next_chr($str, $j);            // save the index, offset for use next iteration            $prev = array($i,$c);            if ($j > $i) {                // determine new character offset                $c += strlen(utf8_decode(substr($str,$i,$j-$i)));            } else {                // ditto                $c -= strlen(utf8_decode(substr($str,$j,$i-$j)));            }            $error = abs($c-$offset);            // ready for next time around            $i = $j;        // from 7 it is faster to iterate over the string        } while ( ($error > 7) && --$safety_valve) ;        if ($error && $error <= 7) {            if ($c < $offset) {                // move up                while ($error--) { $i = utf8_locate_next_chr($str,++$i); }            } else {                // move down                while ($error--) { $i = utf8_locate_current_chr($str,--$i); }            }            // ready for next arg            $c = $offset;        }        $result[] = $i;    }    if ( count($result) == 1 ) {        return $result[0];    }    return $result;}//--------------------------------------------------------------------/*** Given a string and any byte index, returns the byte index* of the start of the current UTF-8 character, relative to supplied* position. If the current character begins at the same place as the* supplied byte index, that byte index will be returned. Otherwise* this function will step backwards, looking for the index where* curent UTF-8 character begins* @author Chris Smith<chris@jalakai.co.uk>* @param string* @param int byte index in the string* @return int byte index of start of next UTF-8 character* @package utf8* @subpackage position*/function utf8_locate_current_chr( &$str, $idx ) {    if ($idx <= 0) return 0;    $limit = strlen($str);    if ($idx >= $limit) return $limit;    // Binary value for any byte after the first in a multi-byte UTF-8 character    // will be like 10xxxxxx so & 0xC0 can be used to detect this kind    // of byte - assuming well formed UTF-8    while ($idx && ((ord($str[$idx]) & 0xC0) == 0x80)) $idx--;    return $idx;}//--------------------------------------------------------------------/*** Given a string and any byte index, returns the byte index* of the start of the next UTF-8 character, relative to supplied* position. If the next character begins at the same place as the* supplied byte index, that byte index will be returned.* @author Chris Smith<chris@jalakai.co.uk>* @param string* @param int byte index in the string* @return int byte index of start of next UTF-8 character* @package utf8* @subpackage position*/function utf8_locate_next_chr( &$str, $idx ) {    if ($idx <= 0) return 0;    $limit = strlen($str);    if ($idx >= $limit) return $limit;    // Binary value for any byte after the first in a multi-byte UTF-8 character    // will be like 10xxxxxx so & 0xC0 can be used to detect this kind    // of byte - assuming well formed UTF-8    while (($idx < $limit) && ((ord($str[$idx]) & 0xC0) == 0x80)) $idx++;    return $idx;}
<?php/** * A database layer class that relies on the MySQL PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysql_connect'))	exit('This PHP environment doesn\'t have MySQL support built in. MySQL support is required if you want to use a MySQL database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		$this->prefix = $db_prefix;		if ($p_connect)			$this->link_id = @mysql_pconnect($db_host, $db_username, $db_password);		else			$this->link_id = @mysql_connect($db_host, $db_username, $db_password);		if ($this->link_id)		{			if (!@mysql_select_db($db_name, $this->link_id))				error('Unable to select database. MySQL reported: '.mysql_error(), __FILE__, __LINE__);		}		else			error('Unable to connect to MySQL server. MySQL reported: '.mysql_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return mysql_query('START TRANSACTION', $this->link_id);	}	function end_transaction()	{		--$this->in_transaction;		if (mysql_query('COMMIT', $this->link_id))			return true;		else		{			mysql_query('ROLLBACK', $this->link_id);			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		if ($unbuffered)			$this->query_result = @mysql_unbuffered_query($sql, $this->link_id);		else			$this->query_result = @mysql_query($sql, $this->link_id);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			if ($this->in_transaction)				mysql_query('ROLLBACK', $this->link_id);			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		return ($query_id) ? @mysql_result($query_id, $row, $col) : false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysql_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysql_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysql_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysql_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysql_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysql_free_result($query_id) : false;	}	function escape($str)	{		if (is_array($str))			return '';		else if (function_exists('mysql_real_escape_string'))			return mysql_real_escape_string($str, $this->link_id);		else			return mysql_escape_string($str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysql_errno($this->link_id);		$result['error_msg'] = @mysql_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysql_free_result($this->query_result);			return @mysql_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Standard (InnoDB)',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'InnoDB').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php// Language definitions used in admin-categories$lang_admin_categories = array('Add category head'				=>	'Add category (create a new category at the specified position)','Add category info'				=>	'Your new category will not appear on the board index page until at least one forum is added to it. To create a new forum in this category or to move an existing forum to it go to the %s page.','Add category info link text'	=>	'forums','Add category legend'			=>	'Add new category','Add category'					=>	'Add category','New category label'			=>	'New category name','Category name label'			=>	'Category name','Position label'				=>	'Position','Del category head'				=>	'Delete category (together with all forums and posts it contains)','Delete category'				=>	'Delete category',// submit button'Select category label'			=>	'Select category','Confirm delete cat'			=>	'You are deleting the category "%s"','Delete category warning'		=>	'<strong>WARNING!</strong> Deleting a category will delete all forums and posts (if any) in that category!','Edit categories head'			=>	'Edit categories (change category names and/or positions)','Edit categories legend'		=>	'Edit categories','Edit category legend'			=>	'Edit category%s','Update all categories'			=>	'Update all categories','Categories updated'			=>	'Categories updated.','Category added'				=>	'Category added.','Category deleted'				=>	'Category deleted.','Must name category'			=>	'You must enter a name for the category','Must be integer'				=>	'Position must be a positive integer value',);
<?php// Language definitions used in all admin files$lang_admin_ranks = array('Rank head'						=>	'Add, edit or remove ranks','Rank'							=>	'Rank','Rank added'					=>	'Rank added.','Title message'					=>	'You must enter a rank title.','Min posts message'				=>	'Minimum posts must be a positive integer value.','Min posts occupied message'	=>	'There is already a rank with a minimum posts value of %s.','Rank updated'					=>	'Rank updated.','Rank removed'					=>	'Rank removed.','Add rank intro'				=>	'Enter a rank and the minimum number of posts that a user has to have to acquire the rank. Different ranks cannot have the same value for minimum posts. If a title is set for a user, the title will be displayed instead of any rank. For this to have any effect "<strong>User ranks</strong>" must be enabled in %s.','Add rank'						=>	'Add rank','Add rank legend'				=>	'New rank details','Rank title label'				=>	'Rank title','Min posts label'				=>	'Minimum posts','Existing ranks legend'			=>	'Edit or remove existing user ranks','No ranks'						=>	'No ranks in list.','Update'						=>	'Update','Remove'						=>	'Remove','New rank'						=>	'Add new rank','Existing rank'					=>	'Existing rank',);
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database. MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return mysqli_query($this->link_id, 'START TRANSACTION');	}	function end_transaction()	{		--$this->in_transaction;		if (mysqli_query($this->link_id, 'COMMIT'))			return true;		else		{			mysqli_query($this->link_id, 'ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			if ($this->in_transaction)				mysqli_query($this->link_id, 'ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved (InnoDB)',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'InnoDB').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/*** @version $Id: str_split.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to str_split* Convert a string to an array* Note: requires utf8_strlen to be loaded* @param string UTF-8 encoded* @param int number to characters to split string by* @return string characters in string reverses* @see http://www.php.net/str_split* @see utf8_strlen* @package utf8* @subpackage strings*/function utf8_str_split($str, $split_len = 1) {    if ( !preg_match('/^[0-9]+$/',$split_len) || $split_len < 1 ) {        return FALSE;    }    $len = utf8_strlen($str);    if ( $len <= $split_len ) {        return array($str);    }    preg_match_all('/.{'.$split_len.'}|[^\x00]{1,'.$split_len.'}$/us', $str, $ar);    return $ar[0];}
<?php/** * Forum settings management page. * * Allows administrators to control many of the settings used in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('aop_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_settings.php';$section = isset($_GET['section']) ? $_GET['section'] : null;if (isset($_POST['form_sent'])){	$form = array_map('trim', $_POST['form']);	($hook = get_hook('aop_form_submitted')) ? eval($hook) : null;	// Validate input depending on section	switch ($section)	{		case 'setup':		{			($hook = get_hook('aop_setup_validation')) ? eval($hook) : null;			if ($form['board_title'] == '')				message($lang_admin_settings['Error no board title']);			// Clean default_lang, default_style, and sef			$form['default_style'] = preg_replace('#[\.\\\/]#', '', $form['default_style']);			$form['default_lang'] = preg_replace('#[\.\\\/]#', '', $form['default_lang']);			$form['sef'] = preg_replace('#[\.\\\/]#', '', $form['sef']);			// Make sure default_lang, default_style, and sef exist			if (!file_exists(FORUM_ROOT.'style/'.$form['default_style'].'/'.$form['default_style'].'.php'))				message($lang_common['Bad request']);			if (!file_exists(FORUM_ROOT.'lang/'.$form['default_lang'].'/common.php'))				message($lang_common['Bad request']);			if (!file_exists(FORUM_ROOT.'include/url/'.$form['sef'].'/forum_urls.php'))				message($lang_common['Bad request']);			if (!isset($form['default_dst']) || $form['default_dst'] != '1')				$form['default_dst'] = '0';			$form['timeout_visit'] = intval($form['timeout_visit']);			$form['timeout_online'] = intval($form['timeout_online']);			$form['redirect_delay'] = intval($form['redirect_delay']);			if ($form['timeout_online'] >= $form['timeout_visit'])				message($lang_admin_settings['Error timeout value']);			$form['disp_topics_default'] = (intval($form['disp_topics_default']) > 0) ? intval($form['disp_topics_default']) : 1;			$form['disp_posts_default'] = (intval($form['disp_posts_default']) > 0) ? intval($form['disp_posts_default']) : 1;			if ($form['additional_navlinks'] != '')				$form['additional_navlinks'] = forum_trim(forum_linebreaks($form['additional_navlinks']));			break;		}		case 'features':		{			($hook = get_hook('aop_features_validation')) ? eval($hook) : null;			if (!isset($form['search_all_forums']) || $form['search_all_forums'] != '1') $form['search_all_forums'] = '0';			if (!isset($form['ranks']) || $form['ranks'] != '1') $form['ranks'] = '0';			if (!isset($form['censoring']) || $form['censoring'] != '1') $form['censoring'] = '0';			if (!isset($form['quickjump']) || $form['quickjump'] != '1') $form['quickjump'] = '0';			if (!isset($form['show_version']) || $form['show_version'] != '1') $form['show_version'] = '0';			if (!isset($form['show_moderators']) || $form['show_moderators'] != '1') $form['show_moderators'] = '0';			if (!isset($form['users_online']) || $form['users_online'] != '1') $form['users_online'] = '0';			if (!isset($form['quickpost']) || $form['quickpost'] != '1') $form['quickpost'] = '0';			if (!isset($form['subscriptions']) || $form['subscriptions'] != '1') $form['subscriptions'] = '0';			if (!isset($form['force_guest_email']) || $form['force_guest_email'] != '1') $form['force_guest_email'] = '0';			if (!isset($form['show_dot']) || $form['show_dot'] != '1') $form['show_dot'] = '0';			if (!isset($form['topic_views']) || $form['topic_views'] != '1') $form['topic_views'] = '0';			if (!isset($form['show_post_count']) || $form['show_post_count'] != '1') $form['show_post_count'] = '0';			if (!isset($form['show_user_info']) || $form['show_user_info'] != '1') $form['show_user_info'] = '0';			if (!isset($form['message_bbcode']) || $form['message_bbcode'] != '1') $form['message_bbcode'] = '0';			if (!isset($form['message_img_tag']) || $form['message_img_tag'] != '1') $form['message_img_tag'] = '0';			if (!isset($form['smilies']) || $form['smilies'] != '1') $form['smilies'] = '0';			if (!isset($form['make_links']) || $form['make_links'] != '1') $form['make_links'] = '0';			if (!isset($form['message_all_caps']) || $form['message_all_caps'] != '1') $form['message_all_caps'] = '0';			if (!isset($form['subject_all_caps']) || $form['subject_all_caps'] != '1') $form['subject_all_caps'] = '0';			$form['indent_num_spaces'] = intval($form['indent_num_spaces']);			$form['quote_depth'] = intval($form['quote_depth']);			if (!isset($form['signatures']) || $form['signatures'] != '1') $form['signatures'] = '0';			if (!isset($form['sig_bbcode']) || $form['sig_bbcode'] != '1') $form['sig_bbcode'] = '0';			if (!isset($form['sig_img_tag']) || $form['sig_img_tag'] != '1') $form['sig_img_tag'] = '0';			if (!isset($form['smilies_sig']) || $form['smilies_sig'] != '1') $form['smilies_sig'] = '0';			if (!isset($form['sig_all_caps']) || $form['sig_all_caps'] != '1') $form['sig_all_caps'] = '0';			$form['sig_length'] = intval($form['sig_length']);			$form['sig_lines'] = intval($form['sig_lines']);			if (!isset($form['avatars']) || $form['avatars'] != '1') $form['avatars'] = '0';			// Make sure avatars_dir doesn't end with a slash			if (substr($form['avatars_dir'], -1) == '/')				$form['avatars_dir'] = substr($form['avatars_dir'], 0, -1);			$form['avatars_width'] = intval($form['avatars_width']);			$form['avatars_height'] = intval($form['avatars_height']);			$form['avatars_size'] = intval($form['avatars_size']);			if (!isset($form['check_for_updates']) || $form['check_for_updates'] != '1') $form['check_for_updates'] = '0';			if (!isset($form['check_for_versions']) || $form['check_for_versions'] != '1') $form['check_for_versions'] = '0';			if (!isset($form['gzip']) || $form['gzip'] != '1') $form['gzip'] = '0';			break;		}		case 'email':		{			($hook = get_hook('aop_email_validation')) ? eval($hook) : null;			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			$form['admin_email'] = strtolower($form['admin_email']);			if (!is_valid_email($form['admin_email']))				message($lang_admin_settings['Error invalid admin e-mail']);			$form['webmaster_email'] = strtolower($form['webmaster_email']);			if (!is_valid_email($form['webmaster_email']))				message($lang_admin_settings['Error invalid web e-mail']);			if (!isset($form['smtp_ssl']) || $form['smtp_ssl'] != '1') $form['smtp_ssl'] = '0';			break;		}		case 'announcements':		{			($hook = get_hook('aop_announcements_validation')) ? eval($hook) : null;			if (!isset($form['announcement']) || $form['announcement'] != '1') $form['announcement'] = '0';			if ($form['announcement_message'] != '')				$form['announcement_message'] = forum_linebreaks($form['announcement_message']);			else				$form['announcement_message'] = $lang_admin_settings['Announcement message default'];			break;		}		case 'registration':		{			($hook = get_hook('aop_registration_validation')) ? eval($hook) : null;			if (!isset($form['regs_allow']) || $form['regs_allow'] != '1') $form['regs_allow'] = '0';			if (!isset($form['regs_verify']) || $form['regs_verify'] != '1') $form['regs_verify'] = '0';			if (!isset($form['allow_banned_email']) || $form['allow_banned_email'] != '1') $form['allow_banned_email'] = '0';			if (!isset($form['allow_dupe_email']) || $form['allow_dupe_email'] != '1') $form['allow_dupe_email'] = '0';			if (!isset($form['regs_report']) || $form['regs_report'] != '1') $form['regs_report'] = '0';			if (!isset($form['rules']) || $form['rules'] != '1') $form['rules'] = '0';			if ($form['rules_message'] != '')				$form['rules_message'] = forum_linebreaks($form['rules_message']);			else				$form['rules_message'] = $lang_admin_settings['Rules default'];			break;		}		case 'maintenance':		{			($hook = get_hook('aop_maintenance_validation')) ? eval($hook) : null;			if (!isset($form['maintenance']) || $form['maintenance'] != '1') $form['maintenance'] = '0';			if ($form['maintenance_message'] != '')				$form['maintenance_message'] = forum_linebreaks($form['maintenance_message']);			else				$form['maintenance_message'] = $lang_admin_settings['Maintenance message default'];			break;		}		default:		{			($hook = get_hook('aop_new_section_validation')) ? eval($hook) : null;			break;		}	}	($hook = get_hook('aop_pre_update_configuration')) ? eval($hook) : null;	foreach ($form as $key => $input)	{		// Only update permission values that have changed		if (array_key_exists('p_'.$key, $forum_config) && $forum_config['p_'.$key] != $input)		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value='.intval($input),				'WHERE'		=> 'conf_name=\'p_'.$forum_db->escape($key).'\''			);			($hook = get_hook('aop_qr_update_permission_conf')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Only update option values that have changed		if (array_key_exists('o_'.$key, $forum_config) && $forum_config['o_'.$key] != $input)		{			if ($input != '' || is_int($input))				$value = '\''.$forum_db->escape($input).'\'';			else				$value = 'NULL';			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value='.$value,				'WHERE'		=> 'conf_name=\'o_'.$forum_db->escape($key).'\''			);			($hook = get_hook('aop_qr_update_permission_option')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_config_cache();	// If changed sef - remove quick-jump cache	if (!empty($forum_config['o_sef']) && !empty($form['sef']))	{		if ($forum_config['o_sef'] != $form['sef'])		{			clean_quickjump_cache();		}	}	// Add flash message	$forum_flash->add_info($lang_admin_settings['Settings updated']);	($hook = get_hook('aop_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_settings_'.$section]), $lang_admin_settings['Settings updated']);}if (!$section || $section == 'setup'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup'])),		array($lang_admin_common['Setup'], forum_link($forum_url['admin_settings_setup']))	);	($hook = get_hook('aop_setup_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'settings');	define('FORUM_PAGE', 'admin-settings-setup');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_setup_output_start')) ? eval($hook) : null;?>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_setup']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_setup'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup personal'] ?></span></h2>				</div><?php ($hook = get_hook('aop_setup_pre_personal_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup personal legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_board_title')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>">								<span><?php echo $lang_admin_settings['Board title label'] ?></span>							</label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[board_title]" size="50" maxlength="255" value="<?php echo forum_htmlencode($forum_config['o_board_title']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_board_descrip')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>">								<span><?php echo $lang_admin_settings['Board description label'] ?></span>							</label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[board_desc]" size="50" maxlength="255" value="<?php echo forum_htmlencode($forum_config['o_board_desc']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_default_style')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box select">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>">								<span><?php echo $lang_admin_settings['Default style label'] ?></span>							</label><br />							<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[default_style]"><?php	$styles = get_style_packs();	foreach ($styles as $style)	{		if ($forum_config['o_default_style'] == $style)			echo "\t\t\t\t\t\t\t\t".'<option value="'.$style.'" selected="selected">'.str_replace('_', ' ', $style).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t".'<option value="'.$style.'">'.str_replace('_', ' ', $style).'</option>'."\n";	}?>							</select></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_personal_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_personal_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup local'] ?></span></h2>				</div><?php ($hook = get_hook('aop_setup_pre_local_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup local legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_default_language')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box select">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Default language label'] ?></span><small><?php echo $lang_admin_settings['Default language help'] ?></small></label><br />							<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[default_lang]"><?php	$languages = get_language_packs();	foreach ($languages as $lang)	{		if ($forum_config['o_default_lang'] == $lang)			echo "\t\t\t\t\t\t\t\t".'<option value="'.$lang.'" selected="selected">'.$lang.'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t".'<option value="'.$lang.'">'.$lang.'</option>'."\n";	}	// Load the profile.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';?>							</select></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_default_timezone')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box select">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Default timezone label'] ?></span></label><br />							<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[default_timezone]">								<option value="-12"<?php if ($forum_config['o_default_timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-12:00'] ?></option>								<option value="-11"<?php if ($forum_config['o_default_timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-11:00'] ?></option>								<option value="-10"<?php if ($forum_config['o_default_timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-10:00'] ?></option>								<option value="-9.5"<?php if ($forum_config['o_default_timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:30'] ?></option>								<option value="-9"<?php if ($forum_config['o_default_timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:00'] ?></option>								<option value="-8"<?php if ($forum_config['o_default_timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-08:00'] ?></option>								<option value="-7"<?php if ($forum_config['o_default_timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-07:00'] ?></option>								<option value="-6"<?php if ($forum_config['o_default_timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-06:00'] ?></option>								<option value="-5"<?php if ($forum_config['o_default_timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-05:00'] ?></option>								<option value="-4"<?php if ($forum_config['o_default_timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-04:00'] ?></option>								<option value="-3.5"<?php if ($forum_config['o_default_timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:30'] ?></option>								<option value="-3"<?php if ($forum_config['o_default_timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:00'] ?></option>								<option value="-2"<?php if ($forum_config['o_default_timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-02:00'] ?></option>								<option value="-1"<?php if ($forum_config['o_default_timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-01:00'] ?></option>								<option value="0"<?php if ($forum_config['o_default_timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC'] ?></option>								<option value="1"<?php if ($forum_config['o_default_timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+01:00'] ?></option>								<option value="2"<?php if ($forum_config['o_default_timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+02:00'] ?></option>								<option value="3"<?php if ($forum_config['o_default_timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:00'] ?></option>								<option value="3.5"<?php if ($forum_config['o_default_timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:30'] ?></option>								<option value="4"<?php if ($forum_config['o_default_timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:00'] ?></option>								<option value="4.5"<?php if ($forum_config['o_default_timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:30'] ?></option>								<option value="5"<?php if ($forum_config['o_default_timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:00'] ?></option>								<option value="5.5"<?php if ($forum_config['o_default_timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:30'] ?></option>								<option value="5.75"<?php if ($forum_config['o_default_timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:45'] ?></option>								<option value="6"<?php if ($forum_config['o_default_timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:00'] ?></option>								<option value="6.5"<?php if ($forum_config['o_default_timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:30'] ?></option>								<option value="7"<?php if ($forum_config['o_default_timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+07:00'] ?></option>								<option value="8"<?php if ($forum_config['o_default_timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:00'] ?></option>								<option value="8.75"<?php if ($forum_config['o_default_timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:45'] ?></option>								<option value="9"<?php if ($forum_config['o_default_timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:00'] ?></option>								<option value="9.5"<?php if ($forum_config['o_default_timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:30'] ?></option>								<option value="10"<?php if ($forum_config['o_default_timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:00'] ?></option>								<option value="10.5"<?php if ($forum_config['o_default_timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:30'] ?></option>								<option value="11"<?php if ($forum_config['o_default_timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:00'] ?></option>								<option value="11.5"<?php if ($forum_config['o_default_timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:30'] ?></option>								<option value="12"<?php if ($forum_config['o_default_timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:00'] ?></option>								<option value="12.75"<?php if ($forum_config['o_default_timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:45'] ?></option>								<option value="13"<?php if ($forum_config['o_default_timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+13:00'] ?></option>								<option value="14"<?php if ($forum_config['o_default_timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+14:00'] ?></option>							</select></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_default_dst')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box checkbox">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[default_dst]" value="1" <?php if ($forum_config['o_default_dst'] == 1) echo 'checked="checked" ' ?>/></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['DST label'] ?></label>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_time_format')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Time format label'] ?></span><small><?php printf($lang_admin_settings['Current format'], format_time(time(), 2, null, $forum_config['o_time_format']), $lang_admin_settings['External format help']) ?></small></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[time_format]" size="25" maxlength="25" value="<?php echo forum_htmlencode($forum_config['o_time_format']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_date_format')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Date format label'] ?></span><small><?php printf($lang_admin_settings['Current format'], format_time(time(), 1, $forum_config['o_date_format'], null, true), $lang_admin_settings['External format help']) ?></small></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[date_format]" size="25" maxlength="25" value="<?php echo forum_htmlencode($forum_config['o_date_format']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_local_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_local_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup timeouts'] ?></span></h2>				</div><?php ($hook = get_hook('aop_setup_pre_timeouts_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup timeouts legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_visit_timeout')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Visit timeout label'] ?></span><small><?php echo $lang_admin_settings['Visit timeout help'] ?></small></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[timeout_visit]" size="5" maxlength="5" value="<?php echo $forum_config['o_timeout_visit'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_online_timeout')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Online timeout label'] ?></span><small><?php echo $lang_admin_settings['Online timeout help'] ?></small></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[timeout_online]" size="5" maxlength="5" value="<?php echo $forum_config['o_timeout_online'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_redirect_time')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Redirect time label'] ?></span><small><?php echo $lang_admin_settings['Redirect time help'] ?></small></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[redirect_delay]" size="5" maxlength="5" value="<?php echo $forum_config['o_redirect_delay'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_timeouts_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_timeouts_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup pagination'] ?></span></h2>				</div><?php ($hook = get_hook('aop_setup_pre_pagination_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup pagination legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_topics_per_page')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Topics per page label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_topics_default]" size="5" maxlength="3" value="<?php echo $forum_config['o_disp_topics_default'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_posts_per_page')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Posts per page label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_posts_default]" size="5" maxlength="3" value="<?php echo $forum_config['o_disp_posts_default'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_topic_review')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box frm-short text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Topic review label'] ?></span><small><?php echo $lang_admin_settings['Topic review help'] ?></small></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[topic_review]" size="5" maxlength="3" value="<?php echo $forum_config['o_topic_review'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_pagination_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_pagination_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup reports'] ?></span></h2>				</div><?php ($hook = get_hook('aop_setup_pre_reports_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup reports legend'] ?></strong></legend>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_settings['Reporting method'] ?></span></legend>						<div class="mf-box">							<div class="mf-item">								<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[report_method]" value="0"<?php if ($forum_config['o_report_method'] == '0') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Report internal label'] ?></label>							</div>							<div class="mf-item">								<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[report_method]" value="1"<?php if ($forum_config['o_report_method'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Report email label'] ?></label>							</div>							<div class="mf-item">								<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[report_method]" value="2"<?php if ($forum_config['o_report_method'] == '2') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Report both label'] ?></label>							</div><?php ($hook = get_hook('aop_setup_new_reporting_method')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('aop_setup_pre_reports_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_reports_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup URL'] ?></span></h2>				</div>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_settings['URL scheme info'] ?></p>				</div><?php ($hook = get_hook('aop_setup_pre_url_scheme_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup URL legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_url_scheme')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box select">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['URL scheme label'] ?></span><small><?php echo $lang_admin_settings['URL scheme help'] ?></small></label><br />							<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[sef]"><?php	$url_schemes = get_scheme_packs();	foreach ($url_schemes as $schema)	{		if ($forum_config['o_sef'] == $schema)			echo "\t\t\t\t\t\t\t\t".'<option value="'.$schema.'" selected="selected">'.str_replace('_', ' ', $schema).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t".'<option value="'.$schema.'">'.str_replace('_', ' ', $schema).'</option>'."\n";	}?>							</select></span>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_url_scheme_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_setup_url_scheme_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>				<div class="content-head">					<h2 class="hn"><span><?php echo $lang_admin_settings['Setup links'] ?></span></h2>				</div>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_settings['Setup links info'] ?></p>				</div><?php ($hook = get_hook('aop_setup_pre_links_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['Setup links legend'] ?></strong></legend><?php ($hook = get_hook('aop_setup_pre_additional_navlinks')) ? eval($hook) : null; ?>					<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="txt-box textarea">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Enter links label'] ?></span></label>							<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="form[additional_navlinks]" rows="3" cols="55"><?php echo forum_htmlencode($forum_config['o_additional_navlinks']) ?></textarea></span></div>						</div>					</div><?php ($hook = get_hook('aop_setup_pre_links_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_setup_links_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>			</div>		</form>	</div><?php}else if ($section == 'features'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup'])),		array($lang_admin_common['Features'], forum_link($forum_url['admin_settings_features']))	);	($hook = get_hook('aop_features_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'settings');	define('FORUM_PAGE', 'admin-settings-features');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_features_output_start')) ? eval($hook) : null;?>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_features']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_features'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features general'] ?></span></h2>			</div><?php ($hook = get_hook('aop_features_pre_general_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_settings['Features general legend'] ?></strong></legend><?php ($hook = get_hook('aop_features_pre_search_all_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[search_all_forums]" value="1"<?php if ($forum_config['o_search_all_forums'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Searching'] ?></span> <?php echo $lang_admin_settings['Search all label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_ranks_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[ranks]" value="1"<?php if ($forum_config['o_ranks'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['User ranks'] ?></span> <?php echo $lang_admin_settings['User ranks label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_censoring_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[censoring]" value="1"<?php if ($forum_config['o_censoring'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Censor words'] ?></span> <?php echo $lang_admin_settings['Censor words label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_quickjump_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[quickjump]" value="1"<?php if ($forum_config['o_quickjump'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Quick jump'] ?></span> <?php echo $lang_admin_settings['Quick jump label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_show_version_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_version]" value="1"<?php if ($forum_config['o_show_version'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Show version'] ?></span> <?php echo $lang_admin_settings['Show version label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_show_moderators_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_moderators]" value="1"<?php if ($forum_config['o_show_moderators'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Show moderators'] ?></span> <?php echo $lang_admin_settings['Show moderators label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_users_online_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[users_online]" value="1"<?php if ($forum_config['o_users_online'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Online list'] ?></span> <?php echo $lang_admin_settings['Users online label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_general_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('aop_features_general_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features posting'] ?></span></h2>			</div><?php ($hook = get_hook('aop_features_pre_posting_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_settings['Features posting legend'] ?></span></legend><?php ($hook = get_hook('aop_features_pre_quickpost_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[quickpost]" value="1"<?php if ($forum_config['o_quickpost'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Quick post'] ?></span> <?php echo $lang_admin_settings['Quick post label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_subscriptions_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[subscriptions]" value="1"<?php if ($forum_config['o_subscriptions'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Subscriptions'] ?></span> <?php echo $lang_admin_settings['Subscriptions label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_force_guest_email_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[force_guest_email]" value="1"<?php if ($forum_config['p_force_guest_email'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Guest posting'] ?></span> <?php echo $lang_admin_settings['Guest posting label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_show_dot_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_dot]" value="1"<?php if ($forum_config['o_show_dot'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['User has posted'] ?></span> <?php echo $lang_admin_settings['User has posted label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_topic_views_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[topic_views]" value="1"<?php if ($forum_config['o_topic_views'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Topic views'] ?></span> <?php echo $lang_admin_settings['Topic views label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_show_post_count_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_post_count]" value="1"<?php if ($forum_config['o_show_post_count'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['User post count'] ?></span> <?php echo $lang_admin_settings['User post count label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_show_user_info_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_user_info]" value="1"<?php if ($forum_config['o_show_user_info'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['User info'] ?></span> <?php echo $lang_admin_settings['User info label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_posting_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('aop_features_posting_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features posts'] ?></span></h2>			</div><?php ($hook = get_hook('aop_features_pre_message_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_settings['Features posts legend'] ?></span></legend><?php ($hook = get_hook('aop_features_pre_message_content_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_settings['Post content group'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[message_bbcode]" value="1"<?php if ($forum_config['p_message_bbcode'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Allow BBCode label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[message_img_tag]" value="1"<?php if ($forum_config['p_message_img_tag'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Allow img label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[smilies]" value="1"<?php if ($forum_config['o_smilies'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Smilies in posts label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[make_links]" value="1"<?php if ($forum_config['o_make_links'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Make clickable links label'] ?></label>						</div><?php ($hook = get_hook('aop_features_new_message_content_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('aop_features_pre_message_content_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_features_message_content_fieldset_end')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_settings['Allow capitals group'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[message_all_caps]" value="1"<?php if ($forum_config['p_message_all_caps'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['All caps message label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[subject_all_caps]" value="1"<?php if ($forum_config['p_subject_all_caps'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['All caps subject label'] ?></label>						</div><?php ($hook = get_hook('aop_features_new_message_caps_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('aop_features_pre_message_caps_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_features_message_caps_fieldset_end')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Indent size label'] ?></span><small><?php echo $lang_admin_settings['Indent size help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[indent_num_spaces]" size="5" maxlength="3" value="<?php echo $forum_config['o_indent_num_spaces'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_quote_depth')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Quote depth label'] ?></span><small><?php echo $lang_admin_settings['Quote depth help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[quote_depth]" size="5" maxlength="3" value="<?php echo $forum_config['o_quote_depth'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_message_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('aop_features_message_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features sigs'] ?></span></h2>			</div><?php ($hook = get_hook('aop_features_pre_sig_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_settings['Features sigs legend'] ?></span></legend><?php ($hook = get_hook('aop_features_pre_signature_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[signatures]" value="1"<?php if ($forum_config['o_signatures'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Allow signatures'] ?></span> <?php echo $lang_admin_settings['Allow signatures label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_sig_content_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_settings['Signature content group'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[sig_bbcode]" value="1"<?php if ($forum_config['p_sig_bbcode'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['BBCode in sigs label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[sig_img_tag]" value="1"<?php if ($forum_config['p_sig_img_tag'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Img in sigs label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[smilies_sig]" value="1"<?php if ($forum_config['o_smilies_sig'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Smilies in sigs label'] ?></label>						</div><?php ($hook = get_hook('aop_features_new_sig_content_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('aop_features_pre_sig_content_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_features_sig_content_fieldset_end')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[sig_all_caps]" value="1"<?php if ($forum_config['p_sig_all_caps'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Allow capitals group'] ?></span> <?php echo $lang_admin_settings['All caps sigs label'] ?></label>					</div>				</div>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Max sig length label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[sig_length]" size="5" maxlength="5" value="<?php echo $forum_config['p_sig_length'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_max_sig_lines')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Max sig lines label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[sig_lines]" size="5" maxlength="3" value="<?php echo $forum_config['p_sig_lines'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_sig_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('aop_features_sig_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features Avatars'] ?></span></h2>			</div><?php ($hook = get_hook('aop_features_pre_avatars_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_settings['Features Avatars legend'] ?></span></legend><?php ($hook = get_hook('aop_features_pre_avatar_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[avatars]" value="1"<?php if ($forum_config['o_avatars'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Allow avatars'] ?></span> <?php echo $lang_admin_settings['Allow avatars label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_avatar_directory')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Avatar directory label'] ?></span><small><?php echo $lang_admin_settings['Avatar directory help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[avatars_dir]" size="35" maxlength="50" value="<?php echo forum_htmlencode($forum_config['o_avatars_dir']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_avatar_max_width')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Avatar Max width label'] ?></span><small><?php echo $lang_admin_settings['Avatar Max width help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[avatars_width]" size="6" maxlength="5" value="<?php echo $forum_config['o_avatars_width'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_avatar_max_height')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Avatar Max height label'] ?></span><small><?php echo $lang_admin_settings['Avatar Max height help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[avatars_height]" size="6" maxlength="5" value="<?php echo $forum_config['o_avatars_height'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_avatar_max_size')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Avatar Max size label'] ?></span><small><?php echo $lang_admin_settings['Avatar Max size help'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[avatars_size]" size="6" maxlength="6" value="<?php echo $forum_config['o_avatars_size'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_features_pre_avatars_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('aop_features_avatars_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features update'] ?></span></h2>			</div><?php if (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))): ?>			<div class="ct-box">				<p><?php echo $lang_admin_settings['Features update info'] ?></p>			</div><?php ($hook = get_hook('aop_features_pre_updates_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_settings['Features update legend'] ?></strong></legend><?php ($hook = get_hook('aop_features_pre_updates_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[check_for_updates]" value="1"<?php if ($forum_config['o_check_for_updates'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Update check'] ?></span> <?php echo $lang_admin_settings['Update check label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_version_updates_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[check_for_versions]" value="1"<?php if ($forum_config['o_check_for_versions'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Check for versions'] ?></span> <?php echo $lang_admin_settings['Auto check for versions'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_updates_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aop_features_updates_fieldset_end')) ? eval($hook) : null; ?><?php else: ?>			<div class="ct-box">				<p><?php echo $lang_admin_settings['Features update disabled info'] ?></p>			</div><?php ($hook = get_hook('aop_features_post_updates_disabled_box')) ? eval($hook) : null; ?><?php endif; ?><?php	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Features gzip'] ?></span></h2>			</div>			<div class="ct-box">				<p><?php echo $lang_admin_settings['Features gzip info'] ?></p>			</div><?php ($hook = get_hook('aop_features_pre_gzip_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_settings['Features gzip legend'] ?></strong></legend><?php ($hook = get_hook('aop_features_pre_gzip_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[gzip]" value="1"<?php if ($forum_config['o_gzip'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Enable gzip'] ?></span> <?php echo $lang_admin_settings['Enable gzip label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_features_pre_gzip_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aop_features_gzip_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>			</div>		</form>	</div><?php}else if ($section == 'announcements'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup'])),		array($lang_admin_common['Announcements'], forum_link($forum_url['admin_settings_announcements']))	);	($hook = get_hook('aop_announcements_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'settings');	define('FORUM_PAGE', 'admin-settings-announcements');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_announcements_output_start')) ? eval($hook) : null;?>	<div class="main-content main-frm">		<div class="content-head">			<h2 class="hn"><span><?php echo $lang_admin_settings['Announcements head'] ?></span></h2>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_announcements']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_announcements'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div><?php ($hook = get_hook('aop_announcements_pre_announcement_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_settings['Announcements legend'] ?></strong></legend><?php ($hook = get_hook('aop_announcements_pre_enable_announcement_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[announcement]" value="1"<?php if ($forum_config['o_announcement'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Enable announcement'] ?></span> <?php echo $lang_admin_settings['Enable announcement label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_announcements_pre_announcement_heading')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Announcement heading label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[announcement_heading]" size="50" maxlength="255" value="<?php echo forum_htmlencode($forum_config['o_announcement_heading']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('aop_announcements_pre_announcement_message')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Announcement message label'] ?></span><small><?php echo $lang_admin_settings['Announcement message help'] ?></small></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="form[announcement_message]" rows="5" cols="55"><?php echo forum_htmlencode($forum_config['o_announcement_message']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('aop_announcements_pre_announcement_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aop_announcements_announcement_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>			</div>		</form>	</div><?php}else if ($section == 'registration'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup'])),		array($lang_admin_common['Registration'], forum_link($forum_url['admin_settings_registration']))	);	($hook = get_hook('aop_registration_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'settings');	define('FORUM_PAGE', 'admin-settings-registration');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_registration_output_start')) ? eval($hook) : null;?>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_registration']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_registration'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Registration new'] ?></span></h2>			</div>			<div class="ct-box">				<p><?php echo $lang_admin_settings['New reg info'] ?></p>			</div><?php ($hook = get_hook('aop_registration_pre_new_regs_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_settings['Registration new legend'] ?></span></legend><?php ($hook = get_hook('aop_registration_pre_allow_new_regs_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[regs_allow]" value="1"<?php if ($forum_config['o_regs_allow'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Allow new reg'] ?></span> <?php echo $lang_admin_settings['Allow new reg label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_registration_pre_verify_regs_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[regs_verify]" value="1"<?php if ($forum_config['o_regs_verify'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Verify reg'] ?></span> <?php echo $lang_admin_settings['Verify reg label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_registration_pre_email_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_settings['Reg e-mail group'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[allow_banned_email]" value="1"<?php if ($forum_config['p_allow_banned_email'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Allow banned label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[allow_dupe_email]" value="1"<?php if ($forum_config['p_allow_dupe_email'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Allow dupe label'] ?></label>						</div><?php ($hook = get_hook('aop_registration_new_email_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('aop_registration_pre_email_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_registration_email_fieldset_end')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[regs_report]" value="1"<?php if ($forum_config['o_regs_report'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Report new reg'] ?></span> <?php echo $lang_admin_settings['Report new reg label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_registration_pre_email_setting_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_settings['E-mail setting group'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[default_email_setting]" value="0"<?php if ($forum_config['o_default_email_setting'] == '0') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Display e-mail label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[default_email_setting]" value="1"<?php if ($forum_config['o_default_email_setting'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Allow form e-mail label'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[default_email_setting]" value="2"<?php if ($forum_config['o_default_email_setting'] == '2') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_settings['Disallow form e-mail label'] ?></label>						</div><?php ($hook = get_hook('aop_registration_new_email_setting_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('aop_registration_pre_email_setting_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_registration_email_setting_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php	($hook = get_hook('aop_registration_new_regs_fieldset_end')) ? eval($hook) : null;	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['Registration rules'] ?></span></h2>			</div>				<div class="ct-box">					<p><?php echo $lang_admin_settings['Registration rules info'] ?></p>				</div><?php ($hook = get_hook('aop_registration_pre_rules_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><span><?php echo $lang_admin_settings['Registration rules legend'] ?></span></legend><?php ($hook = get_hook('aop_registration_pre_rules_checkbox')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box checkbox">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[rules]" value="1"<?php if ($forum_config['o_rules'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Require rules'] ?></span><?php echo $lang_admin_settings['Require rules label'] ?></label>						</div>					</div><?php ($hook = get_hook('aop_registration_pre_rules_text')) ? eval($hook) : null; ?>					<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="txt-box textarea">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Compose rules label'] ?></span><small><?php echo $lang_admin_settings['Compose rules help'] ?></small></label>							<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="form[rules_message]" rows="10" cols="55"><?php echo forum_htmlencode($forum_config['o_rules_message']) ?></textarea></span></div>						</div>					</div><?php ($hook = get_hook('aop_registration_pre_rules_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_registration_rules_fieldset_end')) ? eval($hook) : null; ?>				<div class="frm-buttons">					<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				</div>		</form>	</div><?php}else if ($section == 'maintenance'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Management'], forum_link($forum_url['admin_reports'])),		array($lang_admin_common['Maintenance mode'], forum_link($forum_url['admin_settings_maintenance']))	);	($hook = get_hook('aop_maintenance_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'management');	define('FORUM_PAGE', 'admin-settings-maintenance');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_maintenance_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_settings['Maintenance head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_maintenance']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_maintenance'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div>			<div class="ct-box warn-box">				<p class="important"><?php echo $lang_admin_settings['Maintenance mode info'] ?></p>				<p class="warn"><?php echo $lang_admin_settings['Maintenance mode warn'] ?></p>			</div><?php ($hook = get_hook('aop_maintenance_pre_maintenance_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_settings['Maintenance legend'] ?></strong></legend><?php ($hook = get_hook('aop_maintenance_pre_maintenance_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[maintenance]" value="1"<?php if ($forum_config['o_maintenance'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Maintenance mode'] ?></span> <?php echo $lang_admin_settings['Maintenance mode label'] ?></label>					</div>				</div><?php ($hook = get_hook('aop_maintenance_pre_maintenance_message')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Maintenance message label'] ?></span><small><?php echo $lang_admin_settings['Maintenance message help'] ?></small></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="form[maintenance_message]" rows="5" cols="55"><?php echo forum_htmlencode($forum_config['o_maintenance_message']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('aop_maintenance_pre_maintenance_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aop_maintenance_maintenance_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>			</div>		</form>	</div><?php}else if ($section == 'email'){	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup'])),		array($lang_admin_common['E-mail'], forum_link($forum_url['admin_settings_email']))	);	($hook = get_hook('aop_email_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'settings');	define('FORUM_PAGE', 'admin-settings-email');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aop_email_output_start')) ? eval($hook) : null;?>	<div class="main-content frm parted">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_settings_email']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_settings_email'])) ?>" />				<input type="hidden" name="form_sent" value="1" />			</div>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['E-mail addresses'] ?></span></h2>			</div><?php ($hook = get_hook('aop_email_pre_addresses_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['E-mail addresses legend'] ?></strong></legend><?php ($hook = get_hook('aop_email_pre_admin_email')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Admin e-mail'] ?></span></label><br />							<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[admin_email]" size="50" maxlength="80" value="<?php echo forum_htmlencode($forum_config['o_admin_email']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_email_pre_webmaster_email')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Webmaster e-mail label'] ?></span><small><?php echo $lang_admin_settings['Webmaster e-mail help'] ?></small></label><br />							<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[webmaster_email]" size="50" maxlength="80" value="<?php echo forum_htmlencode($forum_config['o_webmaster_email']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_email_pre_mailing_list')) ? eval($hook) : null; ?>					<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="txt-box textarea">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['Mailing list label'] ?></span><small><?php echo $lang_admin_settings['Mailing list help'] ?></small></label>							<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="form[mailing_list]" rows="5" cols="55"><?php echo forum_htmlencode($forum_config['o_mailing_list']) ?></textarea></span></div>						</div>					</div><?php ($hook = get_hook('aop_email_pre_addresses_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php($hook = get_hook('aop_email_addresses_fieldset_end')) ? eval($hook) : null;// Reset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h2 class="hn"><span><?php echo $lang_admin_settings['E-mail server'] ?></span></h2>			</div>				<div class="ct-box">					<p><?php echo $lang_admin_settings['E-mail server info'] ?></p>				</div><?php ($hook = get_hook('aop_email_pre_smtp_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_settings['E-mail server legend'] ?></strong></legend><?php ($hook = get_hook('aop_email_pre_smtp_host')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['SMTP address label'] ?></span><small><?php echo $lang_admin_settings['SMTP address help'] ?></small></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[smtp_host]" size="35" maxlength="100" value="<?php echo forum_htmlencode($forum_config['o_smtp_host']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_email_pre_smtp_user')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['SMTP username label'] ?></span><small><?php echo $lang_admin_settings['SMTP username help'] ?></small></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[smtp_user]" size="35" maxlength="50" value="<?php echo forum_htmlencode($forum_config['o_smtp_user']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_email_pre_smtp_pass')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['SMTP password label'] ?></span><small><?php echo $lang_admin_settings['SMTP password help'] ?></small></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[smtp_pass]" size="35" maxlength="50" value="<?php echo forum_htmlencode($forum_config['o_smtp_pass']) ?>" /></span>						</div>					</div><?php ($hook = get_hook('aop_email_pre_smtp_ssl')) ? eval($hook) : null; ?>					<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">						<div class="sf-box checkbox">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[smtp_ssl]" value="1"<?php if ($forum_config['o_smtp_ssl'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_settings['SMTP SSL'] ?></span> <?php echo $lang_admin_settings['SMTP SSL label'] ?></label>						</div>					</div><?php ($hook = get_hook('aop_email_pre_smtp_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('aop_email_smtp_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>			</div>		</form>	</div><?php}else{	($hook = get_hook('aop_new_section')) ? eval($hook) : null;}($hook = get_hook('aop_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Allows the creation of new user accounts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('rg_start')) ? eval($hook) : null;// If we are logged in, we shouldn't be hereif (!$forum_user['is_guest']){	header('Location: '.forum_link($forum_url['index']));	exit;}// Load the profile.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';if ($forum_config['o_regs_allow'] == '0')	message($lang_profile['No new regs']);$errors = array();// User pressed the cancel buttonif (isset($_GET['cancel']))	redirect(forum_link($forum_url['index']), $lang_profile['Reg cancel redirect']);// User pressed agree but failed to tick checkboxelse if (isset($_GET['agree']) && !isset($_GET['req_agreement']))	redirect(forum_link($forum_url['index']), $lang_profile['Reg cancel redirect']);// Show the ruleselse if ($forum_config['o_rules'] == '1' && !isset($_GET['agree']) && !isset($_POST['form_sent'])){	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_common['Register'], forum_link($forum_url['register'])),		$lang_common['Rules']	);	($hook = get_hook('rg_rules_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'rules');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('rg_rules_output_start')) ? eval($hook) : null;	$forum_page['set_count'] = $forum_page['fld_count'] = 0;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_profile['Register at'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_profile['Reg rules head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box user-box">			<?php echo $forum_config['o_rules_message'] ?>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['register']) ?>"><?php ($hook = get_hook('rg_rules_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('rg_rules_pre_agree_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_agreement" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Agreement'] ?></span> <?php echo $lang_profile['Agreement label'] ?></label>					</div>				</div><?php ($hook = get_hook('rg_rules_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('rg_rules_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="agree" value="<?php echo $lang_profile['Agree'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('rg_rules_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_POST['form_sent'])){	($hook = get_hook('rg_register_form_submitted')) ? eval($hook) : null;	// Check that someone from this IP didn't register a user within the last hour (DoS prevention)	$query = array(		'SELECT'	=> 'COUNT(u.id)',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.registration_ip=\''.$forum_db->escape(get_remote_address()).'\' AND u.registered>'.(time() - 3600)	);	($hook = get_hook('rg_register_qr_check_register_flood')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) > 0)	{		$errors[] = $lang_profile['Registration flood'];	}	// Did everything go according to plan so far?	if (empty($errors))	{		$username = forum_trim($_POST['req_username']);		$email1 = strtolower(forum_trim($_POST['req_email1']));		if ($forum_config['o_regs_verify'] == '1')		{			$password1 = random_key(8, true);			$password2 = $password1;		}		else		{			$password1 = forum_trim($_POST['req_password1']);			$password2 = forum_trim($_POST['req_password2']);		}		// Validate the username		$errors = array_merge($errors, validate_username($username));		// ... and the password		if (utf8_strlen($password1) < 4)			$errors[] = $lang_profile['Pass too short'];		else if ($password1 != $password2)			$errors[] = $lang_profile['Pass not match'];		// ... and the e-mail address		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		if (!is_valid_email($email1))			$errors[] = $lang_profile['Invalid e-mail'];		// Check if it's a banned e-mail address		$banned_email = is_banned_email($email1);		if ($banned_email && $forum_config['p_allow_banned_email'] == '0')			$errors[] = $lang_profile['Banned e-mail'];		// Clean old unverified registrators - delete older than 72 hours		$query = array(			'DELETE'	=> 'users',			'WHERE'		=> 'group_id='.FORUM_UNVERIFIED.' AND activate_key IS NOT NULL AND registered < '.(time() - 259200)		);		($hook = get_hook('rg_register_qr_delete_unverified')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Check if someone else already has registered with that e-mail address		$dupe_list = array();		$query = array(			'SELECT'	=> 'u.username',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.email=\''.$forum_db->escape($email1).'\''		);		($hook = get_hook('rg_register_qr_check_email_dupe')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_dupe = $forum_db->fetch_assoc($result))		{			$dupe_list[] = $cur_dupe['username'];		}		if (!empty($dupe_list) && empty($errors))		{			if ($forum_config['p_allow_dupe_email'] == '0')				$errors[] = $lang_profile['Dupe e-mail'];		}		($hook = get_hook('rg_register_end_validation')) ? eval($hook) : null;		// Did everything go according to plan so far?		if (empty($errors))		{			// Make sure we got a valid language string			if (isset($_POST['language']))			{				$language = preg_replace('#[\.\\\/]#', '', $_POST['language']);				if (!file_exists(FORUM_ROOT.'lang/'.$language.'/common.php'))					message($lang_common['Bad request']);			}			else				$language = $forum_config['o_default_lang'];			$initial_group_id = ($forum_config['o_regs_verify'] == '0') ? $forum_config['o_default_user_group'] : FORUM_UNVERIFIED;			$salt = random_key(12);			$password_hash = forum_hash($password1, $salt);			// Validate timezone and DST			$timezone = (isset($_POST['timezone'])) ? floatval($_POST['timezone']) : $forum_config['o_default_timezone'];			// Validate timezone  on error use default value			if (($timezone > 14.0) || ($timezone < -12.0)) {				$timezone = $forum_config['o_default_timezone'];			}			// DST			$dst = (isset($_POST['dst']) && intval($_POST['dst']) === 1) ? 1 : $forum_config['o_default_dst'];			// Insert the new user into the database. We do this now to get the last inserted id for later use.			$user_info = array(				'username'				=>	$username,				'group_id'				=>	$initial_group_id,				'salt'					=>	$salt,				'password'				=>	$password1,				'password_hash'			=>	$password_hash,				'email'					=>	$email1,				'email_setting'			=>	$forum_config['o_default_email_setting'],				'timezone'				=>	$timezone,				'dst'					=>	$dst,				'language'				=>	$language,				'style'					=>	$forum_config['o_default_style'],				'registered'			=>	time(),				'registration_ip'		=>	get_remote_address(),				'activate_key'			=>	($forum_config['o_regs_verify'] == '1') ? '\''.random_key(8, true).'\'' : 'NULL',				'require_verification'	=>	($forum_config['o_regs_verify'] == '1'),				'notify_admins'			=>	($forum_config['o_regs_report'] == '1')			);			($hook = get_hook('rg_register_pre_add_user')) ? eval($hook) : null;			add_user($user_info, $new_uid);			// If we previously found out that the e-mail was banned			if ($banned_email && $forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Banned e-mail detected';				$mail_message = 'User \''.$username.'\' registered with banned e-mail address: '.$email1."\n\n".'User profile: '.forum_link($forum_url['user'], $new_uid)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				($hook = get_hook('rg_register_banned_email')) ? eval($hook) : null;				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}			// If we previously found out that the e-mail was a dupe			if (!empty($dupe_list) && $forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Duplicate e-mail detected';				$mail_message = 'User \''.$username.'\' registered with an e-mail address that also belongs to: '.implode(', ', $dupe_list)."\n\n".'User profile: '.forum_link($forum_url['user'], $new_uid)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				($hook = get_hook('rg_register_dupe_email')) ? eval($hook) : null;				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}			($hook = get_hook('rg_register_pre_login_redirect')) ? eval($hook) : null;			// Must the user verify the registration or do we log him/her in right now?			if ($forum_config['o_regs_verify'] == '1')				message(sprintf($lang_profile['Reg e-mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			$expire = time() + $forum_config['o_timeout_visit'];			forum_setcookie($cookie_name, base64_encode($new_uid.'|'.$password_hash.'|'.$expire.'|'.sha1($salt.$password_hash.forum_hash($expire, $salt))), $expire);			redirect(forum_link($forum_url['index']), $lang_profile['Reg complete']);		}	}}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['register']).'?action=register';// Setup form information$forum_page['frm_info'] = array();if ($forum_config['o_regs_verify'] != '0')	$forum_page['frm_info']['email'] = '<p class="warn">'.$lang_profile['Reg e-mail info'].'</p>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_profile['Register at'], $forum_config['o_board_title']), forum_link($forum_url['register'])),);// Load JS for timezone detection$forum_loader->add_js('include/js/min/detect_timezone.min.js', array('type' => 'file'));$forum_loader->add_js('FORUM.detect_timezone.detect_on_register_form();', array('type' => 'inline'));($hook = get_hook('rg_register_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'register');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('rg_register_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_profile['Register at'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	if (!empty($forum_page['frm_info'])):?>		<div class="ct-box info-box">			<?php echo implode("\n\t\t\t", $forum_page['frm_info'])."\n" ?>		</div><?php	endif;	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('rg_pre_register_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_profile['Register errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" id="afocus" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" autocomplete="off">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />				<input type="hidden" name="timezone" id="register_timezone" value="<?php echo forum_htmlencode($forum_config['o_default_timezone']) ?>" />				<input type="hidden" name="dst" id="register_dst" value="<?php echo forum_htmlencode($forum_config['o_default_dst']) ?>" />			</div><?php ($hook = get_hook('rg_register_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('rg_register_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Username'] ?></span> <small><?php echo $lang_profile['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo(isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '') ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_password')) ? eval($hook) : null; ?><?php if ($forum_config['o_regs_verify'] == '0'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password1" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_confirm_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password2" size="35" required /></span>					</div>				</div><?php endif; ($hook = get_hook('rg_register_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['E-mail'] ?></span> <small><?php echo $lang_profile['E-mail help'] ?></small></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_email1" value="<?php echo(isset($_POST['req_email1']) ? forum_htmlencode($_POST['req_email1']) : '') ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_email_confirm')) ? eval($hook) : null;		$languages = array();		$d = dir(FORUM_ROOT.'lang');		while (($entry = $d->read()) !== false)		{			if ($entry != '.' && $entry != '..' && is_dir(FORUM_ROOT.'lang/'.$entry) && file_exists(FORUM_ROOT.'lang/'.$entry.'/common.php'))				$languages[] = $entry;		}		$d->close();		($hook = get_hook('rg_register_pre_language')) ? eval($hook) : null;		// Only display the language selection box if there's more than one language available		if (count($languages) > 1)		{			natcasesort($languages);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Language'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="language"><?php			$select_lang = isset($_POST['language']) ? $_POST['language'] : $forum_config['o_default_lang'];			foreach ($languages as $lang)			{				if ($select_lang == $lang)					echo "\t\t\t\t\t\t".'<option value="'.$lang.'" selected="selected">'.$lang.'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$lang.'">'.$lang.'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('rg_register_pre_group_end')) ? eval($hook) : null;?>			</div><?php ($hook = get_hook('rg_register_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="register" value="<?php echo $lang_profile['Register'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('rg_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/*** @version $Id: ucwords.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to ucwords* Uppercase the first character of each word in a string* Note: requires utf8_substr_replace and utf8_strtoupper* @param string* @return string with first char of each word uppercase* @see http://www.php.net/ucwords* @package utf8* @subpackage strings*/function utf8_ucwords($str) {    // Note: [\x0c\x09\x0b\x0a\x0d\x20] matches;    // form feeds, horizontal tabs, vertical tabs, linefeeds and carriage returns    // This corresponds to the definition of a "word" defined at http://www.php.net/ucwords    $pattern = '/(^|([\x0c\x09\x0b\x0a\x0d\x20]+))([^\x0c\x09\x0b\x0a\x0d\x20]{1})[^\x0c\x09\x0b\x0a\x0d\x20]*/u';    return preg_replace_callback($pattern, 'utf8_ucwords_callback',$str);}//---------------------------------------------------------------/*** Callback function for preg_replace_callback call in utf8_ucwords* You don't need to call this yourself* @param array of matches corresponding to a single word* @return string with first char of the word in uppercase* @see utf8_ucwords* @see utf8_strtoupper* @package utf8* @subpackage strings*/function utf8_ucwords_callback($matches) {    $leadingws = $matches[2];    $ucfirst = utf8_strtoupper($matches[3]);    $ucword = utf8_substr_replace(ltrim($matches[0]),$ucfirst,0,1);    return $leadingws . $ucword;}
<?php/*** @version $Id: str_ireplace.php,v 1.2 2007/08/12 01:20:46 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to str_ireplace* Case-insensitive version of str_replace* Note: requires utf8_strtolower* Note: it's not fast and gets slower if $search / $replace is array* Notes: it's based on the assumption that the lower and uppercase* versions of a UTF-8 character will have the same length in bytes* which is currently true given the hash table to strtolower* @param string* @return string* @see http://www.php.net/str_ireplace* @see utf8_strtolower* @package utf8* @subpackage strings*/function utf8_ireplace($search, $replace, $str, $count = NULL){    if ( !is_array($search) ) {        $slen = strlen($search);        if ( $slen == 0 ) {            return $str;        }        $lendif = strlen($replace) - strlen($search);        $search = utf8_strtolower($search);        $search = preg_quote($search);        $lstr = utf8_strtolower($str);        $i = 0;        $matched = 0;        while ( preg_match('/(.*)'.$search.'/Us',$lstr, $matches) ) {            if ( $i === $count ) {                break;            }            $mlen = strlen($matches[0]);            $lstr = substr($lstr, $mlen);            $str = substr_replace($str, $replace, $matched+strlen($matches[1]), $slen);            $matched += $mlen + $lendif;            $i++;        }        return $str;    } else {        foreach ( array_keys($search) as $k ) {            if ( is_array($replace) ) {                if ( array_key_exists($k,$replace) ) {                    $str = utf8_ireplace($search[$k], $replace[$k], $str, $count);                } else {                    $str = utf8_ireplace($search[$k], '', $str, $count);                }            } else {                $str = utf8_ireplace($search[$k], $replace, $str, $count);            }        }        return $str;    }}
<?php/** * SEF URLs that use a folder-like layout and include topic name and forum name * where applicable. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// These are the "fancy" folder based SEF URLs$forum_url = array(	'change_email'					=>	'change/email/$1/',	'change_email_key'				=>	'change/email/$1/$2/',	'change_password'				=>	'change/password/$1/',	'change_password_key'			=>	'change/password/$1/$2/',	'delete'						=>	'delete/$1/',	'delete_avatar'					=>	'delete/avatar/$1/$2/',	'delete_user'					=>	'delete/user/$1/',	'edit'							=>	'edit/$1/',	'email'							=>	'email/$1/',	'forum'							=>	'forum/$1/$2/',	'forum_rss'						=>	'feed/rss/forum/$1/',	'forum_atom'					=>	'feed/atom/forum/$1/',	'help'							=>	'help/$1/',	'index'							=>	'',	'index_rss'						=>	'feed/rss/',	'index_atom'					=>	'feed/atom/',	'login'							=>	'login/',	'logout'						=>	'logout/$1/$2/',	'mark_read'						=>	'mark/read/$1/',	'mark_forum_read'				=>	'mark/forum/$1/read/$2/',	'new_topic'						=>	'new/topic/$1/',	'new_reply'						=>	'new/reply/$1/',	'post'							=>	'post/$1/#p$1',	'profile_about'					=>	'user/$1/about/',	'profile_identity'				=>	'user/$1/identity/',	'profile_settings'				=>	'user/$1/settings/',	'profile_avatar'				=>	'user/$1/avatar/',	'profile_signature'				=>	'user/$1/signature/',	'profile_admin'					=>	'user/$1/admin/',	'quote'							=>	'new/reply/$1/quote/$2/',	'register'						=>	'register/',	'report'						=>	'report/$1/',	'request_password'				=>	'request/password/',	'rules'							=>	'rules/',	'search'						=>	'search/',	'search_advanced'				=>	'search/advanced/',	'search_resultft'				=>	'search/k$1/$2/a$3/$4/$5/$6/$7/',	'search_results'				=>	'search/$1/',	'search_new'					=>	'search/new/',	'search_new_results'			=>	'search/new/$1/',	'search_recent'					=>	'search/recent/',	'search_recent_results'			=>	'search/recent/$1/',	'search_unanswered'				=>	'search/unanswered/',	'search_subscriptions'			=>	'search/subscriptions/$1/',	'search_user_posts'				=>	'search/posts/user/$1/',	'search_user_topics'			=>	'search/topics/user/$1/',	'subscribe'						=>	'subscribe/$1/$2/',	'topic'							=>	'topic/$1/$2/',	'topic_rss'						=>	'feed/rss/topic/$1/',	'topic_atom'					=>	'feed/atom/topic/$1/',	'topic_new_posts'				=>	'topic/$1/$2/new/posts/',	'topic_last_post'				=>	'topic/$1/last/post/',	'unsubscribe'					=>	'unsubscribe/$1/$2/',	'user'							=>	'user/$1/',	'users'							=>	'users/',	'users_browse'					=>	'users/$4/$1/$2/$3/',	'page'							=>	'page/$1/',	'moderate_forum'				=>	'moderate/$1/',	'get_host'						=>	'get_host/$1/',	'move'							=>	'move_topics/$1/$2/',	'open'							=>	'open/$1/$2/$3/',	'close'							=>	'close/$1/$2/$3/',	'stick'							=>	'stick/$1/$2/$3/',	'unstick'						=>	'unstick/$1/$2/$3/',	'moderate_topic'				=>	'moderate/$1/$2/',	'admin_index'					=>	'admin/index.php',	'admin_bans'					=>	'admin/bans.php?sort_by=1',	'admin_categories'				=>	'admin/categories.php',	'admin_censoring'				=>	'admin/censoring.php',	'admin_extensions_manage'		=>	'admin/extensions.php?section=manage',	'admin_extensions_hotfixes'		=>	'admin/extensions.php?section=hotfixes',	'admin_forums'					=>	'admin/forums.php',	'admin_groups'					=>	'admin/groups.php',	'admin_loader'					=>	'admin/loader.php',	'admin_reindex'					=>	'admin/reindex.php',	'admin_settings_setup'			=>	'admin/settings.php?section=setup',	'admin_settings_features'		=>	'admin/settings.php?section=features',	'admin_settings_content'		=>	'admin/settings.php?section=content',	'admin_settings_email'			=>	'admin/settings.php?section=email',	'admin_settings_announcements'	=>	'admin/settings.php?section=announcements',	'admin_settings_registration'	=>	'admin/settings.php?section=registration',	'admin_settings_communications'	=>	'admin/settings.php?section=communications',	'admin_settings_maintenance'	=>	'admin/settings.php?section=maintenance',	'admin_prune'					=>	'admin/prune.php',	'admin_ranks'					=>	'admin/ranks.php',	'admin_reports'					=>	'admin/reports.php',	'admin_users'					=>	'admin/users.php');
<?php// The contents of this file are very much inspired by the file i18n-ascii.txt// from the CMS software Textpattern (http://textpattern.com/). // Replacements done by sef_friendly function$lang_url_replace = array('' => 'A','' => 'A','' => 'A','' => 'A','' => 'Ae','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'C','' => 'C','' => 'C','' => 'C','' => 'C','' => 'D','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'G','' => 'G','' => 'G','' => 'G','' => 'H','' => 'H','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'IJ','' => 'J','' => 'K','' => 'K','' => 'K','' => 'K','' => 'K','' => 'L','' => 'N','' => 'N','' => 'N','' => 'N','' => 'N','' => 'O','' => 'O','' => 'O','' => 'O','' => 'Oe','' => 'O','' => 'O','' => 'O','' => 'O','' => 'OE','' => 'R','' => 'R','' => 'R','' => 'S','' => 'S','' => 'S','' => 'S','' => 'S','' => 'T','' => 'T','' => 'T','' => 'T','' => 'U','' => 'U','' => 'U','' => 'Ue','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'W','' => 'Y','' => 'Y','' => 'Y','' => 'Z','' => 'Z','' => 'Z','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'c','' => 'c','' => 'c','' => 'c','' => 'c','' => 'd','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'f','' => 'g','' => 'g','' => 'g','' => 'g','' => 'h','' => 'h','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'ij','' => 'j','' => 'k','' => 'k','' => 'l','' => 'l','' => 'l','' => 'l','' => 'l','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'u','' => 'u','' => 'u','' => 'ue','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'w','' => 'y','' => 'y','' => 'y','' => 'z','' => 'z','' => 'z','' => 'ss','' => 'ss','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'B','' => 'G','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'Z','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'TH','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'KS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'P','' => 'R','' => 'R','' => 'S','' => 'T','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'F','' => 'X','' => 'PS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'b','' => 'g','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'z','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'th','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'k','' => 'l','' => 'm','' => 'n','' => 'ks','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'p','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'f','' => 'x','' => 'ps','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => '','' => '','' => '','' => '','' => 'YE','' => 'YE','' => 'YI','' => 'YI','' => 'KG','' => 'KG','' => 'd','' => 'D','' => 'th','' => 'TH',);
<?php/*** @version $Id: bad.php,v 1.2 2006/02/26 13:20:44 harryf Exp $* Tools for locating / replacing bad bytes in UTF-8 strings* The Original Code is Mozilla Communicator client code.* The Initial Developer of the Original Code is* Netscape Communications Corporation.* Portions created by the Initial Developer are Copyright (C) 1998* the Initial Developer. All Rights Reserved.* Ported to PHP by Henri Sivonen (http://hsivonen.iki.fi)* Slight modifications to fit with phputf8 library by Harry Fuecks (hfuecks gmail com)* @see http://lxr.mozilla.org/seamonkey/source/intl/uconv/src/nsUTF8ToUnicode.cpp* @see http://lxr.mozilla.org/seamonkey/source/intl/uconv/src/nsUnicodeToUTF8.cpp* @see http://hsivonen.iki.fi/php-utf8/* @package utf8* @subpackage bad* @see utf8_is_valid*///--------------------------------------------------------------------/*** Locates the first bad byte in a UTF-8 string returning it's* byte index in the string* PCRE Pattern to locate bad bytes in a UTF-8 string* Comes from W3 FAQ: Multilingual Forms* Note: modified to include full ASCII range including control chars* @see http://www.w3.org/International/questions/qa-forms-utf-8* @param string* @return mixed integer byte index or FALSE if no bad found* @package utf8* @subpackage bad*/function utf8_bad_find($str) {    $UTF8_BAD =    '([\x00-\x7F]'.                          # ASCII (including control chars)    '|[\xC2-\xDF][\x80-\xBF]'.               # non-overlong 2-byte    '|\xE0[\xA0-\xBF][\x80-\xBF]'.           # excluding overlongs    '|[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}'.    # straight 3-byte    '|\xED[\x80-\x9F][\x80-\xBF]'.           # excluding surrogates    '|\xF0[\x90-\xBF][\x80-\xBF]{2}'.        # planes 1-3    '|[\xF1-\xF3][\x80-\xBF]{3}'.            # planes 4-15    '|\xF4[\x80-\x8F][\x80-\xBF]{2}'.        # plane 16    '|(.{1}))';                              # invalid byte    $pos = 0;    $badList = array();    while (preg_match('/'.$UTF8_BAD.'/S', $str, $matches)) {        $bytes = strlen($matches[0]);        if ( isset($matches[2])) {            return $pos;        }        $pos += $bytes;        $str = substr($str,$bytes);    }    return FALSE;}//--------------------------------------------------------------------/*** Locates all bad bytes in a UTF-8 string and returns a list of their* byte index in the string* PCRE Pattern to locate bad bytes in a UTF-8 string* Comes from W3 FAQ: Multilingual Forms* Note: modified to include full ASCII range including control chars* @see http://www.w3.org/International/questions/qa-forms-utf-8* @param string* @return mixed array of integers or FALSE if no bad found* @package utf8* @subpackage bad*/function utf8_bad_findall($str) {    $UTF8_BAD =    '([\x00-\x7F]'.                          # ASCII (including control chars)    '|[\xC2-\xDF][\x80-\xBF]'.               # non-overlong 2-byte    '|\xE0[\xA0-\xBF][\x80-\xBF]'.           # excluding overlongs    '|[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}'.    # straight 3-byte    '|\xED[\x80-\x9F][\x80-\xBF]'.           # excluding surrogates    '|\xF0[\x90-\xBF][\x80-\xBF]{2}'.        # planes 1-3    '|[\xF1-\xF3][\x80-\xBF]{3}'.            # planes 4-15    '|\xF4[\x80-\x8F][\x80-\xBF]{2}'.        # plane 16    '|(.{1}))';                              # invalid byte    $pos = 0;    $badList = array();    while (preg_match('/'.$UTF8_BAD.'/S', $str, $matches)) {        $bytes = strlen($matches[0]);        if ( isset($matches[2])) {            $badList[] = $pos;        }        $pos += $bytes;        $str = substr($str,$bytes);    }    if ( count($badList) > 0 ) {        return $badList;    }    return FALSE;}//--------------------------------------------------------------------/*** Strips out any bad bytes from a UTF-8 string and returns the rest* PCRE Pattern to locate bad bytes in a UTF-8 string* Comes from W3 FAQ: Multilingual Forms* Note: modified to include full ASCII range including control chars* @see http://www.w3.org/International/questions/qa-forms-utf-8* @param string* @return string* @package utf8* @subpackage bad*/function utf8_bad_strip($str) {    $UTF8_BAD =    '([\x00-\x7F]'.                          # ASCII (including control chars)    '|[\xC2-\xDF][\x80-\xBF]'.               # non-overlong 2-byte    '|\xE0[\xA0-\xBF][\x80-\xBF]'.           # excluding overlongs    '|[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}'.    # straight 3-byte    '|\xED[\x80-\x9F][\x80-\xBF]'.           # excluding surrogates    '|\xF0[\x90-\xBF][\x80-\xBF]{2}'.        # planes 1-3    '|[\xF1-\xF3][\x80-\xBF]{3}'.            # planes 4-15    '|\xF4[\x80-\x8F][\x80-\xBF]{2}'.        # plane 16    '|(.{1}))';                              # invalid byte    ob_start();    while (preg_match('/'.$UTF8_BAD.'/S', $str, $matches)) {        if ( !isset($matches[2])) {            echo $matches[0];        }        $str = substr($str,strlen($matches[0]));    }    $result = ob_get_contents();    ob_end_clean();    return $result;}//--------------------------------------------------------------------/*** Replace bad bytes with an alternative character - ASCII character* recommended is replacement char* PCRE Pattern to locate bad bytes in a UTF-8 string* Comes from W3 FAQ: Multilingual Forms* Note: modified to include full ASCII range including control chars* @see http://www.w3.org/International/questions/qa-forms-utf-8* @param string to search* @param string to replace bad bytes with (defaults to '?') - use ASCII* @return string* @package utf8* @subpackage bad*/function utf8_bad_replace($str, $replace = '?') {    $UTF8_BAD =    '([\x00-\x7F]'.                          # ASCII (including control chars)    '|[\xC2-\xDF][\x80-\xBF]'.               # non-overlong 2-byte    '|\xE0[\xA0-\xBF][\x80-\xBF]'.           # excluding overlongs    '|[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}'.    # straight 3-byte    '|\xED[\x80-\x9F][\x80-\xBF]'.           # excluding surrogates    '|\xF0[\x90-\xBF][\x80-\xBF]{2}'.        # planes 1-3    '|[\xF1-\xF3][\x80-\xBF]{3}'.            # planes 4-15    '|\xF4[\x80-\x8F][\x80-\xBF]{2}'.        # plane 16    '|(.{1}))';                              # invalid byte    ob_start();    while (preg_match('/'.$UTF8_BAD.'/S', $str, $matches)) {        if ( !isset($matches[2])) {            echo $matches[0];        } else {            echo $replace;        }        $str = substr($str,strlen($matches[0]));    }    $result = ob_get_contents();    ob_end_clean();    return $result;}//--------------------------------------------------------------------/*** Return code from utf8_bad_identify() when a five octet sequence is detected.* Note: 5 octets sequences are valid UTF-8 but are not supported by Unicode so* do not represent a useful character* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_5OCTET',1);/*** Return code from utf8_bad_identify() when a six octet sequence is detected.* Note: 6 octets sequences are valid UTF-8 but are not supported by Unicode so* do not represent a useful character* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_6OCTET',2);/*** Return code from utf8_bad_identify().* Invalid octet for use as start of multi-byte UTF-8 sequence* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_SEQID',3);/*** Return code from utf8_bad_identify().* From Unicode 3.1, non-shortest form is illegal* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_NONSHORT',4);/*** Return code from utf8_bad_identify().* From Unicode 3.2, surrogate characters are illegal* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_SURROGATE',5);/*** Return code from utf8_bad_identify().* Codepoints outside the Unicode range are illegal* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_UNIOUTRANGE',6);/*** Return code from utf8_bad_identify().* Incomplete multi-octet sequence* Note: this is kind of a "catch-all"* @see utf8_bad_identify* @package utf8* @subpackage bad*/define('UTF8_BAD_SEQINCOMPLETE',7);//--------------------------------------------------------------------/*** Reports on the type of bad byte found in a UTF-8 string. Returns a* status code on the first bad byte found* @author <hsivonen@iki.fi>* @param string UTF-8 encoded string* @return mixed integer constant describing problem or FALSE if valid UTF-8* @see utf8_bad_explain* @see http://hsivonen.iki.fi/php-utf8/* @package utf8* @subpackage bad*/function utf8_bad_identify($str, &$i) {    $mState = 0;     // cached expected number of octets after the current octet                     // until the beginning of the next UTF8 character sequence    $mUcs4  = 0;     // cached Unicode character    $mBytes = 1;     // cached expected number of octets in the current sequence    $len = strlen($str);    for($i = 0; $i < $len; $i++) {        $in = ord($str{$i});        if ( $mState == 0) {            // When mState is zero we expect either a US-ASCII character or a            // multi-octet sequence.            if (0 == (0x80 & ($in))) {                // US-ASCII, pass straight through.                $mBytes = 1;            } else if (0xC0 == (0xE0 & ($in))) {                // First octet of 2 octet sequence                $mUcs4 = ($in);                $mUcs4 = ($mUcs4 & 0x1F) << 6;                $mState = 1;                $mBytes = 2;            } else if (0xE0 == (0xF0 & ($in))) {                // First octet of 3 octet sequence                $mUcs4 = ($in);                $mUcs4 = ($mUcs4 & 0x0F) << 12;                $mState = 2;                $mBytes = 3;            } else if (0xF0 == (0xF8 & ($in))) {                // First octet of 4 octet sequence                $mUcs4 = ($in);                $mUcs4 = ($mUcs4 & 0x07) << 18;                $mState = 3;                $mBytes = 4;            } else if (0xF8 == (0xFC & ($in))) {                /* First octet of 5 octet sequence.                *                * This is illegal because the encoded codepoint must be either                * (a) not the shortest form or                * (b) outside the Unicode range of 0-0x10FFFF.                */                return UTF8_BAD_5OCTET;            } else if (0xFC == (0xFE & ($in))) {                // First octet of 6 octet sequence, see comments for 5 octet sequence.                return UTF8_BAD_6OCTET;            } else {                // Current octet is neither in the US-ASCII range nor a legal first                // octet of a multi-octet sequence.                return UTF8_BAD_SEQID;            }        } else {            // When mState is non-zero, we expect a continuation of the multi-octet            // sequence            if (0x80 == (0xC0 & ($in))) {                // Legal continuation.                $shift = ($mState - 1) * 6;                $tmp = $in;                $tmp = ($tmp & 0x0000003F) << $shift;                $mUcs4 |= $tmp;                /**                * End of the multi-octet sequence. mUcs4 now contains the final                * Unicode codepoint to be output                */                if (0 == --$mState) {                    // From Unicode 3.1, non-shortest form is illegal                    if (((2 == $mBytes) && ($mUcs4 < 0x0080)) ||                        ((3 == $mBytes) && ($mUcs4 < 0x0800)) ||                        ((4 == $mBytes) && ($mUcs4 < 0x10000)) ) {                        return UTF8_BAD_NONSHORT;                    // From Unicode 3.2, surrogate characters are illegal                    } else if (($mUcs4 & 0xFFFFF800) == 0xD800) {                        return UTF8_BAD_SURROGATE;                    // Codepoints outside the Unicode range are illegal                    } else if ($mUcs4 > 0x10FFFF) {                        return UTF8_BAD_UNIOUTRANGE;                    }                    //initialize UTF8 cache                    $mState = 0;                    $mUcs4  = 0;                    $mBytes = 1;                }            } else {                // ((0xC0 & (*in) != 0x80) && (mState != 0))                // Incomplete multi-octet sequence.                $i--;                return UTF8_BAD_SEQINCOMPLETE;            }        }    }    if ( $mState != 0 ) {        // Incomplete multi-octet sequence.        $i--;        return UTF8_BAD_SEQINCOMPLETE;    }    // No bad octets found    $i = NULL;    return FALSE;}//--------------------------------------------------------------------/*** Takes a return code from utf8_bad_identify() are returns a message* (in English) explaining what the problem is.* @param int return code from utf8_bad_identify* @return mixed string message or FALSE if return code unknown* @see utf8_bad_identify* @package utf8* @subpackage bad*/function utf8_bad_explain($code) {    switch ($code) {        case UTF8_BAD_5OCTET:            return 'Five octet sequences are valid UTF-8 but are not supported by Unicode';        break;        case UTF8_BAD_6OCTET:            return 'Six octet sequences are valid UTF-8 but are not supported by Unicode';        break;        case UTF8_BAD_SEQID:            return 'Invalid octet for use as start of multi-byte UTF-8 sequence';        break;        case UTF8_BAD_NONSHORT:            return 'From Unicode 3.1, non-shortest form is illegal';        break;        case UTF8_BAD_SURROGATE:            return 'From Unicode 3.2, surrogate characters are illegal';        break;        case UTF8_BAD_UNIOUTRANGE:            return 'Codepoints outside the Unicode range are illegal';        break;        case UTF8_BAD_SEQINCOMPLETE:            return 'Incomplete multi-octet sequence';        break;    }    trigger_error('Unknown error code: '.$code,E_USER_WARNING);    return FALSE;}
<?php/*** @version $Id: strcspn.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to strcspn* Find length of initial segment not matching mask* Note: requires utf8_strlen and utf8_substr (if start, length are used)* @param string* @return int* @see http://www.php.net/strcspn* @see utf8_strlen* @package utf8* @subpackage strings*/function utf8_strcspn($str, $mask, $start = NULL, $length = NULL) {    if ( empty($mask) || strlen($mask) == 0 ) {        return NULL;    }    $mask = preg_replace('!([\\\\\\-\\]\\[/^])!','\\\${1}',$mask);    if ( $start !== NULL || $length !== NULL ) {        $str = utf8_substr($str, $start, $length);    }    preg_match('/^[^'.$mask.']+/u',$str, $matches);    if ( isset($matches[0]) ) {        return utf8_strlen($matches[0]);    }    return 0;}
<?php// Language definitions used in admin_censoring$lang_admin_censoring = array('Censored word head'			=>	'Add, edit or remove censored words','Add censored word legend'		=>	'Add word','Edit censored word legend'		=>	'Edit or remove existing censored word','Add censored word intro'		=>	'Enter a word that you want to censor and the replacement text for this word. Wildcards are accepted (i.e. *some* would match somewhere and lonesome). Censor words also affect usernames. New users will not be able to register with usernames containing any censored words. The search is case insensitive.','Add censored word extra'		=>	'For this to have any effect "<strong>Censoring</strong>" must be enabled in %s.','Censored word label'			=>	'Censored word','Replacement label'				=>	'Replacement','Add new word legend'			=>	'Add new censored word','Existing censored word legend'	=>	'Existing censored word','No censored words'				=>	'No censor words in list.','Censor word added'				=>	'Censor word added.','Censor word updated'			=>	'Censor word updated.','Censor word removed'			=>	'Censor word removed.','Must enter text message'		=>	'You must enter both text to search for and text to replace with.','Add word'						=>	'Add word',);
<?php/** * Help page. * * Provides examples of how to use various features of the forum (ie: BBCode, smilies). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('he_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the help.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/help.php';$section = isset($_GET['section']) ? $_GET['section'] : null;if (!$section)	message($lang_common['Bad request']);$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['help'])),	$lang_help['Help']);define('FORUM_PAGE', 'help');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('he_main_output_start')) ? eval($hook) : null;?><div id="brd-main" class="main"><div class="main-head">	<h1 class="hn"><span><?php echo $lang_help['Help'] ?></span></h1></div><?phpif (!$section || $section == 'bbcode'){?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_help['Help with'], $lang_common['BBCode']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_help['BBCode info'] ?></p>		</div>		<div class="ct-box help-box">			<h3 class="hn"><span><?php echo $lang_help['Text style'] ?></span></h3>			<div class="entry-content">				<code>[b]<?php echo $lang_help['Bold text'] ?>[/b]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><strong><?php echo $lang_help['Bold text'] ?></strong></samp>			</div>			<div class="entry-content">				<code>[u]<?php echo $lang_help['Underlined text'] ?>[/u]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><span class="bbu"><?php echo $lang_help['Underlined text'] ?></span></samp>			</div>			<div class="entry-content">				<code>[i]<?php echo $lang_help['Italic text'] ?>[/i]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><i><?php echo $lang_help['Italic text'] ?></i></samp>			</div>			<div class="entry-content">				<code>[color=#FF0000]<?php echo $lang_help['Red text'] ?>[/color]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><span style="color: #ff0000"><?php echo $lang_help['Red text'] ?></span></samp>			</div>			<div class="entry-content">				<code>[color=blue]<?php echo $lang_help['Blue text'] ?>[/color]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><span style="color: blue"><?php echo $lang_help['Blue text'] ?></span></samp>			</div>			<div class="entry-content">				<code>[b][u]<?php echo $lang_help['Bold, underlined text'] ?>[/u][/b]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><span class="bbu"><strong><?php echo $lang_help['Bold, underlined text'] ?></strong></span></samp>			</div>			<div class="entry-content">				<code>[h]<?php echo $lang_help['Heading text'] ?>[/h]</code> <span><?php echo $lang_help['produces'] ?></span>				<div class="entry-content"><h5><samp><?php echo $lang_help['Heading text'] ?></samp></h5></div>			</div><?php ($hook = get_hook('he_new_bbcode_text_style')) ? eval($hook) : null; ?>		</div>		<div class="ct-box help-box">			<h3 class="hn"><span><?php echo $lang_help['Links info'] ?></span></h3>			<div class="entry-content">				<code>[url=<?php echo $base_url.'/' ?>]<?php echo forum_htmlencode($forum_config['o_board_title']) ?>[/url]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><a href="<?php echo $base_url.'/' ?>"><?php echo forum_htmlencode($forum_config['o_board_title']) ?></a></samp>			</div>			<div class="entry-content">				<code>[url]<?php echo $base_url.'/' ?>[/url]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><a href="<?php echo $base_url ?>"><?php echo $base_url.'/' ?></a></samp>			</div>			<div class="entry-content">				<code>[email]name@example.com[/email]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><a href="mailto:name@example.com">name@example.com</a></samp>			</div>			<div class="entry-content">				<code>[email=name@example.com]<?php echo $lang_help['My e-mail address'] ?>[/email]</code> <span><?php echo $lang_help['produces'] ?></span>				<samp><a href="mailto:name@example.com"><?php echo $lang_help['My e-mail address'] ?></a></samp>			</div><?php ($hook = get_hook('he_new_bbcode_link')) ? eval($hook) : null; ?>		</div>		<div class="ct-box help-box">			<h3 class="hn"><span><?php echo $lang_help['Quotes info'] ?></span></h3>			<div class="entry-content">				<code>[quote=James]<?php echo $lang_help['Quote text'] ?>[/quote]</code> <span><?php echo $lang_help['produces named'] ?></span>				<div class="quotebox"><cite>James <?php echo $lang_common['wrote'] ?>:</cite><blockquote><p><?php echo $lang_help['Quote text'] ?></p></blockquote></div>				<code>[quote]<?php echo $lang_help['Quote text'] ?>[/quote]</code> <span><?php echo $lang_help['produces unnamed'] ?></span>				<div class="quotebox"><blockquote><p><?php echo $lang_help['Quote text'] ?></p></blockquote></div>			</div>		</div>		<div class="ct-box help-box">			<h3 class="hn"><span><?php echo $lang_help['Code info'] ?></span></h3>			<div class="entry-content">				<code>[code]<?php echo $lang_help['Code text'] ?>[/code]</code> <span><?php echo $lang_help['produces code box'] ?></span>				<div class="codebox"><pre><code><?php echo $lang_help['Code text'] ?></code></pre></div>				<code>[code]<?php echo $lang_help['Code text long'] ?>[/code]</code> <span><?php echo $lang_help['produces scroll box'] ?></span>				<div class="codebox"><pre><code><?php echo $lang_help['Code text long'] ?></code></pre></div>			</div>		</div>		<div class="ct-box help-box">			<h3 class="hn"><span><?php echo $lang_help['List info'] ?></span></h3>			<div class="entry-content">				<code>[list][*]<?php echo $lang_help['List text 1'] ?>[/*][*]<?php echo $lang_help['List text 2'] ?>[/*][*]<?php echo $lang_help['List text 3'] ?>[/*][/list]</code> <span><?php echo $lang_help['produces list'] ?></span>				<ul><li><?php echo $lang_help['List text 1'] ?></li><li><?php echo $lang_help['List text 2'] ?></li><li><?php echo $lang_help['List text 3'] ?></li></ul>				<code>[list=1][*]<?php echo $lang_help['List text 1'] ?>[/*][*]<?php echo $lang_help['List text 2'] ?>[/*][*]<?php echo $lang_help['List text 3'] ?>[/*][/list]</code> <span><?php echo $lang_help['produces decimal list'] ?></span>				<ol class="decimal"><li><?php echo $lang_help['List text 1'] ?></li><li><?php echo $lang_help['List text 2'] ?></li><li><?php echo $lang_help['List text 3'] ?></li></ol>				<code>[list=a][*]<?php echo $lang_help['List text 1'] ?>[/*][*]<?php echo $lang_help['List text 2'] ?>[/*][*]<?php echo $lang_help['List text 3'] ?>[/*][/list]</code> <span><?php echo $lang_help['produces alpha list'] ?></span>				<ol class="alpha"><li><?php echo $lang_help['List text 1'] ?></li><li><?php echo $lang_help['List text 2'] ?></li><li><?php echo $lang_help['List text 3'] ?></li></ol>			</div>		</div><?php ($hook = get_hook('he_new_bbcode_section')) ? eval($hook) : null; ?>	</div><?php}else if ($section == 'img'){?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_help['Help with'], $lang_common['Images']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box help-box">			<p class="hn"><?php echo $lang_help['Image info'] ?></p>			<div class="entry-content">				<code>[img=PunBB bbcode test]<?php echo $base_url ?>/img/test.png[/img]</code>				<samp><img src="<?php echo $base_url ?>/img/test.png" alt="PunBB bbcode test" /></samp>			</div>		</div>		<?php ($hook = get_hook('he_new_img_section')) ? eval($hook) : null; ?>	</div><?php}else if ($section == 'smilies'){?>	<div id="smilies" class="main-subhead">		<h2 class="hn"><span><?php printf($lang_help['Help with'], $lang_common['Smilies']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box help-box">			<p class="hn"><?php echo $lang_help['Smilies info'] ?></p>			<div class="entry-content"><?php	// Display the smiley set	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$smiley_groups = array();	($hook = get_hook('he_pre_smile_display')) ? eval($hook) : null;	foreach ($smilies as $smiley_text => $smiley_img)		$smiley_groups[$smiley_img][] = $smiley_text;	foreach ($smiley_groups as $smiley_img => $smiley_texts)		echo "\t\t\t\t".'<p>'.implode(' '.$lang_common['and'].' ', $smiley_texts).' <span>'.$lang_help['produces'].'</span> <img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.$smiley_texts[0].'" /></p>'."\n";?>			</div>		</div>	</div><?php}($hook = get_hook('he_new_section')) ? eval($hook) : null;?></div><?php($hook = get_hook('he_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
<?php$forum_loader->add_css('style/Oxygen/min/Oxygen.min.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen'));//$forum_loader->add_css('style/Oxygen/Oxygen.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen'));//$forum_loader->add_css('style/Oxygen/Oxygen_mobile.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen'));//$forum_loader->add_css('style/Oxygen/Oxygen_cs.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen'));// IE$forum_loader->add_css('style/Oxygen/min/Oxygen_ie6.min.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen', 'browsers' => array('IE' => 'lte IE 6', '!IE' => false)));$forum_loader->add_css('style/Oxygen/min/Oxygen_ie7.min.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen', 'browsers' => array('IE' => 'IE 7', '!IE' => false)));$forum_loader->add_css('style/Oxygen/min/Oxygen_ie8.min.css', array('type' => 'file', 'group' => FORUM_CSS_GROUP_SYSTEM, 'media' => 'screen', 'browsers' => array('IE' => 'IE 8', '!IE' => false)));?>
