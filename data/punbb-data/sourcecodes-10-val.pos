<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database.<br/>MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = @mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php// Language definitions used in login.php$lang_login = array(// Miscellaneous'Login'								=>	'Login','Login info'						=>	'Login to %s','Username'							=>	'Username','Password'							=>	'Password','Remember me'						=>	'Remember me','E-mail address'					=>	'Email address','E-mail address help'				=>	'Enter the email address set in your profile.','Login errors'						=>	'<strong>Warning!</strong> The following errors must be corrected before you can login:','Wrong user/pass'					=>	'Incorrect username and/or password.','Login redirect'					=>	'Logged in successfully.','Logout redirect'					=>	'Logged out.','No e-mail match'					=>	'There is no user registered with the email address %s.','Invalid e-mail'					=>	'The email address you entered is invalid.','Login options'						=>	'Do you need to %1$s or obtain a %2$s before you login?','Obtain pass'						=>	'new password','register'							=>	'register','Submit password request'			=>	'Submit request','Email flood'						=>	'This account has already requested a new password in the past %s seconds. Please wait a while before requesting a new password again.','New password request'				=>	'New password request','New password errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before a new password can be sent:','New password info'					=>	'<strong>Important!</strong> An email will be sent to the specified address with instructions on how to change your password.','New password cancel redirect'		=>	'New password request cancelled.','Forget mail'						=>	'An email has been sent to the specified address with instructions on how to change your password. If it does not arrive you can contact the forum administrator at %s.','Persistent login'					=>	'Log me in automatically each time I visit.');
<?php/** * Provides various mass-moderation tools to moderators. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('mr_start')) ? eval($hook) : null;// Load the misc.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';// This particular function doesn't require forum-based moderator access. It can be used// by all moderators and admins.if (isset($_GET['get_host'])){	if (!$forum_user['is_admmod'])		message($lang_common['No permission']);	($hook = get_hook('mr_view_ip_selected')) ? eval($hook) : null;	// Is get_host an IP address or a post ID?	if (preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_GET['get_host']) || preg_match('/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/', $_GET['get_host']))		$ip = $_GET['get_host'];	else	{		$get_host = intval($_GET['get_host']);		if ($get_host < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'p.poster_ip',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.id='.$get_host		);		($hook = get_hook('mr_view_ip_qr_get_poster_ip')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ip = $forum_db->result($result);		if (!$ip)			message($lang_common['Bad request']);	}	($hook = get_hook('mr_view_ip_pre_output')) ? eval($hook) : null;	message(sprintf($lang_misc['Hostname lookup'], $ip, @gethostbyaddr($ip), '<a href="'.forum_link($forum_url['admin_users']).'?show_users='.$ip.'">'.$lang_misc['Show more users'].'</a>'));}// All other functions require moderator/admin access$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($fid < 1)	message($lang_common['Bad request']);// Get some info about the forum we're moderating$query = array(	'SELECT'	=> 'f.forum_name, f.redirect_url, f.num_topics, f.moderators, f.sort_by',	'FROM'		=> 'forums AS f',	'JOINS'		=> array(		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid);($hook = get_hook('mr_qr_get_forum_data')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_forum = $forum_db->fetch_assoc($result);if (!$cur_forum)	message($lang_common['Bad request']);// Make sure we're not trying to moderate a redirect forumif ($cur_forum['redirect_url'] != '')	message($lang_common['Bad request']);// Setup the array of moderators$mods_array = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();($hook = get_hook('mr_pre_permission_check')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || !array_key_exists($forum_user['username'], $mods_array)))	message($lang_common['No permission']);// Get topic/forum tracking dataif (!$forum_user['is_guest'])	$tracked_topics = get_tracked_topics();// Did someone click a cancel button?if (isset($_POST['cancel']))	redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);// All topic moderation features require a topic id in GETif (isset($_GET['tid'])){	($hook = get_hook('mr_post_actions_selected')) ? eval($hook) : null;	$tid = intval($_GET['tid']);	if ($tid < 1)		message($lang_common['Bad request']);	// Fetch some info about the topic	$query = array(		'SELECT'	=> 't.subject, t.poster, t.first_post_id, t.posted, t.num_replies',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$tid.' AND t.moved_to IS NULL'	);	($hook = get_hook('mr_post_actions_qr_get_topic_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_topic = $forum_db->fetch_assoc($result);	if (!$cur_topic)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['delete_posts_cancel']))		redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['Cancel redirect']);	// Delete one or more posts	if (isset($_POST['delete_posts']) || isset($_POST['delete_posts_comply']))	{		($hook = get_hook('mr_delete_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['delete_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			($hook = get_hook('mr_confirm_delete_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_delete_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			// Delete the posts			$query = array(				'DELETE'	=> 'posts',				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_delete_posts_qr_delete_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($posts);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Delete posts redirect']);			($hook = get_hook('mr_confirm_delete_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_misc['Delete posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Delete posts']		);		($hook = get_hook('mr_confirm_delete_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_delete_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Delete posts'] ?></strong></legend><?php ($hook = get_hook('mr_confirm_delete_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm post delete'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_delete_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_posts_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_delete_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if (isset($_POST['split_posts']) || isset($_POST['split_posts_comply']))	{		($hook = get_hook('mr_split_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['split_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			// Load the post.php language file			require FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';			($hook = get_hook('mr_confirm_split_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_split_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			$new_subject = isset($_POST['new_subject']) ? forum_trim($_POST['new_subject']) : '';			if ($new_subject == '')				message($lang_post['No subject']);			else if (utf8_strlen($new_subject) > 70)				message($lang_post['Too long subject']);			// Get data from the new first post			$query = array(				'SELECT'	=> 'p.id, p.poster, p.posted',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id = '.min($posts)			);			($hook = get_hook('mr_confirm_split_posts_qr_get_first_post_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$first_post_data = $forum_db->fetch_assoc($result);			// Create the new topic			$query = array(				'INSERT'	=> 'poster, subject, posted, first_post_id, forum_id',				'INTO'		=> 'topics',				'VALUES'	=> '\''.$forum_db->escape($first_post_data['poster']).'\', \''.$forum_db->escape($new_subject).'\', '.$first_post_data['posted'].', '.$first_post_data['id'].', '.$fid			);			($hook = get_hook('mr_confirm_split_posts_qr_add_topic')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$new_tid = $forum_db->insert_id();			// Move the posts to the new topic			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'topic_id='.$new_tid,				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_split_posts_qr_move_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Sync last post data for the old topic, the new topic, and the forum itself			sync_topic($new_tid);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Split posts redirect']);			($hook = get_hook('mr_confirm_split_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($new_tid, sef_friendly($new_subject))), $lang_misc['Split posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Split posts']		);		($hook = get_hook('mr_confirm_split_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_split_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post split'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Split posts'] ?></strong></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>"><?php ($hook = get_hook('mr_confirm_split_posts_pre_subject')) ? eval($hook) : null; ?>					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['New subject'] ?> <em><?php echo $lang_common['Required'] ?></em></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_subject" value="" size="70" maxlength="70" /></span>					</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm topic split'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_split_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="split_posts_comply" value="<?php echo $lang_common['Split'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_split_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	// Show the moderate topic view	// Load the viewtopic.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';	// Used to disable the Split and Delete buttons if there are no replies to this topic	$forum_page['button_status'] = ($cur_topic['num_replies'] == 0) ? ' disabled="disabled"' : '';	// Determine the post offset (based on $_GET['p'])	$forum_page['num_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);	$forum_page['start_from'] = $forum_user['disp_posts'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_posts']), ($cur_topic['num_replies'] + 1));	$forum_page['items_info'] = generate_items_info($lang_misc['Posts'], ($forum_page['start_from'] + 1), ($cur_topic['num_replies'] + 1));	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_topic'], $lang_common['Paging separator'], array($fid, $tid)).'</p>';	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], $forum_page['num_pages'], array($fid, $tid)).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] + 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] - 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_topic'], array($fid, $tid)).'" title="'.$lang_common['Page'].' 1" />';	}	if ($forum_config['o_censoring'] == '1')		$cur_topic['subject'] = censor_words($cur_topic['subject']);	// Setup form	$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),		$lang_topic['Moderate topic']	);	// Setup main heading	$forum_page['main_title'] = sprintf($lang_misc['Moderate topic head'], forum_htmlencode($cur_topic['subject']));	$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	($hook = get_hook('mr_post_actions_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'modtopic');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_post_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-post-actions-form" class="newform" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-content main-topic">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['item_count'] = 0;	// Keep track of post numbers	// Retrieve the posts (and their respective poster)	$query = array(		'SELECT'	=> 'u.title, u.num_posts, g.g_id, g.g_user_title, p.id, p.poster, p.poster_id, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'u.id=p.poster_id'			),			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'p.topic_id='.$tid,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> $forum_page['start_from'].','.$forum_user['disp_posts']	);	($hook = get_hook('mr_post_actions_qr_get_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_post = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_post_actions_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		$forum_page['post_ident'] = array();		$forum_page['message'] = array();		$forum_page['user_ident'] = array();		$cur_post['username'] = $cur_post['poster'];		// Generate the post heading		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';		if ($cur_post['poster_id'] > 1)			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), (($forum_user['g_view_users'] == '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>')).'</span>';		else			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('mr_row_pre_item_ident_merge')) ? eval($hook) : null;		// Generate the checkbox field		if ($cur_post['id'] != $cur_topic['first_post_id'])			$forum_page['item_select'] = '<p class="item-select"><input type="checkbox" id="fld'.$cur_post['id'].'" name="posts[]" value="'.$cur_post['id'].'" /> <label for="fld'.$cur_post['id'].'">'.$lang_misc['Select post'].' '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</label></p>';		// Generate author identification		$forum_page['author_ident']['username'] = '<li class="username">'.(($cur_post['poster_id'] > '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</li>';		$forum_page['author_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($cur_post).'</span></li>';		// Give the post some class		$forum_page['item_status'] = array(			'post',			($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even'		);		if ($forum_page['item_count'] == 1)			$forum_page['item_status']['firstpost'] = 'firstpost';		if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])			$forum_page['item_status']['lastpost'] = 'lastpost';		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_status']['topicpost'] = 'topicpost';		else			$forum_page['item_status']['replypost'] = 'replypost';		// Generate the post title		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_subject'] = sprintf($lang_topic['Topic title'], $cur_topic['subject']);		else			$forum_page['item_subject'] = sprintf($lang_topic['Reply title'], $cur_topic['subject']);		$forum_page['item_subject'] = forum_htmlencode($forum_page['item_subject']);		// Perform the main parsing of the message (BBCode, smilies, censor words etc)		$forum_page['message']['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		if ($cur_post['edited'] != '')			$forum_page['message']['edited'] = '<p class="lastedit"><em>'.sprintf($lang_topic['Last edited'], forum_htmlencode($cur_post['edited_by']), format_time($cur_post['edited'])).'</em></p>';		($hook = get_hook('mr_post_actions_row_pre_display')) ? eval($hook) : null;?>			<div class="<?php echo implode(' ', $forum_page['item_status']) ?>">				<div id="p<?php echo $cur_post['id'] ?>" class="posthead">					<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('mr_post_actions_pre_item_select')) ? eval($hook) : null; ?><?php if (isset($forum_page['item_select'])) echo "\t\t\t\t".$forum_page['item_select']."\n" ?><?php ($hook = get_hook('mr_post_actions_new_post_head_option')) ? eval($hook) : null; ?>				</div>				<div class="postbody">					<div class="post-author">						<ul class="author-ident">							<?php echo implode("\n\t\t\t\t\t\t", $forum_page['author_ident'])."\n" ?>						</ul><?php ($hook = get_hook('mr_post_actions_new_user_ident_data')) ? eval($hook) : null; ?>					</div>					<div class="post-entry">						<h4 class="entry-title"><?php echo $forum_page['item_subject'] ?></h4>						<div class="entry-content">							<?php echo implode("\n\t\t\t\t\t\t\t", $forum_page['message'])."\n" ?>						</div><?php ($hook = get_hook('mr_post_actions_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div><?php	}?>	</div><?php$forum_page['mod_options'] = array(	'del_posts'		=> '<span class="submit first-item"><input type="submit" name="delete_posts" value="'.$lang_misc['Delete posts'].'" /></span>',	'split_posts'	=> '<span class="submit"><input type="submit" name="split_posts" value="'.$lang_misc['Split posts'].'" /></span>',	'del_topic'		=> '<span><a href="'.forum_link($forum_url['delete'], $cur_topic['first_post_id']).'">'.$lang_misc['Delete whole topic'].'</a></span>');($hook = get_hook('mr_post_actions_pre_mod_options')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	$forum_id = $fid;	// Init JS helper for select-all	$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));	($hook = get_hook('mr_post_actions_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Move one or more topicsif (isset($_REQUEST['move_topics']) || isset($_POST['move_topics_to'])){	if (isset($_POST['move_topics_to']))	{		($hook = get_hook('mr_confirm_move_topics_form_submitted')) ? eval($hook) : null;		$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? explode(',', $_POST['topics']) : array();		$topics = array_map('intval', $topics);		$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;		if (empty($topics) || $move_to_forum < 1)			message($lang_common['Bad request']);		// Fetch the forum name for the forum we're moving to		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$move_to_forum		);		($hook = get_hook('mr_confirm_move_topics_qr_get_move_to_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$move_to_forum_name = $forum_db->result($result);		if (!$move_to_forum_name)			message($lang_common['Bad request']);		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_move_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Delete any redirect topics if there are any (only if we moved/copied the topic back to where it where it was once moved from)		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'forum_id='.$move_to_forum.' AND moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_delete_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Move the topic(s)		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'forum_id='.$move_to_forum,			'WHERE'		=> 'id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_move_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))		{			foreach ($topics as $cur_topic)			{				// Fetch info for the redirect topic				$query = array(					'SELECT'	=> 't.poster, t.subject, t.posted, t.last_post',					'FROM'		=> 'topics AS t',					'WHERE'		=> 't.id='.$cur_topic				);				($hook = get_hook('mr_confirm_move_topics_qr_get_redirect_topic_data')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$moved_to = $forum_db->fetch_assoc($result);				// Create the redirect topic				$query = array(					'INSERT'	=> 'poster, subject, posted, last_post, moved_to, forum_id',					'INTO'		=> 'topics',					'VALUES'	=> '\''.$forum_db->escape($moved_to['poster']).'\', \''.$forum_db->escape($moved_to['subject']).'\', '.$moved_to['posted'].', '.$moved_to['last_post'].', '.$cur_topic.', '.$fid				);				($hook = get_hook('mr_confirm_move_topics_qr_add_redirect_topic')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		sync_forum($fid);			// Synchronize the forum FROM which the topic was moved		sync_forum($move_to_forum);	// Synchronize the forum TO which the topic was moved		$forum_page['redirect_msg'] = (count($topics) > 1) ? $lang_misc['Move topics redirect'] : $lang_misc['Move topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_confirm_move_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($move_to_forum, sef_friendly($move_to_forum_name))), $forum_page['redirect_msg']);	}	if (isset($_POST['move_topics']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		if (count($topics) == 1)		{			$topics = $topics[0];			$action = 'single';		}		else			$action = 'multiple';	}	else	{		$topics = intval($_GET['move_topics']);		if ($topics < 1)			message($lang_common['Bad request']);		$action = 'single';	}	if ($action == 'single')	{		// Fetch the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topics		);		($hook = get_hook('mr_move_topics_qr_get_topic_to_move_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}	}	// Get forums we can move the post into	$query = array(		'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL AND f.id!='.$fid,		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('mr_move_topics_qr_get_target_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_list = array();	while ($cur_sel_forum = $forum_db->fetch_assoc($result))	{		$forum_list[] = $cur_sel_forum;	}	if (empty($forum_list))	{		message($lang_misc['Nowhere to move']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.($action == 'single' ? $topics : implode(',', $topics)).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$forum_page['crumbs'][] = array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))));	if ($action == 'single')		$forum_page['crumbs'][] = array($subject, forum_link($forum_url['topic'], array($topics, sef_friendly($subject))));	else		$forum_page['crumbs'][] = array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid));	$forum_page['crumbs'][] = ($action == 'single') ? $lang_misc['Move topic'] : $lang_misc['Move topics'];	//Setup main heading	$forum_page['main_title'] = end($forum_page['crumbs']).' '.$lang_misc['To new forum'];	($hook = get_hook('mr_move_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_move_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']).' '.$lang_misc['To new forum'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Move topic'] ?></strong></legend><?php ($hook = get_hook('mr_move_topics_pre_move_to_forum')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Move to'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_forum"><?php	$forum_page['cur_category'] = 0;	foreach ($forum_list as $cur_forum)	{		if ($cur_forum['cid'] != $forum_page['cur_category'])	// A new category since last iteration?		{			if ($forum_page['cur_category'])				echo "\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";			$forum_page['cur_category'] = $cur_forum['cid'];		}		if ($cur_forum['fid'] != $fid)			echo "\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.forum_htmlencode($cur_forum['forum_name']).'</option>'."\n";	}?>						</optgroup>						</select></span>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1"<?php if ($action == 'single') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo ($action == 'single') ? $lang_misc['Leave redirect'] : $lang_misc['Leave redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_move_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="move_topics_to" value="<?php echo $lang_misc['Move'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_move_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Merge topicselse if (isset($_POST['merge_topics']) || isset($_POST['merge_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	if (count($topics) == 1)		message($lang_misc['Merge error']);	if (isset($_POST['merge_topics_comply']))	{		($hook = get_hook('mr_confirm_merge_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id), MIN(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.moved_to IS NULL AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_merge_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		list($num_topics, $merge_to_tid) = $forum_db->fetch_row($result);		if ($num_topics != count($topics))			message($lang_common['Bad request']);		// Make any redirect topics point to our new, merged topic		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'moved_to='.$merge_to_tid,			'WHERE'		=> 'moved_to IN('.implode(',', $topics).')'		);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))			$query['WHERE'] .= ' OR (id IN('.implode(',', $topics).') AND id != '.$merge_to_tid.')';		($hook = get_hook('mr_confirm_merge_topics_qr_fix_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Merge the posts into the topic		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'topic_id='.$merge_to_tid,			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_merge_topics_qr_merge_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).') AND topic_id != '.$merge_to_tid		);		($hook = get_hook('mr_confirm_merge_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (!isset($_POST['with_redirect']))		{			// Delete the topics that have been merged			$query = array(				'DELETE'	=> 'topics',				'WHERE'		=> 'id IN('.implode(',', $topics).') AND id != '.$merge_to_tid			);			($hook = get_hook('mr_confirm_merge_topics_qr_delete_merged_topics')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Synchronize the topic we merged to and the forum where the topics were merged		sync_topic($merge_to_tid);		sync_forum($fid);		$forum_flash->add_info($lang_misc['Merge topics redirect']);		($hook = get_hook('mr_confirm_merge_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_misc['Merge topics redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$lang_misc['Merge topics']	);	($hook = get_hook('mr_merge_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_merge_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic merge'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Merge topics'] ?></strong></legend><?php ($hook = get_hook('mr_merge_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Redirect topic'] ?></span> <?php echo $lang_misc['Leave merge redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_merge_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="merge_topics_comply" value="<?php echo $lang_misc['Merge'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_merge_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Delete one or more topicselse if (isset($_REQUEST['delete_topics']) || isset($_POST['delete_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	$multi = count($topics) > 1;	if (isset($_POST['delete_topics_comply']))	{		if (!isset($_POST['req_confirm']))			redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);		($hook = get_hook('mr_confirm_delete_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_delete_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Create an array of forum IDs that need to be synced		$forum_ids = array($fid);		$query = array(			'SELECT'	=> 't.forum_id',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_forums_to_sync')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			$forum_ids[] = $row[0];		// Delete the topics and any redirect topics		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.implode(',', $topics).') OR moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Create a list of the post ID's in the deleted topic and strip the search index		$query = array(			'SELECT'	=> 'p.id',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_deleted_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$post_ids = array();		while ($row = $forum_db->fetch_row($result))			$post_ids[] = $row[0];		// Strip the search index provided we're not just deleting redirect topics		if (!empty($post_ids))		{			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($post_ids);		}		// Delete posts		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topic_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		foreach ($forum_ids as $cur_forum_id)			sync_forum($cur_forum_id);		$forum_flash->add_info($multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);		($hook = get_hook('mr_confirm_delete_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] =0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topic']	);	($hook = get_hook('mr_delete_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_delete_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topics'] ?></strong></legend><?php ($hook = get_hook('mr_delete_topics_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $multi ? $lang_misc['Delete topics comply'] : $lang_misc['Delete topic comply'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_delete_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_topics_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_delete_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Open or close one or more topicselse if (isset($_REQUEST['open']) || isset($_REQUEST['close'])){	$action = (isset($_REQUEST['open'])) ? 0 : 1;	($hook = get_hook('mr_open_close_topic_selected')) ? eval($hook) : null;	// There could be an array of topic ID's in $_POST	if (isset($_POST['open']) || isset($_POST['close']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id IN('.implode(',', $topics).') AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_multi_topics_qr_open_close_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (count($topics) == 1)			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		else			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topics redirect'] : $lang_misc['Open topics redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_multi_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['moderate_forum'], $fid), $forum_page['redirect_msg']);	}	// Or just one in $_GET	else	{		$topic_id = ($action) ? intval($_GET['close']) : intval($_GET['open']);		if ($topic_id < 1)			message($lang_common['Bad request']);		// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.		// If it's in GET, we need to make sure it's valid.		if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token(($action ? 'close' : 'open').$topic_id)))			csrf_confirm_form();		// Get the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_get_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_open_close_topic')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_single_topic_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $forum_page['redirect_msg']);	}}// Stick a topicelse if (isset($_GET['stick'])){	$stick = intval($_GET['stick']);	if ($stick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('stick'.$stick)))		csrf_confirm_form();	($hook = get_hook('mr_stick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=1',		'WHERE'		=> 'id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_stick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Stick topic redirect']);	($hook = get_hook('mr_stick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($stick, sef_friendly($subject))), $lang_misc['Stick topic redirect']);}// Unstick a topicelse if (isset($_GET['unstick'])){	$unstick = intval($_GET['unstick']);	if ($unstick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('unstick'.$unstick)))		csrf_confirm_form();	($hook = get_hook('mr_unstick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=0',		'WHERE'		=> 'id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_unstick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Unstick topic redirect']);	($hook = get_hook('mr_unstick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($unstick, sef_friendly($subject))), $lang_misc['Unstick topic redirect']);}($hook = get_hook('mr_new_action')) ? eval($hook) : null;// No specific forum moderation action was specified in the query string, so we'll display the moderate forum view// If forum is emptyif ($cur_forum['num_topics'] == 0)	message($lang_common['Bad request']);// Load the viewforum.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';// Determine the topic offset (based on $_GET['p'])$forum_page['num_pages'] = ceil($cur_forum['num_topics'] / $forum_user['disp_topics']);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($cur_forum['num_topics']));$forum_page['items_info'] = generate_items_info($lang_misc['Topics'], ($forum_page['start_from'] + 1), $cur_forum['num_topics']);// Select topics$query = array(	'SELECT'	=> 't.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to',	'FROM'		=> 'topics AS t',	'WHERE'		=> 'forum_id='.$fid,	'ORDER BY'	=> 't.sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 't.posted' : 't.last_post').' DESC',	'LIMIT'		=>	$forum_page['start_from'].', '.$forum_user['disp_topics']);// With "has posted" indicationif (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1'){	$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';	$query['JOINS'][]	= array(		'LEFT JOIN'		=> 'posts AS p',		'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'	);	// Must have same columns as in prev SELECT	$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to';	($hook = get_hook('mr_qr_get_has_posted')) ? eval($hook) : null;}($hook = get_hook('mr_qr_get_topics')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);// Generate paging links$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_forum'], $lang_common['Paging separator'], $fid).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], $forum_page['num_pages'], $fid).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] + 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] - 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_forum'], $fid).'" title="'.$lang_common['Page'].' 1" />';}// Setup form$forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),	sprintf($lang_misc['Moderate forum head'], forum_htmlencode($cur_forum['forum_name'])));// Setup main headingif ($forum_page['num_pages'] > 1)	$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';($hook = get_hook('mr_topic_actions_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'modforum');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();$forum_page['item_header'] = array();$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';if ($forum_config['o_topic_views'] == '1')	$forum_page['item_header']['info']['views'] = '<strong class="info-views">'.$lang_forum['views'].'</strong>';$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';($hook = get_hook('mr_topic_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-topic-actions-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-subhead">		<p class="item-summary<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>"><span><?php printf($lang_forum['Forum subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div id="forum<?php echo $fid ?>" class="main-content main-forum<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	$forum_page['item_count'] = 0;	while ($cur_topic = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_topic_actions_row_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		// Start from scratch		$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_topic['poster'])).'</span>';		if ($cur_topic['moved_to'] != null)		{			$forum_page['item_status']['moved'] = 'moved';			$forum_page['item_title']['link'] = '<span class="item-status"><em class="moved">'.sprintf($lang_forum['Item status'], $lang_forum['Moved']).'</em></span> <a href="'.forum_link($forum_url['topic'], array($cur_topic['moved_to'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a>';			// Combine everything to produce the Topic heading			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> <strong>'.$forum_page['item_title']['link'].'</strong></h3>';			($hook = get_hook('mr_topic_actions_moved_row_pre_item_subject_merge')) ? eval($hook) : null;			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><span class="label">'.$lang_forum['No views info'].'</span></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><span class="label">'.$lang_forum['No replies info'].'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['No lastpost info'].'</span></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_moved_row_pre_output')) ? eval($hook) : null;		}		else		{			$forum_page['ghost_topic'] = false;			// First assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_topic['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_topic['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_topic['closed'] == '1')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<strong><a href="'.forum_link($forum_url['topic'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a></strong>';			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			$forum_page['item_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_topic['id'], sef_friendly($cur_topic['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_topic['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$fid]) || $tracked_topics['forums'][$fid] < $cur_topic['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_nav_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			// Assemble the Topic subject			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_topic['num_replies']).'</strong> <span class="label">'.(($cur_topic['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><strong>'.forum_number_format($cur_topic['num_views']).'</strong> <span class="label">'.(($cur_topic['num_views'] == 1) ? $lang_forum['View'] : $lang_forum['Views']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_topic['last_post_id']).'">'.format_time($cur_topic['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_topic['last_poster'])).'</cite></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_normal_row_pre_output')) ? eval($hook) : null;		}		$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';		($hook = get_hook('mr_topic_actions_row_pre_item_status_merge')) ? eval($hook) : null;		$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');		($hook = get_hook('mr_topic_actions_row_pre_display')) ? eval($hook) : null;?>			<div id="topic<?php echo $cur_topic['id'] ?>" class="main-item<?php echo $forum_page['item_style'] ?>">				<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>				<div class="item-subject">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>				</div>				<ul class="item-info">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>				</ul>			</div><?php	}?>	</div><?php	($hook = get_hook('mr_topic_actions_post_topic_list')) ? eval($hook) : null;	// Setup moderator control buttons	$forum_page['mod_options'] = array(		'mod_move'		=> '<span class="submit first-item"><input type="submit" name="move_topics" value="'.$lang_misc['Move'].'" /></span>',		'mod_delete'	=> '<span class="submit"><input type="submit" name="delete_topics" value="'.$lang_common['Delete'].'" /></span>',		'mod_merge'		=> '<span class="submit"><input type="submit" name="merge_topics" value="'.$lang_misc['Merge'].'" /></span>',		'mod_open'		=> '<span class="submit"><input type="submit" name="open" value="'.$lang_misc['Open'].'" /></span>',		'mod_close'		=> '<span class="submit"><input type="submit" name="close" value="'.$lang_misc['Close'].'" /></span>'	);	($hook = get_hook('mr_topic_actions_pre_mod_option_output')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php$forum_id = $fid;// Init JS helper for select-all$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));($hook = get_hook('mr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Database updating script. * * Updates the database to the latest version. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('UPDATE_TO', '1.4b1');define('UPDATE_TO_DB_REVISION', 5);// The number of items to process per pageview (lower this if the update script times out during UTF-8 conversion)define('PER_PAGE', 300);define('MIN_MYSQL_VERSION', '4.1.2');// Make sure we are running at least PHP 5.0.0if (!function_exists('version_compare') || version_compare(PHP_VERSION, '5.0.0', '<'))	exit('You are running PHP version '.PHP_VERSION.'. '.UPDATE_TO.' requires at least PHP 5.0.0 to run properly. You must upgrade your PHP installation before you can continue.');define('FORUM_ROOT', '../');// Attempt to load the configuration file config.phpif (file_exists(FORUM_ROOT.'config.php'))	include FORUM_ROOT.'config.php';if (defined('PUN'))	define('FORUM', 1);// If FORUM isn't defined, config.php is missing or corrupt or we are outside the root directoryif (!defined('FORUM'))	exit('Cannot find config.php, are you sure it exists?');// Enable debug modeif (!defined('FORUM_DEBUG'))	define('FORUM_DEBUG', 1);// Turn on full PHP error reportingerror_reporting(E_ALL);// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Turn off PHP time limit@set_time_limit(0);// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', FORUM_ROOT.'cache/');// Load the functions scriptrequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If the request_uri is invalid try fix itif (!defined('FORUM_IGNORE_REQUEST_URI'))	forum_fix_request_uri();// Instruct DB abstraction layer that we don't want it to "SET NAMES". If we need to, we'll do it ourselves below.define('FORUM_NO_SET_NAMES', 1);// Load DB abstraction layer and try to connectrequire FORUM_ROOT.'include/dblayer/common_db.php';// Check current version$query = array(	'SELECT'	=> 'conf_value',	'FROM'		=> 'config',	'WHERE'		=> 'conf_name = \'o_cur_version\'');$result = $forum_db->query_build($query);$cur_version = $forum_db->result($result);if (version_compare($cur_version, '1.2', '<'))	error('Version mismatch. The database \''.$db_name.'\' doesn\'t seem to be running a PunBB database schema supported by this update script.', __FILE__, __LINE__);// If we've already done charset conversion in a previous update, we have to do SET NAMES$forum_db->set_names(strpos($cur_version, '1.3') === 0 ? 'utf8' : 'latin1');// If MySQL, make sure it's at least 4.1.2if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$mysql_info = $forum_db->get_version();	if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))		error('You are running MySQL version '.$mysql_version.'. PunBB '.UPDATE_TO.' requires at least MySQL '.MIN_MYSQL_VERSION.' to run properly. You must upgrade your MySQL installation before you can continue.');}// Get the forum config$query = array(	'SELECT'	=> '*',	'FROM'		=> 'config');$result = $forum_db->query_build($query);while ($cur_config_item = $forum_db->fetch_row($result))	$forum_config[$cur_config_item[0]] = $cur_config_item[1];// Check the database revision and the current versionif (isset($forum_config['o_database_revision']) && $forum_config['o_database_revision'] >= UPDATE_TO_DB_REVISION && version_compare($forum_config['o_cur_version'], UPDATE_TO, '>='))	error('Your database is already as up-to-date as this script can make it.');// If $base_url isn't set, use o_base_url from configif (!isset($base_url))	$base_url = $forum_config['o_base_url'];// There's no $forum_user, but we need the style element// We default to Oxygen if the default style is invalid (a 1.2 to 1.3 upgrade most likely)if (file_exists(FORUM_ROOT.'style/'.$forum_config['o_default_style'].'/'.$forum_config['o_default_style'].'.php'))	$forum_user['style'] = $forum_config['o_default_style'];else{	$forum_user['style'] = 'Oxygen';	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'Oxygen\'',		'WHERE'		=> 'conf_name = \'o_default_style\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Make sure the default language exists// We default to English if the default language is invalid (a 1.2 to 1.3 upgrade most likely)if (!file_exists(FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/common.php')){	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'English\'',		'WHERE'		=> 'conf_name = \'o_default_lang\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}//// Determines whether $str is UTF-8 encoded or not//function seems_utf8($str){	$str_len = strlen($str);	for ($i = 0; $i < $str_len; ++$i)	{		if (ord($str[$i]) < 0x80) continue; # 0bbbbbbb		else if ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; # 110bbbbb		else if ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; # 1110bbbb		else if ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; # 11110bbb		else if ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; # 111110bb		else if ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; # 1111110b		else return false; # Does not match any model		for ($j = 0; $j < $n; ++$j) # n bytes matching 10bbbbbb follow ?		{			if ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))				return false;		}	}	return true;}//// Translates the number from an HTML numeric entity into an UTF-8 character//function dcr2utf8($src){	$dest = '';	if ($src < 0)		return false;	else if ($src <= 0x007f)		$dest .= chr($src);	else if ($src <= 0x07ff)	{		$dest .= chr(0xc0 | ($src >> 6));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src == 0xFEFF)	{		// nop -- zap the BOM	}	else if ($src >= 0xD800 && $src <= 0xDFFF)	{		// found a surrogate		return false;	}	else if ($src <= 0xffff)	{		$dest .= chr(0xe0 | ($src >> 12));		$dest .= chr(0x80 | (($src >> 6) & 0x003f));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src <= 0x10ffff)	{		$dest .= chr(0xf0 | ($src >> 18));		$dest .= chr(0x80 | (($src >> 12) & 0x3f));		$dest .= chr(0x80 | (($src >> 6) & 0x3f));		$dest .= chr(0x80 | ($src & 0x3f));	}	else	{		// out of range		return false;	}	return $dest;}//// Attemts to convert $str from $old_charset to UTF-8. Also converts HTML entities (including numeric entities) to UTF-8 characters.//function convert_to_utf8(&$str, $old_charset){	if ($str == '')		return false;	$save = $str;	// Replace literal entities (for non-UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '<') && $old_charset == 'ISO-8859-1' || $old_charset == 'ISO-8859-15')		$str = html_entity_decode($str, ENT_QUOTES, $old_charset);	if (!seems_utf8($str))	{		if ($old_charset == 'ISO-8859-1')			$str = utf8_encode($str);		else if (function_exists('iconv'))			$str = iconv($old_charset, 'UTF-8', $str);		else if (function_exists('mb_convert_encoding'))			$str = mb_convert_encoding($str, 'UTF-8', $old_charset);	}	// Replace literal entities (for UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '>='))		$str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');	// Replace numeric entities	$str = preg_replace_callback('/&#([0-9]+);/', 'utf8_callback_1', $str);	$str = preg_replace_callback('/&#x([a-f0-9]+);/i', 'utf8_callback_2', $str);	return ($save != $str);}function utf8_callback_1($matches){	return dcr2utf8($matches[1]);}function utf8_callback_2($matches){	return dcr2utf8(hexdec($matches[1]));}//// Tries to determine whether post data in the database is UTF-8 encoded or not//function db_seems_utf8(){	global $db_type, $forum_db;	$seems_utf8 = true;	$query = array(		'SELECT'	=> 'MIN(id), MAX(id), COUNT(id)',		'FROM'		=> 'posts'	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($min_id, $max_id, $count_id) = $forum_db->fetch_row($result);	if ($count_id == 0)		return false;	// Get a random soup of data and check if it appears to be UTF-8	for ($i = 0; $i < 100; ++$i)	{		$id = ($i == 0) ? $min_id : (($i == 1) ? $max_id : rand($min_id, $max_id));		$query = array(			'SELECT'	=> 'p.message, p.poster, t.subject, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'		=> 't.id = p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'		=> 'f.id = t.forum_id'				)			),			'WHERE'		=> 'p.id >= '.$id,			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$random_row = $forum_db->fetch_row($result);		if (!seems_utf8($random_row[0].$random_row[1].$random_row[2].$random_row[3]))		{			$seems_utf8 = false;			break;		}	}	return $seems_utf8;}//// Safely converts text type columns into utf8 (MySQL only)// Function based on update_convert_table_utf8() from the Drupal project (http://drupal.org/)//function convert_table_utf8($table){	global $forum_db;	$types = array(		'char' 			=> 'binary',		'varchar'		=> 'varbinary',		'tinytext'		=> 'tinyblob',		'mediumtext'	=> 'mediumblob',		'text'			=> 'blob',		'longtext'		=> 'longblob'	);	// Set table default charset to utf8	$forum_db->query('ALTER TABLE `'.$table.'` CHARACTER SET utf8') or error(__FILE__, __LINE__);	// Find out which columns need converting and build SQL statements	$result = $forum_db->query('SHOW FULL COLUMNS FROM `'.$table.'`') or error(__FILE__, __LINE__);	while ($cur_column = $forum_db->fetch_assoc($result))	{		list($type) = explode('(', $cur_column['Type']);		if (isset($types[$type]) && strpos($cur_column['Collation'], 'utf8') === false)		{			$allow_null = ($cur_column['Null'] == 'YES');			$forum_db->alter_field($table, $cur_column['Field'], preg_replace('/'.$type.'/i', $types[$type], $cur_column['Type']), $allow_null, $cur_column['Default']);			$forum_db->alter_field($table, $cur_column['Field'], $cur_column['Type'].' CHARACTER SET utf8', $allow_null, $cur_column['Default']);		}	}}// Move avatars to DBfunction convert_avatars(){	global $forum_config, $forum_db;	$avatar_dir = FORUM_ROOT.'img/avatars/';	if (!is_dir($avatar_dir))	{		return false;	}	if ($handle = opendir($avatar_dir))	{		while (false !== ($avatar = readdir($handle)))		{			$avatar_file =  $avatar_dir.$avatar;			if (!is_file($avatar_file))			{				continue;			}			//echo $avatar_file;			$avatar = basename($avatar_file);			if (preg_match('/^(\d+)\.(png|gif|jpg)/', $avatar, $matches))			{				$user_id = intval($matches[1], 10);				$avatar_ext = $matches[2];				$avatar_type = FORUM_AVATAR_NONE;				if ($avatar_ext == 'png')				{					$avatar_type = FORUM_AVATAR_PNG;				}				else if ($avatar_ext == 'gif')				{					$avatar_type = FORUM_AVATAR_GIF;				}				else if ($avatar_ext == 'jpg')				{					$avatar_type = FORUM_AVATAR_JPG;				}				// Check user and avatar type				if ($user_id < 2 || $avatar_type == FORUM_AVATAR_NONE)				{					continue;				}				// Now check the width/height				list($width, $height, $type,) = @/**/getimagesize($avatar_file);				if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])				{					@/**/unlink($avatar_file);				}				else				{					// Save to DB					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$height.'\', avatar_width=\''.$width.'\'',						'WHERE'		=> 'id='.$user_id					);					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}			}		}		closedir($handle);	}}header('Content-type: text/html; charset=utf-8');// Empty all output buffers and stop bufferingwhile (@ob_end_clean());$stage = isset($_GET['stage']) ? $_GET['stage'] : '';$old_charset = isset($_GET['req_old_charset']) ? str_replace('ISO8859', 'ISO-8859', strtoupper($_GET['req_old_charset'])) : 'ISO-8859-1';$start_at = isset($_GET['start_at']) ? intval($_GET['start_at']) : 0;$query_str = '';switch ($stage){	// Show form	case '':		$db_seems_utf8 = db_seems_utf8();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update: Perform update of database tables</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<ul class="spaced">				<li class="warn"><span><strong>WARNING!</strong> This script will update your PunBB forum database. The update procedure might take anything from a few seconds to a few minutes (or in extreme cases, hours) depending on the speed of the server, the size of the forum database and the number of changes required.</span></li>				<li><span>Do not forget to make a backup of the database before continuing.</span></li>				<li><span>Did you read the update instructions in the documentation? If not, start there.</span></li><?phpif (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force']))){	if (!function_exists('iconv') && !function_exists('mb_convert_encoding'))	{?>				<li class="important"><strong>IMPORTANT!</strong> PunBB has detected that this PHP environment does not have support for the encoding mechanisms required to do UTF-8 conversion from character sets other than ISO-8859-1. What this means is that if the current character set is not ISO-8859-1, PunBB won't be able to convert your forum database to UTF-8 and you will have to do it manually. Instructions for doing manual charset conversion can be found in the update instructions.</span></li><?php	}}$current_url = get_current_url();if (strpos($cur_version, '1.2') === 0 && $db_seems_utf8 && !isset($_GET['force'])){?>				<li class="important"><span><strong>IMPORTANT!</strong> Based on a random selection of 100 posts, topic subjects, usernames and forum names from the database, it appears as if text in the database is currently UTF-8 encoded. This is a good thing. Based on this, the update process will not attempt to do charset conversion. If you have reason to believe that the charset conversion is required nonetheless, you can <a href="<?php echo $current_url.((substr_count($current_url, '?') == 1) ? '&amp;' : '?').'force=1' ?>">force the conversion to run</a>.</span></li><?php}?>			</ul>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo $current_url ?>">			<div class="hidden">				<input type="hidden" name="stage" value="start" />			</div><?php		if (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force'])))		{?>			<div class="ct-box info-box">				<p class="important"><strong>Enable conversion:</strong> When enabled this update script will, after it has made the required structural changes to the database, convert all text in the database from the current character set to UTF-8. This conversion is required if you're upgrading from PunBB 1.2 and you are not currently using an UTF-8 language pack.</p>				<p class="important"><strong>Current character set:</strong> If the primary language in your forum is English, you can leave this at the default value. However, if your forum is non-English, you should enter the character set of the primary language pack used in the forum.</p>			</div>			<div id="req-msg" class="req-warn ct-box error-box">				<p class="important"><strong>Important!</strong> All fields labelled <em>(Required)</em> must be completed before submitting this form.</p>			</div>			<fieldset class="frm-group group1">				<legend class="group-legend"><span>Charset conversion</span></legend>				<div class="sf-set set1">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld1" name="convert_charset" value="1" checked="checked" /></span>						<label for="fld1"><span>Enable conversion:</span> Perform database charset conversion.</label>					</div>				</div>				<div class="sf-set set2">					<div class="sf-box text required">						<label for="fld2"><span>Current character set: <em>(Required)</em></span> <small>Accept default for English forums otherwise the character set of the primary langauge pack.</small></label><br />						<span class="fld-input"><input type="text" id="fld2" name="req_old_charset" size="12" maxlength="20" value="ISO-8859-1" /></span>					</div>				</div>			</fieldset><?php		}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="start" value="Start update" /></span>			</div>		</form>	</div></div></div></div></body></html><?php		break;	// Start by updating the database structure	case 'start':		// Put back dropped search tables		if (!$forum_db->table_exists('search_cache') && in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'ident'			=> array(						'datatype'		=> 'VARCHAR(200)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'search_data'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					)				),				'PRIMARY KEY'	=> array('id'),				'INDEXES'		=> array(					'ident_idx'	=> array('ident(8)')				)			);			$forum_db->create_table('search_cache', $schema);			$schema = array(				'FIELDS'		=> array(					'post_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'word_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'subject_match'	=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					)				),				'INDEXES'		=> array(					'word_id_idx'	=> array('word_id'),					'post_id_idx'	=> array('post_id')				)			);			$forum_db->create_table('search_matches', $schema);			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'SERIAL',						'allow_null'	=> false					),					'word'			=> array(						'datatype'		=> 'VARCHAR(20)',						'allow_null'	=> false,						'default'		=> '\'\'',						'collation'		=> 'bin'					)				),				'PRIMARY KEY'	=> array('word'),				'INDEXES'		=> array(					'id_idx'	=> array('id')				)			);			$forum_db->create_table('search_words', $schema);		}		// Add the extensions table if it doesn't already exist		if (!$forum_db->table_exists('extensions'))		{			$schema = array(				'FIELDS'		=> array(					'id'				=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'title'				=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'version'			=> array(						'datatype'		=> 'VARCHAR(25)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'description'		=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'author'			=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'uninstall'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'uninstall_note'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'disabled'			=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					),					'dependencies'		=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					)				),				'PRIMARY KEY'	=> array('id')			);			$forum_db->create_table('extensions', $schema);		}		// Make sure the collation on "word" in the search_words table is utf8_bin		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW FULL COLUMNS FROM '.$forum_db->prefix.'search_words') or error(__FILE__, __LINE__);			while ($cur_column = $forum_db->fetch_assoc($result))			{				if ($cur_column['Field'] === 'word')				{					if ($cur_column['Collation'] !== 'utf8_bin')						$forum_db->alter_field('search_words', 'word', 'VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin', false, '');					break;				}			}		}		// Add uninstall_note field to extensions		$forum_db->add_field('extensions', 'uninstall_note', 'TEXT', true, null, 'uninstall');		// Drop uninstall_notes (plural) field		$forum_db->drop_field('extensions', 'uninstall_notes');		// Add disabled field to extensions		$forum_db->add_field('extensions', 'disabled', 'TINYINT(1)', false, 0, 'uninstall_note');		// Add dependencies field to extensions		$forum_db->add_field('extensions', 'dependencies', 'VARCHAR(255)', false, '', 'disabled');		// Add the extension_hooks table		if (!$forum_db->table_exists('extension_hooks'))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'extension_id'	=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'code'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'installed'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'priority'		=> array(						'datatype'		=> 'TINYINT(1) UNSIGNED',						'allow_null'	=> false,						'default'		=> '5'					)				),				'PRIMARY KEY'	=> array('id', 'extension_id')			);			$forum_db->create_table('extension_hooks', $schema);		}		// Add priority field to extension_hooks		$forum_db->add_field('extension_hooks', 'priority', 'TINYINT(1)', false, 5, 'installed');		// Extend id field in extension_hooks to 150		$forum_db->alter_field('extension_hooks', 'id', 'VARCHAR(150)', false, '');		// Make all e-mail fields VARCHAR(80)		$forum_db->alter_field('bans', 'email', 'VARCHAR(80)', true);		$forum_db->alter_field('posts', 'poster_email', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'email', 'VARCHAR(80)', false, '');		$forum_db->alter_field('users', 'jabber', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'msn', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'activate_string', 'VARCHAR(80)', true);		// Add avatars field		$forum_db->add_field('users', 'avatar', 'TINYINT(3) UNSIGNED', false, 0);		$forum_db->add_field('users', 'avatar_width', 'TINYINT(3) UNSIGNED', false, 0, 'avatar');		$forum_db->add_field('users', 'avatar_height', 'TINYINT(3) UNSIGNED', false, 0, 'avatar_width');		// Add new profile fileds		$forum_db->add_field('users', 'facebook', 'VARCHAR(100)', true, null, 'url');		$forum_db->add_field('users', 'twitter', 'VARCHAR(100)', true, null, 'facebook');		$forum_db->add_field('users', 'linkedin', 'VARCHAR(100)', true, null, 'twitter');		$forum_db->add_field('users', 'skype', 'VARCHAR(100)', true, null, 'linkedin');		// Add avatars to DB		convert_avatars();		// Remove NOT NULL from TEXT fields for consistency. See http://dev.punbb.org/changeset/596		$forum_db->alter_field('posts', 'message', 'TEXT', true);		$forum_db->alter_field('reports', 'message', 'TEXT', true);		// Drop fulltext indexes  (should only apply to SVN installs)		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$forum_db->drop_index('topics', 'subject_idx');			$forum_db->drop_index('posts', 'message_idx');		}		// Make all IP fields VARCHAR(39) to support IPv6		$forum_db->alter_field('posts', 'poster_ip', 'VARCHAR(39)', true);		$forum_db->alter_field('users', 'registration_ip', 'VARCHAR(39)', false, '0.0.0.0');		// Add the DST option to the users table		$forum_db->add_field('users', 'dst', 'TINYINT(1)', false, 0, 'timezone');		// Add the salt field to the users table		$forum_db->add_field('users', 'salt', 'VARCHAR(12)', true, null, 'password');		// Add the access_keys field to the users table		$forum_db->add_field('users', 'access_keys', 'TINYINT(1)', false, 0, 'show_sig');		// Add the CSRF token field to the online table		$forum_db->add_field('online', 'csrf_token', 'VARCHAR(40)', false, '', null);		// Add the prev_url field to the online table		$forum_db->add_field('online', 'prev_url', 'VARCHAR(255)', true, null, null);		// Add the last_post field to the online table		$forum_db->add_field('online', 'last_post', 'INT(10) UNSIGNED', true, null, null);		// Add the last_search field to the online table		$forum_db->add_field('online', 'last_search', 'INT(10) UNSIGNED', true, null, null);		// Drop use_avatar column from users table		$forum_db->drop_field('users', 'use_avatar');		// Drop save_pass column from users table		$forum_db->drop_field('users', 'save_pass');		// Drop g_edit_subjects_interval column from groups table		$forum_db->drop_field('groups', 'g_edit_subjects_interval');		$new_config = array();		// Add quote depth option		if (!array_key_exists('o_quote_depth', $forum_config))			$new_config[] = '\'o_quote_depth\', \'3\'';		// Add database revision number		if (!array_key_exists('o_database_revision', $forum_config))			$new_config[] = '\'o_database_revision\', \'0\'';		// Add default email setting option		if (!array_key_exists('o_default_email_setting', $forum_config))			$new_config[] = '\'o_default_email_setting\', \'1\'';		// Make sure we have o_additional_navlinks (was added in 1.2.1)		if (!array_key_exists('o_additional_navlinks', $forum_config))			$new_config[] = '\'o_additional_navlinks\', \'\'';		// Insert new config options o_sef		if (!array_key_exists('o_sef', $forum_config))			$new_config[] = '\'o_sef\', \'Default\'';		// Insert new config option o_topic_views		if (!array_key_exists('o_topic_views', $forum_config))			$new_config[] = '\'o_topic_views\', \'1\'';		// Insert new config option o_signatures		if (!array_key_exists('o_signatures', $forum_config))			$new_config[] = '\'o_signatures\', \'1\'';		// Insert new config option o_smtp_ssl		if (!array_key_exists('o_smtp_ssl', $forum_config))			$new_config[] = '\'o_smtp_ssl\', \'0\'';		// Insert new config option o_check_for_updates		if (!array_key_exists('o_check_for_updates', $forum_config))		{			$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;			$new_config[] = '\'o_check_for_updates\', \''.$check_for_updates.'\'';		}		// Insert new config option o_check_for_version		if (!array_key_exists('o_check_for_versions', $forum_config))		{			$o_check_for_versions = array_key_exists('o_check_for_updates', $forum_config) ? $forum_config['o_check_for_updates'] : $check_for_updates;			$new_config[] = '\'o_check_for_versions\', \''.$o_check_for_versions.'\'';		}		// Insert new config option o_announcement_heading		if (!array_key_exists('o_announcement_heading', $forum_config))			$new_config[] = '\'o_announcement_heading\', \'\'';		// Insert new config option o_default_dst		if (!array_key_exists('o_default_dst', $forum_config))			$new_config[] = '\'o_default_dst\', \'0\'';		// Insert new config option o_show_moderators		if (!array_key_exists('o_show_moderators', $forum_config))			$new_config[] = '\'o_show_moderators\', \'0\'';		if (!empty($new_config))		{			$query = array(				'INSERT'	=> 'conf_name, conf_value',				'INTO'		=> 'config',				'VALUES'	=> $new_config			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		unset($new_config);		// Server timezone is now simply the default timezone		if (!array_key_exists('o_default_timezone', $forum_config))		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_name = \'o_default_timezone\'',				'WHERE'		=> 'conf_name = \'o_server_timezone\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Increase visit timeout to 30 minutes (only if it hasn't been changed from the default)		if ($forum_config['o_timeout_visit'] == '600')		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'1800\'',				'WHERE'		=> 'conf_name = \'o_timeout_visit\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove obsolete g_post_polls permission from groups table		$forum_db->drop_field('groups', 'g_post_polls');		// Make room for multiple moderator groups		if (!$forum_db->field_exists('groups', 'g_moderator'))		{			// Add g_moderator column to groups table			$forum_db->add_field('groups', 'g_moderator', 'TINYINT(1)', false, 0, 'g_user_title');			// Give the moderator group moderator privileges			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_moderator = 1',				'WHERE'		=> 'g_id = 2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Shuffle the group IDs around a bit			$query = array(				'SELECT'	=> 'MAX(g_id) + 1',				'FROM'		=> 'groups'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$temp_id = $forum_db->result($result);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id='.$temp_id,				'WHERE'		=> 'g_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=2',				'WHERE'		=> 'g_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=3',				'WHERE'		=> 'g_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=4',				'WHERE'		=> 'g_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Update the default usergroup if it uses the old ID for the members group			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'3\'',				'WHERE'		=> 'conf_name = \'o_default_user_group\' and conf_value = \'4\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_edit_users config setting with new per-group permission		if (array_key_exists('p_mod_edit_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_edit_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_edit_users', 'TINYINT(1)', false, 0, 'g_moderator');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_edit_users = '.$forum_config['p_mod_edit_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_rename_users config setting with new per-group permission		if (array_key_exists('p_mod_rename_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_rename_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_rename_users', 'TINYINT(1)', false, 0, 'g_mod_edit_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_rename_users = '.$forum_config['p_mod_rename_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_change_passwords config setting with new per-group permission		if (array_key_exists('p_mod_change_passwords', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_change_passwords\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_change_passwords', 'TINYINT(1)', false, 0, 'g_mod_rename_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_change_passwords = '.$forum_config['p_mod_change_passwords'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_ban_users config setting with new per-group permission		if (array_key_exists('p_mod_ban_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_ban_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_ban_users', 'TINYINT(1)', false, 0, 'g_mod_change_passwords');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_ban_users = '.$forum_config['p_mod_ban_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// We need to add a unique index to avoid users having multiple rows in the online table		if (!$forum_db->index_exists('online', 'user_id_ident_idx'))		{			$query = array(				'DELETE'	=> 'online'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			switch ($db_type)			{				case 'mysql':				case 'mysql_innodb':				case 'mysqli':				case 'mysqli_innodb':					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident(25)'), true);					break;				default:					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident'), true);					break;			}		}		// Remove the redundant user_id_idx on the online table		$forum_db->drop_index('online', 'user_id_idx');		// Add an index to ident on the online table		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$forum_db->add_index('online', 'ident_idx', array('ident(25)'));				break;			default:				$forum_db->add_index('online', 'ident_idx', array('ident'));				break;		}		// Add an index to logged on the online table		$forum_db->add_index('online', 'logged_idx', array('logged'));		// Add an index on last_post in the topics table		$forum_db->add_index('topics', 'last_post_idx', array('last_post'));		// Remove any remnants of the now defunct post approval system		$forum_db->drop_field('forums', 'approval');		$forum_db->drop_field('groups', 'g_posts_approved');		$forum_db->drop_field('posts', 'approved');		// Add g_view_users field to groups table		$forum_db->add_field('groups', 'g_view_users', 'TINYINT(1)', false, 1, 'g_read_board');		// Add the time/date format settings to the user table		$forum_db->add_field('users', 'time_format', 'INT(10)', false, 0, 'dst');		$forum_db->add_field('users', 'date_format', 'INT(10)', false, 0, 'dst');		// Add the last_search column to the users table		$forum_db->add_field('users', 'last_search', 'INT(10)', true, null, 'last_post');		// Add the last_email_sent column to the users table and the g_send_email and		// g_email_flood columns to the groups table		$forum_db->add_field('users', 'last_email_sent', 'INT(10)', true, null, 'last_search');		$forum_db->add_field('groups', 'g_send_email', 'TINYINT(1)', false, 1, 'g_search_users');		$forum_db->add_field('groups', 'g_email_flood', 'INT(10)', false, 60, 'g_search_flood');		// Set non-default g_send_email and g_flood_email values properly		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_send_email = 0',			'WHERE'		=> 'g_id = 2'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_email_flood = 0',			'WHERE'		=> 'g_id IN (1,2,4)'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the auto notify/subscription option to the users table		$forum_db->add_field('users', 'auto_notify', 'TINYINT(1)', false, 0, 'notify_with_post');		// Add the first_post_id column to the topics table		if (!$forum_db->field_exists('topics', 'first_post_id'))		{			$forum_db->add_field('topics', 'first_post_id', 'INT(10) UNSIGNED', false, 0, 'posted');			$forum_db->add_index('topics', 'first_post_id_idx', array('first_post_id'));			// Now that we've added the column and indexed it, we need to give it correct data			$query = array(				'SELECT'	=> 'MIN(id) AS first_post, topic_id',				'FROM'		=> 'posts',				'GROUP BY'	=> 'topic_id'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_post = $forum_db->fetch_assoc($result))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'first_post_id = '.$cur_post['first_post'],					'WHERE'		=> 'id = '.$cur_post['topic_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Add the index for the post time		if (!$forum_db->index_exists('posts', 'posted_idx'))			$forum_db->add_index('posts', 'posted_idx', array('posted'));		// Move any users with the old unverified status to their new group		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id=0',			'WHERE'		=> 'group_id=32000'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the ban_creator column to the bans table		$forum_db->add_field('bans', 'ban_creator', 'INT(10) UNSIGNED', false, 0);		// Remove any hotfix extensions this update supersedes		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'extensions',			'WHERE'		=> 'id LIKE \'hotfix_%\' AND version != \''.UPDATE_TO.'\''		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_ext = $forum_db->fetch_assoc($result))		{			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'DELETE'	=> 'extensions',				'WHERE'		=> 'id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Should we do charset conversion or not?		if (strpos($cur_version, '1.3') === 0)			$query_str = '?stage=finish';		elseif (strpos($cur_version, '1.2') === 0 && isset($_GET['convert_charset']))			$query_str = '?stage=conv_misc&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_tables';		break;	// Convert config, categories, forums, groups, ranks and censor words	case 'conv_misc':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Convert config		echo 'Converting configuration'."<br />\n";		foreach ($forum_config as $conf_name => $conf_value)		{			if (convert_to_utf8($conf_value, $old_charset))			{				$query = array(					'UPDATE'	=> 'config',					'SET'		=> 'conf_value = \''.$forum_db->escape($conf_value).'\'',					'WHERE'		=> 'conf_name = \''.$conf_name.'\''				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert categories		echo 'Converting categories'."<br />\n";		$query = array(			'SELECT'	=> 'id, cat_name',			'FROM'		=> 'categories',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['cat_name'], $old_charset))			{				$query = array(					'UPDATE'	=> 'categories',					'SET'		=> 'cat_name = \''.$forum_db->escape($cur_item['cat_name']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert forums		echo 'Converting forums'."<br />\n";		$query = array(			'SELECT'	=> 'id, forum_name, forum_desc, moderators',			'FROM'		=> 'forums',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			$moderators = ($cur_item['moderators'] != '') ? unserialize($cur_item['moderators']) : array();			$moderators_utf8 = array();			foreach ($moderators as $mod_username => $mod_user_id)			{				convert_to_utf8($mod_username, $old_charset);				$moderators_utf8[$mod_username] = $mod_user_id;			}			if (convert_to_utf8($cur_item['forum_name'], $old_charset) | convert_to_utf8($cur_item['forum_desc'], $old_charset) || $moderators !== $moderators_utf8)			{				$cur_item['forum_desc'] = $cur_item['forum_desc'] != '' ? '\''.$forum_db->escape($cur_item['forum_desc']).'\'' : 'NULL';				$cur_item['moderators'] = !empty($moderators_utf8) ? '\''.$forum_db->escape(serialize($moderators_utf8)).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'forum_name = \''.$forum_db->escape($cur_item['forum_name']).'\', forum_desc = '.$cur_item['forum_desc'].', moderators = '.$cur_item['moderators'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert groups		echo 'Converting groups'."<br />\n";		$query = array(			'SELECT'	=> 'g_id, g_title, g_user_title',			'FROM'		=> 'groups',			'ORDER BY'	=> 'g_id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['g_title'], $old_charset) | convert_to_utf8($cur_item['g_user_title'], $old_charset))			{				$cur_item['g_user_title'] = $cur_item['g_user_title'] != '' ? '\''.$forum_db->escape($cur_item['g_user_title']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'groups',					'SET'		=> 'g_title = \''.$forum_db->escape($cur_item['g_title']).'\', g_user_title = '.$cur_item['g_user_title'].'',					'WHERE'		=> 'g_id = '.$cur_item['g_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert ranks		echo 'Converting ranks'."<br />\n";		$query = array(			'SELECT'	=> 'id, rank',			'FROM'		=> 'ranks',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['rank'], $old_charset))			{				$query = array(					'UPDATE'	=> 'ranks',					'SET'		=> 'rank = \''.$forum_db->escape($cur_item['rank']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert censor words		echo 'Converting censor words'."<br />\n";		$query = array(			'SELECT'	=> 'id, search_for, replace_with',			'FROM'		=> 'censoring',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['search_for'], $old_charset) | convert_to_utf8($cur_item['replace_with'], $old_charset))			{				$query = array(					'UPDATE'	=> 'censoring',					'SET'		=> 'search_for = \''.$forum_db->escape($cur_item['search_for']).'\', replace_with = \''.$forum_db->escape($cur_item['replace_with']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		break;	// Convert reports	case 'conv_reports':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first report ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'reports',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch reports to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting report '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['message'], $old_charset))			{				$query = array(					'UPDATE'	=> 'reports',					'SET'		=> 'message = \''.$forum_db->escape($cur_item['message']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert search words	case 'conv_search_words':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first search word ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'search_words',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch words to process this cycle		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting search word '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['word'], $old_charset))			{				$query = array(					'UPDATE'	=> 'search_words',					'SET'		=> 'word = \''.$forum_db->escape($cur_item['word']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert users	case 'conv_users':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)			$start_at = 2;		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, username, title, realname, location, signature, admin_note',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting user '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['username'], $old_charset) | convert_to_utf8($cur_item['title'], $old_charset) | convert_to_utf8($cur_item['realname'], $old_charset) | convert_to_utf8($cur_item['location'], $old_charset) | convert_to_utf8($cur_item['signature'], $old_charset) | convert_to_utf8($cur_item['admin_note'], $old_charset))			{				$cur_item['title'] = $cur_item['title'] != '' ? '\''.$forum_db->escape($cur_item['title']).'\'' : 'NULL';				$cur_item['realname'] = $cur_item['realname'] != '' ? '\''.$forum_db->escape($cur_item['realname']).'\'' : 'NULL';				$cur_item['location'] = $cur_item['location'] != '' ? '\''.$forum_db->escape($cur_item['location']).'\'' : 'NULL';				$cur_item['signature'] = $cur_item['signature'] != '' ? '\''.$forum_db->escape($cur_item['signature']).'\'' : 'NULL';				$cur_item['admin_note'] = $cur_item['admin_note'] != '' ? '\''.$forum_db->escape($cur_item['admin_note']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'username = \''.$forum_db->escape($cur_item['username']).'\', title = '.$cur_item['title'].', realname = '.$cur_item['realname'].', location = '.$cur_item['location'].', signature = '.$cur_item['signature'].', admin_note = '.$cur_item['admin_note'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert topics	case 'conv_topics':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first topic ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'topics',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch topics to process this cycle		$query = array(			'SELECT'	=> 'id, poster, subject, last_poster',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting topic '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['subject'], $old_charset) | convert_to_utf8($cur_item['last_poster'], $old_charset))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', subject = \''.$forum_db->escape($cur_item['subject']).'\', last_poster = \''.$forum_db->escape($cur_item['last_poster']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert posts	case 'conv_posts':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, poster, message, edited_by',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting post '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['message'], $old_charset) | convert_to_utf8($cur_item['edited_by'], $old_charset))			{				$cur_item['edited_by'] = $cur_item['edited_by'] != '' ? '\''.$forum_db->escape($cur_item['edited_by']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'posts',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', message = \''.$forum_db->escape($cur_item['message']).'\', edited_by = '.$cur_item['edited_by'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_tables';		else			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert table columns to utf8 (MySQL only)	case 'conv_tables':		// Do the cumbersome charset conversion of MySQL tables/columns		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			echo 'Converting table '.$forum_db->prefix.'bans<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'bans');			echo 'Converting table '.$forum_db->prefix.'categories<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'categories');			echo 'Converting table '.$forum_db->prefix.'censoring<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'censoring');			echo 'Converting table '.$forum_db->prefix.'config<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'config');			echo 'Converting table '.$forum_db->prefix.'extension_hooks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extension_hooks');			echo 'Converting table '.$forum_db->prefix.'extensions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extensions');			echo 'Converting table '.$forum_db->prefix.'forum_perms<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forum_perms');			echo 'Converting table '.$forum_db->prefix.'forums<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forums');			echo 'Converting table '.$forum_db->prefix.'groups<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'groups');			echo 'Converting table '.$forum_db->prefix.'online<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'online');			echo 'Converting table '.$forum_db->prefix.'posts<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'posts');			echo 'Converting table '.$forum_db->prefix.'ranks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'ranks');			echo 'Converting table '.$forum_db->prefix.'reports<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'reports');			echo 'Converting table '.$forum_db->prefix.'search_cache<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_cache');			echo 'Converting table '.$forum_db->prefix.'search_matches<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_matches');			echo 'Converting table '.$forum_db->prefix.'search_words<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_words');			echo 'Converting table '.$forum_db->prefix.'subscriptions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'subscriptions');			echo 'Converting table '.$forum_db->prefix.'topics<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'topics');			echo 'Converting table '.$forum_db->prefix.'users<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'users');		}		$query_str = '?stage=preparse_posts';		break;	case 'preparse_posts':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing post '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'message = \''.$forum_db->escape(preparse_bbcode($cur_item['message'], $preparse_errors)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=preparse_sigs';		else			$query_str = '?stage=preparse_posts&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	case 'preparse_sigs':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			$start_at = 1;		}		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, signature',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing signature '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'signature = \''.$forum_db->escape(preparse_bbcode($cur_item['signature'], $preparse_errors, true)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=finish';		else			$query_str = '?stage=preparse_sigs&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Show results page	case 'finish':		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// We update the version number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO.'\'',			'WHERE'		=> 'conf_name = \'o_cur_version\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// And the database revision number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO_DB_REVISION.'\'',			'WHERE'		=> 'conf_name = \'o_database_revision\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// This feels like a good time to synchronize the forums		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'forums'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			sync_forum($row[0]);		// We'll empty the search cache table as well (using DELETE FROM since SQLite does not support TRUNCATE TABLE)		$query = array(			'DELETE'	=> 'search_cache'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the online table too (we did not convert strings there)		$query = array(			'DELETE'	=> 'online'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Drop Base URL row from database config		if (array_key_exists('o_base_url', $forum_config))		{			// Generate new config file			$new_config = "<?php\n\n\$db_type = '$db_type';\n\$db_host = '$db_host';\n\$db_name = '".addslashes($db_name)."';\n\$db_username = '".addslashes($db_username)."';\n\$db_password = '".addslashes($db_password)."';\n\$db_prefix = '".addslashes($db_prefix)."';\n\$p_connect = ".($p_connect ? 'true' : 'false').";\n\n\$base_url = '$base_url';\n\n\$cookie_name = '$cookie_name';\n\$cookie_domain = '$cookie_domain';\n\$cookie_path = '$cookie_path';\n\$cookie_secure = $cookie_secure;\n\ndefine('FORUM', 1);";			// Attempt to write config.php and display it if writing fails			$written = false;			if (is_writable(FORUM_ROOT))			{				// We rename the old config.php file just in case				if (rename(FORUM_ROOT.'config.php', FORUM_ROOT.'config.old.'.time().'.php'))				{					$fh = @fopen(FORUM_ROOT.'config.php', 'wb');					if ($fh)					{						fwrite($fh, $new_config);						fclose($fh);						$written = true;					}				}			}			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'o_base_url\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update completed!</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<p>Your forum database was updated successfully.</p><?php if (isset($new_config) && !$written): ?>			<p>In order to complete the process, you must now update your config.php script. <strong>Copy and paste the text in the text box below into the file called config.php in the root directory of your PunBB installation</strong>. The file already exists, so you must edit/overwrite the contents of the old file. You may then <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> once config.php has been updated.</p><?php else: ?>			<p>You may <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> now.</p><?php endif; ?>		</div><?php if (isset($new_config) && !$written): ?>		<form class="frm-form" action="foo">			<fieldset class="frm-group group1">				<legend class="group-legend"><span>New config.php contents</span></legend>				<div class="txt-set set1">					<div class="txt-box textarea">						<label for="fld1"><span>Copy contents:</span></label>						<div class="txt-input"><span class="frm-input"><textarea id="fld1" readonly="readonly" cols="80" rows="20"><?php echo forum_htmlencode($new_config) ?></textarea></span></div>					</div>				</div>			</fieldset>		</form><?php endif; ?>	</div></div></div></div></body></html><?php		break;}$forum_db->end_transaction();$forum_db->close();if ($query_str != '')	exit('<script type="text/javascript">window.location="db_update.php'.$query_str.'"</script><br />JavaScript seems to be disabled. <a href="db_update.php'.$query_str.'">Click here to continue</a>.');
<?php/** * Adds a new post to the specified topic or a new topic to the specified forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_SKIP_CSRF_CONFIRM', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('po_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$tid = isset($_GET['tid']) ? intval($_GET['tid']) : 0;$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($tid < 1 && $fid < 1 || $tid > 0 && $fid > 0)	message($lang_common['Bad request']);// Fetch some info about the topic and/or the forumif ($tid){	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, s.user_id AS is_subscribed',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'f.id=t.forum_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			),			array(				'LEFT JOIN'		=> 'subscriptions AS s',				'ON'			=> '(t.id=s.topic_id AND s.user_id='.$forum_user['id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$tid	);	($hook = get_hook('po_qr_get_topic_forum_info')) ? eval($hook) : null;}else{	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics',		'FROM'		=> 'forums AS f',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid	);	($hook = get_hook('po_qr_get_forum_info')) ? eval($hook) : null;}$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_posting = $forum_db->fetch_assoc($result);if (!$cur_posting)	message($lang_common['Bad request']);$is_subscribed = $tid && $cur_posting['is_subscribed'];// Is someone trying to post into a redirect forum?if ($cur_posting['redirect_url'] != '')	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_posting['moderators'] != '') ? unserialize($cur_posting['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('po_pre_permission_check')) ? eval($hook) : null;// Do we have permission to post?if ((($tid && (($cur_posting['post_replies'] == '' && $forum_user['g_post_replies'] == '0') || $cur_posting['post_replies'] == '0')) ||	($fid && (($cur_posting['post_topics'] == '' && $forum_user['g_post_topics'] == '0') || $cur_posting['post_topics'] == '0')) ||	(isset($cur_posting['closed']) && $cur_posting['closed'] == '1')) &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);($hook = get_hook('po_posting_location_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();// Did someone just hit "Submit" or "Preview"?if (isset($_POST['form_sent'])){	($hook = get_hook('po_form_submitted')) ? eval($hook) : null;	// Make sure form_user is correct	if (($forum_user['is_guest'] && $_POST['form_user'] != 'Guest') || (!$forum_user['is_guest'] && $_POST['form_user'] != $forum_user['username']))		message($lang_common['Bad request']);	// Flood protection	if (!isset($_POST['preview']) && $forum_user['last_post'] != '' && (time() - $forum_user['last_post']) < $forum_user['g_post_flood'] && (time() - $forum_user['last_post']) >= 0)		$errors[] = sprintf($lang_post['Flood'], $forum_user['g_post_flood']);	// If it's a new topic	if ($fid)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// If the user is logged in we get the username and e-mail from $forum_user	if (!$forum_user['is_guest'])	{		$username = $forum_user['username'];		$email = $forum_user['email'];	}	// Otherwise it should be in $_POST	else	{		$username = forum_trim($_POST['req_username']);		$email = strtolower(forum_trim(($forum_config['p_force_guest_email'] == '1') ? $_POST['req_email'] : $_POST['email']));		// Load the profile.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';		// It's a guest, so we have to validate the username		$errors = array_merge($errors, validate_username($username));		if ($forum_config['p_force_guest_email'] == '1' || $email != '')		{			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			if (!is_valid_email($email))				$errors[] = $lang_post['Invalid e-mail'];			if (is_banned_email($email))				$errors[] = $lang_profile['Banned e-mail'];		}	}	// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid	if ($forum_user['is_admmod'] && (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url())))		$errors[] = $lang_post['CSRF token mismatch'];	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	$subscribe = isset($_POST['subscribe']) ? 1 : 0;	$now = time();	($hook = get_hook('po_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		// If it's a reply		if ($tid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $cur_posting['subject'],				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscr_action'	=> ($forum_config['o_subscriptions'] == '1' && $subscribe && !$is_subscribed) ? 1 : (($forum_config['o_subscriptions'] == '1' && !$subscribe && $is_subscribed) ? 2 : 0),				'topic_id'		=> $tid,				'forum_id'		=> $cur_posting['id'],				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_post')) ? eval($hook) : null;			add_post($post_info, $new_pid);		}		// If it's a new topic		else if ($fid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $subject,				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscribe'		=> ($forum_config['o_subscriptions'] == '1' && (isset($_POST['subscribe']) && $_POST['subscribe'] == '1')),				'forum_id'		=> $fid,				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_topic')) ? eval($hook) : null;			add_topic($post_info, $new_tid, $new_pid);		}		($hook = get_hook('po_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $new_pid), $lang_post['Post redirect']);	}}// Are we quoting someone?if ($tid && isset($_GET['qid'])){	$qid = intval($_GET['qid']);	if ($qid < 1)		message($lang_common['Bad request']);	// Get the quote and quote poster	$query = array(		'SELECT'	=> 'p.poster, p.message',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'id='.$qid.' AND topic_id='.$tid	);	($hook = get_hook('po_qr_get_quote')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$quote_poster_and_message = $forum_db->fetch_row($result);	if (!$quote_poster_and_message)	{		message($lang_common['Bad request']);	}	list($q_poster, $q_message) = $quote_poster_and_message;	($hook = get_hook('po_modify_quote_info')) ? eval($hook) : null;	if ($forum_config['p_message_bbcode'] == '1')	{		// If username contains a square bracket, we add "" or '' around it (so we know when it starts and ends)		if (strpos($q_poster, '[') !== false || strpos($q_poster, ']') !== false)		{			if (strpos($q_poster, '\'') !== false)				$q_poster = '"'.$q_poster.'"';			else				$q_poster = '\''.$q_poster.'\'';		}		else		{			// Get the characters at the start and end of $q_poster			$ends = utf8_substr($q_poster, 0, 1).utf8_substr($q_poster, -1, 1);			// Deal with quoting "Username" or 'Username' (becomes '"Username"' or "'Username'")			if ($ends == '\'\'')				$q_poster = '"'.$q_poster.'"';			else if ($ends == '""')				$q_poster = '\''.$q_poster.'\'';		}		$forum_page['quote'] = '[quote='.$q_poster.']'.$q_message.'[/quote]'."\n";	}	else		$forum_page['quote'] = '> '.$q_poster.' '.$lang_common['wrote'].':'."\n\n".'> '.$q_message."\n";}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = ($tid ? forum_link($forum_url['new_reply'], $tid) : forum_link($forum_url['new_topic'], $fid));$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'form_user'		=> '<input type="hidden" name="form_user" value="'.((!$forum_user['is_guest']) ? forum_htmlencode($forum_user['username']) : 'Guest').'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['text_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));$forum_page['crumbs'][] = array($cur_posting['forum_name'], forum_link($forum_url['forum'], array($cur_posting['id'], sef_friendly($cur_posting['forum_name']))));if ($tid)	$forum_page['crumbs'][] = array($cur_posting['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_posting['subject']))));$forum_page['crumbs'][] = $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'];($hook = get_hook('po_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'post');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('po_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($errors)){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['preview_message'] = parse_message(forum_trim($message), $hide_smilies);	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($tid) ? $lang_post['Reply byline'] : $lang_post['Topic byline']), '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	($hook = get_hook('po_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Preview reply'] : $lang_post['Preview new topic']; ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('po_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($tid) ? $lang_post['Compose your reply'] : $lang_post['Compose your topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('po_pre_post_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_post['Post errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?phpif ($forum_user['is_guest']){	$forum_page['email_form_name'] = ($forum_config['p_force_guest_email'] == '1') ? 'req_email' : 'email';	($hook = get_hook('po_pre_guest_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Guest post legend'] ?></strong></legend><?php ($hook = get_hook('po_pre_guest_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php if (isset($_POST['req_username'])) echo forum_htmlencode($username); ?>" size="35" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text<?php if ($forum_config['p_force_guest_email'] == '1') echo ' required' ?>">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest e-mail'] ?><?php if ($forum_config['p_force_guest_email'] == '1') echo ' <em>'.$lang_common['Required'].'</em>' ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="<?php echo $forum_page['email_form_name'] ?>" value="<?php if (isset($_POST[$forum_page['email_form_name']])) echo forum_htmlencode($email); ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('po_guest_info_fieldset_end')) ? eval($hook) : null;	// Reset counters	$forum_page['group_count'] = $forum_page['item_count'] = 0;}($hook = get_hook('po_pre_req_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?phpif ($fid){	($hook = get_hook('po_pre_req_subject')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required longtext">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" value="<?php if (isset($_POST['req_subject'])) echo forum_htmlencode($subject); ?>" size="70" maxlength="70" required /></span>					</div>				</div><?php}($hook = get_hook('po_pre_post_contents')) ? eval($hook) : null;?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo isset($_POST['req_message']) ? forum_htmlencode($message) : (isset($forum_page['quote']) ? forum_htmlencode($forum_page['quote']) : ''); ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1')	$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1"'.(isset($_POST['hide_smilies']) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';// Check/uncheck the checkbox for subscriptions depending on scenarioif (!$forum_user['is_guest'] && $forum_config['o_subscriptions'] == '1'){	$subscr_checked = false;	// If it's a preview	if (isset($_POST['preview']))		$subscr_checked = isset($_POST['subscribe']) ? true : false;	// If auto subscribed	else if ($forum_user['auto_notify'])		$subscr_checked = true;	// If already subscribed to the topic	else if ($is_subscribed)		$subscr_checked = true;	$forum_page['checkboxes']['subscribe'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="subscribe" value="1"'.($subscr_checked ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.($is_subscribed ? $lang_post['Stay subscribed'] : $lang_post['Subscribe']).'</label></div>';}($hook = get_hook('po_pre_optional_fieldset')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('po_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('po_pre_req_info_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('po_req_info_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($tid) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($tid) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php// Check if the topic review is to be displayedif ($tid && $forum_config['o_topic_review'] != '0'){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Get the amount of posts in the topic	$query = array(		'SELECT'	=> 'count(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid	);	($hook = get_hook('po_topic_review_qr_get_post_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['total_post_count'] = $forum_db->result($result, 0);	// Get posts to display in topic review	$query = array(		'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid,		'ORDER BY'	=> 'id DESC',		'LIMIT'		=> $forum_config['o_topic_review']	);	($hook = get_hook('po_topic_review_qr_get_topic_review_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$posts = array();	while ($cur_post = $forum_db->fetch_assoc($result))	{		$posts[] = $cur_post;	}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_post['Topic review'] ?></span></h2>	</div>	<div id="topic-review" class="main-content main-frm"><?php	$forum_page['item_count'] = 0;	$forum_page['item_total'] = count($posts);	foreach ($posts as $cur_post)	{		++$forum_page['item_count'];		$forum_page['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		// Generate the post heading		$forum_page['post_ident'] = array();		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['total_post_count'] - $forum_page['item_count'] + 1).'</span>';		$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf($lang_post['Post byline'], '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_post['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('po_topic_review_row_pre_display')) ? eval($hook) : null;?>		<div class="post<?php echo ($forum_page['item_count'] == 1) ? ' firstpost' : '' ?><?php echo ($forum_page['item_total'] == $forum_page['item_count']) ? ' lastpost' : '' ?>">			<div class="posthead">				<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_topic_review_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['message']."\n" ?><?php ($hook = get_hook('po_topic_review_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div>		</div><?php	}?>	</div><?php}$forum_id = $cur_posting['id'];($hook = get_hook('po_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php$lang_profile = array(// Navigation and sections'Profile redirect'			=>	'Profile updated.','Instructions'				=>	'You will be redirected back to this page','Update profile'			=>	'Update profile',// Administration stuff'User delete redirect'		=>	'User deleted.','Section admin'				=>	'Administration','Delete user'				=>	'Delete user','Delete warning'			=>	'<strong>Warning!</strong> Once deleted a user and/or their posts cannot be restored.','Delete posts info'			=>	'<strong>Warning!</strong> If you choose not to delete this user\'s posts they can only be deleted manually at a later time.','Delete posts'				=>	'Delete posts','Delete posts label'		=>	'Delete any posts and topics %s has made.','Group membership redirect'	=>	'Group membership updated.','Moderate forums redirect'	=>	'Forum moderator rights updated.','Ban redirect'				=>	'Redirecting','Ban user'					=>	'Ban user','Ban user info'				=>	'Ban this user via the administration console.','Delete user info'			=>	'Permanently delete this user and, optionally, all their posts.','User management'			=>	'User management','Group membership'			=>	'Group membership','User group'				=>	'Assign user to group','Moderator assignment'		=>	'Moderator assignment','Cannot delete admin'		=>	'Administrators cannot be deleted. In order to delete this user, you must first move him/her to a different user group.','Update groups'				=>	'Update user group','Update forums'				=>	'Update moderator assignment',// Avatar stuff'Avatar welcome'			=>	'Set an avatar image to enhance your forum identity','Avatar welcome user'		=>	'Set an avatar image to enhance  %s\'s forum identity','Avatar deleted redirect'	=>	'Avatar deleted.','Avatars disabled'			=>	'The administrator has disabled avatar support.','No file'					=>	'You did not select a file for upload.','Too large ini'				=>	'The selected file was too large to upload. The server didn\'t allow the upload.','Partial upload'			=>	'The selected file was only partially uploaded. Please try again.','No tmp directory'			=>	'PHP was unable to save the uploaded file to a temporary location.','Bad type'					=>	'The file you tried to upload is not of an allowed type. Allowed file types are gif, jpeg and png.','Too large'					=>	'The file you tried to upload is larger than the maximum allowed %s bytes.','Move failed'				=>	'The server was unable to save the uploaded file. Please contact the forum administrator at %s.','Too wide or high'			=>	'The file you tried to upload is wider and/or higher than the maximum allowed %sx%s pixels.','Unknown failure'			=>	'An unknown error occurred. Please try again.','Avatar'					=>	'Avatar','Current avatar'			=>	'Current avatar','No avatar info'			=>	'No avatar is currently uploaded.','Avatar info replace'		=>	'Uploading a new avatar will replace your existing avatar.','Avatar info none'			=>	'To display an avatar you first need to upload one.','Avatar info type'			=>	'The allowed image file types are gif, jpeg and png.','Avatar info size'			=>	'The maximum image size allowed is %sx%s pixels and %s bytes (%s KB).','Delete avatar info'		=>	'Delete avatar to stop displaying any avatar.','Upload avatar file'		=>	'Upload avatar file','Avatar upload help'		=>	'Select file then update your profile to install.','No upload warn'			=>	'<strong>IMPORTANT! </strong> You must choose a file to upload before updating your profile.',// About and Identity sections'Users profile'				=>	'%s\'s profile','Section about'				=>	'Introduction','Profile welcome'			=>	'Welcome to your profile','Profile welcome user'		=>	'Welcome to %s\'s profile','Identity welcome'			=>	'Modify your personal and contact details','Identity welcome user'		=>	'Modify %s\'s personal and contact details','View your posts'			=>	'View all your posts','View your topics'			=>	'View all your topics','View user posts'			=>	'View all %s\'s posts','View user topics'			=>	'View all %s\'s topics','View your subscriptions'	=>	'View all your subscriptions','View user subscriptions'	=>	'View all %s\'s subscriptions','Realname'					=>	'Real name','Location'					=>	'Location','From'						=>	'From','Registered'				=>	'Registered','Website'					=>	'Website','Facebook'					=>	'Facebook','Twitter'					=>	'Twitter','LinkedIn'					=>	'LinkedIn','Skype'						=>	'Skype','IP'						=>	'IP','Note'						=>	'Note','Posts'						=>	'Posts','Last post'					=>	'Last post','Last visit'				=> 	'Last visit','Send forum e-mail'			=>	'Send forum email','Contact info'				=>	'Contact information','Jabber'					=>	'Jabber','ICQ'						=>	'ICQ','MSN'						=>	'MSN Messenger','AOL IM'					=>	'AOL IM','Forbidden title'			=>	'The title you entered contains a forbidden word. You must choose a different title.','Bad ICQ'					=>	'You entered an invalid ICQ UIN.','Yahoo'						=>	'Yahoo! Messenger','Posts and topics'			=>	'Posts and topics','Private info'				=>	'Private information','Current signature'			=>	'Current signature','Section identity'			=>	'Identity','Section settings'			=>	'Settings','Section avatar'			=>	'Avatar','Section signature'			=>	'Signature','Signature info'			=>	'Your signature will appear at the foot of your posts. It can contain almost anything such as your favourite quote or star sign. It\'s up to you!','Personal legend'			=>	'Personal details','Title'						=>	'Title','Leave blank'				=>	'Leave blank to use forum default.','Edit count'				=>	'Edit post count','Admin note'				=>	'Admin note','Contact legend'			=>	'Contact details','Contact messengers legend'	=>	'Contact messengers details','Name or Url'				=>	'Enter the url or username',// Settings section'Local settings'			=>	'Local settings','Settings welcome'			=>	'Modify your localization, display and email settings','Settings welcome user'		=>	'Modify %s\'s localization, display and email settings','Timezone info'				=>	'Must be set for correct time display.','Time format'				=>  'Time format','Default'					=>  'default','Date format'				=>  'Date format','Display settings'			=>	'Display settings','Styles'					=>	'Available styles','Image display'				=>	'Image display','Show avatars'				=>	'Show user avatars in posts.','Show images sigs'			=>	'Show images in user signatures.','Show images'				=>	'Show images in posts.','Show sigs'					=>	'Show user signatures in posts.','Show smilies'				=>	'Show smilies as graphic icons.','Signature display'			=>	'Signature display','Pagination settings'		=>	'Pagination settings','Topics per page'			=>	'Topics per page','Posts per page'			=>	'Posts per page','E-mail and sub settings'	=>	'Email and subscription settings','Subscription settings'		=>	'Subscription settings','Notify full'				=>	'Include a plain text copy of posts in subscription emails.','Subscribe by default'		=>	'Subscribe to topics by default when posting.','UTC-12:00'					=>	'(UTC-12:00) International Date Line West','UTC-11:00'					=>	'(UTC-11:00) Niue, Samoa','UTC-10:00'					=>	'(UTC-10:00) Hawaii-Aleutian, Cook Island','UTC-09:30'					=>	'(UTC-09:30) Marquesas Islands','UTC-09:00'					=>	'(UTC-09:00) Alaska, Gambier Island','UTC-08:00'					=>	'(UTC-08:00) Pacific','UTC-07:00'					=>	'(UTC-07:00) Mountain','UTC-06:00'					=>	'(UTC-06:00) Central','UTC-05:00'					=>	'(UTC-05:00) Eastern','UTC-04:00'					=>	'(UTC-04:00) Atlantic','UTC-03:30'					=>	'(UTC-03:30) Newfoundland','UTC-03:00'					=>	'(UTC-03:00) Amazon, Central Greenland','UTC-02:00'					=>	'(UTC-02:00) Mid-Atlantic','UTC-01:00'					=>	'(UTC-01:00) Azores, Cape Verde, Eastern Greenland','UTC'						=>	'(UTC) Western European, Greenwich','UTC+01:00'					=>	'(UTC+01:00) Central European, West African','UTC+02:00'					=>	'(UTC+02:00) Eastern European, Central African','UTC+03:00'					=>	'(UTC+03:00) Moscow, Eastern African','UTC+03:30'					=>	'(UTC+03:30) Iran','UTC+04:00'					=>	'(UTC+04:00) Gulf, Samara','UTC+04:30'					=>	'(UTC+04:30) Afghanistan','UTC+05:00'					=>	'(UTC+05:00) Pakistan, Yekaterinburg','UTC+05:30'					=>	'(UTC+05:30) India, Sri Lanka','UTC+05:45'					=>	'(UTC+05:45) Nepal','UTC+06:00'					=>	'(UTC+06:00) Bangladesh, Bhutan, Novosibirsk','UTC+06:30'					=>	'(UTC+06:30) Cocos Islands, Myanmar','UTC+07:00'					=>	'(UTC+07:00) Indochina, Krasnoyarsk','UTC+08:00'					=>	'(UTC+08:00) Greater China, Australian Western, Irkutsk','UTC+08:45'					=>	'(UTC+08:45) Southeastern Western Australia','UTC+09:00'					=>	'(UTC+09:00) Japan, Korea, Chita','UTC+09:30'					=>	'(UTC+09:30) Australian Central','UTC+10:00'					=>	'(UTC+10:00) Australian Eastern, Vladivostok','UTC+10:30'					=>	'(UTC+10:30) Lord Howe','UTC+11:00'					=>	'(UTC+11:00) Solomon Island, Magadan','UTC+11:30'					=>	'(UTC+11:30) Norfolk Island','UTC+12:00'					=>	'(UTC+12:00) New Zealand, Fiji, Kamchatka','UTC+12:45'					=>	'(UTC+12:45) Chatham Islands','UTC+13:00'					=>	'(UTC+13:00) Tonga, Phoenix Islands','UTC+14:00'					=>	'(UTC+14:00) Line Islands',// Change Password stuff'Change pass errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your password can be updated:','Pass logout'				=>	'A user is currently logged in. Please logout and try again.','Pass key bad'				=>	'The specified password activation key was incorrect or has expired. Please re-request a new password. If that fails, contact the forum administrator at %s.','Pass updated'				=>	'Password updated. Login with your new password.','Change your password'		=>	'Change your password','Change user password'		=>	'Change %s\'s password','Old password'				=>	'Old password','Old password help'			=>	'You must enter your existing password.','New password'				=>	'New password','Confirm new password'		=>	'Confirm new password','Wrong old password'		=>	'The old password you entered was incorrect.','Pass updated redirect'		=>	'Password updated.',// Change E-mail stuff'Change e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your email address can be updated:','E-mail key bad'			=>	'The specified email activation key was incorrect or has expired. Please re-request change of email address. If that fails, contact the forum administrator at %s.','E-mail updated'			=>	'Your email address has been updated.','E-mail updated redirect'	=>	'Your email address has been updated.','Wrong password'			=>	'The password you entered was incorrect.','Activate e-mail sent'		=>	'An email has been sent to the specified address with instructions on how to activate the new email address. If it doesn\'t arrive you can contact the forum administrator at %s.','Change your e-mail'		=>	'Change your email address','Change user e-mail'		=>	'Change %s\'s email address','New e-mail'				=>	'New email address',// Signatures'Sig welcome'				=>	'Create or modify a signature for display in your posts','Sig welcome user'			=>	'Create or modify a signature for display in %s\'s posts','Signatures disabled'		=>	'The administrator has disabled signatures support.','Sig too long'				=>	'Signatures cannot be longer than %1$s characters. Please reduce your signature by %2$s characters.','Sig too many lines'		=>	'Signatures cannot have more than %s lines.','Signature'					=>	'Signature','Compose signature'			=>	'Compose signature','Sig max size'				=>	'Maximum size %s characters long and %s lines high.',// Registration stuff (some of these also used by profile)'No new regs'				=>	'This forum is not accepting new registrations.','Reg cancel redirect'		=>	'Registration cancelled.','Agreement'					=>	'Agreement','Agreement label'			=>	'I agree to the rules set out above and wish to register.','Agree'						=>	'Agree','Registration flood'		=>	'A new user was registered with the same IP address as you within the last hour. To prevent registration flooding, at least an hour has to pass between registrations from the same IP. Sorry for the inconvenience.','Pass too short'			=>	'Passwords must be at least 4 characters long. Please choose another (longer) password.','Pass not match'			=>	'Passwords do not match.','E-mail not match'			=>	'Email addresses do not match.','Banned e-mail'				=>	'The email address you entered is banned in this forum. Please choose another email address.','Dupe e-mail'				=>	'Someone else is already registered with that email address. Please choose another email address.','Reg e-mail'				=>	'Thank you for registering. An email has been sent to the specified address with instructions on how to activate your new account. If it doesn\'t arrive you can contact the forum administrator at %s.','Reg complete'				=>	'Registration complete. Logging in and redirecting','Register errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before you can register:','E-mail info'				=>	'<strong>Important!</strong> An email will be sent to your new address with an activation link. You must click the link in the email you receive to activate the new address. You must therefore ensure that you enter a valid and current email address.','Reg e-mail info'			=>	'<strong>Important!</strong> An email with an activation link will be sent to the address you provide. You must click the link in the email in order to activate your new account. It must be done in 72 hours after registration, or else your account will be deleted.','Register at'				=>	'Register at %s','Register intro'			=>	'Registration enables you to use features not available when browsing the board as a guest. The fields below only make up a small part of all the settings you can alter in your profile. If you have any questions regarding this forum you should ask an administrator. Please complete the form below in order to register.','Username'					=>	'Username','Username help'				=>	'Between 2 and 25 characters.','Password'					=>	'Password','Password help'				=>	'Minimum 4 characters. Case sensitive.','Confirm password'			=>	'Confirm password','Confirm password help'		=>	'Re-enter your password exactly as before.','E-mail'					=>	'Email','E-mail help'				=>	'A current valid email address.','Confirm e-mail'			=>	'Confirm email','Confirm e-mail help'		=>	'Re-enter your email address exactly as before.','Optional legend'			=>	'Optional settings','Language'					=>	'Language','Timezone'					=>	'Your timezone','DST label'					=>	'Daylight saving time (advance times by 1 hour).','E-mail settings'			=>	'Email settings','E-mail setting 1'			=>	'Display your email address to other users.','E-mail setting 2'			=>	'Hide your email address but allow email via the forum.','E-mail setting 3'			=>	'Hide your email address and disallow email via the forum.','Reg rules head'			=>	'You must agree to the forum rules set out below in order to register.','Register'					=>	'Register', // Registration button text// Form validation stuff'Profile update errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your profile can be updated:','Username BBCode'			=>	'Usernames may not contain any of the text formatting tags (BBCode) that the forum uses. Please choose another username.','Username IP'				=>	'Usernames may not be in the form of an IP address. Please choose another username.','Username censor'			=>	'The username you entered contains one or more censored words. Please choose a different username.','Username dupe'				=>	'Someone is already registered with the username %s. The username you entered is too similar. The username must differ from that by at least one alphanumerical character (a-z or 0-9). Please choose another username.','Username guest'			=>	'The username guest is reserved. Please choose another username.','Username reserved chars'	=>	'Usernames may not contain all the characters \', " and [ or ] at once. Please choose another username.','Username too long'			=>	'Usernames must not be more than 25 characters long. Please choose another (shorter) username.','Username too short'		=>	'Usernames must be at least 2 characters long. Please choose another (longer) username.','Signature quote/code'		=>	'The quote and code BBCodes are not allowed in signatures.','Invalid e-mail'			=>	'The email address you entered is invalid.','Signature quote/code/list'	=>	'Signature may not contain of the text formatting tags (BBCode) [quote], [code] or [list]. Please choose another tags or delete it.',);
<?php// Language definitions used in various scripts$lang_misc = array('Mark read redirect'		=>	'All topics and forums have been marked as read.','Mark forum read redirect'	=>	'All topics in the specified forum have been marked as read.',// Send e-mail'Form e-mail disabled'		=>	'The user you are trying to send an email to has disabled form email.','Form e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be sent:','No e-mail subject'			=>	'You must enter a subject.','No e-mail message'			=>	'You must enter a message.','Too long e-mail message'	=>	'Your message length is %s bytes. This exceeds the %s bytes limit.','Email flood'				=>	'At least %s seconds have to pass between sent emails. Please wait a while and try sending again.','E-mail sent redirect'		=>	'Email sent.','E-mail subject'			=>	'Subject','E-mail message'			=>	'Message','E-mail disclosure note'	=>	'<strong>Important!</strong> When you send an email using this form your email address will be disclosed to the recipient.','Write e-mail'				=>	'Compose email','Send forum e-mail'			=>	'Send email to %s via the forum',// Report'No reason'					=>	'You must enter a reason.','Report flood'				=>	'At least %s seconds have to pass between reports. Please wait a while and try sending again.','Report redirect'			=>	'Post reported.','Report post'				=>	'Report post','Reason'					=>	'Reason','Reason help'				=>	'Enter a short reason why you are reporting this post.','Too long reason'			=>	'Your report length is %s bytes. This exceeds the %s bytes limit.','Report errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before your report can be sent:',// Subscriptions'Already subscribed'		=>	'You are already subscribed to this topic.','Subscribe redirect'		=>	'Your subscription has been added.','Not subscribed'			=>	'You are not subscribed to this topic.','Unsubscribe redirect'		=>	'Your subscription has been removed.',// General forum and topic moderation'Moderate forum'			=>	'Moderate forum','Select'					=>	'Select',	// the header of a column of checkboxes'Move'						=>	'Move','Merge'						=>	'Merge','Open'						=>  'Open','Close'						=>  'Close','Select all'				=>	'Select all',// Hostname lookup'Hostname lookup'			=>	'The IP address is: %1$s<br />The host name is: %2$s<br /><br />%3$s','Show more users'			=>	'Show more users for this IP',// Moderate forum'Moderate forum head'		=>	'Moderate: %s','Topics'					=>	'Topics','Move topic'				=>	'Move topic','Move topics'				=>	'Move topics','Merge topics'				=>	'Merge topics','Delete topics'				=>	'Delete topics','Delete topic'				=>	'Delete topic','To new forum'				=>	'to a new forum','Move to'					=>	'Destination forum','Nowhere to move'			=>	'There are no forums into which you can move topics.','Leave redirect'			=>	'Leave a redirect topic in the forum from which the topic was moved.','Leave redirects'			=>	'Leave redirect topics in the forum from which topics were moved.','Leave merge redirects'		=>	'Leave redirect topics for those topics which were merged.','Move topic redirect'		=>	'Topic moved.','Move topics redirect'		=>	'Topics moved.','Merge topics redirect'		=>	'Topics merged.','Delete topic comply'		=>	'Are you sure you want to delete the selected topic?','Delete topics comply'		=>	'Are you sure you want to delete all the selected topics?','Delete topic redirect'		=>	'Topic deleted.','Delete topics redirect'	=>	'Topics deleted.','Open topic redirect'		=>	'Topic opened.','Open topics redirect'		=>	'Topics opened.','Close topic redirect'		=>	'Topic closed.','Close topics redirect'		=>	'Topics closed.','No topics selected'		=>	'You must select at least one topic.','Stick topic redirect'		=>	'Topic is now sticky.','Unstick topic redirect'	=>	'Topic no longer sticky.','Merge error'				=>	'You should select more than 1 topic to merge.',// Moderate topic'Posts'						=>	'Posts','Delete posts'				=>	'Delete selected posts','Split posts'				=>	'Split selected posts','Delete whole topic'		=>	'Delete whole topic','Moderate topic head'		=>	'Moderate topic: %s','New subject'				=>	'New topic subject:','Select post'				=>	'Select post', // Label for checkbox'Confirm post delete'		=>	'Confirm deletion of all selected posts','Confirm topic delete'		=>	'Confirm deletion of all selected topics','Confirm topic split'		=>	'Confirm splitting of all selected posts into a new topic','Confirm topic merge'		=>	'Confirm merging of all selected topics into one topic','Confirm post split'		=>	'Confirm splitting of all selected posts','Delete posts redirect'		=>	'Posts deleted.','Split posts redirect'		=>	'Posts split into a new topic.','No posts selected'			=>	'You must select at least one post.');
<?php// Language definitions used in search.php$lang_search = array(// The search form'No search permission'		=>	'You do not have permission to use the search feature.','Search heading'			=>	'Search forums using your criteria','Search flood'				=>	'At least %s seconds have to pass between searches. Please wait a while and try searching again.','Search legend'				=>	'Search criteria','Results legend'			=>	'Search results','Keywords info'				=>	'You may search for a single keyword or for multiple keywords separated by spaces.','Refine info'				=>	'You may use <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> to refine your searches by keyword.','Wildcard info'				=>	'Use the wildcard character <strong>*</strong> for partial keyword or username matches.','Forum default info'		=>	'By default all forums are searched. You may narrow your search by selecting one or more forums to search.','Forum require info'		=>	'You may choose to search one or more forums. You <strong>must</strong> select at least one forum to search.','Keyword search'			=>	'Keyword or words','Author search'				=>	'Author\'s username','Forum search'				=>	'Select forums to search','Forum search default'		=>	'If no forums are selected then all forums will be searched.','Forum search require'		=>	'You must select at least one forum to search.','Sort by'					=>	'Sort results by','Sort order'				=>	'Results sort order','Sort by post time'			=>	'Post time','Sort by author'			=>	'Author','Sort by subject'			=>	'Subject','Sort by forum'				=>	'Forum','Ascending'					=>	'Ascending','Descending'				=>	'Descending','Display results'			=>	'Display results','Show as topics'			=>	'As topics','Show as posts'				=>	'As posts','Submit search'				=>	'Submit','User defined search'		=>	'User defined search','Advanced search'			=>	'Advanced search','Search in'					=>	'Search in','Message and subject'		=>	'Message text and topic subject','Message only'				=>	'Message text only','Topic only'				=>	'Topic subject only',// Results'Search results'			=>	'Search results','Topics with new'			=>	'Topics with new posts','All Topics'				=>	'Show all topics','Recently active topics'	=>	'Recently active topics','Unanswered topics'			=>	'Unanswered topics','Subscriptions'				=>	'Subscriptions','Topics found'				=>	'Topics found','Posts found'				=>	'Posts found','Topics by'					=>	'Topics by %s','Posts by'					=>	'Posts by %s','Topics by user'			=>	'Topics by this user','Posts by user'				=>	'Posts by this user','Perform new search'		=>	'Perform new search','Search options'			=>	'Search options','Posted in'					=>	'Posted in ','No terms'					=>	'You have to enter at least one keyword and/or an author to search for.','No hits'					=>	'Your search returned no hits.','No user posts'				=>	'There are no posts by this user in this forum.','No user topics'			=>	'There are no topics by this user in this forum.','No subscriptions'			=>	'There are no topics which have been subscribed to.','No new posts'				=>	'There are no topics with new posts since your last visit.','No recent posts'			=>	'No posts have been made recently.','No unanswered'				=>	'There are no unanswered posts in this forum.','Go to post'				=>	'Go to post','Go to forum'				=>	'Go to forum','Go to topic'				=>	'Go to topic','Go to profile'				=>	'Go to %s\'s profile');
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
