<?php/** * Database updating script. * * Updates the database to the latest version. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('UPDATE_TO', '1.4b1');define('UPDATE_TO_DB_REVISION', 5);// The number of items to process per pageview (lower this if the update script times out during UTF-8 conversion)define('PER_PAGE', 300);define('MIN_MYSQL_VERSION', '4.1.2');// Make sure we are running at least PHP 5.0.0if (!function_exists('version_compare') || version_compare(PHP_VERSION, '5.0.0', '<'))	exit('You are running PHP version '.PHP_VERSION.'. '.UPDATE_TO.' requires at least PHP 5.0.0 to run properly. You must upgrade your PHP installation before you can continue.');define('FORUM_ROOT', '../');// Attempt to load the configuration file config.phpif (file_exists(FORUM_ROOT.'config.php'))	include FORUM_ROOT.'config.php';if (defined('PUN'))	define('FORUM', 1);// If FORUM isn't defined, config.php is missing or corrupt or we are outside the root directoryif (!defined('FORUM'))	exit('Cannot find config.php, are you sure it exists?');// Enable debug modeif (!defined('FORUM_DEBUG'))	define('FORUM_DEBUG', 1);// Turn on full PHP error reportingerror_reporting(E_ALL);// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Turn off PHP time limit@set_time_limit(0);// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', FORUM_ROOT.'cache/');// Load the functions scriptrequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If the request_uri is invalid try fix itif (!defined('FORUM_IGNORE_REQUEST_URI'))	forum_fix_request_uri();// Instruct DB abstraction layer that we don't want it to "SET NAMES". If we need to, we'll do it ourselves below.define('FORUM_NO_SET_NAMES', 1);// Load DB abstraction layer and try to connectrequire FORUM_ROOT.'include/dblayer/common_db.php';// Check current version$query = array(	'SELECT'	=> 'conf_value',	'FROM'		=> 'config',	'WHERE'		=> 'conf_name = \'o_cur_version\'');$result = $forum_db->query_build($query);$cur_version = $forum_db->result($result);if (version_compare($cur_version, '1.2', '<'))	error('Version mismatch. The database \''.$db_name.'\' doesn\'t seem to be running a PunBB database schema supported by this update script.', __FILE__, __LINE__);// If we've already done charset conversion in a previous update, we have to do SET NAMES$forum_db->set_names(strpos($cur_version, '1.3') === 0 ? 'utf8' : 'latin1');// If MySQL, make sure it's at least 4.1.2if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$mysql_info = $forum_db->get_version();	if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))		error('You are running MySQL version '.$mysql_version.'. PunBB '.UPDATE_TO.' requires at least MySQL '.MIN_MYSQL_VERSION.' to run properly. You must upgrade your MySQL installation before you can continue.');}// Get the forum config$query = array(	'SELECT'	=> '*',	'FROM'		=> 'config');$result = $forum_db->query_build($query);while ($cur_config_item = $forum_db->fetch_row($result))	$forum_config[$cur_config_item[0]] = $cur_config_item[1];// Check the database revision and the current versionif (isset($forum_config['o_database_revision']) && $forum_config['o_database_revision'] >= UPDATE_TO_DB_REVISION && version_compare($forum_config['o_cur_version'], UPDATE_TO, '>='))	error('Your database is already as up-to-date as this script can make it.');// If $base_url isn't set, use o_base_url from configif (!isset($base_url))	$base_url = $forum_config['o_base_url'];// There's no $forum_user, but we need the style element// We default to Oxygen if the default style is invalid (a 1.2 to 1.3 upgrade most likely)if (file_exists(FORUM_ROOT.'style/'.$forum_config['o_default_style'].'/'.$forum_config['o_default_style'].'.php'))	$forum_user['style'] = $forum_config['o_default_style'];else{	$forum_user['style'] = 'Oxygen';	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'Oxygen\'',		'WHERE'		=> 'conf_name = \'o_default_style\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Make sure the default language exists// We default to English if the default language is invalid (a 1.2 to 1.3 upgrade most likely)if (!file_exists(FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/common.php')){	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'English\'',		'WHERE'		=> 'conf_name = \'o_default_lang\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}//// Determines whether $str is UTF-8 encoded or not//function seems_utf8($str){	$str_len = strlen($str);	for ($i = 0; $i < $str_len; ++$i)	{		if (ord($str[$i]) < 0x80) continue; # 0bbbbbbb		else if ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; # 110bbbbb		else if ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; # 1110bbbb		else if ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; # 11110bbb		else if ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; # 111110bb		else if ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; # 1111110b		else return false; # Does not match any model		for ($j = 0; $j < $n; ++$j) # n bytes matching 10bbbbbb follow ?		{			if ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))				return false;		}	}	return true;}//// Translates the number from an HTML numeric entity into an UTF-8 character//function dcr2utf8($src){	$dest = '';	if ($src < 0)		return false;	else if ($src <= 0x007f)		$dest .= chr($src);	else if ($src <= 0x07ff)	{		$dest .= chr(0xc0 | ($src >> 6));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src == 0xFEFF)	{		// nop -- zap the BOM	}	else if ($src >= 0xD800 && $src <= 0xDFFF)	{		// found a surrogate		return false;	}	else if ($src <= 0xffff)	{		$dest .= chr(0xe0 | ($src >> 12));		$dest .= chr(0x80 | (($src >> 6) & 0x003f));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src <= 0x10ffff)	{		$dest .= chr(0xf0 | ($src >> 18));		$dest .= chr(0x80 | (($src >> 12) & 0x3f));		$dest .= chr(0x80 | (($src >> 6) & 0x3f));		$dest .= chr(0x80 | ($src & 0x3f));	}	else	{		// out of range		return false;	}	return $dest;}//// Attemts to convert $str from $old_charset to UTF-8. Also converts HTML entities (including numeric entities) to UTF-8 characters.//function convert_to_utf8(&$str, $old_charset){	if ($str == '')		return false;	$save = $str;	// Replace literal entities (for non-UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '<') && $old_charset == 'ISO-8859-1' || $old_charset == 'ISO-8859-15')		$str = html_entity_decode($str, ENT_QUOTES, $old_charset);	if (!seems_utf8($str))	{		if ($old_charset == 'ISO-8859-1')			$str = utf8_encode($str);		else if (function_exists('iconv'))			$str = iconv($old_charset, 'UTF-8', $str);		else if (function_exists('mb_convert_encoding'))			$str = mb_convert_encoding($str, 'UTF-8', $old_charset);	}	// Replace literal entities (for UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '>='))		$str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');	// Replace numeric entities	$str = preg_replace_callback('/&#([0-9]+);/', 'utf8_callback_1', $str);	$str = preg_replace_callback('/&#x([a-f0-9]+);/i', 'utf8_callback_2', $str);	return ($save != $str);}function utf8_callback_1($matches){	return dcr2utf8($matches[1]);}function utf8_callback_2($matches){	return dcr2utf8(hexdec($matches[1]));}//// Tries to determine whether post data in the database is UTF-8 encoded or not//function db_seems_utf8(){	global $db_type, $forum_db;	$seems_utf8 = true;	$query = array(		'SELECT'	=> 'MIN(id), MAX(id), COUNT(id)',		'FROM'		=> 'posts'	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($min_id, $max_id, $count_id) = $forum_db->fetch_row($result);	if ($count_id == 0)		return false;	// Get a random soup of data and check if it appears to be UTF-8	for ($i = 0; $i < 100; ++$i)	{		$id = ($i == 0) ? $min_id : (($i == 1) ? $max_id : rand($min_id, $max_id));		$query = array(			'SELECT'	=> 'p.message, p.poster, t.subject, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'		=> 't.id = p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'		=> 'f.id = t.forum_id'				)			),			'WHERE'		=> 'p.id >= '.$id,			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$random_row = $forum_db->fetch_row($result);		if (!seems_utf8($random_row[0].$random_row[1].$random_row[2].$random_row[3]))		{			$seems_utf8 = false;			break;		}	}	return $seems_utf8;}//// Safely converts text type columns into utf8 (MySQL only)// Function based on update_convert_table_utf8() from the Drupal project (http://drupal.org/)//function convert_table_utf8($table){	global $forum_db;	$types = array(		'char' 			=> 'binary',		'varchar'		=> 'varbinary',		'tinytext'		=> 'tinyblob',		'mediumtext'	=> 'mediumblob',		'text'			=> 'blob',		'longtext'		=> 'longblob'	);	// Set table default charset to utf8	$forum_db->query('ALTER TABLE `'.$table.'` CHARACTER SET utf8') or error(__FILE__, __LINE__);	// Find out which columns need converting and build SQL statements	$result = $forum_db->query('SHOW FULL COLUMNS FROM `'.$table.'`') or error(__FILE__, __LINE__);	while ($cur_column = $forum_db->fetch_assoc($result))	{		list($type) = explode('(', $cur_column['Type']);		if (isset($types[$type]) && strpos($cur_column['Collation'], 'utf8') === false)		{			$allow_null = ($cur_column['Null'] == 'YES');			$forum_db->alter_field($table, $cur_column['Field'], preg_replace('/'.$type.'/i', $types[$type], $cur_column['Type']), $allow_null, $cur_column['Default']);			$forum_db->alter_field($table, $cur_column['Field'], $cur_column['Type'].' CHARACTER SET utf8', $allow_null, $cur_column['Default']);		}	}}// Move avatars to DBfunction convert_avatars(){	global $forum_config, $forum_db;	$avatar_dir = FORUM_ROOT.'img/avatars/';	if (!is_dir($avatar_dir))	{		return false;	}	if ($handle = opendir($avatar_dir))	{		while (false !== ($avatar = readdir($handle)))		{			$avatar_file =  $avatar_dir.$avatar;			if (!is_file($avatar_file))			{				continue;			}			//echo $avatar_file;			$avatar = basename($avatar_file);			if (preg_match('/^(\d+)\.(png|gif|jpg)/', $avatar, $matches))			{				$user_id = intval($matches[1], 10);				$avatar_ext = $matches[2];				$avatar_type = FORUM_AVATAR_NONE;				if ($avatar_ext == 'png')				{					$avatar_type = FORUM_AVATAR_PNG;				}				else if ($avatar_ext == 'gif')				{					$avatar_type = FORUM_AVATAR_GIF;				}				else if ($avatar_ext == 'jpg')				{					$avatar_type = FORUM_AVATAR_JPG;				}				// Check user and avatar type				if ($user_id < 2 || $avatar_type == FORUM_AVATAR_NONE)				{					continue;				}				// Now check the width/height				list($width, $height, $type,) = @/**/getimagesize($avatar_file);				if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])				{					@/**/unlink($avatar_file);				}				else				{					// Save to DB					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$height.'\', avatar_width=\''.$width.'\'',						'WHERE'		=> 'id='.$user_id					);					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}			}		}		closedir($handle);	}}header('Content-type: text/html; charset=utf-8');// Empty all output buffers and stop bufferingwhile (@ob_end_clean());$stage = isset($_GET['stage']) ? $_GET['stage'] : '';$old_charset = isset($_GET['req_old_charset']) ? str_replace('ISO8859', 'ISO-8859', strtoupper($_GET['req_old_charset'])) : 'ISO-8859-1';$start_at = isset($_GET['start_at']) ? intval($_GET['start_at']) : 0;$query_str = '';switch ($stage){	// Show form	case '':		$db_seems_utf8 = db_seems_utf8();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update: Perform update of database tables</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<ul class="spaced">				<li class="warn"><span><strong>WARNING!</strong> This script will update your PunBB forum database. The update procedure might take anything from a few seconds to a few minutes (or in extreme cases, hours) depending on the speed of the server, the size of the forum database and the number of changes required.</span></li>				<li><span>Do not forget to make a backup of the database before continuing.</span></li>				<li><span>Did you read the update instructions in the documentation? If not, start there.</span></li><?phpif (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force']))){	if (!function_exists('iconv') && !function_exists('mb_convert_encoding'))	{?>				<li class="important"><strong>IMPORTANT!</strong> PunBB has detected that this PHP environment does not have support for the encoding mechanisms required to do UTF-8 conversion from character sets other than ISO-8859-1. What this means is that if the current character set is not ISO-8859-1, PunBB won't be able to convert your forum database to UTF-8 and you will have to do it manually. Instructions for doing manual charset conversion can be found in the update instructions.</span></li><?php	}}$current_url = get_current_url();if (strpos($cur_version, '1.2') === 0 && $db_seems_utf8 && !isset($_GET['force'])){?>				<li class="important"><span><strong>IMPORTANT!</strong> Based on a random selection of 100 posts, topic subjects, usernames and forum names from the database, it appears as if text in the database is currently UTF-8 encoded. This is a good thing. Based on this, the update process will not attempt to do charset conversion. If you have reason to believe that the charset conversion is required nonetheless, you can <a href="<?php echo $current_url.((substr_count($current_url, '?') == 1) ? '&amp;' : '?').'force=1' ?>">force the conversion to run</a>.</span></li><?php}?>			</ul>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo $current_url ?>">			<div class="hidden">				<input type="hidden" name="stage" value="start" />			</div><?php		if (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force'])))		{?>			<div class="ct-box info-box">				<p class="important"><strong>Enable conversion:</strong> When enabled this update script will, after it has made the required structural changes to the database, convert all text in the database from the current character set to UTF-8. This conversion is required if you're upgrading from PunBB 1.2 and you are not currently using an UTF-8 language pack.</p>				<p class="important"><strong>Current character set:</strong> If the primary language in your forum is English, you can leave this at the default value. However, if your forum is non-English, you should enter the character set of the primary language pack used in the forum.</p>			</div>			<div id="req-msg" class="req-warn ct-box error-box">				<p class="important"><strong>Important!</strong> All fields labelled <em>(Required)</em> must be completed before submitting this form.</p>			</div>			<fieldset class="frm-group group1">				<legend class="group-legend"><span>Charset conversion</span></legend>				<div class="sf-set set1">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld1" name="convert_charset" value="1" checked="checked" /></span>						<label for="fld1"><span>Enable conversion:</span> Perform database charset conversion.</label>					</div>				</div>				<div class="sf-set set2">					<div class="sf-box text required">						<label for="fld2"><span>Current character set: <em>(Required)</em></span> <small>Accept default for English forums otherwise the character set of the primary langauge pack.</small></label><br />						<span class="fld-input"><input type="text" id="fld2" name="req_old_charset" size="12" maxlength="20" value="ISO-8859-1" /></span>					</div>				</div>			</fieldset><?php		}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="start" value="Start update" /></span>			</div>		</form>	</div></div></div></div></body></html><?php		break;	// Start by updating the database structure	case 'start':		// Put back dropped search tables		if (!$forum_db->table_exists('search_cache') && in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'ident'			=> array(						'datatype'		=> 'VARCHAR(200)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'search_data'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					)				),				'PRIMARY KEY'	=> array('id'),				'INDEXES'		=> array(					'ident_idx'	=> array('ident(8)')				)			);			$forum_db->create_table('search_cache', $schema);			$schema = array(				'FIELDS'		=> array(					'post_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'word_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'subject_match'	=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					)				),				'INDEXES'		=> array(					'word_id_idx'	=> array('word_id'),					'post_id_idx'	=> array('post_id')				)			);			$forum_db->create_table('search_matches', $schema);			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'SERIAL',						'allow_null'	=> false					),					'word'			=> array(						'datatype'		=> 'VARCHAR(20)',						'allow_null'	=> false,						'default'		=> '\'\'',						'collation'		=> 'bin'					)				),				'PRIMARY KEY'	=> array('word'),				'INDEXES'		=> array(					'id_idx'	=> array('id')				)			);			$forum_db->create_table('search_words', $schema);		}		// Add the extensions table if it doesn't already exist		if (!$forum_db->table_exists('extensions'))		{			$schema = array(				'FIELDS'		=> array(					'id'				=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'title'				=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'version'			=> array(						'datatype'		=> 'VARCHAR(25)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'description'		=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'author'			=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'uninstall'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'uninstall_note'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'disabled'			=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					),					'dependencies'		=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					)				),				'PRIMARY KEY'	=> array('id')			);			$forum_db->create_table('extensions', $schema);		}		// Make sure the collation on "word" in the search_words table is utf8_bin		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW FULL COLUMNS FROM '.$forum_db->prefix.'search_words') or error(__FILE__, __LINE__);			while ($cur_column = $forum_db->fetch_assoc($result))			{				if ($cur_column['Field'] === 'word')				{					if ($cur_column['Collation'] !== 'utf8_bin')						$forum_db->alter_field('search_words', 'word', 'VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin', false, '');					break;				}			}		}		// Add uninstall_note field to extensions		$forum_db->add_field('extensions', 'uninstall_note', 'TEXT', true, null, 'uninstall');		// Drop uninstall_notes (plural) field		$forum_db->drop_field('extensions', 'uninstall_notes');		// Add disabled field to extensions		$forum_db->add_field('extensions', 'disabled', 'TINYINT(1)', false, 0, 'uninstall_note');		// Add dependencies field to extensions		$forum_db->add_field('extensions', 'dependencies', 'VARCHAR(255)', false, '', 'disabled');		// Add the extension_hooks table		if (!$forum_db->table_exists('extension_hooks'))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'extension_id'	=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'code'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'installed'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'priority'		=> array(						'datatype'		=> 'TINYINT(1) UNSIGNED',						'allow_null'	=> false,						'default'		=> '5'					)				),				'PRIMARY KEY'	=> array('id', 'extension_id')			);			$forum_db->create_table('extension_hooks', $schema);		}		// Add priority field to extension_hooks		$forum_db->add_field('extension_hooks', 'priority', 'TINYINT(1)', false, 5, 'installed');		// Extend id field in extension_hooks to 150		$forum_db->alter_field('extension_hooks', 'id', 'VARCHAR(150)', false, '');		// Make all e-mail fields VARCHAR(80)		$forum_db->alter_field('bans', 'email', 'VARCHAR(80)', true);		$forum_db->alter_field('posts', 'poster_email', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'email', 'VARCHAR(80)', false, '');		$forum_db->alter_field('users', 'jabber', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'msn', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'activate_string', 'VARCHAR(80)', true);		// Add avatars field		$forum_db->add_field('users', 'avatar', 'TINYINT(3) UNSIGNED', false, 0);		$forum_db->add_field('users', 'avatar_width', 'TINYINT(3) UNSIGNED', false, 0, 'avatar');		$forum_db->add_field('users', 'avatar_height', 'TINYINT(3) UNSIGNED', false, 0, 'avatar_width');		// Add new profile fileds		$forum_db->add_field('users', 'facebook', 'VARCHAR(100)', true, null, 'url');		$forum_db->add_field('users', 'twitter', 'VARCHAR(100)', true, null, 'facebook');		$forum_db->add_field('users', 'linkedin', 'VARCHAR(100)', true, null, 'twitter');		$forum_db->add_field('users', 'skype', 'VARCHAR(100)', true, null, 'linkedin');		// Add avatars to DB		convert_avatars();		// Remove NOT NULL from TEXT fields for consistency. See http://dev.punbb.org/changeset/596		$forum_db->alter_field('posts', 'message', 'TEXT', true);		$forum_db->alter_field('reports', 'message', 'TEXT', true);		// Drop fulltext indexes  (should only apply to SVN installs)		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$forum_db->drop_index('topics', 'subject_idx');			$forum_db->drop_index('posts', 'message_idx');		}		// Make all IP fields VARCHAR(39) to support IPv6		$forum_db->alter_field('posts', 'poster_ip', 'VARCHAR(39)', true);		$forum_db->alter_field('users', 'registration_ip', 'VARCHAR(39)', false, '0.0.0.0');		// Add the DST option to the users table		$forum_db->add_field('users', 'dst', 'TINYINT(1)', false, 0, 'timezone');		// Add the salt field to the users table		$forum_db->add_field('users', 'salt', 'VARCHAR(12)', true, null, 'password');		// Add the access_keys field to the users table		$forum_db->add_field('users', 'access_keys', 'TINYINT(1)', false, 0, 'show_sig');		// Add the CSRF token field to the online table		$forum_db->add_field('online', 'csrf_token', 'VARCHAR(40)', false, '', null);		// Add the prev_url field to the online table		$forum_db->add_field('online', 'prev_url', 'VARCHAR(255)', true, null, null);		// Add the last_post field to the online table		$forum_db->add_field('online', 'last_post', 'INT(10) UNSIGNED', true, null, null);		// Add the last_search field to the online table		$forum_db->add_field('online', 'last_search', 'INT(10) UNSIGNED', true, null, null);		// Drop use_avatar column from users table		$forum_db->drop_field('users', 'use_avatar');		// Drop save_pass column from users table		$forum_db->drop_field('users', 'save_pass');		// Drop g_edit_subjects_interval column from groups table		$forum_db->drop_field('groups', 'g_edit_subjects_interval');		$new_config = array();		// Add quote depth option		if (!array_key_exists('o_quote_depth', $forum_config))			$new_config[] = '\'o_quote_depth\', \'3\'';		// Add database revision number		if (!array_key_exists('o_database_revision', $forum_config))			$new_config[] = '\'o_database_revision\', \'0\'';		// Add default email setting option		if (!array_key_exists('o_default_email_setting', $forum_config))			$new_config[] = '\'o_default_email_setting\', \'1\'';		// Make sure we have o_additional_navlinks (was added in 1.2.1)		if (!array_key_exists('o_additional_navlinks', $forum_config))			$new_config[] = '\'o_additional_navlinks\', \'\'';		// Insert new config options o_sef		if (!array_key_exists('o_sef', $forum_config))			$new_config[] = '\'o_sef\', \'Default\'';		// Insert new config option o_topic_views		if (!array_key_exists('o_topic_views', $forum_config))			$new_config[] = '\'o_topic_views\', \'1\'';		// Insert new config option o_signatures		if (!array_key_exists('o_signatures', $forum_config))			$new_config[] = '\'o_signatures\', \'1\'';		// Insert new config option o_smtp_ssl		if (!array_key_exists('o_smtp_ssl', $forum_config))			$new_config[] = '\'o_smtp_ssl\', \'0\'';		// Insert new config option o_check_for_updates		if (!array_key_exists('o_check_for_updates', $forum_config))		{			$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;			$new_config[] = '\'o_check_for_updates\', \''.$check_for_updates.'\'';		}		// Insert new config option o_check_for_version		if (!array_key_exists('o_check_for_versions', $forum_config))		{			$o_check_for_versions = array_key_exists('o_check_for_updates', $forum_config) ? $forum_config['o_check_for_updates'] : $check_for_updates;			$new_config[] = '\'o_check_for_versions\', \''.$o_check_for_versions.'\'';		}		// Insert new config option o_announcement_heading		if (!array_key_exists('o_announcement_heading', $forum_config))			$new_config[] = '\'o_announcement_heading\', \'\'';		// Insert new config option o_default_dst		if (!array_key_exists('o_default_dst', $forum_config))			$new_config[] = '\'o_default_dst\', \'0\'';		// Insert new config option o_show_moderators		if (!array_key_exists('o_show_moderators', $forum_config))			$new_config[] = '\'o_show_moderators\', \'0\'';		if (!empty($new_config))		{			$query = array(				'INSERT'	=> 'conf_name, conf_value',				'INTO'		=> 'config',				'VALUES'	=> $new_config			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		unset($new_config);		// Server timezone is now simply the default timezone		if (!array_key_exists('o_default_timezone', $forum_config))		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_name = \'o_default_timezone\'',				'WHERE'		=> 'conf_name = \'o_server_timezone\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Increase visit timeout to 30 minutes (only if it hasn't been changed from the default)		if ($forum_config['o_timeout_visit'] == '600')		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'1800\'',				'WHERE'		=> 'conf_name = \'o_timeout_visit\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove obsolete g_post_polls permission from groups table		$forum_db->drop_field('groups', 'g_post_polls');		// Make room for multiple moderator groups		if (!$forum_db->field_exists('groups', 'g_moderator'))		{			// Add g_moderator column to groups table			$forum_db->add_field('groups', 'g_moderator', 'TINYINT(1)', false, 0, 'g_user_title');			// Give the moderator group moderator privileges			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_moderator = 1',				'WHERE'		=> 'g_id = 2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Shuffle the group IDs around a bit			$query = array(				'SELECT'	=> 'MAX(g_id) + 1',				'FROM'		=> 'groups'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$temp_id = $forum_db->result($result);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id='.$temp_id,				'WHERE'		=> 'g_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=2',				'WHERE'		=> 'g_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=3',				'WHERE'		=> 'g_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=4',				'WHERE'		=> 'g_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Update the default usergroup if it uses the old ID for the members group			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'3\'',				'WHERE'		=> 'conf_name = \'o_default_user_group\' and conf_value = \'4\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_edit_users config setting with new per-group permission		if (array_key_exists('p_mod_edit_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_edit_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_edit_users', 'TINYINT(1)', false, 0, 'g_moderator');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_edit_users = '.$forum_config['p_mod_edit_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_rename_users config setting with new per-group permission		if (array_key_exists('p_mod_rename_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_rename_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_rename_users', 'TINYINT(1)', false, 0, 'g_mod_edit_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_rename_users = '.$forum_config['p_mod_rename_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_change_passwords config setting with new per-group permission		if (array_key_exists('p_mod_change_passwords', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_change_passwords\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_change_passwords', 'TINYINT(1)', false, 0, 'g_mod_rename_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_change_passwords = '.$forum_config['p_mod_change_passwords'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_ban_users config setting with new per-group permission		if (array_key_exists('p_mod_ban_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_ban_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_ban_users', 'TINYINT(1)', false, 0, 'g_mod_change_passwords');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_ban_users = '.$forum_config['p_mod_ban_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// We need to add a unique index to avoid users having multiple rows in the online table		if (!$forum_db->index_exists('online', 'user_id_ident_idx'))		{			$query = array(				'DELETE'	=> 'online'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			switch ($db_type)			{				case 'mysql':				case 'mysql_innodb':				case 'mysqli':				case 'mysqli_innodb':					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident(25)'), true);					break;				default:					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident'), true);					break;			}		}		// Remove the redundant user_id_idx on the online table		$forum_db->drop_index('online', 'user_id_idx');		// Add an index to ident on the online table		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$forum_db->add_index('online', 'ident_idx', array('ident(25)'));				break;			default:				$forum_db->add_index('online', 'ident_idx', array('ident'));				break;		}		// Add an index to logged on the online table		$forum_db->add_index('online', 'logged_idx', array('logged'));		// Add an index on last_post in the topics table		$forum_db->add_index('topics', 'last_post_idx', array('last_post'));		// Remove any remnants of the now defunct post approval system		$forum_db->drop_field('forums', 'approval');		$forum_db->drop_field('groups', 'g_posts_approved');		$forum_db->drop_field('posts', 'approved');		// Add g_view_users field to groups table		$forum_db->add_field('groups', 'g_view_users', 'TINYINT(1)', false, 1, 'g_read_board');		// Add the time/date format settings to the user table		$forum_db->add_field('users', 'time_format', 'INT(10)', false, 0, 'dst');		$forum_db->add_field('users', 'date_format', 'INT(10)', false, 0, 'dst');		// Add the last_search column to the users table		$forum_db->add_field('users', 'last_search', 'INT(10)', true, null, 'last_post');		// Add the last_email_sent column to the users table and the g_send_email and		// g_email_flood columns to the groups table		$forum_db->add_field('users', 'last_email_sent', 'INT(10)', true, null, 'last_search');		$forum_db->add_field('groups', 'g_send_email', 'TINYINT(1)', false, 1, 'g_search_users');		$forum_db->add_field('groups', 'g_email_flood', 'INT(10)', false, 60, 'g_search_flood');		// Set non-default g_send_email and g_flood_email values properly		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_send_email = 0',			'WHERE'		=> 'g_id = 2'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_email_flood = 0',			'WHERE'		=> 'g_id IN (1,2,4)'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the auto notify/subscription option to the users table		$forum_db->add_field('users', 'auto_notify', 'TINYINT(1)', false, 0, 'notify_with_post');		// Add the first_post_id column to the topics table		if (!$forum_db->field_exists('topics', 'first_post_id'))		{			$forum_db->add_field('topics', 'first_post_id', 'INT(10) UNSIGNED', false, 0, 'posted');			$forum_db->add_index('topics', 'first_post_id_idx', array('first_post_id'));			// Now that we've added the column and indexed it, we need to give it correct data			$query = array(				'SELECT'	=> 'MIN(id) AS first_post, topic_id',				'FROM'		=> 'posts',				'GROUP BY'	=> 'topic_id'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_post = $forum_db->fetch_assoc($result))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'first_post_id = '.$cur_post['first_post'],					'WHERE'		=> 'id = '.$cur_post['topic_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Add the index for the post time		if (!$forum_db->index_exists('posts', 'posted_idx'))			$forum_db->add_index('posts', 'posted_idx', array('posted'));		// Move any users with the old unverified status to their new group		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id=0',			'WHERE'		=> 'group_id=32000'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the ban_creator column to the bans table		$forum_db->add_field('bans', 'ban_creator', 'INT(10) UNSIGNED', false, 0);		// Remove any hotfix extensions this update supersedes		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'extensions',			'WHERE'		=> 'id LIKE \'hotfix_%\' AND version != \''.UPDATE_TO.'\''		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_ext = $forum_db->fetch_assoc($result))		{			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'DELETE'	=> 'extensions',				'WHERE'		=> 'id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Should we do charset conversion or not?		if (strpos($cur_version, '1.3') === 0)			$query_str = '?stage=finish';		elseif (strpos($cur_version, '1.2') === 0 && isset($_GET['convert_charset']))			$query_str = '?stage=conv_misc&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_tables';		break;	// Convert config, categories, forums, groups, ranks and censor words	case 'conv_misc':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Convert config		echo 'Converting configuration'."<br />\n";		foreach ($forum_config as $conf_name => $conf_value)		{			if (convert_to_utf8($conf_value, $old_charset))			{				$query = array(					'UPDATE'	=> 'config',					'SET'		=> 'conf_value = \''.$forum_db->escape($conf_value).'\'',					'WHERE'		=> 'conf_name = \''.$conf_name.'\''				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert categories		echo 'Converting categories'."<br />\n";		$query = array(			'SELECT'	=> 'id, cat_name',			'FROM'		=> 'categories',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['cat_name'], $old_charset))			{				$query = array(					'UPDATE'	=> 'categories',					'SET'		=> 'cat_name = \''.$forum_db->escape($cur_item['cat_name']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert forums		echo 'Converting forums'."<br />\n";		$query = array(			'SELECT'	=> 'id, forum_name, forum_desc, moderators',			'FROM'		=> 'forums',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			$moderators = ($cur_item['moderators'] != '') ? unserialize($cur_item['moderators']) : array();			$moderators_utf8 = array();			foreach ($moderators as $mod_username => $mod_user_id)			{				convert_to_utf8($mod_username, $old_charset);				$moderators_utf8[$mod_username] = $mod_user_id;			}			if (convert_to_utf8($cur_item['forum_name'], $old_charset) | convert_to_utf8($cur_item['forum_desc'], $old_charset) || $moderators !== $moderators_utf8)			{				$cur_item['forum_desc'] = $cur_item['forum_desc'] != '' ? '\''.$forum_db->escape($cur_item['forum_desc']).'\'' : 'NULL';				$cur_item['moderators'] = !empty($moderators_utf8) ? '\''.$forum_db->escape(serialize($moderators_utf8)).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'forum_name = \''.$forum_db->escape($cur_item['forum_name']).'\', forum_desc = '.$cur_item['forum_desc'].', moderators = '.$cur_item['moderators'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert groups		echo 'Converting groups'."<br />\n";		$query = array(			'SELECT'	=> 'g_id, g_title, g_user_title',			'FROM'		=> 'groups',			'ORDER BY'	=> 'g_id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['g_title'], $old_charset) | convert_to_utf8($cur_item['g_user_title'], $old_charset))			{				$cur_item['g_user_title'] = $cur_item['g_user_title'] != '' ? '\''.$forum_db->escape($cur_item['g_user_title']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'groups',					'SET'		=> 'g_title = \''.$forum_db->escape($cur_item['g_title']).'\', g_user_title = '.$cur_item['g_user_title'].'',					'WHERE'		=> 'g_id = '.$cur_item['g_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert ranks		echo 'Converting ranks'."<br />\n";		$query = array(			'SELECT'	=> 'id, rank',			'FROM'		=> 'ranks',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['rank'], $old_charset))			{				$query = array(					'UPDATE'	=> 'ranks',					'SET'		=> 'rank = \''.$forum_db->escape($cur_item['rank']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert censor words		echo 'Converting censor words'."<br />\n";		$query = array(			'SELECT'	=> 'id, search_for, replace_with',			'FROM'		=> 'censoring',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['search_for'], $old_charset) | convert_to_utf8($cur_item['replace_with'], $old_charset))			{				$query = array(					'UPDATE'	=> 'censoring',					'SET'		=> 'search_for = \''.$forum_db->escape($cur_item['search_for']).'\', replace_with = \''.$forum_db->escape($cur_item['replace_with']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		break;	// Convert reports	case 'conv_reports':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first report ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'reports',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch reports to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting report '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['message'], $old_charset))			{				$query = array(					'UPDATE'	=> 'reports',					'SET'		=> 'message = \''.$forum_db->escape($cur_item['message']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert search words	case 'conv_search_words':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first search word ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'search_words',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch words to process this cycle		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting search word '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['word'], $old_charset))			{				$query = array(					'UPDATE'	=> 'search_words',					'SET'		=> 'word = \''.$forum_db->escape($cur_item['word']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert users	case 'conv_users':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)			$start_at = 2;		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, username, title, realname, location, signature, admin_note',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting user '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['username'], $old_charset) | convert_to_utf8($cur_item['title'], $old_charset) | convert_to_utf8($cur_item['realname'], $old_charset) | convert_to_utf8($cur_item['location'], $old_charset) | convert_to_utf8($cur_item['signature'], $old_charset) | convert_to_utf8($cur_item['admin_note'], $old_charset))			{				$cur_item['title'] = $cur_item['title'] != '' ? '\''.$forum_db->escape($cur_item['title']).'\'' : 'NULL';				$cur_item['realname'] = $cur_item['realname'] != '' ? '\''.$forum_db->escape($cur_item['realname']).'\'' : 'NULL';				$cur_item['location'] = $cur_item['location'] != '' ? '\''.$forum_db->escape($cur_item['location']).'\'' : 'NULL';				$cur_item['signature'] = $cur_item['signature'] != '' ? '\''.$forum_db->escape($cur_item['signature']).'\'' : 'NULL';				$cur_item['admin_note'] = $cur_item['admin_note'] != '' ? '\''.$forum_db->escape($cur_item['admin_note']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'username = \''.$forum_db->escape($cur_item['username']).'\', title = '.$cur_item['title'].', realname = '.$cur_item['realname'].', location = '.$cur_item['location'].', signature = '.$cur_item['signature'].', admin_note = '.$cur_item['admin_note'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert topics	case 'conv_topics':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first topic ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'topics',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch topics to process this cycle		$query = array(			'SELECT'	=> 'id, poster, subject, last_poster',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting topic '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['subject'], $old_charset) | convert_to_utf8($cur_item['last_poster'], $old_charset))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', subject = \''.$forum_db->escape($cur_item['subject']).'\', last_poster = \''.$forum_db->escape($cur_item['last_poster']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert posts	case 'conv_posts':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, poster, message, edited_by',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting post '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['message'], $old_charset) | convert_to_utf8($cur_item['edited_by'], $old_charset))			{				$cur_item['edited_by'] = $cur_item['edited_by'] != '' ? '\''.$forum_db->escape($cur_item['edited_by']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'posts',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', message = \''.$forum_db->escape($cur_item['message']).'\', edited_by = '.$cur_item['edited_by'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_tables';		else			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert table columns to utf8 (MySQL only)	case 'conv_tables':		// Do the cumbersome charset conversion of MySQL tables/columns		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			echo 'Converting table '.$forum_db->prefix.'bans<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'bans');			echo 'Converting table '.$forum_db->prefix.'categories<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'categories');			echo 'Converting table '.$forum_db->prefix.'censoring<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'censoring');			echo 'Converting table '.$forum_db->prefix.'config<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'config');			echo 'Converting table '.$forum_db->prefix.'extension_hooks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extension_hooks');			echo 'Converting table '.$forum_db->prefix.'extensions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extensions');			echo 'Converting table '.$forum_db->prefix.'forum_perms<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forum_perms');			echo 'Converting table '.$forum_db->prefix.'forums<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forums');			echo 'Converting table '.$forum_db->prefix.'groups<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'groups');			echo 'Converting table '.$forum_db->prefix.'online<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'online');			echo 'Converting table '.$forum_db->prefix.'posts<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'posts');			echo 'Converting table '.$forum_db->prefix.'ranks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'ranks');			echo 'Converting table '.$forum_db->prefix.'reports<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'reports');			echo 'Converting table '.$forum_db->prefix.'search_cache<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_cache');			echo 'Converting table '.$forum_db->prefix.'search_matches<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_matches');			echo 'Converting table '.$forum_db->prefix.'search_words<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_words');			echo 'Converting table '.$forum_db->prefix.'subscriptions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'subscriptions');			echo 'Converting table '.$forum_db->prefix.'topics<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'topics');			echo 'Converting table '.$forum_db->prefix.'users<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'users');		}		$query_str = '?stage=preparse_posts';		break;	case 'preparse_posts':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing post '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'message = \''.$forum_db->escape(preparse_bbcode($cur_item['message'], $preparse_errors)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=preparse_sigs';		else			$query_str = '?stage=preparse_posts&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	case 'preparse_sigs':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			$start_at = 1;		}		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, signature',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing signature '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'signature = \''.$forum_db->escape(preparse_bbcode($cur_item['signature'], $preparse_errors, true)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=finish';		else			$query_str = '?stage=preparse_sigs&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Show results page	case 'finish':		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// We update the version number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO.'\'',			'WHERE'		=> 'conf_name = \'o_cur_version\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// And the database revision number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO_DB_REVISION.'\'',			'WHERE'		=> 'conf_name = \'o_database_revision\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// This feels like a good time to synchronize the forums		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'forums'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			sync_forum($row[0]);		// We'll empty the search cache table as well (using DELETE FROM since SQLite does not support TRUNCATE TABLE)		$query = array(			'DELETE'	=> 'search_cache'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the online table too (we did not convert strings there)		$query = array(			'DELETE'	=> 'online'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Drop Base URL row from database config		if (array_key_exists('o_base_url', $forum_config))		{			// Generate new config file			$new_config = "<?php\n\n\$db_type = '$db_type';\n\$db_host = '$db_host';\n\$db_name = '".addslashes($db_name)."';\n\$db_username = '".addslashes($db_username)."';\n\$db_password = '".addslashes($db_password)."';\n\$db_prefix = '".addslashes($db_prefix)."';\n\$p_connect = ".($p_connect ? 'true' : 'false').";\n\n\$base_url = '$base_url';\n\n\$cookie_name = '$cookie_name';\n\$cookie_domain = '$cookie_domain';\n\$cookie_path = '$cookie_path';\n\$cookie_secure = $cookie_secure;\n\ndefine('FORUM', 1);";			// Attempt to write config.php and display it if writing fails			$written = false;			if (is_writable(FORUM_ROOT))			{				// We rename the old config.php file just in case				if (rename(FORUM_ROOT.'config.php', FORUM_ROOT.'config.old.'.time().'.php'))				{					$fh = @fopen(FORUM_ROOT.'config.php', 'wb');					if ($fh)					{						fwrite($fh, $new_config);						fclose($fh);						$written = true;					}				}			}			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'o_base_url\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update completed!</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<p>Your forum database was updated successfully.</p><?php if (isset($new_config) && !$written): ?>			<p>In order to complete the process, you must now update your config.php script. <strong>Copy and paste the text in the text box below into the file called config.php in the root directory of your PunBB installation</strong>. The file already exists, so you must edit/overwrite the contents of the old file. You may then <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> once config.php has been updated.</p><?php else: ?>			<p>You may <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> now.</p><?php endif; ?>		</div><?php if (isset($new_config) && !$written): ?>		<form class="frm-form" action="foo">			<fieldset class="frm-group group1">				<legend class="group-legend"><span>New config.php contents</span></legend>				<div class="txt-set set1">					<div class="txt-box textarea">						<label for="fld1"><span>Copy contents:</span></label>						<div class="txt-input"><span class="frm-input"><textarea id="fld1" readonly="readonly" cols="80" rows="20"><?php echo forum_htmlencode($new_config) ?></textarea></span></div>					</div>				</div>			</fieldset>		</form><?php endif; ?>	</div></div></div></div></body></html><?php		break;}$forum_db->end_transaction();$forum_db->close();if ($query_str != '')	exit('<script type="text/javascript">window.location="db_update.php'.$query_str.'"</script><br />JavaScript seems to be disabled. <a href="db_update.php'.$query_str.'">Click here to continue</a>.');
<?php/** * Extension and hotfix management page. * * Allows administrators to control the extensions and hotfixes installed in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';if (!defined('FORUM_XML_FUNCTIONS_LOADED'))	require FORUM_ROOT.'include/xml.php';($hook = get_hook('aex_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ext.php';// Make sure we have XML supportif (!function_exists('xml_parser_create'))	message($lang_admin_ext['No XML support']);$section = isset($_GET['section']) ? $_GET['section'] : null;// Install an extensionif (isset($_GET['install']) || isset($_GET['install_hotfix'])){	($hook = get_hook('aex_install_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['install_cancel']))		redirect(forum_link(isset($_GET['install']) ? $forum_url['admin_extensions_manage'] : $forum_url['admin_extensions_hotfixes']), $lang_admin_common['Cancel redirect']);	$id = preg_replace('/[^0-9a-z_]/', '', isset($_GET['install']) ? $_GET['install'] : $_GET['install_hotfix']);	// Load manifest (either locally or from punbb.informer.com updates service)	if (isset($_GET['install']))		$manifest = is_readable(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') ? file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') : false;	else	{		$remote_file = get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16);		if (!empty($remote_file['content']))			$manifest = $remote_file['content'];	}	// Parse manifest.xml into an array and validate it	$ext_data = xml_to_array($manifest);	$errors = validate_manifest($ext_data, $id);	if (!empty($errors))		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_ext['Hotfix download failed']);	// Make sure we have an array of dependencies	if (!isset($ext_data['extension']['dependencies']['dependency']))		$ext_data['extension']['dependencies'] = array();	else if (!is_array(current($ext_data['extension']['dependencies'])))		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);	else		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.disabled=0'	);	($hook = get_hook('aex_install_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$installed_ext = array();	while ($row = $forum_db->fetch_assoc($result))		$installed_ext[] = $row['id'];	foreach ($ext_data['extension']['dependencies'] as $dependency)	{		if (!in_array($dependency, $installed_ext))			message(sprintf($lang_admin_ext['Missing dependency'], $dependency));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Install hotfix'] : $lang_admin_ext['Install extension']	);	if (isset($_POST['install_comply']))	{		($hook = get_hook('aex_install_comply_form_submitted')) ? eval($hook) : null;		// $ext_info contains some information about the extension being installed		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id,			'dependencies'	=> array()		);		foreach ($ext_data['extension']['dependencies'] as $dependency)		{			$ext_info['dependencies'][$dependency] = array(				'id'	=> $dependency,				'path'	=> FORUM_ROOT.'extensions/'.$dependency,				'url'	=> $base_url.'/extensions/'.$dependency,			);		}		// Is there some uninstall code to store in the db?		$uninstall_code = (isset($ext_data['extension']['uninstall']) && forum_trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(forum_trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';		// Is there an uninstall note to store in the db?		$uninstall_note = 'NULL';		foreach ($ext_data['extension']['note'] as $cur_note)		{			if ($cur_note['attributes']['type'] == 'uninstall' && forum_trim($cur_note['content']) != '')				$uninstall_note = '\''.$forum_db->escape(forum_trim($cur_note['content'])).'\'';		}		$notices = array();		// Is this a fresh install or an upgrade?		$query = array(			'SELECT'	=> 'e.version',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_install_comply_qr_get_current_ext_version')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ext_version = $forum_db->result($result);		if (!is_null($ext_version) && $ext_version !== false)		{			// EXT_CUR_VERSION will be available to the extension install routine (to facilitate extension upgrades)			define('EXT_CUR_VERSION', $ext_version);			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Update the existing extension			$query = array(				'UPDATE'	=> 'extensions',				'SET'		=> 'title=\''.$forum_db->escape($ext_data['extension']['title']).'\', version=\''.$forum_db->escape($ext_data['extension']['version']).'\', description=\''.$forum_db->escape($ext_data['extension']['description']).'\', author=\''.$forum_db->escape($ext_data['extension']['author']).'\', uninstall='.$uninstall_code.', uninstall_note='.$uninstall_note.', dependencies=\'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',				'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Delete the old hooks			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext_delete_hooks')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Add the new extension			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',			);			($hook = get_hook('aex_install_comply_qr_add_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Now insert the hooks		if (isset($ext_data['extension']['hooks']['hook']))		{			foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)  			{				$cur_hooks = explode(',', $ext_hook['attributes']['id']);				foreach ($cur_hooks as $cur_hook)				{					$query = array(						'INSERT'	=> 'id, extension_id, code, installed, priority',						'INTO'		=> 'extension_hooks',						'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)					);					($hook = get_hook('aex_install_comply_qr_add_hook')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}  			}  		}		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_install_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			if (strpos($id, 'hotfix_') === 0)				define('FORUM_PAGE', 'admin-extensions-hotfixes');			else				define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_install_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension installed info'] ?></p>			<ul class="data-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_install_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix installed']);			else				$forum_flash->add_info($lang_admin_ext['Extension installed']);			($hook = get_hook('aex_install_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix installed']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension installed']);		}	}	($hook = get_hook('aex_install_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	if (strpos($id, 'hotfix_') === 0)		define('FORUM_PAGE', 'admin-extensions-hotfixes');	else		define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['extension']['title']) ?></span></h3>						<p><?php  echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['extension']['description']) ?></p>					</div>				</div>			</div><?php	// Setup an array of warnings to display in the form	$form_warnings = array();	$forum_page['num_items'] = 0;	foreach ($ext_data['extension']['note'] as $cur_note)	{		if ($cur_note['attributes']['type'] == 'install')			$form_warnings[] = '<li>'.forum_htmlencode($cur_note['content']).'</li>';	}	if (version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext_data['extension']['maxtestedon']), '>'))		$form_warnings[] = '<li>'.$lang_admin_ext['Maxtestedon warning'].'</li>';	if (!empty($form_warnings))	{?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Install note'] ?></strong></p>				<ol class="info-list"><?php		echo implode("\n\t\t\t\t\t", $form_warnings)."\n";?>				</ol>			</div><?php	}?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="install_comply" value="<?php echo ((strpos($id, 'hotfix_') !== 0) ? $lang_admin_ext['Install extension'] : $lang_admin_ext['Install hotfix']) ?>" /></span>				<span class="cancel"><input type="submit" name="install_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aex_install_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Uninstall an extensionelse if (isset($_GET['uninstall'])){	// User pressed the cancel button	if (isset($_POST['uninstall_cancel']))		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('aex_uninstall_selected')) ? eval($hook) : null;	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['uninstall']);	// Fetch info about the extension	$query = array(		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_uninstall_qr_get_extension')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_data = $forum_db->fetch_assoc($result);	if (!$ext_data)	{		message($lang_common['Bad request']);	}	// Check dependancies	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''	);	($hook = get_hook('aex_uninstall_qr_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dependency = $forum_db->fetch_assoc($result);	if (!is_null($dependency) && $dependency !== false)	{		message(sprintf($lang_admin_ext['Uninstall dependency'], $dependency['id']));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Uninstall hotfix'] : $lang_admin_ext['Uninstall extension']	);	// If the user has confirmed the uninstall	if (isset($_POST['uninstall_comply']))	{		($hook = get_hook('aex_uninstall_comply_form_submitted')) ? eval($hook) : null;		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id		);		$notices = array();		// Run uninstall code		eval($ext_data['uninstall']);		// Now delete the extension and its hooks from the db		$query = array(			'DELETE'	=> 'extension_hooks',			'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_uninstall_delete_hooks')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'extensions',			'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_delete_extension')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_uninstall_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_uninstall_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension uninstalled info'] ?></p>			<ul class="info-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_uninstall_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix uninstalled']);			else				$forum_flash->add_info($lang_admin_ext['Extension uninstalled']);			($hook = get_hook('aex_uninstall_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix uninstalled']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension uninstalled']);		}	}	else	// If the user hasn't confirmed the uninstall	{		($hook = get_hook('aex_uninstall_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'extensions');		if (strpos($id, 'hotfix_') === 0)			define('FORUM_PAGE', 'admin-extensions-hotfixes');		else			define('FORUM_PAGE', 'admin-extensions-manage');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('aex_uninstall_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url ?>/admin/extensions.php?section=manage&amp;uninstall=<?php echo $id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['title']) ?></span></h3>						<p><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['description']) ?></p>					</div>				</div>			</div><?php if ($ext_data['uninstall_note'] != ''): ?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Uninstall note'] ?></strong></p>				<p><?php echo forum_htmlencode($ext_data['uninstall_note']) ?></p>			</div><?php endif; ?><?php if (strpos($id, 'hotfix_') !== 0): ?>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_ext['Installed extensions warn'] ?></p>			</div><?php endif; ?>				<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="uninstall_comply" value="<?php echo $lang_admin_ext['Uninstall'] ?>" /></span>				<span class="cancel"><input type="submit" name="uninstall_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('aex_uninstall_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Enable or disable an extensionelse if (isset($_GET['flip'])){	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['flip']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('flip'.$id)))		csrf_confirm_form();	($hook = get_hook('aex_flip_selected')) ? eval($hook) : null;	// Fetch the current status of the extension	$query = array(		'SELECT'	=> 'e.disabled',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_get_disabled_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_status = $forum_db->result($result);	// No rows	if (is_null($ext_status) || $ext_status === false)	{		message($lang_common['Bad request']);	}	// Are we disabling or enabling?	$disable = $ext_status == '0';	// Check dependancies	if ($disable)	{		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''		);		($hook = get_hook('aex_flip_qr_get_disable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependency = $forum_db->fetch_assoc($result);		if (!is_null($dependency) && $dependency !== false)		{			message(sprintf($lang_admin_ext['Disable dependency'], $dependency['id']));		}	}	else	{		$query = array(			'SELECT'	=> 'e.dependencies',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_flip_qr_get_enable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependencies = $forum_db->fetch_assoc($result);		$dependencies = explode('|', substr($dependencies['dependencies'], 1, -1));		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0'		);		($hook = get_hook('aex_flip_qr_check_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$installed_ext = array();		while ($row = $forum_db->fetch_assoc($result))			$installed_ext[] = $row['id'];		foreach ($dependencies as $dependency)		{			if (!empty($dependency) && !in_array($dependency, $installed_ext))				message(sprintf($lang_admin_ext['Disabled dependency'], $dependency));		}	}	$query = array(		'UPDATE'	=> 'extensions',		'SET'		=> 'disabled='.($disable ? '1' : '0'),		'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_update_disabled_status')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the hooks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_hooks_cache();	// Add flash message	if ($section == 'hotfixes')		$forum_flash->add_info(($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		$forum_flash->add_info(($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));	($hook = get_hook('aex_flip_pre_redirect')) ? eval($hook) : null;	if ($section == 'hotfixes')		redirect(forum_link($forum_url['admin_extensions_hotfixes']), ($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		redirect(forum_link($forum_url['admin_extensions_manage']), ($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));}($hook = get_hook('aex_new_action')) ? eval($hook) : null;// Generate an array of installed extensions$inst_exts = array();$query = array(	'SELECT'	=> 'e.*',	'FROM'		=> 'extensions AS e',	'ORDER BY'	=> 'e.title');($hook = get_hook('aex_qr_get_all_extensions')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_ext = $forum_db->fetch_assoc($result))	$inst_exts[$cur_ext['id']] = $cur_ext;// Hotfixes listif ($section == 'hotfixes'){	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage hotfixes'], forum_link($forum_url['admin_extensions_hotfixes']))	);	($hook = get_hook('aex_section_hotfixes_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-hotfixes');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_hotfixes_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Hotfixes available'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	// Loop through any available hotfixes	if (isset($forum_updates['hotfix']))	{		// If there's only one hotfix, add one layer of arrays so we can foreach over it		if (!is_array(current($forum_updates['hotfix'])))			$forum_updates['hotfix'] = array($forum_updates['hotfix']);		foreach ($forum_updates['hotfix'] as $hotfix)		{			if (!array_key_exists($hotfix['attributes']['id'], $inst_exts))			{				$forum_page['ext_item'][] = '<div class="ct-box info-box hotfix available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($hotfix['content']).'</span></h3>'."\n\t\t\t".'<ul>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], 'PunBB').'</span></li>'."\n\t\t\t\t".'<li><span>'.$lang_admin_ext['Hotfix description'].'</span></li>'."\n\t\t\t".'</ul>'."\n\t\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install_hotfix='.urlencode($hotfix['attributes']['id']).'">'.$lang_admin_ext['Install hotfix'].'</a></span></p>'."\n\t\t".'</div>';				++$num_exts;			}		}	}	($hook = get_hook('aex_section_hotfixes_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed hotfixes'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$installed_count = 0;	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') !== 0)				continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=hotfixes&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=hotfixese&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		($hook = get_hook('aex_section_hotfixes_pre_ext_actions')) ? eval($hook) : null;?>		<div class="ct-box info-box hotfix <?php echo $ext['disabled'] == '1' ? 'disabled' : 'enabled' ?>">			<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext['title']) ?><?php if ($ext['disabled'] == '1') echo ' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )' ?></span></h3>			<ul class="data-list">				<li><span><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext['version']) : $lang_admin_ext['Hotfix']) ?></span></li>				<li><span><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])) ?></span></li><?php if ($ext['description'] != ''): ?>				<li><span><?php echo forum_htmlencode($ext['description']) ?></span></li><?php endif; ?>			</ul>			<p class="options"><?php echo implode(' ', $forum_page['ext_actions']) ?></p>		</div><?php		$installed_count++;	}	if ($installed_count == 0)	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Extensions listelse{	if ($forum_config['o_check_for_versions'] == 1)	{		// Check for the new versions of the extensions istalled		$repository_urls = array('http://punbb.informer.com/extensions');		($hook = get_hook('aex_add_extensions_repository')) ? eval($hook) : null;		$repository_url_by_extension = array();		foreach (array_keys($inst_exts) as $id)			($hook = get_hook('aex_add_repository_for_'.$id)) ? eval($hook) : null;		if (is_readable(FORUM_CACHE_DIR.'cache_ext_version_notifications.php'))			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		//Get latest timestamp in cache		if (isset($forum_ext_repos))		{			$min_timestamp = 10000000000;			foreach ( $forum_ext_repos as $rep)				$min_timestamp = min($min_timestamp, $rep['timestamp']);		}		$update_hour = (isset($forum_ext_versions_update_cache) && (time() - $forum_ext_versions_update_cache > 60 * 60));		// Update last versions if there is no cahe or some extension was added/removed or one day has gone since last update		$update_new_versions_cache = !defined('FORUM_EXT_VERSIONS_LOADED') || (isset($forum_ext_last_versions) && array_diff($inst_exts, $forum_ext_last_versions) != array()) || $update_hour  || ( $update_hour && isset($min_timestamp) && (time() - $min_timestamp > 60*60*24));		($hook = get_hook('aex_before_update_checking')) ? eval($hook) : null;		if ($update_new_versions_cache)		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require_once FORUM_ROOT.'include/cache.php';			generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension);			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage extensions'], forum_link($forum_url['admin_extensions_manage']))	);	($hook = get_hook('aex_section_manage_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Extensions available'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	$d = dir(FORUM_ROOT.'extensions');	while (($entry = $d->read()) !== false)	{		if ($entry{0} != '.' && is_dir(FORUM_ROOT.'extensions/'.$entry))		{			if (preg_match('/[^0-9a-z_]/', $entry))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Illegal ID'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			else if (!file_exists(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml'))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Missing manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Parse manifest.xml into an array			$ext_data = is_readable(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml') ? xml_to_array(file_get_contents(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml')) : '';			if (empty($ext_data))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Failed parse manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Validate manifest			$errors = validate_manifest($ext_data, $entry);			if (!empty($errors))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.implode(' ', $errors).'</p>'."\n\t\t\t".'</div>';				++$num_failed;			}			else			{				if (!array_key_exists($entry, $inst_exts) || version_compare($inst_exts[$entry]['version'], $ext_data['extension']['version'], '!='))				{					$forum_page['ext_item'][] = '<div class="ct-box info-box extension available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext_data['extension']['title']).'</span></h3>'."\n\t\t\t".'<ul class="data-list">'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']).'</span></li>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])).'</span></li>'.(($ext_data['extension']['description'] != '') ? "\n\t\t\t\t".'<li><span>'.forum_htmlencode($ext_data['extension']['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install='.urlencode($entry).'">'.(isset($inst_exts[$entry]['version']) ? $lang_admin_ext['Upgrade extension'] : $lang_admin_ext['Install extension']).'</a></span></p>'."\n\t\t".'</div>';					++$num_exts;				}			}		}	}	$d->close();	($hook = get_hook('aex_section_install_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available extensions'] ?></p>		</div><?php	}	// If any of the extensions had errors	if ($num_failed)	{?>		<div class="ct-box data-box">			<p class="important"><?php echo $lang_admin_ext['Invalid extensions'] ?></p>			<?php echo implode("\n\t\t\t", $forum_page['ext_error'])."\n" ?>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed extensions'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$installed_count = 0;	$forum_page['ext_item'] = array();	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') === 0)			continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		if ($forum_config['o_check_for_versions'] == 1 && isset($forum_ext_last_versions[$id]) && version_compare($ext['version'], $forum_ext_last_versions[$id]['version'], '<'))			$forum_page['ext_actions']['latest_ver'] = '<span><a href="'.$forum_ext_last_versions[$id]['repo_url'].'/'.$id.'/'.$id.'.zip">'.$lang_admin_ext['Download latest version'].'</a></span>';		($hook = get_hook('aex_section_manage_pre_ext_actions')) ? eval($hook) : null;		if ($ext['disabled'] == '1')			$forum_page['ext_item'][] = '<div class="ct-box info-box extension disabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		else			$forum_page['ext_item'][] = '<div class="ct-box info-box extension enabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).'</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		$installed_count++;	}	if ($installed_count > 0)	{		echo "\t".implode("\n\t", $forum_page['ext_item'])."\n";	}	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed extensions'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Group management page. * * Allows administrators to control group permissions. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('agr_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_groups.php';// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		($hook = get_hook('agr_add_group_form_submitted')) ? eval($hook) : null;		$base_group = intval($_POST['base_group']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$base_group		);		($hook = get_hook('agr_add_group_qr_get_base_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		$mode = 'add';	}	else	// We are editing a group	{		($hook = get_hook('agr_edit_group_form_submitted')) ? eval($hook) : null;		$group_id = intval($_GET['edit_group']);		if ($group_id < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$group_id		);		($hook = get_hook('agr_edit_group_qr_get_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		if (!$group)			message($lang_common['Bad request']);		$mode = 'edit';	}	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$mode == 'edit' ? $lang_admin_groups['Edit group heading'] : $lang_admin_groups['Add group heading']	);	($hook = get_hook('agr_add_edit_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_add_edit_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Group settings heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_admin_common['Required warn'], '<em>'.$lang_admin_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups'])) ?>" />				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; if ($mode == 'add'): ?>				<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group title head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Group title legend'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_group_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Group title label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo forum_htmlencode($group['g_title']); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_user_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['User title label'] ?></span> <small><?php echo $lang_admin_groups['User title help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="user_title" size="25" maxlength="50" value="<?php echo forum_htmlencode($group['g_user_title']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('agr_add_edit_group_basic_details_fieldset_end')) ? eval($hook) : null;	// The rest of the form is for non-admin groups only	if ($group['g_id'] != FORUM_ADMIN)	{		// Reset fieldset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group perms head'] ?></span></h3>			</div><?php if ($mode == 'edit' && $forum_config['o_default_user_group'] == $group['g_id']): ?>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_groups['Moderator default group'] ?></p>				</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_permissions_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_groups['Permissions'] ?></strong></legend><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): if ($mode != 'edit' || $forum_config['o_default_user_group'] != $group['g_id']): ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['Mod permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_moderate_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow moderate label'] ?> <?php echo $lang_admin_groups['Allow moderate help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_profiles_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit profiles label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_userbane_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit username label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_change_pass_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod change pass label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_ban_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod bans label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_mod_permissions_fieldset_end')) ? eval($hook) : null; endif; endif; ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['User permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_read_board_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow read board label'] ?> <?php echo $lang_admin_groups['Allow read board help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_view_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow view users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_replies_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post replies label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_edit_posts_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow edit posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_posts_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_set_user_title_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow set user title label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_allow_search_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow use search label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_search_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow search users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_send_email_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow send email label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_user_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_user_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		// Reset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group flood head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_flood_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Restrictions'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_post_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_search_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Search interval label'] ?></span> <small><?php echo $lang_admin_groups['Search interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" /></span>					</div>				</div><?php		($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null;		// The rest of the form is for non-guest groups only		if ($group['g_id'] != FORUM_GUEST)		{?>				<?php ($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Email flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Email flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" /></span>					</div>				</div><?php		}		($hook = get_hook('agr_add_edit_group_pre_flood_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php		($hook = get_hook('agr_add_edit_group_flood_fieldset_end')) ? eval($hook) : null;	}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_edit_group" value=" <?php echo $lang_admin_groups['Update group'] ?> " /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_add_edit_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == FORUM_ADMIN) ? true : false;	$title = forum_trim($_POST['req_title']);	$user_title = forum_trim($_POST['user_title']);	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = (isset($_POST['read_board']) && $_POST['read_board'] == '1') || $is_admin_group ? '1' : '0';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = (isset($_POST['post_replies']) && $_POST['post_replies'] == '1') || $is_admin_group ? '1' : '0';	$post_topics = (isset($_POST['post_topics']) && $_POST['post_topics'] == '1') || $is_admin_group ? '1' : '0';	$edit_posts = (isset($_POST['edit_posts']) && $_POST['edit_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_posts = (isset($_POST['delete_posts']) && $_POST['delete_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_topics = (isset($_POST['delete_topics']) && $_POST['delete_topics'] == '1') || $is_admin_group ? '1' : '0';	$set_title = (isset($_POST['set_title']) && $_POST['set_title'] == '1') || $is_admin_group ? '1' : '0';	$search = (isset($_POST['search']) && $_POST['search'] == '1') || $is_admin_group ? '1' : '0';	$search_users = (isset($_POST['search_users']) && $_POST['search_users'] == '1') || $is_admin_group ? '1' : '0';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = isset($_POST['post_flood']) ? intval($_POST['post_flood']) : '0';	$search_flood = isset($_POST['search_flood']) ? intval($_POST['search_flood']) : '0';	$email_flood = isset($_POST['email_flood']) ? intval($_POST['email_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter group message']);	$user_title = ($user_title != '') ? '\''.$forum_db->escape($user_title).'\'' : 'NULL';	($hook = get_hook('agr_add_edit_end_validation')) ? eval($hook) : null;	if ($_POST['mode'] == 'add')	{		($hook = get_hook('agr_add_add_group')) ? eval($hook) : null;		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\''		);		($hook = get_hook('agr_add_end_qr_check_add_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Insert the new group		$query = array(			'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',			'INTO'		=> 'groups',			'VALUES'	=> '\''.$forum_db->escape($title).'\', '.$user_title.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood		);		($hook = get_hook('agr_add_end_qr_add_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$new_group_id = $forum_db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$query = array(			'SELECT'	=> 'fp.forum_id, fp.read_forum, fp.post_replies, fp.post_topics',			'FROM'		=> 'forum_perms AS fp',			'WHERE'		=> 'group_id='.intval($_POST['base_group'])		);		($hook = get_hook('agr_add_end_qr_get_group_forum_perms')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_forum_perm = $forum_db->fetch_assoc($result))		{			$query = array(				'INSERT'	=> 'group_id, forum_id, read_forum, post_replies, post_topics',				'INTO'		=> 'forum_perms',				'VALUES'	=> $new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics']			);			($hook = get_hook('agr_add_end_qr_add_group_forum_perms')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	else	{		$group_id = intval($_POST['group_id']);		($hook = get_hook('agr_edit_end_edit_group')) ? eval($hook) : null;		// Make sure admins and guests don't get moderator privileges		if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)			$moderator = '0';		// Make sure the default group isn't assigned moderator privileges		if ($moderator == '1' && $forum_config['o_default_user_group'] == $group_id)			message($lang_admin_groups['Moderator default group']);		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\' AND g_id!='.$group_id		);		($hook = get_hook('agr_edit_end_qr_check_edit_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Save changes		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_title=\''.$forum_db->escape($title).'\', g_user_title='.$user_title.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood,			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_edit_end_qr_update_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If the group doesn't have moderator privileges (it might have had before), remove its users from the moderator list in all forums		if (!$moderator)			clean_forum_moderators();	}	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info((($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));	($hook = get_hook('agr_add_edit_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), (($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));}// Set default groupelse if (isset($_POST['set_default_group'])){	$group_id = intval($_POST['default_group']);	($hook = get_hook('agr_set_default_group_form_submitted')) ? eval($hook) : null;	// Make sure it's not the admin or guest groups	if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	$query = array(		'SELECT'	=> 'COUNT(g.g_id)',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$group_id.' AND g.g_moderator=0',		'LIMIT'		=> '1'	);	($hook = get_hook('agr_set_default_group_qr_get_group_moderation_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value='.$group_id,		'WHERE'		=> 'conf_name=\'o_default_user_group\''	);	($hook = get_hook('agr_set_default_group_qr_set_default_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_config_cache();	// Add flash message	$forum_flash->add_info($lang_admin_groups['Default group set']);	($hook = get_hook('agr_set_default_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Default group set']);}// Remove a groupelse if (isset($_GET['del_group'])){	$group_id = intval($_GET['del_group']);	if ($group_id <= FORUM_GUEST)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_group_cancel']))		redirect(forum_link($forum_url['admin_groups']), $lang_admin_common['Cancel redirect']);	// Make sure we don't remove the default group	if ($group_id == $forum_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default group']);	($hook = get_hook('agr_del_group_selected')) ? eval($hook) : null;	// Check if this group has any members	$query = array(		'SELECT'	=> 'g.g_title, COUNT(u.id)',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'g.g_id='.$group_id,		'GROUP BY'	=> 'g.g_id, g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_group_member_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$group_info = $forum_db->fetch_row($result);	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$group_info || isset($_POST['del_group']))	{		($hook = get_hook('agr_del_group_form_submitted')) ? eval($hook) : null;		if (isset($_POST['del_group']))	// Move users		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.intval($_POST['move_to_group']),				'WHERE'		=> 'group_id='.$group_id			);			($hook = get_hook('agr_del_group_qr_move_users')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Delete the group and any forum specific permissions		$query = array(			'DELETE'	=> 'groups',			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'group_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		clean_forum_moderators();		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_groups['Group removed']);		($hook = get_hook('agr_del_group_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Group removed']);	}	list($group_title, $num_members) = $group_info;	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$lang_admin_groups['Remove group']	);	($hook = get_hook('agr_del_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_del_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_groups['Remove group head'], forum_htmlencode($group_title), $num_members) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?del_group=<?php echo $group_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?del_group='.$group_id) ?>" />			</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group set<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Remove group legend'] ?></span></legend><?php ($hook = get_hook('agr_del_group_pre_move_to_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Move users to'] ?></span> <small><?php echo $lang_admin_groups['Remove group help'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_group"><?php	$query = array(		'SELECT'	=> 'g.g_id, g.g_title',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id!='.FORUM_GUEST.' AND g.g_id!='.$group_id,		'ORDER BY'	=> 'g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_groups')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_group = $forum_db->fetch_assoc($result))	{		if ($cur_group['g_id'] == $forum_config['o_default_user_group'])	// Pre-select the default Members group			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_del_group_del_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Remove group'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_group_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_del_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['item_count'] = $forum_page['fld_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])));($hook = get_hook('agr_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-groups');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('agr_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Add group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_add_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Add group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_add_base_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Base new group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="base_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST,	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_allowed_base_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result))	echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].($cur_group['g_id'] == $forum_config['o_default_user_group'] ? '" selected="selected">' : '">').forum_htmlencode($cur_group['g_title']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_add_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_add_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_group" value="<?php echo $lang_admin_groups['Add group'] ?> " /></span>			</div>		</form>	</div><?php	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Default group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_default_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Default group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_default_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Default group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="default_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST.' AND g_moderator=0',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result)){	if ($cur_group['g_id'] == $forum_config['o_default_user_group'])		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	else		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_default_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_default_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="set_default_group" value="<?php echo $lang_admin_groups['Set default'] ?>" /></span>			</div>		</form>	</div><?php	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Existing groups heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_groups['Existing groups intro'] ?></p>		</div>		<div class="ct-group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_group_list')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['item_num'] = 0;while ($cur_group = $forum_db->fetch_assoc($result)){	$forum_page['group_options'] = array(		'edit' => '<span class="first-item"><a href="'.forum_link($forum_url['admin_groups']).'?edit_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Edit group'].'</a></span>'	);	if ($cur_group['g_id'] > FORUM_GUEST)	{		if ($cur_group['g_id'] != $forum_config['o_default_user_group'])			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['admin_groups']).'?del_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Remove group'].'</a></span>';		else			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove default'].'</span>';	}	else		$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove group'].'</span>';	($hook = get_hook('agr_edit_group_row_pre_output')) ? eval($hook) : null;?>			<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($cur_group['g_title']) ?> <?php echo ($cur_group['g_id'] == $forum_config['o_default_user_group']) ? $lang_admin_groups['default'] : '' ?></span></h3>					<p class="options"><?php echo implode(' ', $forum_page['group_options']) ?></p>				</div>			</div><?php	($hook = get_hook('agr_edit_group_row_post_output')) ? eval($hook) : null;}?>		</div>	</div><?php($hook = get_hook('agr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Installation script. * * Used to actually install PunBB. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_VERSION', '1.4b1');define('FORUM_DB_REVISION', 5);define('MIN_PHP_VERSION', '5.0.0');define('MIN_MYSQL_VERSION', '4.1.2');define('FORUM_ROOT', '../');define('FORUM', 1);define('FORUM_DEBUG', 1);define('FORUM_SEARCH_MIN_WORD', 3);define('FORUM_SEARCH_MAX_WORD', 20);if (file_exists(FORUM_ROOT.'config.php'))	exit('The file \'config.php\' already exists which would mean that PunBB is already installed. You should go <a href="'.FORUM_ROOT.'index.php">here</a> instead.');// Make sure we are running at least MIN_PHP_VERSIONif (!function_exists('version_compare') || version_compare(PHP_VERSION, MIN_PHP_VERSION, '<'))	exit('You are running PHP version '.PHP_VERSION.'. PunBB requires at least PHP '.MIN_PHP_VERSION.' to run properly. You must upgrade your PHP installation before you can continue.');// Disable error reporting for uninitialized variableserror_reporting(E_ALL);// Turn off PHP time limit@set_time_limit(0);// We need some stuff from functions.phprequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();//// Generate output to be used for config.php//function generate_config_file(){	global $db_type, $db_host, $db_name, $db_username, $db_password, $db_prefix, $base_url, $cookie_name;	$config_body = '<?php'."\n\n".'$db_type = \''.$db_type."';\n".'$db_host = \''.$db_host."';\n".'$db_name = \''.addslashes($db_name)."';\n".'$db_username = \''.addslashes($db_username)."';\n".'$db_password = \''.addslashes($db_password)."';\n".'$db_prefix = \''.addslashes($db_prefix)."';\n".'$p_connect = false;'."\n\n".'$base_url = \''.$base_url.'\';'."\n\n".'$cookie_name = '."'".$cookie_name."';\n".'$cookie_domain = '."'';\n".'$cookie_path = '."'/';\n".'$cookie_secure = 0;'."\n\ndefine('FORUM', 1);";	// Add forum options	$config_body .= "\n\n// Enable DEBUG mode by removing // from the following line\n//define('FORUM_DEBUG', 1);";	$config_body .= "\n\n// Enable show DB Queries mode by removing // from the following line\n//define('FORUM_SHOW_QUERIES', 1);";	$config_body .= "\n\n// Disable forum CSRF checking by removing // from the following line\n//define('FORUM_DISABLE_CSRF_CONFIRM', 1);";	$config_body .= "\n\n// Disable forum hooks (extensions) by removing // from the following line\n//define('FORUM_DISABLE_HOOKS', 1);";	$config_body .= "\n\n// Disable forum output buffering by removing // from the following line\n//define('FORUM_DISABLE_BUFFERING', 1);";	return $config_body;}$language = isset($_GET['lang']) ? $_GET['lang'] : (isset($_POST['req_language']) ? forum_trim($_POST['req_language']) : 'English');$language = preg_replace('#[\.\\\/]#', '', $language);if (!file_exists(FORUM_ROOT.'lang/'.$language.'/install.php'))	exit('The language pack you have chosen doesn\'t seem to exist or is corrupt. Please recheck and try again.');// Load the language filesrequire FORUM_ROOT.'lang/'.$language.'/install.php';require FORUM_ROOT.'lang/'.$language.'/admin_settings.php';if (isset($_POST['generate_config'])){	header('Content-Type: text/x-delimtext; name="config.php"');	header('Content-disposition: attachment; filename=config.php');	$db_type = $_POST['db_type'];	$db_host = $_POST['db_host'];	$db_name = $_POST['db_name'];	$db_username = $_POST['db_username'];	$db_password = $_POST['db_password'];	$db_prefix = $_POST['db_prefix'];	$base_url = $_POST['base_url'];	$cookie_name = $_POST['cookie_name'];	echo generate_config_file();	exit;}header('Content-Type: text/html; charset=utf-8');header('Cache-Control: cache-control: no-store', false);if (!isset($_POST['form_sent'])){	// Determine available database extensions	$db_extensions = array();	if (function_exists('mysqli_connect'))	{		$db_extensions[] = array('mysqli', 'MySQL Improved');		$db_extensions[] = array('mysqli_innodb', 'MySQL Improved (InnoDB)');	}	if (function_exists('mysql_connect'))	{		$db_extensions[] = array('mysql', 'MySQL Standard');		$db_extensions[] = array('mysql_innodb', 'MySQL Standard (InnoDB)');	}	if (function_exists('sqlite_open'))		$db_extensions[] = array('sqlite', 'SQLite');	/* Disabled in 1.4.0 becouse a many non-compability extensions	if (class_exists('SQLite3'))		$db_extensions[] = array('sqlite3', 'SQLite3');	*/	if (function_exists('pg_connect'))		$db_extensions[] = array('pgsql', 'PostgreSQL');	if (empty($db_extensions))		error($lang_install['No database support']);	// Make an educated guess regarding base_url	$base_url_guess = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://').preg_replace('/:80$/', '', $_SERVER['HTTP_HOST']).substr(str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME'])), 0, -6);	if (substr($base_url_guess, -1) == '/')		$base_url_guess = substr($base_url_guess, 0, -1);	// Check for available language packs	$languages = get_language_packs();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php echo $lang_install['Install intro'] ?></p></div><div id="brd-main" class="main">	<div class="main-head">		<h1 class="hn"><span><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></span></h1>	</div><?php	if (count($languages) > 1)	{?>	<form class="frm-form" method="get" accept-charset="utf-8" action="install.php">	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Choose language'] ?></span></h2>	</div>	<div class="main-content main-frm">		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Choose language legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld0"><span><?php echo $lang_install['Installer language'] ?></span> <small><?php echo $lang_install['Choose language help'] ?></small></label><br />					<span class="fld-input"><select id="fld0" name="lang"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div>		</fieldset>		<div class="frm-buttons">			<span class="submit"><input type="submit" name="changelang" value="<?php echo $lang_install['Choose language'] ?>" /></span>		</div>	</div>	</form><?php	}?>	<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">	<div class="hidden">		<input type="hidden" name="form_sent" value="1" />	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part1'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part1 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Database type'] ?></strong> <?php echo $lang_install['Database type info']; if (count($db_extensions) > 1) echo ' '.$lang_install['Mysql type info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database server'] ?></strong> <?php echo $lang_install['Database server info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database name'] ?></strong> <?php echo $lang_install['Database name info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database user pass'] ?></strong> <?php echo $lang_install['Database username info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Table prefix'] ?></strong> <?php echo $lang_install['Table prefix info'] ?></span></li>			</ul>		</div>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_install['Required warn'], '<em>'.$lang_install['Required'].'</em>') ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part1 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box select required">					<label for="req_db_type"><span><?php echo $lang_install['Database type'] ?></span> <small><?php echo $lang_install['Database type help'] ?></small></label><br />					<span class="fld-input"><select id="req_db_type" name="req_db_type"><?php	foreach ($db_extensions as $db_type)		echo "\t\t\t\t\t".'<option value="'.$db_type[0].'">'.$db_type[1].'</option>'."\n";?>					</select></span>				</div>			</div>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld2"><span><?php echo $lang_install['Database server'] ?></span> <small><?php echo $lang_install['Database server help'] ?></small></label><br />					<span class="fld-input"><input id="fld2" type="text" name="req_db_host" value="localhost" size="35" maxlength="100" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld3"><span><?php echo $lang_install['Database name'] ?></span> <small><?php echo $lang_install['Database name help'] ?></small></label><br />					<span class="fld-input"><input id="fld3" type="text" name="req_db_name" size="35" maxlength="50" required /></span>				</div>			</div>			<div class="sf-set set3" id="db_username_block">				<div class="sf-box text">					<label for="fld4"><span><?php echo $lang_install['Database username'] ?></span> <small><?php echo $lang_install['Database username help'] ?></small></label><br />					<span class="fld-input"><input id="fld4" type="text" name="db_username" size="35" maxlength="50" /></span>				</div>			</div>			<div class="sf-set set4" id="db_password_block">				<div class="sf-box text">					<label for="fld5"><span><?php echo $lang_install['Database password'] ?></span> <small><?php echo $lang_install['Database password help'] ?></small></label><br />					<span class="fld-input"><input id="fld5" type="password" name="db_password" size="35" /></span>				</div>			</div>			<div class="sf-set set5">				<div class="sf-box text">					<label for="fld6"><span><?php echo $lang_install['Table prefix'] ?></span> <small><?php echo $lang_install['Table prefix help'] ?></small></label><br />					<span class="fld-input"><input id="fld6" type="text" name="db_prefix" size="35" maxlength="30" /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part2'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part2 intro'] ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part2 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld7"><span><?php echo $lang_install['Admin username'] ?></span> <small><?php echo $lang_install['Username help'] ?></small></label><br />					<span class="fld-input"><input id="fld7" type="text" name="req_username" size="35" maxlength="25" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld8"><span><?php echo $lang_install['Admin password'] ?></span> <small><?php echo $lang_install['Password help'] ?></small></label><br />					<span class="fld-input"><input id="fld8" type="password" name="req_password1" size="35" required /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld9"><span><?php echo $lang_install['Admin confirm password'] ?></span> <small><?php echo $lang_install['Confirm password help'] ?></small></label><br />					<span class="fld-input"><input id="fld9" type="password" name="req_password2" size="35" required /></span>				</div>			</div>			<div class="sf-set set4">				<div class="sf-box text required">					<label for="fld10"><span><?php echo $lang_install['Admin e-mail'] ?></span> <small><?php echo $lang_install['E-mail address help'] ?></small></label><br />					<span class="fld-input"><input id="fld10" type="email" name="req_email" size="35" maxlength="80" required /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part3'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part3 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Board title and desc'] ?></strong> <?php echo $lang_install['Board title info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Base URL'] ?></strong> <?php echo $lang_install['Base URL info'] ?></span></li>			</ul>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part3 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld11"><span><?php echo $lang_install['Board title'] ?></span></label><br />					<span class="fld-input"><input id="fld11" type="text" name="board_title" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text">					<label for="fld12"><span><?php echo $lang_install['Board description'] ?></span></label><br />					<span class="fld-input"><input id="fld12" type="text" name="board_descrip" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld13"><span><?php echo $lang_install['Base URL'] ?></span> <small><?php echo $lang_install['Base URL help'] ?></small></label><br />					<span class="fld-input"><input id="fld13" type="url" name="req_base_url" value="<?php echo $base_url_guess ?>" size="35" maxlength="100" required /></span>				</div>			</div><?php	if (count($languages) > 1)	{?>			<div class="sf-set set4">				<div class="sf-box text">					<label for="fld14"><span><?php echo $lang_install['Default language'] ?></span> <small><?php echo $lang_install['Default language help'] ?></small></label><br />					<span class="fld-input"><select id="fld14" name="req_language"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div><?php	}	else	{?>			<div class="hidden">				<input type="hidden" name="req_language" value="<?php echo $languages[0]; ?>" />			</div><?php	}	if (file_exists(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{?>			<div class="sf-set set5">				<div class="sf-box checkbox">					<span class="fld-input"><input id="fld15" type="checkbox" name="install_pun_repository" value="1" checked="checked" /></span>					<label for="fld15"><span><?php echo $lang_install['Pun repository'] ?></span> <?php echo $lang_install['Pun repository help'] ?></label><br />				</div>			</div><?php	}?>		</fieldset>		<div class="frm-buttons">			<span class="submit primary"><input type="submit" name="start" value="<?php echo $lang_install['Start install'] ?>" /></span>		</div>	</div>	</form></div></div></div>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.common.js"></script>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.install.js"></script></body></html><?php}else{	//	// Strip slashes only if magic_quotes_gpc is on.	//	function unescape($str)	{		return (get_magic_quotes_gpc() == 1) ? stripslashes($str) : $str;	}	$db_type = $_POST['req_db_type'];	$db_host = forum_trim($_POST['req_db_host']);	$db_name = forum_trim($_POST['req_db_name']);	$db_username = unescape(forum_trim($_POST['db_username']));	$db_password = unescape(forum_trim($_POST['db_password']));	$db_prefix = forum_trim($_POST['db_prefix']);	$username = unescape(forum_trim($_POST['req_username']));	$email = unescape(strtolower(forum_trim($_POST['req_email'])));	$password1 = unescape(forum_trim($_POST['req_password1']));	$password2 = unescape(forum_trim($_POST['req_password2']));	$board_title = unescape(forum_trim($_POST['board_title']));	$board_descrip = unescape(forum_trim($_POST['board_descrip']));	$default_lang = preg_replace('#[\.\\\/]#', '', unescape(forum_trim($_POST['req_language'])));	$install_pun_repository = !empty($_POST['install_pun_repository']);	// Make sure base_url doesn't end with a slash	if (substr($_POST['req_base_url'], -1) == '/')		$base_url = substr($_POST['req_base_url'], 0, -1);	else		$base_url = $_POST['req_base_url'];	// Validate form	if (utf8_strlen($db_name) == 0)		error($lang_install['Missing database name']);	if (utf8_strlen($username) < 2)		error($lang_install['Username too short']);	if (utf8_strlen($username) > 25)		error($lang_install['Username too long']);	if (utf8_strlen($password1) < 8)		error($lang_install['Pass too short']);	if ($password1 != $password2)		error($lang_install['Pass not match']);	if (strtolower($username) == 'guest')		error($lang_install['Username guest']);	if (preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $username) || preg_match('/((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))/', $username))		error($lang_install['Username IP']);	if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)		error($lang_install['Username reserved chars']);	if (preg_match('/(?:\[\/?(?:b|u|i|h|colou?r|quote|code|img|url|email|list)\]|\[(?:code|quote|list)=)/i', $username))		error($lang_install['Username BBCode']);	// Validate email	if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/email.php';	if (!is_valid_email($email))		error($lang_install['Invalid email']);	// Make sure board title and description aren't left blank	if ($board_title == '')		$board_title = 'My PunBB forum';	if ($board_descrip == '')		$board_descrip = 'Unfortunately no one can be told what PunBB is  you have to see it for yourself';	if (utf8_strlen($base_url) == 0)		error($lang_install['Missing base url']);	if (!file_exists(FORUM_ROOT.'lang/'.$default_lang.'/common.php'))		error($lang_install['Invalid language']);	// Load the appropriate DB layer class	switch ($db_type)	{		case 'mysql':			require FORUM_ROOT.'include/dblayer/mysql.php';			break;		case 'mysql_innodb':			require FORUM_ROOT.'include/dblayer/mysql_innodb.php';			break;		case 'mysqli':			require FORUM_ROOT.'include/dblayer/mysqli.php';			break;		case 'mysqli_innodb':			require FORUM_ROOT.'include/dblayer/mysqli_innodb.php';			break;		case 'pgsql':			require FORUM_ROOT.'include/dblayer/pgsql.php';			break;		case 'sqlite':			require FORUM_ROOT.'include/dblayer/sqlite.php';			break;		case 'sqlite3':			require FORUM_ROOT.'include/dblayer/sqlite3.php';			break;		default:			error(sprintf($lang_install['No such database type'], forum_htmlencode($db_type)));	}	// Create the database object (and connect/select db)	$forum_db = new DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, false);	// If MySQL, make sure it's at least 4.1.2	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$mysql_info = $forum_db->get_version();		if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))			error(sprintf($lang_install['Invalid MySQL version'], forum_htmlencode($mysql_info['version']), MIN_MYSQL_VERSION));		// Check InnoDB support in DB		if (in_array($db_type, array('mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW VARIABLES LIKE \'have_innodb\'');			$row = $forum_db->fetch_assoc($result);			if (!$row || !isset($row['Value']) || strtolower($row['Value']) != 'yes')			{				error($lang_install['MySQL InnoDB Not Supported']);			}		}	}	// Validate prefix	if (strlen($db_prefix) > 0 && (!preg_match('/^[a-zA-Z_][a-zA-Z0-9_]*$/', $db_prefix) || strlen($db_prefix) > 40))		error(sprintf($lang_install['Invalid table prefix'], $db_prefix));	// Check SQLite prefix collision	if (in_array($db_type, array('sqlite', 'sqlite3')) && strtolower($db_prefix) == 'sqlite_')		error($lang_install['SQLite prefix collision']);	// Make sure PunBB isn't already installed	if ($forum_db->table_exists('users'))	{		$query = array(			'SELECT'	=> 'COUNT(id)',			'FROM'		=> 'users',			'WHERE'		=> 'id=1'		);		$result = $forum_db->query_build($query);		if ($forum_db->result($result))			error(sprintf($lang_install['PunBB already installed'], $db_prefix, $db_name));	}	// Start a transaction	$forum_db->start_transaction();	// Create all tables	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'username'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'ip'			=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'email'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'expire'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'ban_creator'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('bans', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'cat_name'		=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New Category\''			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('categories', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'search_for'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'replace_with'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('censoring', $schema);	$schema = array(		'FIELDS'		=> array(			'conf_name'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'conf_value'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('conf_name')	);	$forum_db->create_table('config', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'version'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'description'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'author'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'uninstall'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'uninstall_note'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disabled'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'dependencies'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('extensions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'extension_id'	=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'code'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'installed'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'priority'		=> array(				'datatype'		=> 'TINYINT(1) UNSIGNED',				'allow_null'	=> false,				'default'		=> '5'			)		),		'PRIMARY KEY'	=> array('id', 'extension_id')	);	$forum_db->create_table('extension_hooks', $schema);	$schema = array(		'FIELDS'		=> array(			'group_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'read_forum'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_replies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_topics'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			)		),		'PRIMARY KEY'	=> array('group_id', 'forum_id')	);	$forum_db->create_table('forum_perms', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'forum_name'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New forum\''			),			'forum_desc'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'redirect_url'	=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'moderators'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'num_topics'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'sort_by'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=>	'0'			),			'cat_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=>	'0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('forums', $schema);	$schema = array(		'FIELDS'		=> array(			'g_id'						=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'g_title'					=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'g_user_title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'g_moderator'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_edit_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_rename_users'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_change_passwords'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_ban_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_read_board'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_view_users'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_replies'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_topics'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_edit_posts'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_posts'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_topics'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_set_title'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search'					=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_send_email'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_search_flood'			=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_email_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '60'			)		),		'PRIMARY KEY'	=> array('g_id')	);	$forum_db->create_table('groups', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'logged'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'idle'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'csrf_token'	=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'prev_url'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),		),		'UNIQUE KEYS'	=> array(			'user_id_ident_idx'	=> array('user_id', 'ident')		),		'INDEXES'		=> array(			'ident_idx'		=> array('ident'),			'logged_idx'	=> array('logged')		),		'ENGINE'		=> 'HEAP'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$schema['UNIQUE KEYS']['user_id_ident_idx'] = array('user_id', 'ident(25)');		$schema['INDEXES']['ident_idx'] = array('ident(25)');	}	$forum_db->create_table('online', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'poster_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'poster_ip'		=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> true			),			'poster_email'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'hide_smilies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'edited'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'edited_by'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'topic_id_idx'	=> array('topic_id'),			'multi_idx'		=> array('poster_id', 'topic_id'),			'posted_idx'	=> array('posted')		)	);	$forum_db->create_table('posts', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'rank'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'min_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('ranks', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'reported_by'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'created'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'zapped'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'zapped_by'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'zapped_idx'	=> array('zapped')		)	);	$forum_db->create_table('reports', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'search_data'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'ident_idx'	=> array('ident')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['ident_idx'] = array('ident(8)');	$forum_db->create_table('search_cache', $schema);	$schema = array(		'FIELDS'		=> array(			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'word_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'subject_match'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'INDEXES'		=> array(			'word_id_idx'	=> array('word_id'),			'post_id_idx'	=> array('post_id')		)	);	$forum_db->create_table('search_matches', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'word'			=> array(				'datatype'		=> 'VARCHAR(20)',				'allow_null'	=> false,				'default'		=> '\'\'',				'collation'		=> 'bin'			)		),		'PRIMARY KEY'	=> array('word'),		'INDEXES'		=> array(			'id_idx'	=> array('id')		)	);	if ($db_type == 'sqlite' || $db_type == 'sqlite3')	{		$schema['PRIMARY KEY'] = array('id');		$schema['UNIQUE KEYS'] = array('word_idx'	=> array('word'));	}	$forum_db->create_table('search_words', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('user_id', 'topic_id')	);	$forum_db->create_table('subscriptions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'subject'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'first_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'num_views'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_replies'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'closed'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'sticky'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'moved_to'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'forum_id_idx'		=> array('forum_id'),			'moved_to_idx'		=> array('moved_to'),			'last_post_idx'		=> array('last_post'),			'first_post_id_idx'	=> array('first_post_id')		)	);	$forum_db->create_table('topics', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'group_id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '3'			),			'username'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'password'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'salt'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'email'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'realname'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> true			),			'url'				=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'facebook'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'twitter'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'linkedin'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'skype'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'jabber'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'icq'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'msn'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'aim'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'yahoo'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'location'			=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'signature'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disp_topics'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'disp_posts'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'email_setting'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'notify_with_post'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'auto_notify'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'show_smilies'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img_sig'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_avatars'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_sig'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'access_keys'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'timezone'			=> array(				'datatype'		=> 'FLOAT',				'allow_null'	=> false,				'default'		=> '0'			),			'dst'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'time_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'date_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'language'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'English\''			),			'style'				=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'Oxygen\''			),			'num_posts'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_email_sent'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'registered'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'registration_ip'	=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> false,				'default'		=> '\'0.0.0.0\''			),			'last_visit'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'admin_note'		=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'activate_string'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'activate_key'		=> array(				'datatype'		=> 'VARCHAR(8)',				'allow_null'	=> true			),			'avatar'			=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_width'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_height'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'registered_idx'	=> array('registered'),			'username_idx'		=> array('username')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['username_idx'] = array('username(8)');	$forum_db->create_table('users', $schema);	$now = time();	// Insert the four preset groups	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Administrators\', \'Administrator\', 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Guest\', NULL, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 60, 30, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 2';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Members\', NULL, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 60, 30, 60'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 3';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Moderators\', \'Moderator\', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 4';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Insert guest and first admin user	$query = array(		'INSERT'	=> 'group_id, username, password, email',		'INTO'		=> 'users',		'VALUES'	=> '2, \'Guest\', \'Guest\', \'Guest\''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$salt = random_key(12);	$query = array(		'INSERT'	=> 'group_id, username, password, email, language, num_posts, last_post, registered, registration_ip, last_visit, salt',		'INTO'		=> 'users',		'VALUES'	=> '1, \''.$forum_db->escape($username).'\', \''.forum_hash($password1, $salt).'\', \''.$forum_db->escape($email).'\', \''.$forum_db->escape($default_lang).'\', 1, '.$now.', '.$now.', \'127.0.0.1\', '.$now.', \''.$forum_db->escape($salt).'\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_uid = $forum_db->insert_id();	// Enable/disable avatars depending on file_uploads setting in PHP configuration	$avatars = in_array(strtolower(@ini_get('file_uploads')), array('on', 'true', '1')) ? 1 : 0;	// Enable/disable automatic check for updates depending on PHP environment (require cURL, fsockopen or allow_url_fopen)	$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;	// Insert config data	$config = array(		'o_cur_version'				=> "'".FORUM_VERSION."'",		'o_database_revision'		=> "'".FORUM_DB_REVISION."'",		'o_board_title'				=> "'".$forum_db->escape($board_title)."'",		'o_board_desc'				=> "'".$forum_db->escape($board_descrip)."'",		'o_default_timezone'		=> "'0'",		'o_time_format'				=> "'H:i:s'",		'o_date_format'				=> "'Y-m-d'",		'o_check_for_updates'		=> "'$check_for_updates'",		'o_check_for_versions'		=> "'$check_for_updates'",		'o_timeout_visit'			=> "'5400'",		'o_timeout_online'			=> "'300'",		'o_redirect_delay'			=> "'0'",		'o_show_version'			=> "'0'",		'o_show_user_info'			=> "'1'",		'o_show_post_count'			=> "'1'",		'o_signatures'				=> "'1'",		'o_smilies'					=> "'1'",		'o_smilies_sig'				=> "'1'",		'o_make_links'				=> "'1'",		'o_default_lang'			=> "'".$forum_db->escape($default_lang)."'",		'o_default_style'			=> "'Oxygen'",		'o_default_user_group'		=> "'3'",		'o_topic_review'			=> "'15'",		'o_disp_topics_default'		=> "'30'",		'o_disp_posts_default'		=> "'25'",		'o_indent_num_spaces'		=> "'4'",		'o_quote_depth'				=> "'3'",		'o_quickpost'				=> "'1'",		'o_users_online'			=> "'1'",		'o_censoring'				=> "'0'",		'o_ranks'					=> "'1'",		'o_show_dot'				=> "'0'",		'o_topic_views'				=> "'1'",		'o_quickjump'				=> "'1'",		'o_gzip'					=> "'0'",		'o_additional_navlinks'		=> "''",		'o_report_method'			=> "'0'",		'o_regs_report'				=> "'0'",		'o_default_email_setting'	=> "'1'",		'o_mailing_list'			=> "'".$forum_db->escape($email)."'",		'o_avatars'					=> "'$avatars'",		'o_avatars_dir'				=> "'img/avatars'",		'o_avatars_width'			=> "'60'",		'o_avatars_height'			=> "'60'",		'o_avatars_size'			=> "'15360'",		'o_search_all_forums'		=> "'1'",		'o_sef'						=> "'Default'",		'o_admin_email'				=> "'".$forum_db->escape($email)."'",		'o_webmaster_email'			=> "'".$forum_db->escape($email)."'",		'o_subscriptions'			=> "'1'",		'o_smtp_host'				=> "NULL",		'o_smtp_user'				=> "NULL",		'o_smtp_pass'				=> "NULL",		'o_smtp_ssl'				=> "'0'",		'o_regs_allow'				=> "'1'",		'o_regs_verify'				=> "'0'",		'o_announcement'			=> "'0'",		'o_announcement_heading'	=> "'".$lang_install['Default announce heading']."'",		'o_announcement_message'	=> "'".$lang_install['Default announce message']."'",		'o_rules'					=> "'0'",		'o_rules_message'			=> "'".$lang_install['Default rules']."'",		'o_maintenance'				=> "'0'",		'o_maintenance_message'		=> "'".$lang_admin_settings['Maintenance message default']."'",		'o_default_dst'				=> "'0'",		'p_message_bbcode'			=> "'1'",		'p_message_img_tag'			=> "'1'",		'p_message_all_caps'		=> "'1'",		'p_subject_all_caps'		=> "'1'",		'p_sig_all_caps'			=> "'1'",		'p_sig_bbcode'				=> "'1'",		'p_sig_img_tag'				=> "'0'",		'p_sig_length'				=> "'400'",		'p_sig_lines'				=> "'4'",		'p_allow_banned_email'		=> "'1'",		'p_allow_dupe_email'		=> "'0'",		'p_force_guest_email'		=> "'1'",		'o_show_moderators'			=> "'0'"	);	foreach ($config as $conf_name => $conf_value)	{		$query = array(			'INSERT'	=> 'conf_name, conf_value',			'INTO'		=> 'config',			'VALUES'	=> '\''.$conf_name.'\', '.$conf_value.''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Insert some other default data	$query = array(		'INSERT'	=> 'cat_name, disp_position',		'INTO'		=> 'categories',		'VALUES'	=> '\''.$lang_install['Default category name'].'\', 1'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'forum_name, forum_desc, num_topics, num_posts, last_post, last_post_id, last_poster, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$lang_install['Default forum name'].'\', \''.$lang_install['Default forum descrip'].'\', 1, 1, '.$now.', 1, \''.$forum_db->escape($username).'\', 1, '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, subject, posted, first_post_id, last_post, last_post_id, last_poster, forum_id',		'INTO'		=> 'topics',		'VALUES'	=> '\''.$forum_db->escape($username).'\', \''.$lang_install['Default topic subject'].'\', '.$now.', 1, '.$now.', 1, \''.$forum_db->escape($username).'\', '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, poster_id, poster_ip, message, posted, topic_id',		'INTO'		=> 'posts',		'VALUES'	=> '\''.$forum_db->escape($username).'\', '.$new_uid.', \'127.0.0.1\', \''.$lang_install['Default post contents'].'\', '.$now.', '.$forum_db->insert_id().''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Add new post to search table	require FORUM_ROOT.'include/search_idx.php';	update_search_index('post', $forum_db->insert_id(), $lang_install['Default post contents'], $lang_install['Default topic subject']);	// Insert the default ranks	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 1'].'\', 0'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 2'].'\', 10'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_db->end_transaction();	$alerts = array();	// Check if the cache directory is writable	if (!is_writable(FORUM_ROOT.'cache/'))		$alerts[] = '<li><span>'.$lang_install['No cache write'].'</span></li>';	// Check if default avatar directory is writable	if (!is_writable(FORUM_ROOT.'img/avatars/'))		$alerts[] = '<li><span>'.$lang_install['No avatar write'].'</span></li>';	// Check if we disabled uploading avatars because file_uploads was disabled	if ($avatars == '0')		$alerts[] = '<li><span>'.$lang_install['File upload alert'].'</span></li>';	// Add some random bytes at the end of the cookie name to prevent collisions	$cookie_name = 'forum_cookie_'.random_key(6, false, true);	/// Generate the config.php file data	$config = generate_config_file();	// Attempt to write config.php and serve it up for download if writing fails	$written = false;	if (is_writable(FORUM_ROOT))	{		$fh = @fopen(FORUM_ROOT.'config.php', 'wb');		if ($fh)		{			fwrite($fh, $config);			fclose($fh);			$written = true;		}	}	if ($install_pun_repository && is_readable(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{		require FORUM_ROOT.'include/xml.php';		$ext_data = xml_to_array(file_get_contents(FORUM_ROOT.'extensions/pun_repository/manifest.xml'));		if (!empty($ext_data))		{			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\'pun_repository\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', NULL, NULL, \'||\'',			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (isset($ext_data['extension']['hooks']['hook']))			{				foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)				{					$cur_hooks = explode(',', $ext_hook['attributes']['id']);					foreach ($cur_hooks as $cur_hook)					{						$query = array(							'INSERT'	=> 'id, extension_id, code, installed, priority',							'INTO'		=> 'extension_hooks',							'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \'pun_repository\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)						);						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}			}		}	}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php printf($lang_install['Success description'], FORUM_VERSION) ?></p></div><div id="brd-visit" class="gen-content">	<p><?php echo $lang_install['Success welcome'] ?></p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span><?php echo $lang_install['Final instructions'] ?></span></h1>	</div>	<div class="main-content main-frm"><?php if (!empty($alerts)): ?>		<div class="ct-box error-box">			<p class="warn"><strong><?php echo $lang_install['Warning'] ?></strong></p>			<ul>				<?php echo implode("\n\t\t\t\t", $alerts)."\n" ?>			</ul>		</div><?php endif;if (!$written){?>		<div class="ct-box info-box">			<p class="warn"><?php echo $lang_install['No write info 1'] ?></p>			<p class="warn"><?php printf($lang_install['No write info 2'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">			<div class="hidden">			<input type="hidden" name="generate_config" value="1" />			<input type="hidden" name="db_type" value="<?php echo $db_type; ?>" />			<input type="hidden" name="db_host" value="<?php echo $db_host; ?>" />			<input type="hidden" name="db_name" value="<?php echo forum_htmlencode($db_name); ?>" />			<input type="hidden" name="db_username" value="<?php echo forum_htmlencode($db_username); ?>" />			<input type="hidden" name="db_password" value="<?php echo forum_htmlencode($db_password); ?>" />			<input type="hidden" name="db_prefix" value="<?php echo forum_htmlencode($db_prefix); ?>" />			<input type="hidden" name="base_url" value="<?php echo forum_htmlencode($base_url); ?>" />			<input type="hidden" name="cookie_name" value="<?php echo forum_htmlencode($cookie_name); ?>" />			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" value="<?php echo $lang_install['Download config'] ?>" /></span>			</div>		</form><?php}else{?>		<div class="ct-box info-box">			<p class="warn"><?php printf($lang_install['Write info'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div><?php}?>	</div></div></div></div></body></html><?php}
<?php/** * Edit post page. * * Modifies the contents of the specified post. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ed_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request']);// Fetch some info about the post, the topic and the forum$query = array(	'SELECT'	=> 'f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies',	'FROM'		=> 'posts AS p',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'topics AS t',			'ON'			=> 't.id=p.topic_id'		),		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'f.id=t.forum_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id);($hook = get_hook('ed_qr_get_post_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_post = $forum_db->fetch_assoc($result);if (!$cur_post)	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('ed_pre_permission_check')) ? eval($hook) : null;// Do we have permission to edit this post?if (($forum_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $forum_user['id'] ||	$cur_post['closed'] == '1') &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);$can_edit_subject = $id == $cur_post['first_post_id'];($hook = get_hook('ed_post_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	($hook = get_hook('ed_form_submitted')) ? eval($hook) : null;	// If it is a topic it must contain a subject	if ($can_edit_subject)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$subject = utf8_ucwords(utf8_strtolower($subject));	}	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$message = utf8_ucwords(utf8_strtolower($message));	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	($hook = get_hook('ed_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		($hook = get_hook('ed_pre_post_edited')) ? eval($hook) : null;		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'subject=\''.$forum_db->escape($subject).'\'',				'WHERE'		=> 'id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']			);			($hook = get_hook('ed_qr_update_subject')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'message=\''.$forum_db->escape($message).'\', hide_smilies=\''.$hide_smilies.'\'',			'WHERE'		=> 'id='.$id		);		if (!isset($_POST['silent']) || !$forum_page['is_admmod'])			$query['SET'] .= ', edited='.time().', edited_by=\''.$forum_db->escape($forum_user['username']).'\'';		($hook = get_hook('ed_qr_update_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		($hook = get_hook('ed_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $id), $lang_post['Edit redirect']);	}}// Setup error messagesif (!empty($errors)){	$forum_page['errors'] = array();	foreach ($errors as $cur_error)		$forum_page['errors'][] = '<li><span>'.$cur_error.'</span></li>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['edit'], $id);$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['main_head_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_post['forum_name'], forum_link($forum_url['forum'], array($cur_post['fid'], sef_friendly($cur_post['forum_name'])))),	array($cur_post['subject'], forum_link($forum_url['topic'], array($cur_post['tid'], sef_friendly($cur_post['subject'])))),	(($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply']));($hook = get_hook('ed_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'postedit');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ed_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo ($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($forum_page['errors'])){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($id == $cur_post['first_post_id']) ? $lang_post['Topic byline'] : $lang_post['Reply byline']), '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	$forum_page['preview_message'] = parse_message($message, $hide_smilies);	($hook = get_hook('ed_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $id == $cur_post['first_post_id'] ? $lang_post['Preview edited topic'] : $lang_post['Preview edited reply'] ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('ed_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('ed_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Compose edited reply'] : $lang_post['Compose edited topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";// If there were any errors, show themif (isset($forum_page['errors'])){?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_post['Post errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('ed_pre_main_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Edit post legend'] ?></strong></legend><?php ($hook = get_hook('ed_pre_subject')) ? eval($hook) : null; ?><?php if ($can_edit_subject): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" size="70" maxlength="70" value="<?php echo forum_htmlencode(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('ed_pre_message_box')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo forum_htmlencode(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';	else		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';}if ($forum_page['is_admmod']){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';	else		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';}($hook = get_hook('ed_pre_checkbox_display')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('ed_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('ed_pre_main_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('ed_main_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php$forum_id = $cur_post['fid'];($hook = get_hook('ed_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * External syndication script * * Allows forum content to be syndicated outside of the site in various formats * (ie: RSS, Atom, XML, HTML). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB *//***********************************************************************  INSTRUCTIONS  This script is used to include information about your board from  pages outside the forums and to syndicate news about recent  discussions via RSS/Atom/XML. The script can display a list of  recent discussions, a list of active users or a collection of  general board statistics. The script can be called directly via  an URL, from a PHP include command or through the use of Server  Side Includes (SSI).  The scripts behaviour is controlled via variables supplied in the  URL to the script. The different variables are: action (what to  do), show (how many items to display), fid (the ID or ID's of  the forum(s) to poll for topics), nfid (the ID or ID's of forums  that should be excluded), tid (the ID of the topic from which to  display posts) and type (output as HTML or RSS). The only  mandatory variable is action. Possible/default values are:    action: feed - show most recent topics/posts (HTML or RSS)            online - show users online (HTML)            online_full - as above, but includes a full list (HTML)            stats - show board statistics (HTML)    type:   rss - output as RSS 2.0            atom - output as Atom 1.0            xml - output as XML            html - output as HTML (<li>'s)    fid:    One or more forum ID's (comma-separated). If ignored,            topics from all readable forums will be pulled.    nfid:   One or more forum ID's (comma-separated) that are to be            excluded. E.g. the ID of a a test forum.    tid:    A topic ID from which to show posts. If a tid is supplied,            fid and nfid are ignored.    show:   Any integer value between 1 and 50. The default is 15./***********************************************************************/define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ex_start')) ? eval($hook) : null;// The length at which topic subjects will be truncated (for HTML output)if (!defined('FORUM_EXTERN_MAX_SUBJECT_LENGTH'))    define('FORUM_EXTERN_MAX_SUBJECT_LENGTH', 30);// If we're a guest and we've sent a username/pass, we can try to authenticate using those detailsif ($forum_user['is_guest'] && isset($_SERVER['PHP_AUTH_USER']))	authenticate_user($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']);if ($forum_user['g_read_board'] == '0'){	http_authenticate_user();	exit($lang_common['No view']);}$action = isset($_GET['action']) ? $_GET['action'] : 'feed';//// Sends the proper headers for Basic HTTP Authentication//function http_authenticate_user(){	global $forum_config, $forum_user;	if (!$forum_user['is_guest'])		return;	header('WWW-Authenticate: Basic realm="'.$forum_config['o_board_title'].' External Syndication"');	header('HTTP/1.0 401 Unauthorized');}//// Output $feed as RSS 2.0//function output_rss($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<channel>'."\n";	echo "\t\t".'<title><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t\t".'<link>'.$feed['link'].'</link>'."\n";	echo "\t\t".'<atom:link href="'.forum_htmlencode(get_current_url()).'" rel="self" type="application/rss+xml" />'."\n";	echo "\t\t".'<description><![CDATA['.escape_cdata($feed['description']).']]></description>'."\n";	echo "\t\t".'<lastBuildDate>'.gmdate('r', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</lastBuildDate>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t\t".'<generator>PunBB '.$forum_config['o_cur_version'].'</generator>'."\n";	else		echo "\t\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_rss_info')) ? eval($hook) : null;	foreach ($feed['items'] as $item)	{		echo "\t\t".'<item>'."\n";		echo "\t\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t\t".'<description><![CDATA['.escape_cdata($item['description']).']]></description>'."\n";		echo "\t\t\t".'<author><![CDATA['.(isset($item['author']['email']) ? escape_cdata($item['author']['email']) : 'null@example.com').' ('.escape_cdata($item['author']['name']).')]]></author>'."\n";		echo "\t\t\t".'<pubDate>'.gmdate('r', $item['pubdate']).'</pubDate>'."\n";		echo "\t\t\t".'<guid>'.$item['link'].'</guid>'."\n";		($hook = get_hook('ex_add_new_rss_item_info')) ? eval($hook) : null;		echo "\t\t".'</item>'."\n";	}	echo "\t".'</channel>'."\n";	echo '</rss>'."\n";}//// Output $feed as Atom 1.0//function output_atom($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<feed xmlns="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<title type="html"><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t".'<link rel="self" href="'.forum_htmlencode(get_current_url()).'"/>'."\n";	echo "\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</updated>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t".'<generator version="'.$forum_config['o_cur_version'].'">PunBB</generator>'."\n";	else		echo "\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_atom_info')) ? eval($hook) : null;	echo "\t".'<id>'.$feed['link'].'</id>'."\n";	$content_tag = ($feed['type'] == 'posts') ? 'content' : 'summary';	foreach ($feed['items'] as $item)	{		echo "\t\t".'<entry>'."\n";		echo "\t\t\t".'<title type="html"><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link rel="alternate" href="'.$item['link'].'"/>'."\n";		echo "\t\t\t".'<'.$content_tag.' type="html"><![CDATA['.escape_cdata($item['description']).']]></'.$content_tag.'>'."\n";		echo "\t\t\t".'<author>'."\n";		echo "\t\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t\t".'</author>'."\n";		echo "\t\t\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', $item['pubdate']).'</updated>'."\n";		($hook = get_hook('ex_add_new_atom_item_info')) ? eval($hook) : null;		echo "\t\t\t".'<id>'.$item['link'].'</id>'."\n";		echo "\t\t".'</entry>'."\n";	}	echo '</feed>'."\n";}//// Output $feed as XML//function output_xml($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: application/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<source>'."\n";	echo "\t".'<url>'.$feed['link'].'</url>'."\n";	($hook = get_hook('ex_add_new_xml_info')) ? eval($hook) : null;	$forum_tag = ($feed['type'] == 'posts') ? 'post' : 'topic';	foreach ($feed['items'] as $item)	{		echo "\t".'<'.$forum_tag.' id="'.$item['id'].'">'."\n";		echo "\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t".'<content><![CDATA['.escape_cdata($item['description']).']]></content>'."\n";		echo "\t\t".'<author>'."\n";		echo "\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t".'</author>'."\n";		echo "\t\t".'<posted>'.gmdate('r', $item['pubdate']).'</posted>'."\n";		($hook = get_hook('ex_add_new_xml_item_info')) ? eval($hook) : null;		echo "\t".'</'.$forum_tag.'>'."\n";	}	echo '</source>'."\n";}//// Output $feed as HTML (using <li> tags)//function output_html($feed){	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	foreach ($feed['items'] as $item)	{		if (utf8_strlen($item['title']) > FORUM_EXTERN_MAX_SUBJECT_LENGTH)			$subject_truncated = forum_htmlencode(forum_trim(utf8_substr($item['title'], 0, (FORUM_EXTERN_MAX_SUBJECT_LENGTH - 5)))).'';		else			$subject_truncated = forum_htmlencode($item['title']);		echo '<li><a href="'.$item['link'].'" title="'.forum_htmlencode($item['title']).'">'.$subject_truncated.'</a></li>'."\n";	}}// Show recent discussionsif ($action == 'feed'){	// Determine what type of feed to output	$type = isset($_GET['type']) && in_array($_GET['type'], array('html', 'rss', 'atom', 'xml')) ? $_GET['type'] : 'html';	$show = isset($_GET['show']) ? intval($_GET['show']) : 15;	if ($show < 1 || $show > 50)		$show = 15;	($hook = get_hook('ex_set_syndication_type')) ? eval($hook) : null;	// Was a topic ID supplied?	if (isset($_GET['tid']))	{		$tid = intval($_GET['tid']);		// Fetch topic subject		$query = array(			'SELECT'	=> 't.subject, t.first_post_id',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.moved_to IS NULL and t.id='.$tid		);		($hook = get_hook('ex_qr_get_topic_data')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$cur_topic = $forum_db->fetch_assoc($result);		if (!$cur_topic)		{			http_authenticate_user();			exit($lang_common['Bad request']);		}		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$lang_common['Title separator'].$cur_topic['subject'],			'link'			=>	forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))),			'description'	=>	sprintf($lang_common['RSS description topic'], $cur_topic['subject']),			'items'			=>	array(),			'type'			=>	'posts'		);		// Fetch $show posts		$query = array(			'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted, p.poster_id, u.email_setting, u.email, p.poster_email',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				)			),			'WHERE'		=> 'p.topic_id='.$tid,			'ORDER BY'	=> 'p.posted DESC',			'LIMIT'		=> $show		);		($hook = get_hook('ex_qr_get_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_post = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')				$cur_post['message'] = censor_words($cur_post['message']);			$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);			$item = array(				'id'			=>	$cur_post['id'],				'title'			=>	$cur_topic['first_post_id'] == $cur_post['id'] ? $cur_topic['subject'] : $lang_common['RSS reply'].$cur_topic['subject'],				'link'			=>	forum_link($forum_url['post'], $cur_post['id']),				'description'	=>	$cur_post['message'],				'author'		=>	array(					'name'	=> $cur_post['poster'],				),				'pubdate'		=>	$cur_post['posted']			);			if ($cur_post['poster_id'] > 1)			{				if ($cur_post['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_post['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_post['poster_id']);			}			else if ($cur_post['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_post['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_post_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_topic_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	else	{		$forum_name = '';		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Were any forum ID's supplied?		if (isset($_GET['fid']) && is_scalar($_GET['fid']) && $_GET['fid'] != '')		{			$fids = explode(',', forum_trim($_GET['fid']));			$fids = array_map('intval', $fids);			if (!empty($fids))				$forum_sql = ' AND t.forum_id IN('.implode(',', $fids).')';			if (count($fids) == 1)			{				// Fetch forum name				$query = array(					'SELECT'	=> 'f.forum_name',					'FROM'		=> 'forums AS f',					'JOINS'		=> array(						array(							'LEFT JOIN'		=> 'forum_perms AS fp',							'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'						)					),					'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fids[0]				);				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$forum_name_in_db = $forum_db->result($result);				if ($forum_name_in_db !== false)					$forum_name = $lang_common['Title separator'].$forum_name_in_db;			}		}		// Any forum ID's to exclude?		if (isset($_GET['nfid']) && is_scalar($_GET['nfid']) && $_GET['nfid'] != '')		{			$nfids = explode(',', forum_trim($_GET['nfid']));			$nfids = array_map('intval', $nfids);			if (!empty($nfids))				$forum_sql = ' AND t.forum_id NOT IN('.implode(',', $nfids).')';		}		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$forum_name,			'link'			=>	forum_link($forum_url['index']),			'description'	=>	sprintf($lang_common['RSS description'], $forum_config['o_board_title']),			'items'			=>	array(),			'type'			=>	'topics'		);		// Fetch $show topics		$query = array(			'SELECT'	=> 't.id, t.poster, t.posted, t.subject, p.message, p.hide_smilies, u.email_setting, u.email, p.poster_id, p.poster_email',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'posts AS p',					'ON'			=> 'p.id = t.first_post_id'				),				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id = t.forum_id AND fp.group_id = '.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum = 1) AND t.moved_to IS NULL',			'ORDER BY'	=> 't.posted DESC',			'LIMIT'		=> $show		);		if (isset($forum_sql))			$query['WHERE'] .= $forum_sql;		($hook = get_hook('ex_qr_get_topics')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_topic = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')			{				$cur_topic['subject'] = censor_words($cur_topic['subject']);				$cur_topic['message'] = censor_words($cur_topic['message']);			}			$cur_topic['message'] = parse_message($cur_topic['message'], $cur_topic['hide_smilies']);			$item = array(				'id'			=>	$cur_topic['id'],				'title'			=>	$cur_topic['subject'],				'link'			=>	forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))),				'description'	=>	$cur_topic['message'],				'author'		=>	array(					'name'			=> $cur_topic['poster']				),				'pubdate'		=>	$cur_topic['posted']			);			if ($cur_topic['poster_id'] > 1)			{				if ($cur_topic['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_topic['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_topic['poster_id']);			}			else if ($cur_topic['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_topic['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_topic_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_forum_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	exit;}// Show users onlineelse if ($action == 'online' || $action == 'online_full'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Fetch users online info and generate strings for output	$num_guests = $num_users = 0;	$users = array();	$query = array(		'SELECT'	=> 'o.user_id, o.ident',		'FROM'		=> 'online AS o',		'WHERE'		=> 'o.idle=0',		'ORDER BY'	=> 'o.ident'	);	($hook = get_hook('ex_qr_get_users_online')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($forum_user_online = $forum_db->fetch_assoc($result))	{		if ($forum_user_online['user_id'] > 1)		{			$users[] = $forum_user['g_view_users'] == '1' ?'<a href="'.forum_link($forum_url['user'], $forum_user_online['user_id']).'">'.forum_htmlencode($forum_user_online['ident']).'</a>' : forum_htmlencode($forum_user_online['ident']);			++$num_users;		}		else			++$num_guests;	}	($hook = get_hook('ex_pre_online_output')) ? eval($hook) : null;	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo $lang_index['Guests online'].': '.forum_number_format($num_guests).'<br />'."\n";	if ($_GET['action'] == 'online_full' && !empty($users))		echo $lang_index['Users online'].': '.implode($lang_index['Online list separator'], $users).'<br />'."\n";	else		echo $lang_index['Users online'].': '.forum_number_format($num_users).'<br />'."\n";	exit;}// Show board statisticselse if ($action == 'stats'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ex_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ex_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ex_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	($hook = get_hook('ex_pre_stats_output')) ? eval($hook) : null;	echo sprintf($lang_index['No of users'], forum_number_format($stats['total_users'])).'<br />'."\n";	echo sprintf($lang_index['Newest user'], '<a href="'.forum_link($forum_url['user'], $stats['last_user']['id']).'">'.forum_htmlencode($stats['last_user']['username']).'</a>').'<br />'."\n";	echo sprintf($lang_index['No of topics'], forum_number_format($stats['total_topics'])).'<br />'."\n";	echo sprintf($lang_index['No of posts'], forum_number_format($stats['total_posts'])).'<br />'."\n";	exit;}($hook = get_hook('ex_new_action')) ? eval($hook) : null;// If we end up here, the script was called with some wacky parametersexit($lang_common['Bad request']);
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
<?php/** * Outputs the header used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Send no-cache headersheader('Expires: Thu, 21 Jul 1977 07:30:00 GMT');	// When yours truly first set eyes on this world! :)header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');header('Cache-Control: post-check=0, pre-check=0', false);header('Pragma: no-cache');		// For HTTP/1.0 compability// Send the Content-type header in case the web server is setup to send something elseheader('Content-type: text/html; charset=utf-8');// Load the main templateif (substr(FORUM_PAGE, 0, 5) == 'admin'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/admin.tpl';}else if (FORUM_PAGE == 'help'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/help.tpl';}else{	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/main.tpl';}($hook = get_hook('hd_pre_template_loaded')) ? eval($hook) : null;$tpl_main = file_get_contents($tpl_path);($hook = get_hook('hd_template_loaded')) ? eval($hook) : null;// START SUBST - <!-- forum_include "*" -->while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_main, $cur_include)){	if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))		error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template main.tpl. There is no such file in folder /include/user/', __FILE__, __LINE__);	ob_start();	include FORUM_ROOT.'include/user/'.$cur_include[1];	$tpl_temp = ob_get_contents();	$tpl_main = str_replace($cur_include[0], $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_include "*" -->// START SUBST - <!-- forum_local -->$tpl_main = str_replace('<!-- forum_local -->', 'lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_main);// END SUBST - <!-- forum_local -->// START SUBST - <!-- forum_head -->// Is this a page that we want search index spiders to index?if (!defined('FORUM_ALLOW_INDEX'))	$forum_head['robots'] = '<meta name="ROBOTS" content="NOINDEX, FOLLOW" />';else	$forum_head['descriptions'] = '<meta name="description" content="'.generate_crumbs(true).$lang_common['Title separator'].forum_htmlencode($forum_config['o_board_desc']).'" />';// Should we output a MicroID? http://microid.org/if (strpos(FORUM_PAGE, 'profile') === 0)	$forum_head['microid'] = '<meta name="microid" content="mailto+http:sha1:'.sha1(sha1('mailto:'.$user['email']).sha1(forum_link($forum_url['user'], $id))).'" />';$forum_head['title'] = '<title>'.generate_crumbs(true).'</title>';// Should we output feed links?if (FORUM_PAGE == 'index'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['index_rss']).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['index_atom']).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewforum'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['forum_rss'], $id).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['forum_atom'], $id).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewtopic'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['topic_rss'], $id).'" title="RSS" />';	$forum_head['atom'] =  '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['topic_atom'], $id).'" title="ATOM" />';}$forum_head['top'] = '<link rel="top" href="'.$base_url.'" title="'.$lang_common['Forum index'].'" />';// If there are more than two breadcrumbs, add the "up" link (second last)if (count($forum_page['crumbs']) > 2)	$forum_head['up'] = '<link rel="up" href="'.$forum_page['crumbs'][count($forum_page['crumbs']) - 2][1].'" title="'.forum_htmlencode($forum_page['crumbs'][count($forum_page['crumbs']) - 2][0]).'" />';// If there are other page navigation links (first, next, prev and last)if (!empty($forum_page['nav']))	$forum_head['nav'] = implode("\n", $forum_page['nav']);$forum_head['search'] = '<link rel="search" href="'.forum_link($forum_url['search']).'" title="'.$lang_common['Search'].'" />';$forum_head['author'] = '<link rel="author" href="'.forum_link($forum_url['users']).'" title="'.$lang_common['User list'].'" />';ob_start();// Include stylesheetsrequire FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';$head_temp = forum_trim(ob_get_contents());$num_temp = 0;foreach (explode("\n", $head_temp) as $style_temp)	$forum_head['style'.$num_temp++] = $style_temp;ob_end_clean();($hook = get_hook('hd_head')) ? eval($hook) : null;// Render CSS from forum_loader$tmp_head = implode("\n", $forum_head).$forum_loader->render_css();$tpl_main = str_replace('<!-- forum_head -->', $tmp_head, $tpl_main);unset($forum_head, $tmp_head);// END SUBST - <!-- forum_head -->// START SUBST OF COMMON ELEMENTS// Setup array of general elements$gen_elements = array();// Forum page id and classesif (!defined('FORUM_PAGE_TYPE')){	if (substr(FORUM_PAGE, 0, 5) == 'admin')		define('FORUM_PAGE_TYPE', 'admin-page');	else	{		if (!empty($forum_page['page_post']))			define('FORUM_PAGE_TYPE', 'paged-page');		else if (!empty($forum_page['main_menu']))			define('FORUM_PAGE_TYPE', 'menu-page');		else			define('FORUM_PAGE_TYPE', 'basic-page');	}}$gen_elements['<!-- forum_page -->'] = 'id="brd-'.FORUM_PAGE.'" class="brd-page '.FORUM_PAGE_TYPE.'"';// Skip link$gen_elements['<!-- forum_skip -->'] = '<p id="brd-access"><a href="#brd-main">'.$lang_common['Skip to content'].'</a></p>';// Forum Title$gen_elements['<!-- forum_title -->'] = '<p id="brd-title"><a href="'.forum_link($forum_url['index']).'">'.forum_htmlencode($forum_config['o_board_title']).'</a></p>';// Forum Description$gen_elements['<!-- forum_desc -->'] = ($forum_config['o_board_desc'] != '') ? '<p id="brd-desc">'.forum_htmlencode($forum_config['o_board_desc']).'</p>' : '';// Main Navigation$gen_elements['<!-- forum_navlinks -->'] = '<ul>'."\n\t\t".generate_navlinks()."\n\t".'</ul>';// Announcement$gen_elements['<!-- forum_announcement -->'] = ($forum_config['o_announcement'] == '1' && $forum_user['g_read_board'] == '1') ? '<div id="brd-announcement" class="gen-content">'.($forum_config['o_announcement_heading'] != '' ? "\n\t".'<h1 class="hn"><span>'.$forum_config['o_announcement_heading'].'</span></h1>' : '')."\n\t".'<div class="content">'.$forum_config['o_announcement_message'].'</div>'."\n".'</div>'."\n" : '';// Flash messages$gen_elements['<!-- forum_messages -->'] = '<div id="brd-messages" class="brd">'.$forum_flash->show(true).'</div>'."\n";// Maintenance Warning$gen_elements['<!-- forum_maint -->'] = ($forum_user['g_id'] == FORUM_ADMIN && $forum_config['o_maintenance'] == '1') ? '<p id="maint-alert" class="warn">'.sprintf($lang_common['Maintenance warning'], '<a href="'.forum_link($forum_url['admin_settings_maintenance']).'">'.$lang_common['Maintenance mode'].'</a>').'</p>' : '';($hook = get_hook('hd_gen_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($gen_elements), array_values($gen_elements), $tpl_main);unset($gen_elements);// END SUBST OF COMMON ELEMENTS// START SUBST VISIT ELEMENTS$visit_elements = array();if ($forum_user['is_guest'])	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.$lang_common['Not logged in'].'</span> <span>'.$lang_common['Login nag'].'</span></p>';else	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.sprintf($lang_common['Logged in as'], '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span> <span>'.sprintf($lang_common['Last visit'], format_time($forum_user['last_visit'])).'</span></p>';if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1'){	$visit_links = array();	if (!$forum_user['is_guest'])		$visit_links['newposts'] = '<span id="visit-new"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_new']).'" title="'.$lang_common['New posts title'].'">'.$lang_common['New posts'].'</a></span>';	$visit_links['recent'] = '<span id="visit-recent"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_recent']).'" title="'.$lang_common['Active topics title'].'">'.$lang_common['Active topics'].'</a></span>';	$visit_links['unanswered'] = '<span id="visit-unanswered"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_unanswered']).'" title="'.$lang_common['Unanswered topics title'].'">'.$lang_common['Unanswered topics'].'</a></span>';}$visit_elements['<!-- forum_visit -->'] = (!empty($visit_links)) ? '<p id="visit-links" class="options">'.implode(' ', $visit_links).'</p>' : '';($hook = get_hook('hd_visit_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($visit_elements), array_values($visit_elements), $tpl_main);unset($visit_elements);// END SUBST VISIT ELEMENTS// START SUBST - <!-- forum_admod -->$admod_links = array();// We only need to run this query for mods/admins if there will actually be reports to look atif ($forum_user['is_admmod'] && $forum_config['o_report_method'] != 1){	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'reports AS r',		'WHERE'		=> 'r.zapped IS NULL',	);	($hook = get_hook('hd_qr_get_unread_reports_count')) ? eval($hook) : null;	$result_header = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result_header))		$admod_links['reports'] = '<span id="reports"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_common['New reports'].'</a></span>';}if ($forum_user['g_id'] == FORUM_ADMIN){	$alert_items = array();	// Warn the admin that maintenance mode is enabled	if ($forum_config['o_maintenance'] == '1')		$alert_items['maintenance'] = '<p id="maint-alert" class="warn">'.$lang_common['Maintenance alert'].'</p>';	if ($forum_config['o_check_for_updates'] == '1')	{		if ($forum_updates['fail'])			$alert_items['update_fail'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.$lang_common['Updates failed'].'</p>';		else if (isset($forum_updates['version']) && isset($forum_updates['hotfix']))			$alert_items['update_version_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version n hf'], $forum_updates['version'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';		else if (isset($forum_updates['version']))			$alert_items['update_version'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version'], $forum_updates['version']).'</p>';		else if (isset($forum_updates['hotfix']))			$alert_items['update_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates hf'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';	}	// Warn the admin that their version of the database is newer than the version supported by the code	// NOTE: Why is it done on any page, but shown in admin section only.	if ($forum_config['o_database_revision'] > FORUM_DB_REVISION)		$alert_items['newer_database'] = '<p><strong>'.$lang_common['Database mismatch'].'</strong> '.$lang_common['Database mismatch alert'].'</p>';	if (!empty($alert_items))		$admod_links['alert'] = '<span id="alert"><a href="'.forum_link($forum_url['admin_index']).'"><strong>'.$lang_common['New alerts'].'</strong></a></span>';	($hook = get_hook('hd_alert')) ? eval($hook) : null;}$tpl_main = str_replace('<!-- forum_admod -->', (!empty($admod_links)) ? '<p id="brd-admod">'.implode(' ', $admod_links).'</p>' : '', $tpl_main);// END SUBST - <!-- forum_admod -->// MAIN SECTION INTERFACE ELEMENT SUBSTITUTION$main_elements = array();// Top breadcrumbs$main_elements['<!-- forum_crumbs_top -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-top" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Bottom breadcrumbs$main_elements['<!-- forum_crumbs_end -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-end" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Main section heading$main_elements['<!-- forum_main_title -->'] =  '<h1 class="main-title">'.((isset($forum_page['main_title'])) ? $forum_page['main_title'] : forum_htmlencode(is_array($last_crumb = end($forum_page['crumbs'])) ? reset($last_crumb) : $last_crumb)).(isset($forum_page['main_head_pages']) ? ' <small>'.$forum_page['main_head_pages'].'</small>' : '').'</h1>'."\n";// Top pagination and post links$main_elements['<!-- forum_main_pagepost_top -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-top" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Bottom pagination and postlink$main_elements['<!-- forum_main_pagepost_end -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-end" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Main section menu e.g. profile menu$main_elements['<!-- forum_main_menu -->'] = (!empty($forum_page['main_menu'])) ? '<div class="main-menu gen-content">'."\n\t".'<ul>'."\n\t\t".implode("\n\t\t", $forum_page['main_menu'])."\n\t".'</ul>'."\n".'</div>' : '';// Main section menu e.g. profile menuif (substr(FORUM_PAGE, 0, 5) == 'admin' && FORUM_PAGE_TYPE != 'paged'){	$main_elements['<!-- forum_admin_menu -->'] = '<div class="admin-menu gen-content">'."\n\t".'<ul>'."\n\t\t".generate_admin_menu(false)."\n\t".'</ul>'."\n".'</div>';	$forum_page['admin_sub'] = generate_admin_menu(true);		$main_elements['<!-- forum_admin_submenu -->'] = ($forum_page['admin_sub'] != '') ? '<div class="admin-submenu gen-content">'."\n\t".'<ul>'."\n\t\t".$forum_page['admin_sub']."\n\t".'</ul>'."\n".'</div>' : '';}($hook = get_hook('hd_main_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($main_elements),  array_values($main_elements), $tpl_main);unset($main_elements);// END MAIN SECTION INTERFACE ELEMENT SUBSTITUTION($hook = get_hook('hd_end')) ? eval($hook) : null;if (!defined('FORUM_HEADER'))	define('FORUM_HEADER', 1);
<?php/** * Caching functions. * * This file contains all of the functions used to generate the cache files used by the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Safe create or write of cache files// Use LOCKfunction write_cache_file($file, $content){	$tmp_file = tempnam(FORUM_CACHE_DIR, md5($file.time().uniqid()));	if (!$tmp_file)	{		return false;	}	$fh = @/**/fopen($tmp_file, 'wb');	if (!$fh)	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	// Write	fwrite($fh, $content);	fclose($fh);	// Rename TMP to file	if (!@/**/rename($tmp_file, $file))	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	return true;}//// Generate the config cache PHP script//function generate_config_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_config_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the forum config from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'config AS c'	);	($hook = get_hook('ch_fn_generate_config_cache_qr_get_config')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_config_item = $forum_db->fetch_row($result))		$output[$cur_config_item[0]] = $cur_config_item[1];	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_config.php', '<?php'."\n\n".'define(\'FORUM_CONFIG_LOADED\', 1);'."\n\n".'$forum_config = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the bans cache PHP script//function generate_bans_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_bans_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the ban list from the DB	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id'	);	($hook = get_hook('ch_fn_generate_bans_cache_qr_get_bans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_ban = $forum_db->fetch_assoc($result))		$output[] = $cur_ban;	// Output ban list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_bans.php', '<?php'."\n\n".'define(\'FORUM_BANS_LOADED\', 1);'."\n\n".'$forum_bans = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write bans cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the ranks cache PHP script//function generate_ranks_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_ranks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the rank list from the DB	$query = array(		'SELECT'	=> 'r.*',		'FROM'		=> 'ranks AS r',		'ORDER BY'	=> 'r.min_posts'	);	($hook = get_hook('ch_fn_generate_ranks_cache_qr_get_ranks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_rank = $forum_db->fetch_assoc($result))		$output[] = $cur_rank;	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ranks.php', '<?php'."\n\n".'define(\'FORUM_RANKS_LOADED\', 1);'."\n\n".'$forum_ranks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write ranks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the forum stats cache PHP script//function generate_stats_cache(){	global $forum_db;	$stats = array();	$return = ($hook = get_hook('ch_fn_generate_stats_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	// Get last registered user info	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	// Get num topics and posts	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	$stats['cached'] = time();	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_stats.php', '<?php'."\n\n".'if (!defined(\'FORUM_STATS_LOADED\')) define(\'FORUM_STATS_LOADED\', 1);'."\n\n".'$forum_stats = '.var_export($stats, true).';'."\n\n".'?>'))	{		error('Unable to write stats cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}	unset($stats);}//// Generate the censor cache PHP script//function generate_censors_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_censors_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the censor list from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'censoring AS c',		'ORDER BY'	=> 'c.search_for'	);	($hook = get_hook('ch_fn_generate_censors_cache_qr_get_censored_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_censor = $forum_db->fetch_assoc($result))		$output[] = $cur_censor;	// Output censors list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_censors.php', '<?php'."\n\n".'define(\'FORUM_CENSORS_LOADED\', 1);'."\n\n".'$forum_censors = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write censor cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate quickjump cache PHP scripts//function generate_quickjump_cache($group_id = false){	global $forum_db, $lang_common, $forum_url, $forum_config, $forum_user, $base_url;	$return = ($hook = get_hook('ch_fn_generate_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);'."\n".'$forum_id = isset($forum_id) ? $forum_id : 0;'."\n\n".'?>';		$output .= '<form id="qjump" method="get" accept-charset="utf-8" action="'.$base_url.'/viewforum.php">'."\n\t".'<div class="frm-fld frm-select">'."\n\t\t".'<label for="qjump-select"><span><?php echo $lang_common[\'Jump to\'] ?>'.'</span></label><br />'."\n\t\t".'<span class="frm-input"><select id="qjump-select" name="id">'."\n";		// Get the list of categories and forums from the DB		$query = array(			'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',			'FROM'		=> 'categories AS c',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'c.id=f.cat_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$group_id.')'				)			),			'WHERE'		=> 'fp.read_forum IS NULL OR fp.read_forum=1',			'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_cats_and_forums')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forums = array();		while ($cur_forum = $forum_db->fetch_assoc($result))		{			$forums[] = $cur_forum;		}		$cur_category = 0;		$forum_count = 0;		$sef_friendly_names = array();		foreach ($forums as $cur_forum)		{			($hook = get_hook('ch_fn_generate_quickjump_cache_forum_loop_start')) ? eval($hook) : null;			if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?			{				if ($cur_category)					$output .= "\t\t\t".'</optgroup>'."\n";				$output .= "\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";				$cur_category = $cur_forum['cid'];			}			$sef_friendly_names[$cur_forum['fid']] = sef_friendly($cur_forum['forum_name']);			$redirect_tag = ($cur_forum['redirect_url'] != '') ? ' &gt;&gt;&gt;' : '';			$output .= "\t\t\t\t".'<option value="'.$cur_forum['fid'].'"<?php echo ($forum_id == '.$cur_forum['fid'].') ? \' selected="selected"\' : \'\' ?>>'.forum_htmlencode($cur_forum['forum_name']).$redirect_tag.'</option>'."\n";			$forum_count++;		}		$output .= "\t\t\t".'</optgroup>'."\n\t\t".'</select>'."\n\t\t".'<input type="submit" id="qjump-submit" value="<?php echo $lang_common[\'Go\'] ?>" /></span>'."\n\t".'</div>'."\n".'</form>'."\n";		$output .= '<script type="text/javascript">'."\n\t\t".'var forum_quickjump_url = "'.forum_link($forum_url['forum']).'";'."\n\t\t".'var sef_friendly_url_array = new Array('.count($forums).');';		foreach ($sef_friendly_names as $forum_id => $forum_name)			$output .= "\n\t".'sef_friendly_url_array['.$forum_id.'] = "'.forum_htmlencode($forum_name).'";';		$output .= "\n".'</script>'."\n";		if ($forum_count < 2)			$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);';		// Output quickjump as PHP code		if (!write_cache_file(FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php', $output))		{			error('Unable to write quickjump cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);		}	}}//// Clean quickjump cache PHP scripts//function clean_quickjump_cache($group_id = false){	global $forum_db;	$return = ($hook = get_hook('ch_fn_clean_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_clean_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		// Output quickjump as PHP code		$qj_cache_file = FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php';		if (file_exists($qj_cache_file))		{			unlink($qj_cache_file);		}	}}//// Generate the hooks cache PHP script//function generate_hooks_cache(){	global $forum_db, $forum_config, $base_url;	$return = ($hook = get_hook('ch_fn_generate_hooks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the hooks from the DB	$query = array(		'SELECT'	=> 'eh.id, eh.code, eh.extension_id, e.dependencies',		'FROM'		=> 'extension_hooks AS eh',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'extensions AS e',				'ON'			=> 'e.id=eh.extension_id'			)		),		'WHERE'		=> 'e.disabled=0',		'ORDER BY'	=> 'eh.priority, eh.installed'	);	($hook = get_hook('ch_fn_generate_hooks_cache_qr_get_hooks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_hook = $forum_db->fetch_assoc($result))	{		$load_ext_info = '$GLOBALS[\'ext_info_stack\'][] = array('."\n".			'\'id\'				=> \''.$cur_hook['extension_id'].'\','."\n".			'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'dependencies\'	=> array ('."\n";		$dependencies = explode('|', substr($cur_hook['dependencies'], 1, -1));		foreach ($dependencies as $cur_dependency)		{			// This happens if there are no dependencies because explode ends up returning an array with one empty element			if (empty($cur_dependency))				continue;			$load_ext_info .= '\''.$cur_dependency.'\'	=> array('."\n".				'\'id\'				=> \''.$cur_dependency.'\','."\n".				'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_dependency.'\','."\n".				'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_dependency.'\'),'."\n";		}		$load_ext_info .= ')'."\n".');'."\n".'$ext_info = $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$unload_ext_info = 'array_pop($GLOBALS[\'ext_info_stack\']);'."\n".'$ext_info = empty($GLOBALS[\'ext_info_stack\']) ? array() : $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$output[$cur_hook['id']][] = $load_ext_info."\n\n".$cur_hook['code']."\n\n".$unload_ext_info."\n";	}	// Output hooks as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_hooks.php', '<?php'."\n\n".'define(\'FORUM_HOOKS_LOADED\', 1);'."\n\n".'$forum_hooks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write hooks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the updates cache PHP script//function generate_updates_cache(){	global $forum_db, $forum_config;	$return = ($hook = get_hook('ch_fn_generate_updates_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of installed hotfix extensions	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id LIKE \'hotfix_%\''	);	($hook = get_hook('ch_fn_generate_updates_cache_qr_get_hotfixes')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$hotfixes = array();	while ($cur_ext_hotfix_id = $forum_db->fetch_row($result))	{		$hotfixes[] = urlencode($cur_ext_hotfix_id[0]);	}	// Contact the punbb.informer.com updates service	$result = get_remote_file('http://punbb.informer.com/update/?type=xml&version='.urlencode($forum_config['o_cur_version']).'&hotfixes='.implode(',', $hotfixes), 8);	// Make sure we got everything we need	if ($result != null && strpos($result['content'], '</updates>') !== false)	{		if (!defined('FORUM_XML_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/xml.php';		$output = xml_to_array(forum_trim($result['content']));		$output = current($output);		if (!empty($output['hotfix']) && is_array($output['hotfix']) && !is_array(current($output['hotfix'])))			$output['hotfix'] = array($output['hotfix']);		$output['cached'] = time();		$output['fail'] = false;	}	else	// If the update check failed, set the fail flag		$output = array('cached' => time(), 'fail' => true);	// This hook could potentially (and responsibly) be used by an extension to do its own little update check	($hook = get_hook('ch_fn_generate_updates_cache_write')) ? eval($hook) : null;	// Output update status as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_updates.php', '<?php'."\n\n".'if (!defined(\'FORUM_UPDATES_LOADED\')) define(\'FORUM_UPDATES_LOADED\', 1);'."\n\n".'$forum_updates = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write updates cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}function generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension){	$forum_ext_last_versions = array();	$forum_ext_repos = array();	foreach (array_unique(array_merge($repository_urls, $repository_url_by_extension)) as $url)	{		//Get repository timestamp		$remote_file = get_remote_file( $url.'/timestamp', 2);		$repository_timestamp = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);		unset($remote_file);		if (!is_numeric($repository_timestamp))			continue;		if (!isset( $forum_ext_repos[ $url ][ 'timestamp' ] ))			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		if ($forum_ext_repos[ $url ][ 'timestamp' ] <= $repository_timestamp)		{			foreach ($inst_exts as $ext)			{				$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastversion', 2);				$version = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);				unset($remote_file);				if (empty($version) || !preg_match('~^[0-9a-zA-Z\. +-]+$~u', $version))					continue;				$forum_ext_repos[ $url ][ 'extension_versions' ][ $ext['id'] ] = $version;				//If key with current extension exist in array, compare it with version in rep-ry				if (!isset($forum_ext_last_versions[ $ext['id'] ]) || ( version_compare($forum_ext_last_versions[ $ext['id'] ][ 'version' ], $version, '<') ) )				{					$forum_ext_last_versions[ $ext['id'] ] = array('version' => $version, 'repo_url' => $url);					$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastchanges', 2);					$last_changes = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);					unset($remote_file);					if ( !empty($last_changes) )						$forum_ext_last_versions[ $ext['id'] ][ 'changes' ] = $last_changes;				}			}			//Write timestamp to cache			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		}	}	if (array_keys($forum_ext_last_versions) != array_keys($inst_exts))		foreach ($inst_exts as $ext)			if ( !in_array($ext['id'], array_keys($forum_ext_last_versions)) )				$forum_ext_last_versions[$ext['id']] = array('version' => $ext['version'], 'repo_url' => '', 'changes' => '');	($hook = get_hook('ch_generate_ext_versions_cache_check_repository')) ? eval($hook) : null;	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ext_version_notifications.php', '<?php'."\n\n".'if (!defined(\'FORUM_EXT_VERSIONS_LOADED\')) define(\'FORUM_EXT_VERSIONS_LOADED\', 1);'."\n\n".'$forum_ext_repos = '.var_export($forum_ext_repos, true).';'."\n\n".' $forum_ext_last_versions = '.var_export($forum_ext_last_versions, true).";\n\n".'$forum_ext_versions_update_cache = '.time().";\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}define('FORUM_CACHE_FUNCTIONS_LOADED', 1);
<?php/** * Loads common data and performs various functions necessary for the site to work properly. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	exit('The constant FORUM_ROOT must be defined and point to a valid PunBB installation root directory.');if (!defined('FORUM_ESSENTIALS_LOADED'))	require FORUM_ROOT.'include/essentials.php';// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Strip slashes from GET/POST/COOKIE (if magic_quotes_gpc is enabled)if (get_magic_quotes_gpc()){	function stripslashes_array($array)	{		return is_array($array) ? array_map('stripslashes_array', $array) : stripslashes($array);	}	$_GET = stripslashes_array($_GET);	$_POST = stripslashes_array($_POST);	$_COOKIE = stripslashes_array($_COOKIE);}// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// Enable output bufferingif (!defined('FORUM_DISABLE_BUFFERING')){	// For some very odd reason, "Norton Internet Security" unsets this	$_SERVER['HTTP_ACCEPT_ENCODING'] = isset($_SERVER['HTTP_ACCEPT_ENCODING']) ? $_SERVER['HTTP_ACCEPT_ENCODING'] : '';	// Should we use gzip output compression?	if ($forum_config['o_gzip'] && extension_loaded('zlib') && (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') !== false))		ob_start('ob_gzhandler');	else		ob_start();}// Define standard date/time formats$forum_time_formats = array($forum_config['o_time_format'], 'H:i:s', 'H:i', 'g:i:s a', 'g:i a');$forum_date_formats = array($forum_config['o_date_format'], 'Y-m-d', 'Y-d-m', 'd-m-Y', 'm-d-Y', 'M j Y', 'jS M Y');// Create forum_page array$forum_page = array();// Login and fetch user info$forum_user = array();cookie_login($forum_user);// Attempt to load the common language fileif (file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php'))	include FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php';else	error('There is no valid language pack \''.forum_htmlencode($forum_user['language']).'\' installed. Please reinstall a language of that name.');// Setup the URL rewriting schemeif (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php'))	require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php';else	require FORUM_ROOT.'include/url/Default/forum_urls.php';// A good place to modify the URL scheme($hook = get_hook('co_modify_url_scheme')) ? eval($hook) : null;// Check if we are to display a maintenance messageif ($forum_config['o_maintenance'] && $forum_user['g_id'] > FORUM_ADMIN && !defined('FORUM_TURN_OFF_MAINT'))	maintenance_message();// Load cached updates infoif ($forum_user['g_id'] == FORUM_ADMIN){	if (file_exists(FORUM_CACHE_DIR.'cache_updates.php'))		include FORUM_CACHE_DIR.'cache_updates.php';	// Regenerate cache only if automatic updates are enabled and if the cache is more than 12 hours old	if ($forum_config['o_check_for_updates'] == '1' && (!defined('FORUM_UPDATES_LOADED') || $forum_updates['cached'] < (time() - 43200)))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_updates_cache();		require FORUM_CACHE_DIR.'cache_updates.php';	}}// Load cached bansif (file_exists(FORUM_CACHE_DIR.'cache_bans.php'))	include FORUM_CACHE_DIR.'cache_bans.php';if (!defined('FORUM_BANS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	require FORUM_CACHE_DIR.'cache_bans.php';}// Check if current user is bannedcheck_bans();// Update online listupdate_users_online();// Check to see if we logged in without a cookie being setif ($forum_user['is_guest'] && isset($_GET['login']))	message($lang_common['No cookie']);// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid (token in post.php is dealt with in post.php)if (!empty($_POST) && (isset($_POST['confirm_cancel']) || (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url()))) && !defined('FORUM_SKIP_CSRF_CONFIRM'))	csrf_confirm_form();($hook = get_hook('co_common')) ? eval($hook) : null;
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database.<br/>MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = @mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * Loads functions used in dealing with email addresses and email sending. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;//// Validate an e-mail address//function is_valid_email($email){	$return = ($hook = get_hook('em_fn_is_valid_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strlen($email) > 80)		return false;	return preg_match('/^(([^<>()[\]\\.,;:\s@"\']+(\.[^<>()[\]\\.,;:\s@"\']+)*)|("[^"\']+"))@((\[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\])|(([a-zA-Z\d\-]+\.)+[a-zA-Z]{2,}))$/', $email);}//// Check if $email is banned//function is_banned_email($email){	global $forum_db, $forum_bans;	$return = ($hook = get_hook('em_fn_is_banned_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	foreach ($forum_bans as $cur_ban)	{		if ($cur_ban['email'] != '' &&			($email == $cur_ban['email'] ||			(strpos($cur_ban['email'], '@') === false && stristr($email, '@'.$cur_ban['email']))))			return true;	}	return false;}//// Wrapper for PHP's mail()//function forum_mail($to, $subject, $message, $reply_to_email = '', $reply_to_name = ''){	global $forum_config, $lang_common;	// Default sender address	$from_name = sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']);	$from_email = $forum_config['o_webmaster_email'];	($hook = get_hook('em_fn_forum_mail_start')) ? eval($hook) : null;	// Do a little spring cleaning	$to = forum_trim(preg_replace('#[\n\r]+#s', '', $to));	$subject = forum_trim(preg_replace('#[\n\r]+#s', '', $subject));	$from_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $from_email));	$from_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $from_name)));	$reply_to_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $reply_to_email));	$reply_to_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $reply_to_name)));	// Set up some headers to take advantage of UTF-8	$from = "=?UTF-8?B?".base64_encode($from_name)."?=".' <'.$from_email.'>';	$subject = "=?UTF-8?B?".base64_encode($subject)."?=";	$headers = 'From: '.$from."\r\n".'Date: '.gmdate('r')."\r\n".'MIME-Version: 1.0'."\r\n".'Content-transfer-encoding: 8bit'."\r\n".'Content-type: text/plain; charset=utf-8'."\r\n".'X-Mailer: PunBB Mailer';	// If we specified a reply-to email, we deal with it here	if (!empty($reply_to_email))	{		$reply_to = "=?UTF-8?B?".base64_encode($reply_to_name)."?=".' <'.$reply_to_email.'>';		$headers .= "\r\n".'Reply-To: '.$reply_to;	}	// Make sure all linebreaks are CRLF in message (and strip out any NULL bytes)	$message = str_replace(array("\n", "\0"), array("\r\n", ''), forum_linebreaks($message));	($hook = get_hook('em_fn_forum_mail_pre_send')) ? eval($hook) : null;	if ($forum_config['o_smtp_host'] != '')		smtp_mail($to, $subject, $message, $headers);	else	{		// Change the linebreaks used in the headers according to OS		if (strtoupper(substr(PHP_OS, 0, 3)) == 'MAC')			$headers = str_replace("\r\n", "\r", $headers);		else if (strtoupper(substr(PHP_OS, 0, 3)) != 'WIN')			$headers = str_replace("\r\n", "\n", $headers);		mail($to, $subject, $message, $headers);	}}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function server_parse($socket, $expected_response){	$server_response = '';	while (substr($server_response, 3, 1) != ' ')	{		if (!($server_response = fgets($socket, 256)))			error('Couldn\'t get mail server response codes. Please contact the forum administrator.', __FILE__, __LINE__);	}	if (!(substr($server_response, 0, 3) == $expected_response))		error('Unable to send e-mail. Please contact the forum administrator with the following error message reported by the SMTP server: "'.$server_response.'"', __FILE__, __LINE__);}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function smtp_mail($to, $subject, $message, $headers = ''){	global $forum_config;	$recipients = explode(',', $to);	// Sanitize the message	$message = str_replace("\r\n.", "\r\n..", $message);	$message = (substr($message, 0, 1) == '.' ? '.'.$message : $message);	// Are we using port 25 or a custom port?	if (strpos($forum_config['o_smtp_host'], ':') !== false)		list($smtp_host, $smtp_port) = explode(':', $forum_config['o_smtp_host']);	else	{		$smtp_host = $forum_config['o_smtp_host'];		$smtp_port = 25;	}	if ($forum_config['o_smtp_ssl'] == '1')		$smtp_host = 'ssl://'.$smtp_host;	if (!($socket = fsockopen($smtp_host, $smtp_port, $errno, $errstr, 15)))		error('Could not connect to smtp host "'.$forum_config['o_smtp_host'].'" ('.$errno.') ('.$errstr.').', __FILE__, __LINE__);	server_parse($socket, '220');	if ($forum_config['o_smtp_user'] != '' && $forum_config['o_smtp_pass'] != '')	{		fwrite($socket, 'EHLO '.$smtp_host."\r\n");		server_parse($socket, '250');		fwrite($socket, 'AUTH LOGIN'."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_user'])."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_pass'])."\r\n");		server_parse($socket, '235');	}	else	{		fwrite($socket, 'HELO '.$smtp_host."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'MAIL FROM: <'.$forum_config['o_webmaster_email'].'>'."\r\n");	server_parse($socket, '250');	foreach ($recipients as $email)	{		fwrite($socket, 'RCPT TO: <'.$email.'>'."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'DATA'."\r\n");	server_parse($socket, '354');	fwrite($socket, 'Subject: '.$subject."\r\n".'To: <'.implode('>, <', $recipients).'>'."\r\n".$headers."\r\n\r\n".$message."\r\n");	fwrite($socket, '.'."\r\n");	server_parse($socket, '250');	fwrite($socket, 'QUIT'."\r\n");	fclose($socket);	return true;}define('FORUM_EMAIL_FUNCTIONS_LOADED', 1);
<?php/** * Loads common functions used throughout the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB *///// Common helpers and forum's wrappers for PHP functions//// Encodes the contents of $str so that they are safe to output on an (X)HTML pagefunction forum_htmlencode($str){	$return = ($hook = get_hook('fn_forum_htmlencode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return htmlspecialchars($str, ENT_QUOTES, 'UTF-8');}// Trim whitespace including non-breaking spacefunction forum_trim($str, $charlist = " \t\n\r\0\x0B\xC2\xA0"){	return utf8_trim($str, $charlist);}// Convert \r\n and \r to \nfunction forum_linebreaks($str){	return str_replace(array("\r\n", "\r"), "\n", $str);}// Converts the CDATA end sequence ]]> into ]]&gt;function escape_cdata($str){	return str_replace(']]>', ']]&gt;', $str);}// Check the text is CAPSEDfunction check_is_all_caps($text){	return (bool)/**/(utf8_strtoupper($text) == $text && utf8_strtolower($text) != $text);}// Return current timestamp (with microseconds) as a floatfunction forum_microtime(){	if (version_compare(PHP_VERSION, '5.0.0', '>='))	{		$mt = microtime(true);	}	else	{		list($usec, $sec) = explode(' ', microtime());		$mt = ((float)/**/$usec + (float)/**/$sec);	}	return $mt;}// Inserts $element into $input at $offset// $offset can be either a numerical offset to insert at (eg: 0 inserts at the beginning of the array)// or a string, which is the key that the new element should be inserted before// $key is optional: it's used when inserting a new key/value pair into an associative arrayfunction array_insert(&$input, $offset, $element, $key = null){	if ($key == null)		$key = $offset;	// Determine the proper offset if we're using a string	if (!is_int($offset))		$offset = array_search($offset, array_keys($input), true);	// Out of bounds checks	if ($offset > count($input))		$offset = count($input);	else if ($offset < 0)		$offset = 0;	$input = array_merge(array_slice($input, 0, $offset), array($key => $element), array_slice($input, $offset));}// Unset any variables instantiated as a result of register_globals being enabledfunction forum_unregister_globals(){	$register_globals = @ini_get('register_globals');	if ($register_globals === "" || $register_globals === "0" || strtolower($register_globals) === "off")		return;	// Prevent script.php?GLOBALS[foo]=bar	if (isset($_REQUEST['GLOBALS']) || isset($_FILES['GLOBALS']))		exit('I\'ll have a steak sandwich and... a steak sandwich.');	// Variables that shouldn't be unset	$no_unset = array('GLOBALS', '_GET', '_POST', '_COOKIE', '_REQUEST', '_SERVER', '_ENV', '_FILES');	// Remove elements in $GLOBALS that are present in any of the superglobals	$input = array_merge($_GET, $_POST, $_COOKIE, $_SERVER, $_ENV, $_FILES, isset($_SESSION) && is_array($_SESSION) ? $_SESSION : array());	foreach ($input as $k => $v)		if (!in_array($k, $no_unset) && isset($GLOBALS[$k]))		{			unset($GLOBALS[$k]);			unset($GLOBALS[$k]);	// Double unset to circumvent the zend_hash_del_key_or_index hole in PHP <4.4.3 and <5.1.4		}}// Removes any "bad" characters (characters which mess with the display of a page, are invisible, etc) from user inputfunction forum_remove_bad_characters(){	global $bad_utf8_chars;	$bad_utf8_chars = array("\0", "\xc2\xad", "\xcc\xb7", "\xcc\xb8", "\xe1\x85\x9F", "\xe1\x85\xA0", "\xe2\x80\x80", "\xe2\x80\x81", "\xe2\x80\x82", "\xe2\x80\x83", "\xe2\x80\x84", "\xe2\x80\x85", "\xe2\x80\x86", "\xe2\x80\x87", "\xe2\x80\x88", "\xe2\x80\x89", "\xe2\x80\x8a", "\xe2\x80\x8b", "\xe2\x80\x8e", "\xe2\x80\x8f", "\xe2\x80\xaa", "\xe2\x80\xab", "\xe2\x80\xac", "\xe2\x80\xad", "\xe2\x80\xae", "\xe2\x80\xaf", "\xe2\x81\x9f", "\xe3\x80\x80", "\xe3\x85\xa4", "\xef\xbb\xbf", "\xef\xbe\xa0", "\xef\xbf\xb9", "\xef\xbf\xba", "\xef\xbf\xbb", "\xE2\x80\x8D");	($hook = get_hook('fn_remove_bad_characters_start')) ? eval($hook) : null;	function _forum_remove_bad_characters($array)	{		global $bad_utf8_chars;		return is_array($array) ? array_map('_forum_remove_bad_characters', $array) : str_replace($bad_utf8_chars, '', $array);	}	$_GET = _forum_remove_bad_characters($_GET);	$_POST = _forum_remove_bad_characters($_POST);	$_COOKIE = _forum_remove_bad_characters($_COOKIE);	$_REQUEST = _forum_remove_bad_characters($_REQUEST);}// Fix the REQUEST_URI if we can, since both IIS6 and IIS7 break itfunction forum_fix_request_uri(){	if (defined('FORUM_IGNORE_REQUEST_URI'))		return;	global $forum_config;	if (!isset($_SERVER['REQUEST_URI']) || (isset($_SERVER['QUERY_STRING']) && !empty($_SERVER['QUERY_STRING']) && strpos($_SERVER['REQUEST_URI'], '?') === false))	{		// Workaround for a bug in IIS7		if (isset($_SERVER['HTTP_X_ORIGINAL_URL']))			$_SERVER['REQUEST_URI'] = $_SERVER['HTTP_X_ORIGINAL_URL'];		// IIS6 also doesn't set REQUEST_URI, If we are using the default SEF URL scheme then we can work around it		else if (!isset($forum_config) || $forum_config['o_sef'] == 'Default')		{			$requested_page = str_replace(array('%26', '%3D', '%2F', '%3F'), array('&', '=', '/', '?'), rawurlencode($_SERVER['PHP_SELF']));			$_SERVER['REQUEST_URI'] = $requested_page.(isset($_SERVER['QUERY_STRING']) && !empty($_SERVER['QUERY_STRING']) ? '?'.$_SERVER['QUERY_STRING'] : '');		}		// Otherwise I am not aware of a work around...		else			error('The web server you are using is not correctly setting the REQUEST_URI variable. This usually means you are using IIS6, or an unpatched IIS7. Please either disable SEF URLs, upgrade to IIS7 and install any available patches or try a different web server.');	}}// Set a cookie, PunBB style!// Like other headers, cookies must be sent before any output from your script.// Use headers_sent() to ckeck wether HTTP headers has been sent already.function forum_setcookie($name, $value, $expire){	global $cookie_path, $cookie_domain, $cookie_secure;	$return = ($hook = get_hook('fn_forum_setcookie_start')) ? eval($hook) : null;	if ($return != null)		return;	// Enable sending of a P3P header	header('P3P: CP="CUR ADM"');	if (version_compare(PHP_VERSION, '5.2.0', '>='))		setcookie($name, $value, $expire, $cookie_path, $cookie_domain, $cookie_secure, true);	else		setcookie($name, $value, $expire, $cookie_path.'; HttpOnly', $cookie_domain, $cookie_secure);}// Attempts to fetch the provided URL using any available meansfunction get_remote_file($url, $timeout, $head_only = false, $max_redirects = 10){	$result = null;	$parsed_url = parse_url($url);	$allow_url_fopen = strtolower(@ini_get('allow_url_fopen'));	// Quite unlikely that this will be allowed on a shared host, but it can't hurt	if (function_exists('ini_set'))		@ini_set('default_socket_timeout', $timeout);	// If we have cURL, we might as well use it	if (function_exists('curl_init'))	{		// Setup the transfer		$ch = curl_init();		curl_setopt($ch, CURLOPT_URL, $url);		curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0);		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);		curl_setopt($ch, CURLOPT_HEADER, true);		curl_setopt($ch, CURLOPT_NOBODY, $head_only);		curl_setopt($ch, CURLOPT_TIMEOUT, $timeout);		curl_setopt($ch, CURLOPT_USERAGENT, 'PunBB');		// Grab the page		$content = @curl_exec($ch);		$responce_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);		curl_close($ch);		// Process 301/302 redirect		if ($content !== false && ($responce_code == '301' || $responce_code == '302') && $max_redirects > 0)		{			$headers = explode("\r\n", trim($content));			foreach ($headers as $header)				if (substr($header, 0, 10) == 'Location: ')				{					$responce = get_remote_file(substr($header, 10), $timeout, $head_only, $max_redirects - 1);					if ($responce !== null)						$responce['headers'] = array_merge($headers, $responce['headers']);					return $responce;				}		}		// Ignore everything except a 200 response code		if ($content !== false && $responce_code == '200')		{			if ($head_only)				$result['headers'] = explode("\r\n", str_replace("\r\n\r\n", "\r\n", trim($content)));			else			{				preg_match('#HTTP/1.[01] 200 OK#', $content, $match, PREG_OFFSET_CAPTURE);				$last_content = substr($content, $match[0][1]);				$content_start = strpos($last_content, "\r\n\r\n");				if ($content_start !== false)				{					$result['headers'] = explode("\r\n", str_replace("\r\n\r\n", "\r\n", substr($content, 0, $match[0][1] + $content_start)));					$result['content'] = substr($last_content, $content_start + 4);				}			}		}	}	// fsockopen() is the second best thing	else if (function_exists('fsockopen'))	{		$remote = @fsockopen($parsed_url['host'], !empty($parsed_url['port']) ? intval($parsed_url['port']) : 80, $errno, $errstr, $timeout);		if ($remote)		{			// Send a standard HTTP 1.0 request for the page			fwrite($remote, ($head_only ? 'HEAD' : 'GET').' '.(!empty($parsed_url['path']) ? $parsed_url['path'] : '/').(!empty($parsed_url['query']) ? '?'.$parsed_url['query'] : '').' HTTP/1.0'."\r\n");			fwrite($remote, 'Host: '.$parsed_url['host']."\r\n");			fwrite($remote, 'User-Agent: PunBB'."\r\n");			fwrite($remote, 'Connection: Close'."\r\n\r\n");			stream_set_timeout($remote, $timeout);			$stream_meta = stream_get_meta_data($remote);			// Fetch the response 1024 bytes at a time and watch out for a timeout			$content = false;			while (!feof($remote) && !$stream_meta['timed_out'])			{				$content .= fgets($remote, 1024);				$stream_meta = stream_get_meta_data($remote);			}			fclose($remote);			// Process 301/302 redirect			if ($content !== false && $max_redirects > 0 && preg_match('#^HTTP/1.[01] 30[12]#', $content))			{				$headers = explode("\r\n", trim($content));				foreach ($headers as $header)					if (substr($header, 0, 10) == 'Location: ')					{						$responce = get_remote_file(substr($header, 10), $timeout, $head_only, $max_redirects - 1);						if ($responce !== null)							$responce['headers'] = array_merge($headers, $responce['headers']);						return $responce;					}			}			// Ignore everything except a 200 response code			if ($content !== false && preg_match('#^HTTP/1.[01] 200 OK#', $content))			{				if ($head_only)					$result['headers'] = explode("\r\n", trim($content));				else				{					$content_start = strpos($content, "\r\n\r\n");					if ($content_start !== false)					{						$result['headers'] = explode("\r\n", substr($content, 0, $content_start));						$result['content'] = substr($content, $content_start + 4);					}				}			}		}	}	// Last case scenario, we use file_get_contents provided allow_url_fopen is enabled (any non 200 response results in a failure)	else if (in_array($allow_url_fopen, array('on', 'true', '1')))	{		// PHP5's version of file_get_contents() supports stream options		if (version_compare(PHP_VERSION, '5.0.0', '>='))		{			// Setup a stream context			$stream_context = stream_context_create(				array(					'http' => array(						'method'		=> $head_only ? 'HEAD' : 'GET',						'user_agent'	=> 'PunBB',						'max_redirects'	=> $max_redirects + 1,	// PHP >=5.1.0 only						'timeout'		=> $timeout	// PHP >=5.2.1 only					)				)			);			$content = @file_get_contents($url, false, $stream_context);		}		else			$content = @file_get_contents($url);		// Did we get anything?		if ($content !== false)		{			// Gotta love the fact that $http_response_header just appears in the global scope (*cough* hack! *cough*)			$result['headers'] = $http_response_header;			if (!$head_only)				$result['content'] = $content;		}	}	return $result;}// Clean version string from trailing '.0'sfunction clean_version($version){	return preg_replace('/(\.0)+(?!\.)|(\.0+$)/', '$2', $version);}// Dump contents of variable(s) for debugfunction forum_dump(){	echo '<pre>';	$num_args = func_num_args();	for ($i = 0; $i < $num_args; ++$i)	{		print_r(func_get_arg($i));		echo "\n\n";	}	echo '</pre>';	exit;}//// Markup helpers//// A wrapper for PHP's number_format functionfunction forum_number_format($number, $decimals = 0){	global $lang_common;	$return = ($hook = get_hook('fn_forum_number_format_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return number_format($number, $decimals, $lang_common['lang_decimal_point'], $lang_common['lang_thousands_sep']);}// Format a time string according to $date_format, $time_format, and timezonesdefine('FORUM_FT_DATETIME', 0);define('FORUM_FT_DATE', 1);define('FORUM_FT_TIME', 2);function format_time($timestamp, $type = FORUM_FT_DATETIME, $date_format = null, $time_format = null, $no_text = false){	global $forum_config, $lang_common, $forum_user, $forum_time_formats, $forum_date_formats;	$return = ($hook = get_hook('fn_format_time_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($timestamp == '')		return ($no_text ? '' : $lang_common['Never']);	if ($date_format == null)		$date_format = $forum_date_formats[$forum_user['date_format']];	if ($time_format == null)		$time_format = $forum_time_formats[$forum_user['time_format']];	$diff = ($forum_user['timezone'] + $forum_user['dst']) * 3600;	$timestamp += $diff;	$now = time();	$formatted_time = '';	if ($type == FORUM_FT_DATETIME || $type == FORUM_FT_DATE)	{		$formatted_time = gmdate($date_format, $timestamp);		if (!$no_text)		{			$base = gmdate('Y-m-d', $timestamp);			$today = gmdate('Y-m-d', $now + $diff);			$yesterday = gmdate('Y-m-d', $now + $diff - 86400);			if ($base == $today)				$formatted_time = $lang_common['Today'];			else if ($base == $yesterday)				$formatted_time = $lang_common['Yesterday'];		}	}	if ($type == FORUM_FT_DATETIME)		$formatted_time .= ' ';	if ($type == FORUM_FT_DATETIME || $type == FORUM_FT_TIME)		$formatted_time .= gmdate($time_format, $timestamp);	($hook = get_hook('fn_format_time_end')) ? eval($hook) : null;	return $formatted_time;}// Generate the "navigator" that appears at the top of every pagefunction generate_navlinks(){	global $forum_config, $lang_common, $forum_url, $forum_user;	$return = ($hook = get_hook('fn_generate_navlinks_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// Index should always be displayed	$links['index'] = '<li id="navindex"'.((FORUM_PAGE == 'index') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['index']).'">'.$lang_common['Index'].'</a></li>';	if ($forum_user['g_read_board'] == '1' && $forum_user['g_view_users'] == '1')		$links['userlist'] = '<li id="navuserlist"'.((FORUM_PAGE == 'userlist') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['users']).'">'.$lang_common['User list'].'</a></li>';	if ($forum_config['o_rules'] == '1' && (!$forum_user['is_guest'] || $forum_user['g_read_board'] == '1' || $forum_config['o_regs_allow'] == '1'))		$links['rules'] = '<li id="navrules"'.((FORUM_PAGE == 'rules') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['rules']).'">'.$lang_common['Rules'].'</a></li>';	if ($forum_user['is_guest'])	{		if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1')			$links['search'] = '<li id="navsearch"'.((FORUM_PAGE == 'search') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_common['Search'].'</a></li>';		$links['register'] = '<li id="navregister"'.((FORUM_PAGE == 'register') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['register']).'">'.$lang_common['Register'].'</a></li>';		$links['login'] = '<li id="navlogin"'.((FORUM_PAGE == 'login') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['login']).'">'.$lang_common['Login'].'</a></li>';	}	else	{		if (!$forum_user['is_admmod'])		{			if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1')				$links['search'] = '<li id="navsearch"'.((FORUM_PAGE == 'search') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_common['Search'].'</a></li>';			$links['profile'] = '<li id="navprofile"'.((substr(FORUM_PAGE, 0, 7) == 'profile') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['user'], $forum_user['id']).'">'.$lang_common['Profile'].'</a></li>';			$links['logout'] = '<li id="navlogout"><a href="'.forum_link($forum_url['logout'], array($forum_user['id'], generate_form_token('logout'.$forum_user['id']))).'">'.$lang_common['Logout'].'</a></li>';		}		else		{			$links['search'] = '<li id="navsearch"'.((FORUM_PAGE == 'search') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_common['Search'].'</a></li>';			$links['profile'] = '<li id="navprofile"'.((substr(FORUM_PAGE, 0, 7) == 'profile') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['user'], $forum_user['id']).'">'.$lang_common['Profile'].'</a></li>';			$links['logout'] = '<li id="navlogout"><a href="'.forum_link($forum_url['logout'], array($forum_user['id'], generate_form_token('logout'.$forum_user['id']))).'">'.$lang_common['Logout'].'</a></li>';			$links['admin'] = '<li id="navadmin"'.((substr(FORUM_PAGE, 0, 5) == 'admin') ? ' class="isactive"' : '').'><a href="'.forum_link($forum_url['admin_index']).'">'.$lang_common['Admin'].'</a></li>';		}	}	// Are there any additional navlinks we should insert into the array before imploding it?	if ($forum_config['o_additional_navlinks'] != '' && preg_match_all('#([0-9]+)\s*=\s*(.*?)\n#s', $forum_config['o_additional_navlinks']."\n", $extra_links))	{		// Insert any additional links into the $links array (at the correct index)		$num_links = count($extra_links[1]);		for ($i = 0; $i < $num_links; ++$i)			array_insert($links, (int)$extra_links[1][$i], '<li id="navextra'.($i + 1).'">'.$extra_links[2][$i].'</li>');	}	($hook = get_hook('fn_generate_navlinks_end')) ? eval($hook) : null;	return implode("\n\t\t", $links);}// Outputs markup to display a user's avatarfunction generate_avatar_markup($user_id, $avatar_type, $avatar_width, $avatar_height, $username = NULL, $drop_cache = FALSE){	global $forum_config, $base_url;	$avatar_markup = $avatar_filename = '';	$return = ($hook = get_hook('fn_generate_avatar_markup_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// Create avatar filename	switch ($avatar_type)	{		case FORUM_AVATAR_GIF:			$avatar_filename = $user_id.'.gif';			break;		case FORUM_AVATAR_JPG:			$avatar_filename = $user_id.'.jpg';			break;		case FORUM_AVATAR_PNG:			$avatar_filename = $user_id.'.png';			break;		case FORUM_AVATAR_NONE:		default:			break;	}	// Create markup	if ($avatar_filename && $avatar_width > 0 && $avatar_height > 0)	{		$path = $forum_config['o_avatars_dir'].'/'.$avatar_filename;		//		if ($drop_cache)		{			$path .= '?no_cache='.random_key(8, TRUE);		}		$alt_attr = '';		if (is_string($username) && utf8_strlen($username) > 0) {			$alt_attr = forum_htmlencode($username);		}		$avatar_markup = '<img src="'.$base_url.'/'.$path.'" width="'.$avatar_width.'" height="'.$avatar_height.'" alt="'.$alt_attr.'" />';	}	($hook = get_hook('fn_generate_avatar_markup_end')) ? eval($hook) : null;	return $avatar_markup;}// Generate breadcrumb navigationfunction generate_crumbs($reverse){	global $lang_common, $forum_url, $forum_config, $forum_page;	$return = ($hook = get_hook('fn_generate_crumbs_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (empty($forum_page['crumbs']))		$forum_page['crumbs'][0] = $forum_config['o_board_title'];	$crumbs = '';	$num_crumbs = count($forum_page['crumbs']);	if ($reverse)	{		for ($i = ($num_crumbs - 1); $i >= 0; --$i)			$crumbs .= (is_array($forum_page['crumbs'][$i]) ? forum_htmlencode($forum_page['crumbs'][$i][0]) : forum_htmlencode($forum_page['crumbs'][$i])).((isset($forum_page['page']) && $i == ($num_crumbs - 1)) ? ' ('.$lang_common['Page'].' '.forum_number_format($forum_page['page']).')' : '').($i > 0 ? $lang_common['Title separator'] : '');	}	else		for ($i = 0; $i < $num_crumbs; ++$i)		{			if ($i < ($num_crumbs - 1))				$crumbs .= '<span class="crumb'.(($i == 0) ? ' crumbfirst' : '').'">'.(($i >= 1) ? '<span>'.$lang_common['Crumb separator'].'</span>' : '').(is_array($forum_page['crumbs'][$i]) ? '<a href="'.$forum_page['crumbs'][$i][1].'">'.forum_htmlencode($forum_page['crumbs'][$i][0]).'</a>' : forum_htmlencode($forum_page['crumbs'][$i])).'</span> ';			else				$crumbs .= '<span class="crumb crumblast'.(($i == 0) ? ' crumbfirst' : '').'">'.(($i >= 1) ? '<span>'.$lang_common['Crumb separator'].'</span>' : '').(is_array($forum_page['crumbs'][$i]) ? '<a href="'.$forum_page['crumbs'][$i][1].'">'.forum_htmlencode($forum_page['crumbs'][$i][0]).'</a>' : forum_htmlencode($forum_page['crumbs'][$i])).'</span> ';		}	($hook = get_hook('fn_generate_crumbs_end')) ? eval($hook) : null;	return $crumbs;}// Generate a string with page and item information for multipage headingsfunction generate_items_info($label, $first, $total){	global $forum_page, $lang_common;	$return = ($hook = get_hook('fn_generate_page_info_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_page['num_pages'] == 1)		$item_info =  '<span class="item-info">'.sprintf($lang_common['Item info single'], $label, forum_number_format($total)).'</span>';	else		$item_info = '<span class="item-info">'.sprintf($lang_common['Item info plural'], $label, forum_number_format($first), forum_number_format($forum_page['finish_at']), forum_number_format($total)).'</span>';	($hook = get_hook('fn_generate_page_info_end')) ? eval($hook) : null;	return $item_info;}// Generate a string with numbered links (for multipage scripts)function paginate($num_pages, $cur_page, $link, $separator, $args = null, $is_default_scheme = null){	global $forum_url, $lang_common;	if ($is_default_scheme == null)		$forum_url_page = $forum_url['page'];	else	{		$forum_url_page = '&amp;p=$1';		unset($forum_url['insertion_find']);	}	$pages = array();	$link_to_all = false;	$return = ($hook = get_hook('fn_paginate_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// If $cur_page == -1, we link to all pages (used in viewforum.php)	if ($cur_page == -1)	{		$cur_page = 1;		$link_to_all = true;	}	if ($num_pages <= 1)		$pages = array('<strong class="first-item">'.forum_number_format(1).'</strong>');	else	{		// Add a previous page link		if ($num_pages > 1 && $cur_page > 1)			$pages[] = '<a'.(empty($pages) ? ' class="first-item"' : '').' href="'.forum_sublink($link, $forum_url_page, ($cur_page - 1), $args).'">'.$lang_common['Previous'].'</a>';		if ($cur_page > 3)		{			$pages[] = '<a'.(empty($pages) ? ' class="first-item"' : '').' href="'.forum_sublink($link, $forum_url_page, 1, $args).'">'.forum_number_format(1).'</a>';			if ($cur_page > 5)				$pages[] = '<span>'.$lang_common['Spacer'].'</span>';		}		// Don't ask me how the following works. It just does, OK? :-)		for ($current = ($cur_page == 5) ? $cur_page - 3 : $cur_page - 2, $stop = ($cur_page + 4 == $num_pages) ? $cur_page + 4 : $cur_page + 3; $current < $stop; ++$current)			if ($current < 1 || $current > $num_pages)				continue;			else if ($current != $cur_page || $link_to_all)				$pages[] = '<a'.(empty($pages) ? ' class="first-item" ' : '').' href="'.forum_sublink($link, $forum_url_page, $current, $args).'">'.forum_number_format($current).'</a>';			else				$pages[] = '<strong'.(empty($pages) ? ' class="first-item"' : '').'>'.forum_number_format($current).'</strong>';		if ($cur_page <= ($num_pages-3))		{			if ($cur_page != ($num_pages-3) && $cur_page != ($num_pages-4))				$pages[] = '<span>'.$lang_common['Spacer'].'</span>';			$pages[] = '<a'.(empty($pages) ? ' class="first-item" ' : '').' href="'.forum_sublink($link, $forum_url_page, $num_pages, $args).'">'.forum_number_format($num_pages).'</a>';		}		// Add a next page link		if ($num_pages > 1 && !$link_to_all && $cur_page < $num_pages)			$pages[] = '<a'.(empty($pages) ? ' class="first-item" ' : '').' href="'.forum_sublink($link, $forum_url_page, ($cur_page + 1), $args).'">'.$lang_common['Next'].'</a>';	}	($hook = get_hook('fn_paginate_end')) ? eval($hook) : null;	return implode($separator, $pages);}// Display executed queries (if enabled) for debugfunction get_saved_queries(){	global $forum_db, $lang_common;	// Get the queries so that we can print them out	$saved_queries = $forum_db->get_saved_queries();	ob_start();?><div id="brd-debug" class="main">	<div class="debug">		<table>			<caption><?php echo $lang_common['Debug summary'] ?></caption>			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_common['Query times'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_common['Query'] ?></th>				</tr>			</thead>			<tbody><?php	$query_time_total = 0.0;	foreach ($saved_queries as $cur_query)	{		$query_time_total += $cur_query[1];?>				<tr>					<td class="tcl"><?php echo (($cur_query[1] != 0) ? forum_number_format($cur_query[1], 5) : '&#160;') ?></td>					<td class="tcr"><?php echo forum_htmlencode($cur_query[0]) ?></td>				</tr><?php	}?>				<tr>					<td class="tcl border-less"><?php echo forum_number_format($query_time_total, 5) ?></td>					<td class="tcr border-less"><?php echo $lang_common['Total query time'] ?></td>				</tr>			</tbody>		</table>	</div></div><?php	return ob_get_clean();}//// Other special helpers//// Return all code blocks that hook into $hook_idfunction get_hook($hook_id){	global $forum_hooks;	return !defined('FORUM_DISABLE_HOOKS') && isset($forum_hooks[$hook_id]) ? implode("\n", $forum_hooks[$hook_id]) : false;}// Generate a hyperlink with parameters and anchorfunction forum_link($link, $args = null){	global $forum_config, $base_url;	$return = ($hook = get_hook('fn_forum_link_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$gen_link = $link;	if ($args == null)		$gen_link = $base_url.'/'.$link;	else if (!is_array($args))		$gen_link = $base_url.'/'.str_replace('$1', $args, $link);	else	{		for ($i = 0; isset($args[$i]); ++$i)			$gen_link = str_replace('$'.($i + 1), $args[$i], $gen_link);		$gen_link = $base_url.'/'.$gen_link;	}	($hook = get_hook('fn_forum_link_end')) ? eval($hook) : null;	return $gen_link;}// Generate a hyperlink with parameters and anchor and a subsection such as a subpagefunction forum_sublink($link, $sublink, $subarg, $args = null){	global $forum_config, $forum_url, $base_url;	$return = ($hook = get_hook('fn_forum_sublink_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($sublink == $forum_url['page'] && $subarg == 1)		return forum_link($link, $args);	$gen_link = $link;	if (!is_array($args) && $args != null)		$gen_link = str_replace('$1', $args, $link);	else	{		for ($i = 0; isset($args[$i]); ++$i)			$gen_link = str_replace('$'.($i + 1), $args[$i], $gen_link);	}	if (isset($forum_url['insertion_find']))		$gen_link = $base_url.'/'.str_replace($forum_url['insertion_find'], str_replace('$1', str_replace('$1', $subarg, $sublink), $forum_url['insertion_replace']), $gen_link);	else		$gen_link = $base_url.'/'.$gen_link.str_replace('$1', $subarg, $sublink);	($hook = get_hook('fn_forum_sublink_end')) ? eval($hook) : null;	return $gen_link;}// Make a string safe to use in a URLfunction sef_friendly($str){	global $forum_config, $forum_user;	static $lang_url_replace, $forum_reserved_strings;	if (!isset($lang_url_replace))		require FORUM_ROOT.'lang/'.$forum_user['language'].'/url_replace.php';	if (!isset($forum_reserved_strings))	{		// Bring in any reserved strings		if (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/reserved_strings.php'))			require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/reserved_strings.php';		else			require FORUM_ROOT.'include/url/Default/reserved_strings.php';	}	$return = ($hook = get_hook('fn_sef_friendly_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$str = strtr($str, $lang_url_replace);	$str = strtolower(utf8_decode($str));	$str = forum_trim(preg_replace(array('/[^a-z0-9\s]/', '/[\s]+/'), array('', '-'), $str), '-');	foreach ($forum_reserved_strings as $match => $replace)		if ($str == $match)			return $replace;		else if ($match != '')			$str = str_replace($match, $replace, $str);	return $str;}// Replace censored words in $text loaderfunction censor_words($text){	global $forum_db;	$return = ($hook = get_hook('fn_censor_words_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// If not already loaded in a previous call, load the cached censors	if (!defined('FORUM_CENSORS_LOADED'))	{		if (file_exists(FORUM_CACHE_DIR.'cache_censors.php'))			include FORUM_CACHE_DIR.'cache_censors.php';		if (!defined('FORUM_CENSORS_LOADED'))		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/cache.php';			generate_censors_cache();			require FORUM_CACHE_DIR.'cache_censors.php';		}	}	// Check Unicode support	$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');	return (isset($forum_censors)) ? censor_words_do($forum_censors, $text, $unicode) : $text;}// Replace censored words in $textfunction censor_words_do($forum_censors, $text, $unicode){	static $search_for, $replace_with;	$search_for = array();	$replace_with = array();	if (!empty($forum_censors))	{		// Generate regexp`s		foreach ($forum_censors as $censor_key => $cur_word)		{			if ($unicode)			{				// Unescape *				$replace = str_replace('\*', '*', preg_quote($cur_word['search_for'], '#'));				$replace = preg_replace(array('#(?<=[\p{Nd}\p{L}_])\*(?=[\p{Nd}\p{L}_])#iu', '#^\*#', '#\*$#'), array('([\x20]*?|[\p{Nd}\p{L}_-]*?)', '[\p{Nd}\p{L}_-]*?', '[\p{Nd}\p{L}_-]*?'), $replace);				// Generate the final substitution				$search_for[$censor_key] = '#(?<![\p{Nd}\p{L}_-])('.$replace.')(?![\p{Nd}\p{L}_-])#iu';			}			else			{				// Unescape *				$replace = str_replace('\*', '\w*?', preg_quote($cur_word['search_for'], '#'));				$search_for[$censor_key] = '#(?<=\W)('.$replace.')(?=\W)#iu'; // This better for ASCII than (?!</S)			}			$replace_with[$censor_key] = $cur_word['replace_with'];			($hook = get_hook('fn_censor_words_setup_regex')) ? eval($hook) : null;		}		// Replace		if (!empty($search_for))		{			$text = utf8_substr(preg_replace($search_for, $replace_with, ' '.$text.' '), 1, -1);		}	}	return $text;}// Verifies that the provided username is OK for insertion into the databasefunction validate_username($username, $exclude_id = null){	global $lang_common, $lang_register, $lang_profile, $forum_config;	$errors = array();	$return = ($hook = get_hook('fn_validate_username_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert multiple whitespace characters into one (to prevent people from registering with indistinguishable usernames)	$username = preg_replace('#\s+#s', ' ', $username);	// Validate username	if (utf8_strlen($username) < 2)		$errors[] = $lang_profile['Username too short'];	else if (utf8_strlen($username) > 25)		$errors[] = $lang_profile['Username too long'];	else if (strtolower($username) == 'guest' || utf8_strtolower($username) == utf8_strtolower($lang_common['Guest']))		$errors[] = $lang_profile['Username guest'];	else if (preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $username) || preg_match('/((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))/', $username))		$errors[] = $lang_profile['Username IP'];	else if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)		$errors[] = $lang_profile['Username reserved chars'];	else if (preg_match('/(?:\[\/?(?:b|u|i|h|colou?r|quote|code|img|url|email|list)\]|\[(?:code|quote|list)=)/i', $username))		$errors[] = $lang_profile['Username BBCode'];	// Check username for any censored words	if ($forum_config['o_censoring'] == '1' && censor_words($username) != $username)		$errors[] = $lang_profile['Username censor'];	// Check for username dupe	$dupe = check_username_dupe($username, $exclude_id);	if ($dupe !== false)		$errors[] = sprintf($lang_profile['Username dupe'], forum_htmlencode($dupe));	($hook = get_hook('fn_validate_username_end')) ? eval($hook) : null;	return $errors;}// Determines the correct title for $user// $user must contain the elements 'username', 'title', 'posts', 'g_id' and 'g_user_title'function get_title($user){	global $forum_db, $forum_config, $forum_bans, $lang_common;	static $ban_list, $forum_ranks;	$return = ($hook = get_hook('fn_get_title_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// If not already built in a previous call, build an array of lowercase banned usernames	if (empty($ban_list))	{		$ban_list = array();		foreach ($forum_bans as $cur_ban)			$ban_list[] = utf8_strtolower($cur_ban['username']);	}	// If not already loaded in a previous call, load the cached ranks	if ($forum_config['o_ranks'] == '1' && !defined('FORUM_RANKS_LOADED'))	{		if (file_exists(FORUM_CACHE_DIR.'cache_ranks.php'))			include FORUM_CACHE_DIR.'cache_ranks.php';		if (!defined('FORUM_RANKS_LOADED'))		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/cache.php';			generate_ranks_cache();			require FORUM_CACHE_DIR.'cache_ranks.php';		}	}	// If the user has a custom title	if ($user['title'] != '')		$user_title = forum_htmlencode($forum_config['o_censoring'] == '1' ? censor_words($user['title']) : $user['title']);	// If the user is banned	else if (in_array(utf8_strtolower($user['username']), $ban_list))		$user_title = $lang_common['Banned'];	// If the user group has a default user title	else if ($user['g_user_title'] != '')		$user_title = forum_htmlencode($user['g_user_title']);	// If the user is a guest	else if ($user['g_id'] == FORUM_GUEST)		$user_title = $lang_common['Guest'];	else	{		// Are there any ranks?		if ($forum_config['o_ranks'] == '1' && !empty($forum_ranks))			foreach ($forum_ranks as $cur_rank)				if (intval($user['num_posts']) >= $cur_rank['min_posts'])					$user_title = forum_htmlencode($cur_rank['rank']);		// If the user didn't "reach" any rank (or if ranks are disabled), we assign the default		if (!isset($user_title))			$user_title = $lang_common['Member'];	}	($hook = get_hook('fn_get_title_end')) ? eval($hook) : null;	return $user_title;}// Return a list of all URL schemes installedfunction get_scheme_packs(){  	$schemes = array();	if($handle = opendir(FORUM_ROOT.'include/url'))	{		while (false !== ($dirname = readdir($handle)))		{			$dirname =  FORUM_ROOT.'include/url/'.$dirname;			if (is_dir($dirname) && file_exists($dirname.'/forum_urls.php'))				$schemes[] = basename($dirname);		}		closedir($handle);	}	($hook = get_hook('fn_get_scheme_packs_end')) ? eval($hook) : null;	return $schemes;}// Return a list of all styles installedfunction get_style_packs(){	$styles = array();	if($handle = opendir(FORUM_ROOT.'style'))	{		while (false !== ($dirname = readdir($handle)))		{			$dirname =  FORUM_ROOT.'style/'.$dirname;			$tempname = basename($dirname);			if (is_dir($dirname) && file_exists($dirname.'/'.$tempname.'.php'))				$styles[] = $tempname;		}		closedir($handle);	}	($hook = get_hook('fn_get_style_packs_end')) ? eval($hook) : null;	return $styles;}// Return a list of all language packs installedfunction get_language_packs(){	$languages = array();	if($handle = opendir(FORUM_ROOT.'lang'))	{		while (false !== ($dirname = readdir($handle)))		{			$dirname =  FORUM_ROOT.'lang/'.$dirname;			if (is_dir($dirname) && file_exists($dirname.'/common.php'))				$languages[] = basename($dirname);		}		closedir($handle);	}	($hook = get_hook('fn_get_language_packs_end')) ? eval($hook) : null;	return $languages;}// Try to determine the correct remote IP-addressfunction get_remote_address(){	$return = ($hook = get_hook('fn_get_remote_address_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return $_SERVER['REMOTE_ADDR'];}// Try to determine the current URLfunction get_current_url($max_length = 0){	$return = ($hook = get_hook('fn_get_current_url_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$protocol = (!isset($_SERVER['HTTPS']) || strtolower($_SERVER['HTTPS']) == 'off') ? 'http://' : 'https://';	$port = (isset($_SERVER['SERVER_PORT']) && (($_SERVER['SERVER_PORT'] != '80' && $protocol == 'http://') || ($_SERVER['SERVER_PORT'] != '443' && $protocol == 'https://')) && strpos($_SERVER['HTTP_HOST'], ':') === false) ? ':'.$_SERVER['SERVER_PORT'] : '';	$url = $protocol.$_SERVER['HTTP_HOST'].$port.$_SERVER['REQUEST_URI'];	if (strlen($url) <= $max_length || $max_length == 0)		return $url;	// We can't find a short enough url	return null;}// Checks if a word is a valid searchable wordfunction validate_search_word($word){	global $forum_user;	static $stopwords;	$return = ($hook = get_hook('fn_validate_search_word_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (!isset($stopwords))	{		if (file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/stopwords.txt'))		{			$stopwords = file(FORUM_ROOT.'lang/'.$forum_user['language'].'/stopwords.txt');			$stopwords = array_map('forum_trim', $stopwords);			$stopwords = array_filter($stopwords);		}		else			$stopwords = array();		($hook = get_hook('fn_validate_search_word_modify_stopwords')) ? eval($hook) : null;	}	$num_chars = utf8_strlen($word);	$return = ($hook = get_hook('fn_validate_search_word_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $num_chars >= FORUM_SEARCH_MIN_WORD && $num_chars <= FORUM_SEARCH_MAX_WORD && !in_array($word, $stopwords);}// Generate a random key of length $lenfunction random_key($len, $readable = false, $hash = false){	$key = '';	$return = ($hook = get_hook('fn_random_key_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($hash)		$key = substr(sha1(uniqid(rand(), true)), 0, $len);	else if ($readable)	{		$chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';		for ($i = 0; $i < $len; ++$i)			$key .= substr($chars, (mt_rand() % strlen($chars)), 1);	}	else		for ($i = 0; $i < $len; ++$i)			$key .= chr(mt_rand(33, 126));	($hook = get_hook('fn_random_key_end')) ? eval($hook) : null;	return $key;}// Generates a valid CSRF token for use when submitting a form to $target_url// $target_url should be an absolute URL and it should be exactly the URL that the user is going to// Alternately, if the form token is going to be used in GET (which would mean the token is going to be// a part of the URL itself), $target_url may be a plain string containing information related to the URL.function generate_form_token($target_url){	global $forum_user;	$return = ($hook = get_hook('fn_generate_form_token_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return sha1(str_replace('&amp;', '&', $target_url).$forum_user['csrf_token']);}// Generates a salted, SHA-1 hash of $strfunction forum_hash($str, $salt){	$return = ($hook = get_hook('fn_forum_hash_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return sha1($salt.sha1($str));}// Delete every .php file in the forum's cache directoryfunction forum_clear_cache(){	$return = ($hook = get_hook('fn_forum_clear_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$d = dir(FORUM_CACHE_DIR);	while (($entry = $d->read()) !== false)	{		if (substr($entry, strlen($entry)-4) == '.php')			@unlink(FORUM_CACHE_DIR.$entry);	}	$d->close();}//// General forum specific functions//// Authenticates the provided username and password against the user database// $user can be either a user ID (integer) or a username (string)// $password can be either a plaintext password or a password hash including salt ($password_is_hash must be set accordingly)function authenticate_user($user, $password, $password_is_hash = false){	global $forum_db, $forum_user;	$return = ($hook = get_hook('fn_authenticate_user_start')) ? eval($hook) : null;	if ($return != null)		return;	// Check if there's a user matching $user and $password	$query = array(		'SELECT'	=> 'u.*, g.*, o.logged, o.idle, o.csrf_token, o.prev_url',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			),			array(				'LEFT JOIN'		=> 'online AS o',				'ON'			=> 'o.user_id=u.id'			)		)	);	// Are we looking for a user ID or a username?	$query['WHERE'] = is_int($user) ? 'u.id='.intval($user) : 'u.username=\''.$forum_db->escape($user).'\'';	($hook = get_hook('fn_authenticate_user_qr_get_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_user = $forum_db->fetch_assoc($result);	if (!isset($forum_user['id']) ||		($password_is_hash && $password != $forum_user['password']) ||		(!$password_is_hash && forum_hash($password, $forum_user['salt']) != $forum_user['password']))		set_default_user();	($hook = get_hook('fn_authenticate_user_end')) ? eval($hook) : null;}// Attempt to login with the user ID and password hash from the cookiefunction cookie_login(&$forum_user){	global $forum_db, $db_type, $forum_config, $cookie_name, $cookie_path, $cookie_domain, $cookie_secure, $forum_time_formats, $forum_date_formats;	$now = time();	$expire = $now + 1209600;	// The cookie expires after 14 days	// We assume it's a guest	$cookie = array('user_id' => 1, 'password_hash' => 'Guest', 'expiration_time' => 0, 'expire_hash' => 'Guest');	$return = ($hook = get_hook('fn_cookie_login_start')) ? eval($hook) : null;	if ($return != null)		return;	// If a cookie is set, we get the user_id and password hash from it	if (!empty($_COOKIE[$cookie_name]))	{		$cookie_data = explode('|', base64_decode($_COOKIE[$cookie_name]));		if (!empty($cookie_data) && count($cookie_data) == 4)			list($cookie['user_id'], $cookie['password_hash'], $cookie['expiration_time'], $cookie['expire_hash']) = $cookie_data;	}	($hook = get_hook('fn_cookie_login_fetch_cookie')) ? eval($hook) : null;	// If this a cookie for a logged in user and it shouldn't have already expired	if (intval($cookie['user_id']) > 1 && intval($cookie['expiration_time']) > $now)	{		authenticate_user(intval($cookie['user_id']), $cookie['password_hash'], true);		// We now validate the cookie hash		if ($cookie['expire_hash'] !== sha1($forum_user['salt'].$forum_user['password'].forum_hash(intval($cookie['expiration_time']), $forum_user['salt'])))			set_default_user();		// If we got back the default user, the login failed		if ($forum_user['id'] == '1')		{			forum_setcookie($cookie_name, base64_encode('1|'.random_key(8, false, true).'|'.$expire.'|'.random_key(8, false, true)), $expire);			return;		}		// Send a new, updated cookie with a new expiration timestamp		$expire = (intval($cookie['expiration_time']) > $now + $forum_config['o_timeout_visit']) ? $now + 1209600 : $now + $forum_config['o_timeout_visit'];		forum_setcookie($cookie_name, base64_encode($forum_user['id'].'|'.$forum_user['password'].'|'.$expire.'|'.sha1($forum_user['salt'].$forum_user['password'].forum_hash($expire, $forum_user['salt']))), $expire);		// Set a default language if the user selected language no longer exists		if (!file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php'))			$forum_user['language'] = $forum_config['o_default_lang'];		// Set a default style if the user selected style no longer exists		if (!file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php'))			$forum_user['style'] = $forum_config['o_default_style'];		if (!$forum_user['disp_topics'])			$forum_user['disp_topics'] = $forum_config['o_disp_topics_default'];		if (!$forum_user['disp_posts'])			$forum_user['disp_posts'] = $forum_config['o_disp_posts_default'];		// Check user has a valid date and time format		if (!isset($forum_time_formats[$forum_user['time_format']]))			$forum_user['time_format'] = 0;		if (!isset($forum_date_formats[$forum_user['date_format']]))			$forum_user['date_format'] = 0;		// Define this if you want this visit to affect the online list and the users last visit data		if (!defined('FORUM_QUIET_VISIT'))		{			// Update the online list			if (!$forum_user['logged'])			{				$forum_user['logged'] = $now;				$forum_user['csrf_token'] = random_key(40, false, true);				$forum_user['prev_url'] = get_current_url(255);				// REPLACE INTO avoids a user having two rows in the online table				$query = array(					'REPLACE'	=> 'user_id, ident, logged, csrf_token',					'INTO'		=> 'online',					'VALUES'	=> $forum_user['id'].', \''.$forum_db->escape($forum_user['username']).'\', '.$forum_user['logged'].', \''.$forum_user['csrf_token'].'\'',					'UNIQUE'	=> 'user_id='.$forum_user['id']				);				if ($forum_user['prev_url'] != null)				{					$query['REPLACE'] .= ', prev_url';					$query['VALUES'] .= ', \''.$forum_db->escape($forum_user['prev_url']).'\'';				}				($hook = get_hook('fn_cookie_login_qr_add_online_user')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				// Reset tracked topics				set_tracked_topics(null);			}			else			{				// Special case: We've timed out, but no other user has browsed the forums since we timed out				if ($forum_user['logged'] < ($now-$forum_config['o_timeout_visit']))				{					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'last_visit='.$forum_user['logged'],						'WHERE'		=> 'id='.$forum_user['id']					);					($hook = get_hook('fn_cookie_login_qr_update_user_visit')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					$forum_user['last_visit'] = $forum_user['logged'];				}				// Now update the logged time and save the current URL in the online list				$query = array(					'UPDATE'	=> 'online',					'SET'		=> 'logged='.$now,					'WHERE'		=> 'user_id='.$forum_user['id']				);				$current_url = get_current_url(255);				if ($current_url != null)					$query['SET'] .= ', prev_url=\''.$forum_db->escape($current_url).'\'';				if ($forum_user['idle'] == '1')					$query['SET'] .= ', idle=0';				($hook = get_hook('fn_cookie_login_qr_update_online_user')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				// Update tracked topics with the current expire time				if (isset($_COOKIE[$cookie_name.'_track']))					forum_setcookie($cookie_name.'_track', $_COOKIE[$cookie_name.'_track'], $now + $forum_config['o_timeout_visit']);			}		}		$forum_user['is_guest'] = false;		$forum_user['is_admmod'] = $forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_moderator'] == '1';	}	else		set_default_user();	($hook = get_hook('fn_cookie_login_end')) ? eval($hook) : null;}// Fill $forum_user with default values (for guests)function set_default_user(){	global $forum_db, $db_type, $forum_user, $forum_config;	$remote_addr = get_remote_address();	$return = ($hook = get_hook('fn_set_default_user_start')) ? eval($hook) : null;	if ($return != null)		return;	// Fetch guest user	$query = array(		'SELECT'	=> 'u.*, g.*, o.logged, o.csrf_token, o.prev_url, o.last_post, o.last_search',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			),			array(				'LEFT JOIN'		=> 'online AS o',				'ON'			=> 'o.ident=\''.$forum_db->escape($remote_addr).'\''			)		),		'WHERE'		=> 'u.id=1'	);	($hook = get_hook('fn_set_default_user_qr_get_default_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_user = $forum_db->fetch_assoc($result);	if (!$forum_user)		exit('Unable to fetch guest information. The table \''.$forum_db->prefix.'users\' must contain an entry with id = 1 that represents anonymous users.');	if (!defined('FORUM_QUIET_VISIT'))	{		// Update online list		if (!$forum_user['logged'])		{			$forum_user['logged'] = time();			$forum_user['csrf_token'] = random_key(40, false, true);			$forum_user['prev_url'] = get_current_url(255);			// REPLACE INTO avoids a user having two rows in the online table			$query = array(				'REPLACE'	=> 'user_id, ident, logged, csrf_token',				'INTO'		=> 'online',				'VALUES'	=> '1, \''.$forum_db->escape($remote_addr).'\', '.$forum_user['logged'].', \''.$forum_user['csrf_token'].'\'',				'UNIQUE'	=> 'user_id=1 AND ident=\''.$forum_db->escape($remote_addr).'\''			);			if ($forum_user['prev_url'] != null)			{				$query['REPLACE'] .= ', prev_url';				$query['VALUES'] .= ', \''.$forum_db->escape($forum_user['prev_url']).'\'';			}			($hook = get_hook('fn_set_default_user_qr_add_online_guest_user')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'logged='.time(),				'WHERE'		=> 'ident=\''.$forum_db->escape($remote_addr).'\''			);			$current_url = get_current_url(255);			if ($current_url != null)				$query['SET'] .= ', prev_url=\''.$forum_db->escape($current_url).'\'';			($hook = get_hook('fn_set_default_user_qr_update_online_guest_user')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	$forum_user['disp_topics'] = $forum_config['o_disp_topics_default'];	$forum_user['disp_posts'] = $forum_config['o_disp_posts_default'];	$forum_user['timezone'] = $forum_config['o_default_timezone'];	$forum_user['dst'] = $forum_config['o_default_dst'];	$forum_user['language'] = $forum_config['o_default_lang'];	$forum_user['style'] = $forum_config['o_default_style'];	$forum_user['is_guest'] = true;	$forum_user['is_admmod'] = false;	($hook = get_hook('fn_set_default_user_end')) ? eval($hook) : null;}// Check whether the connecting user is banned (and delete any expired bans while we're at it)function check_bans(){	global $forum_db, $forum_config, $lang_common, $forum_user, $forum_bans;	$return = ($hook = get_hook('fn_check_bans_start')) ? eval($hook) : null;	if ($return != null)		return;	// Admins aren't affected	if (defined('FORUM_ADMIN') && $forum_user['g_id'] == FORUM_ADMIN || !$forum_bans)		return;	// Add a dot or a colon (depending on IPv4/IPv6) at the end of the IP address to prevent banned address	// 192.168.0.5 from matching e.g. 192.168.0.50	$user_ip = get_remote_address();	$user_ip .= (strpos($user_ip, '.') !== false) ? '.' : ':';	$bans_altered = false;	$is_banned = false;	foreach ($forum_bans as $cur_ban)	{		// Has this ban expired?		if ($cur_ban['expire'] != '' && $cur_ban['expire'] <= time())		{			$query = array(				'DELETE'	=> 'bans',				'WHERE'		=> 'id='.$cur_ban['id']			);			($hook = get_hook('fn_check_bans_qr_delete_expired_ban')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$bans_altered = true;			continue;		}		if ($cur_ban['username'] != '' && utf8_strtolower($forum_user['username']) == utf8_strtolower($cur_ban['username']))			$is_banned = true;		if ($cur_ban['email'] != '' && $forum_user['email'] == $cur_ban['email'])			$is_banned = true;		if ($cur_ban['ip'] != '')		{			$cur_ban_ips = explode(' ', $cur_ban['ip']);			$num_ips = count($cur_ban_ips);			for ($i = 0; $i < $num_ips; ++$i)			{				// Add the proper ending to the ban				if (strpos($user_ip, '.') !== false)					$cur_ban_ips[$i] = $cur_ban_ips[$i].'.';				else					$cur_ban_ips[$i] = $cur_ban_ips[$i].':';				if (substr($user_ip, 0, strlen($cur_ban_ips[$i])) == $cur_ban_ips[$i])				{					$is_banned = true;					break;				}			}		}		if ($is_banned)		{			$query = array(				'DELETE'	=> 'online',				'WHERE'		=> 'ident=\''.$forum_db->escape($forum_user['username']).'\''			);			($hook = get_hook('fn_check_bans_qr_delete_online_user')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			message($lang_common['Ban message'].(($cur_ban['expire'] != '') ? ' '.sprintf($lang_common['Ban message 2'], format_time($cur_ban['expire'], 1, null, null, true)) : '').(($cur_ban['message'] != '') ? ' '.$lang_common['Ban message 3'].'</p><p><strong>'.forum_htmlencode($cur_ban['message']).'</strong></p>' : '</p>').'<p>'.sprintf($lang_common['Ban message 4'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		}	}	// If we removed any expired bans during our run-through, we need to regenerate the bans cache	if ($bans_altered)	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_bans_cache();	}}// Update "Users online"function update_users_online(){	global $forum_db, $forum_config, $forum_user;	$now = time();	$return = ($hook = get_hook('fn_update_users_online_start')) ? eval($hook) : null;	if ($return != null)		return;	// Fetch all online list entries that are older than "o_timeout_online"	$query = array(		'SELECT'	=> 'o.*',		'FROM'		=> 'online AS o',		'WHERE'		=> 'o.logged < '.($now - $forum_config['o_timeout_online'])	);	($hook = get_hook('fn_update_users_online_qr_get_old_online_users')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$need_delete_expired_guest = false;	$expired_users_id = $idle_users_id = array();	while ($cur_user = $forum_db->fetch_assoc($result))	{		if ($cur_user['user_id'] != '1')		{			// If the entry is older than "o_timeout_visit", update last_visit for the user in question, then delete him/her from the online list			if ($cur_user['logged'] < ($now - $forum_config['o_timeout_visit']))			{				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'last_visit='.$cur_user['logged'],					'WHERE'		=> 'id='.$cur_user['user_id']				);				($hook = get_hook('fn_update_users_online_qr_update_user_visit')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				// Add to expired list				$expired_users_id[] = $cur_user['user_id'];			}			else			{				// Add to idle list				if ($cur_user['idle'] == '0')				{					$idle_users_id[] = $cur_user['user_id'];				}			}		}		else		{			// We have expired guest  delete it later			$need_delete_expired_guest = true;		}	}	// Remove all guest that are older than "o_timeout_online"	if ($need_delete_expired_guest)	{		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'user_id=1 AND logged < '.($now - $forum_config['o_timeout_online'])		);		($hook = get_hook('fn_update_users_online_qr_delete_online_guest_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Delete expired users	if (!empty($expired_users_id))	{		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'user_id IN ('.implode(',', $expired_users_id).')'		);		($hook = get_hook('fn_update_users_online_qr_delete_online_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Update idle users	if (!empty($idle_users_id))	{		$query = array(			'UPDATE'	=> 'online',			'SET'		=> 'idle=1',			'WHERE'		=> 'user_id IN ('.implode(',', $idle_users_id).')'		);		($hook = get_hook('fn_update_users_online_qr_update_user_idle')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	($hook = get_hook('fn_update_users_online_end')) ? eval($hook) : null;}// Save array of tracked topics in cookiefunction set_tracked_topics($tracked_topics){	global $cookie_name, $cookie_path, $cookie_domain, $cookie_secure, $forum_config;	$return = ($hook = get_hook('fn_set_tracked_topics_start')) ? eval($hook) : null;	if ($return != null)		return;	$cookie_data = '';	if (!empty($tracked_topics))	{		// Sort the arrays (latest read first)		arsort($tracked_topics['topics'], SORT_NUMERIC);		arsort($tracked_topics['forums'], SORT_NUMERIC);		// Homebrew serialization (to avoid having to run unserialize() on cookie data)		foreach ($tracked_topics['topics'] as $id => $timestamp)			$cookie_data .= 't'.$id.'='.$timestamp.';';		foreach ($tracked_topics['forums'] as $id => $timestamp)			$cookie_data .= 'f'.$id.'='.$timestamp.';';		// Enforce a 4048 byte size limit (4096 minus some space for the cookie name)		if (strlen($cookie_data) > 4048)		{			$cookie_data = substr($cookie_data, 0, 4048);			$cookie_data = substr($cookie_data, 0, strrpos($cookie_data, ';')).';';		}	}	forum_setcookie($cookie_name.'_track', $cookie_data, time() + $forum_config['o_timeout_visit']);	$_COOKIE[$cookie_name.'_track'] = $cookie_data;	// Set it directly in $_COOKIE as well}// Extract array of tracked topics from cookiefunction get_tracked_topics(){	global $cookie_name;	$return = ($hook = get_hook('fn_get_tracked_topics_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$cookie_data = isset($_COOKIE[$cookie_name.'_track']) ? $_COOKIE[$cookie_name.'_track'] : false;	if (!$cookie_data)		return array('topics' => array(), 'forums' => array());	if (strlen($cookie_data) > 4048)		return array('topics' => array(), 'forums' => array());	// Unserialize data from cookie	$tracked_topics = array('topics' => array(), 'forums' => array());	foreach (explode(';', $cookie_data) as $id_data)	{		switch (substr($id_data, 0, 1))		{			case 'f': $type = 'forums'; break;			case 't': $type = 'topics'; break;			default: continue;		}		$id = intval(substr($id_data, 1));		if (($pos = strpos($id_data, '=')) === false)			continue;		$timestamp = intval(substr($id_data, $pos + 1));		if ($id > 0 && $timestamp > 0)			$tracked_topics[$type][$id] = $timestamp;	}	($hook = get_hook('fn_get_tracked_topics_end')) ? eval($hook) : null;	return $tracked_topics;}// Adds a new user. The username must be passed through validate_username() first.function add_user($user_info, &$new_uid){	global $forum_db, $base_url, $lang_common, $forum_config, $forum_user, $forum_url;	$return = ($hook = get_hook('fn_add_user_start')) ? eval($hook) : null;	if ($return != null)		return;	// Add the user	$query = array(		'INSERT'	=> 'username, group_id, password, email, email_setting, timezone, dst, language, style, registered, registration_ip, last_visit, salt, activate_key',		'INTO'		=> 'users',		'VALUES'	=> '\''.$forum_db->escape($user_info['username']).'\', '.$user_info['group_id'].', \''.$forum_db->escape($user_info['password_hash']).'\', \''.$forum_db->escape($user_info['email']).'\', '.$user_info['email_setting'].', '.floatval($user_info['timezone']).', '.$user_info['dst'].', \''.$forum_db->escape($user_info['language']).'\', \''.$forum_db->escape($user_info['style']).'\', '.$user_info['registered'].', \''.$forum_db->escape($user_info['registration_ip']).'\', '.$user_info['registered'].', \''.$forum_db->escape($user_info['salt']).'\', '.$user_info['activate_key'].''	);	($hook = get_hook('fn_add_user_qr_insert_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_uid = $forum_db->insert_id();	// Must the user verify the registration?	if ($user_info['require_verification'])	{		// Load the "welcome" template		$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/welcome.tpl'));		// The first row contains the subject		$first_crlf = strpos($mail_tpl, "\n");		$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));		$mail_message = forum_trim(substr($mail_tpl, $first_crlf));		$mail_subject = str_replace('<board_title>', $forum_config['o_board_title'], $mail_subject);		$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);		$mail_message = str_replace('<username>', $user_info['username'], $mail_message);		$mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_password_key'], array($new_uid, substr($user_info['activate_key'], 1, -1)))), $mail_message);		$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);		($hook = get_hook('fn_add_user_send_verification')) ? eval($hook) : null;		forum_mail($user_info['email'], $mail_subject, $mail_message);	}	// Should we alert people on the admin mailing list that a new user has registered?	if ($user_info['notify_admins'] && $forum_config['o_mailing_list'] != '')	{		$mail_subject = 'Alert - New registration';		$mail_message = 'User \''.$user_info['username'].'\' registered in the forums at '.$base_url.'/'."\n\n".'User profile: '.forum_link($forum_url['user'], $new_uid)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';		forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);	}	($hook = get_hook('fn_add_user_end')) ? eval($hook) : null;}// Delete a user and all information associated with itfunction delete_user($user_id, $delete_posts = false){	global $forum_db, $db_type, $forum_config;	$return = ($hook = get_hook('fn_delete_user_start')) ? eval($hook) : null;	if ($return != null)		return;	// First we need to get some data on the user	$query = array(		'SELECT'	=> 'u.username, u.group_id, g.g_moderator',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'u.id='.$user_id	);	($hook = get_hook('fn_delete_user_qr_get_user_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$user = $forum_db->fetch_assoc($result);	// Delete any subscriptions	$query = array(		'DELETE'	=> 'subscriptions',		'WHERE'		=> 'user_id='.$user_id	);	($hook = get_hook('fn_delete_user_qr_delete_subscriptions')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Remove him/her from the online list (if they happen to be logged in)	$query = array(		'DELETE'	=> 'online',		'WHERE'		=> 'user_id='.$user_id	);	($hook = get_hook('fn_delete_user_qr_delete_online')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Should we delete all posts made by this user?	if ($delete_posts)	{		@set_time_limit(0);		// Find all posts made by this user		$query = array(			'SELECT'	=> 'p.id, p.topic_id, t.forum_id, t.first_post_id',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'			=> 't.id=p.topic_id'				)			),			'WHERE'		=> 'p.poster_id='.$user_id		);		($hook = get_hook('fn_delete_user_qr_get_user_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_post = $forum_db->fetch_assoc($result))		{			if ($cur_post['first_post_id'] == $cur_post['id'])				delete_topic($cur_post['topic_id'], $cur_post['forum_id']);			else				delete_post($cur_post['id'], $cur_post['topic_id'], $cur_post['forum_id']);		}	}	else	{		// Set all his/her posts to guest		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'poster_id=1',			'WHERE'		=> 'poster_id='.$user_id		);		($hook = get_hook('fn_delete_user_qr_reset_user_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Delete the user	$query = array(		'DELETE'	=> 'users',		'WHERE'		=> 'id='.$user_id	);	($hook = get_hook('fn_delete_user_qr_delete_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Delete user avatar	delete_avatar($user_id);	// If the user is a moderator or an administrator, we remove him/her from the moderator list in all forums	// and regenerate the bans cache (in case he/she created any bans)	if ($user['group_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')	{		clean_forum_moderators();		// Regenerate the bans cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_bans_cache();	}	($hook = get_hook('fn_delete_user_end')) ? eval($hook) : null;}// Check if a username is occupiedfunction check_username_dupe($username, $exclude_id = null){	global $forum_db;	$return = ($hook = get_hook('fn_check_username_dupe_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$query = array(		'SELECT'	=> 'u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> '(UPPER(username)=UPPER(\''.$forum_db->escape($username).'\') OR UPPER(username)=UPPER(\''.$forum_db->escape(preg_replace('/[^\w]/u', '', $username)).'\')) AND id>1'	);	if ($exclude_id)		$query['WHERE'] .= ' AND id!='.$exclude_id;	($hook = get_hook('fn_check_username_dupe_qr_check_username_dupe')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dupe_name = $forum_db->result($result);	return (is_null($dupe_name) || $dupe_name === false) ? false : $dupe_name;}// Deletes any avatars owned by the specified user IDfunction delete_avatar($user_id){	global $forum_db, $db_type, $forum_config;	$filetypes = array('jpg', 'gif', 'png');	$return = ($hook = get_hook('fn_delete_avatar_start')) ? eval($hook) : null;	if ($return != null)		return;	// Delete user avatar from FS	foreach ($filetypes as $cur_type)	{		$avatar = FORUM_ROOT.$forum_config['o_avatars_dir'].'/'.$user_id.'.'.$cur_type;		if (file_exists($avatar))		{			@unlink($avatar);		}	}	// Delete user avatar from DB	$query = array(		'UPDATE'	=> 'users',		'SET'		=> 'avatar=\''.FORUM_AVATAR_NONE.'\', avatar_height=\'0\', avatar_width=\'0\'',		'WHERE'		=> 'id='.$user_id	);	($hook = get_hook('fn_delete_avatar_qr_delete_avatar')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Creates a new topic with its first postfunction add_topic($post_info, &$new_tid, &$new_pid){	global $forum_db, $db_type, $forum_config, $lang_common;	$return = ($hook = get_hook('fn_add_topic_start')) ? eval($hook) : null;	if ($return != null)		return;	// Add the topic	$query = array(		'INSERT'	=> 'poster, subject, posted, last_post, last_poster, forum_id',		'INTO'		=> 'topics',		'VALUES'	=> '\''.$forum_db->escape($post_info['poster']).'\', \''.$forum_db->escape($post_info['subject']).'\', '.$post_info['posted'].', '.$post_info['posted'].', \''.$forum_db->escape($post_info['poster']).'\', '.$post_info['forum_id']	);	($hook = get_hook('fn_add_topic_qr_add_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_tid = $forum_db->insert_id();	// To subscribe or not to subscribe, that ...	if (!$post_info['is_guest'] && $post_info['subscribe'])	{		$query = array(			'INSERT'	=> 'user_id, topic_id',			'INTO'		=> 'subscriptions',			'VALUES'	=> $post_info['poster_id'].' ,'.$new_tid		);		($hook = get_hook('fn_add_topic_qr_add_subscription')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Create the post ("topic post")	$query = array(		'INSERT'	=> 'poster, poster_id, poster_ip, message, hide_smilies, posted, topic_id',		'INTO'		=> 'posts',		'VALUES'	=> '\''.$forum_db->escape($post_info['poster']).'\', '.$post_info['poster_id'].', \''.$forum_db->escape(get_remote_address()).'\', \''.$forum_db->escape($post_info['message']).'\', '.$post_info['hide_smilies'].', '.$post_info['posted'].', '.$new_tid	);	// If it's a guest post, there might be an e-mail address we need to include	if ($post_info['is_guest'] && $post_info['poster_email'] != null)	{		$query['INSERT'] .= ', poster_email';		$query['VALUES'] .= ', \''.$forum_db->escape($post_info['poster_email']).'\'';	}	($hook = get_hook('fn_add_topic_qr_add_topic_post')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_pid = $forum_db->insert_id();	// Update the topic with last_post_id and first_post_id	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'last_post_id='.$new_pid.', first_post_id='.$new_pid,		'WHERE'		=> 'id='.$new_tid	);	($hook = get_hook('fn_add_topic_qr_update_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/search_idx.php';	update_search_index('post', $new_pid, $post_info['message'], $post_info['subject']);	sync_forum($post_info['forum_id']);	// Increment user's post count & last post time	if (isset($post_info['update_user']) && $post_info['update_user'])	{		if ($post_info['is_guest'])		{			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'last_post='.$post_info['posted'],				'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''			);		}		else		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'num_posts=num_posts+1, last_post='.$post_info['posted'],				'WHERE'		=> 'id='.$post_info['poster_id']			);		}		($hook = get_hook('fn_add_topic_qr_update_last_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// If the posting user is logged in update his/her unread indicator	if (!$post_info['is_guest'] && isset($post_info['update_unread']) && $post_info['update_unread'])	{		$tracked_topics = get_tracked_topics();		$tracked_topics['topics'][$new_tid] = time();		set_tracked_topics($tracked_topics);	}	($hook = get_hook('fn_add_topic_end')) ? eval($hook) : null;}// Delete a topic and all of it's postsfunction delete_topic($topic_id, $forum_id){	global $forum_db, $db_type;	$return = ($hook = get_hook('fn_delete_topic_start')) ? eval($hook) : null;	if ($return != null)		return;	// Create an array of forum IDs that need to be synced	$forum_ids = array($forum_id);	$query = array(		'SELECT'	=> 't.forum_id',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.moved_to='.$topic_id	);	($hook = get_hook('fn_delete_topic_qr_get_forums_to_sync')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($row = $forum_db->fetch_row($result))		$forum_ids[] = $row[0];	// Delete the topic and any redirect topics	$query = array(		'DELETE'	=> 'topics',		'WHERE'		=> 'id='.$topic_id.' OR moved_to='.$topic_id	);	($hook = get_hook('fn_delete_topic_qr_delete_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Create a list of the post ID's in this topic	$query = array(		'SELECT'	=> 'p.id',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$topic_id	);	($hook = get_hook('fn_delete_topic_qr_get_posts_to_delete')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$post_ids = array();	while ($row = $forum_db->fetch_row($result))		$post_ids[] = $row[0];	// Make sure we have a list of post ID's	if (!empty($post_ids))	{		// Delete posts in topic		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id='.$topic_id		);		($hook = get_hook('fn_delete_topic_qr_delete_topic_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require_once FORUM_ROOT.'include/search_idx.php';		strip_search_index($post_ids);	}	// Delete any subscriptions for this topic	$query = array(		'DELETE'	=> 'subscriptions',		'WHERE'		=> 'topic_id='.$topic_id	);	($hook = get_hook('fn_delete_topic_qr_delete_topic_subscriptions')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	foreach ($forum_ids as $cur_forum_id)		sync_forum($cur_forum_id);	($hook = get_hook('fn_delete_topic_end')) ? eval($hook) : null;}// Locate and delete any orphaned redirect topicsfunction delete_orphans(){	global $forum_db;	$return = ($hook = get_hook('fn_delete_orphans_start')) ? eval($hook) : null;	if ($return != null)		return;	// Locate any orphaned redirect topics	$query = array(		'SELECT'	=> 't1.id',		'FROM'		=> 'topics AS t1',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'topics AS t2',				'ON'			=> 't1.moved_to=t2.id'			)		),		'WHERE'		=> 't2.id IS NULL AND t1.moved_to IS NOT NULL'	);	($hook = get_hook('fn_delete_orphans_qr_get_orphans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$orphans = array();	while ($row = $forum_db->fetch_row($result))	{		$orphans[] = $row[0];	}	if (!empty($orphans))	{		// Delete the orphan		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.implode(',', $orphans).')'		);		($hook = get_hook('fn_delete_orphans_qr_delete_orphan')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	($hook = get_hook('fn_delete_orphans_end')) ? eval($hook) : null;}// Creates a new postfunction add_post($post_info, &$new_pid){	global $forum_db, $db_type, $forum_config, $lang_common;	$return = ($hook = get_hook('fn_add_post_start')) ? eval($hook) : null;	if ($return != null)		return;	// Add the post	$query = array(		'INSERT'	=> 'poster, poster_id, poster_ip, message, hide_smilies, posted, topic_id',		'INTO'		=> 'posts',		'VALUES'	=> '\''.$forum_db->escape($post_info['poster']).'\', '.$post_info['poster_id'].', \''.$forum_db->escape(get_remote_address()).'\', \''.$forum_db->escape($post_info['message']).'\', '.$post_info['hide_smilies'].', '.$post_info['posted'].', '.$post_info['topic_id']	);	// If it's a guest post, there might be an e-mail address we need to include	if ($post_info['is_guest'] && $post_info['poster_email'] != null)	{		$query['INSERT'] .= ', poster_email';		$query['VALUES'] .= ', \''.$forum_db->escape($post_info['poster_email']).'\'';	}	($hook = get_hook('fn_add_post_qr_add_post')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_pid = $forum_db->insert_id();	if (!$post_info['is_guest'])	{		// Subscribe or unsubscribe?		if ($post_info['subscr_action'] == 1)		{			$query = array(				'INSERT'	=> 'user_id, topic_id',				'INTO'		=> 'subscriptions',				'VALUES'	=> $post_info['poster_id'].' ,'.$post_info['topic_id']			);			($hook = get_hook('fn_add_post_qr_add_subscription')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else if ($post_info['subscr_action'] == 2)		{			$query = array(				'DELETE'	=> 'subscriptions',				'WHERE'		=> 'topic_id='.$post_info['topic_id'].' AND user_id='.$post_info['poster_id']			);			($hook = get_hook('fn_add_post_qr_delete_subscription')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	// Count number of replies in the topic	$query = array(		'SELECT'	=> 'COUNT(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$post_info['topic_id']	);	($hook = get_hook('fn_add_post_qr_get_topic_reply_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$num_replies = $forum_db->result($result, 0) - 1;	// Update topic	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'num_replies='.$num_replies.', last_post='.$post_info['posted'].', last_post_id='.$new_pid.', last_poster=\''.$forum_db->escape($post_info['poster']).'\'',		'WHERE'		=> 'id='.$post_info['topic_id']	);	($hook = get_hook('fn_add_post_qr_update_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	sync_forum($post_info['forum_id']);	if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/search_idx.php';	update_search_index('post', $new_pid, $post_info['message']);	send_subscriptions($post_info, $new_pid);	// Increment user's post count & last post time	if (isset($post_info['update_user']))	{		if ($post_info['is_guest'])		{			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'last_post='.$post_info['posted'],				'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''			);		}		else		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'num_posts=num_posts+1, last_post='.$post_info['posted'],				'WHERE'		=> 'id='.$post_info['poster_id']			);		}		($hook = get_hook('fn_add_post_qr_update_last_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// If the posting user is logged in update his/her unread indicator	if (!$post_info['is_guest'] && isset($post_info['update_unread']) && $post_info['update_unread'])	{		$tracked_topics = get_tracked_topics();		$tracked_topics['topics'][$post_info['topic_id']] = time();		set_tracked_topics($tracked_topics);	}	($hook = get_hook('fn_add_post_end')) ? eval($hook) : null;}// Delete a single postfunction delete_post($post_id, $topic_id, $forum_id){	global $forum_db, $db_type;	$return = ($hook = get_hook('fn_delete_post_start')) ? eval($hook) : null;	if ($return != null)		return;	$query = array(		'SELECT'	=> 'p.id, p.poster, p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$topic_id,		'ORDER BY'	=> 'p.id DESC',		'LIMIT'		=> '2'	);	($hook = get_hook('fn_qr_get_topic_lastposts_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($last_id, ,) = $forum_db->fetch_row($result);	list($second_last_id, $second_poster, $second_posted) = $forum_db->fetch_row($result);	// Delete the post	$query = array(		'DELETE'	=> 'posts',		'WHERE'		=> 'id='.$post_id	);	($hook = get_hook('fn_delete_post_qr_delete_post')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/search_idx.php';	strip_search_index($post_id);	// Count number of replies in the topic	$query = array(		'SELECT'	=> 'COUNT(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$topic_id	);	($hook = get_hook('fn_qr_get_topic_reply_count2')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$num_replies = $forum_db->result($result, 0) - 1;	// Update the topic now that a post has been deleted	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'num_replies='.$num_replies,		'WHERE'		=> 'id='.$topic_id	);	// If we deleted the most recent post, we need to sync up last post data as wel	if ($last_id == $post_id)		$query['SET'] .= ', last_post='.$second_posted.', last_post_id='.$second_last_id.', last_poster=\''.$forum_db->escape($second_poster).'\'';	($hook = get_hook('fn_qr_update_topic2')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	sync_forum($forum_id);	($hook = get_hook('fn_delete_post_end')) ? eval($hook) : null;}// Update posts, topics, last_post, last_post_id and last_poster for a forumfunction sync_forum($forum_id){	global $forum_db;	$return = ($hook = get_hook('fn_sync_forum_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get topic and post count for forum	$query = array(		'SELECT'	=> 'COUNT(t.id), SUM(t.num_replies)',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.forum_id='.$forum_id	);	($hook = get_hook('fn_sync_forum_qr_get_forum_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($num_topics, $num_posts) = $forum_db->fetch_row($result);	$num_posts = $num_posts + $num_topics;		// $num_posts is only the sum of all replies (we have to add the topic posts)	// Get last_post, last_post_id and last_poster for forum (if any)	$query = array(		'SELECT'	=> 't.last_post, t.last_post_id, t.last_poster',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.forum_id='.$forum_id.' AND t.moved_to is NULL',		'ORDER BY'	=> 't.last_post DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('fn_sync_forum_qr_get_forum_last_post_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$last_post_info = $forum_db->fetch_row($result);	if ($last_post_info)	{		list($last_post, $last_post_id, $last_poster) = $last_post_info;		$last_poster = '\''.$forum_db->escape($last_poster).'\'';	}	else		$last_post = $last_post_id = $last_poster = 'NULL';	// Now update the forum	$query = array(		'UPDATE'	=> 'forums',		'SET'		=> 'num_topics='.$num_topics.', num_posts='.$num_posts.', last_post='.$last_post.', last_post_id='.$last_post_id.', last_poster='.$last_poster,		'WHERE'		=> 'id='.$forum_id	);	($hook = get_hook('fn_sync_forum_qr_update_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	($hook = get_hook('fn_sync_forum_end')) ? eval($hook) : null;}// Update replies, last_post, last_post_id and last_poster for a topicfunction sync_topic($topic_id){	global $forum_db;	$return = ($hook = get_hook('fn_sync_topic_start')) ? eval($hook) : null;	if ($return != null)		return;	// Count number of replies in the topic	$query = array(		'SELECT'	=> 'COUNT(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$topic_id	);	($hook = get_hook('fn_sync_topic_qr_get_topic_reply_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$num_replies = $forum_db->result($result, 0) - 1;	// Get last_post, last_post_id and last_poster	$query = array(		'SELECT'	=> 'p.posted, p.id, p.poster',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$topic_id,		'ORDER BY'	=> 'p.id DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('fn_sync_topic_qr_get_topic_last_post_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($last_post, $last_post_id, $last_poster) = $forum_db->fetch_row($result);	// Now update the topic	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'num_replies='.$num_replies.', last_post='.$last_post.', last_post_id='.$last_post_id.', last_poster=\''.$forum_db->escape($last_poster).'\'',		'WHERE'		=> 'id='.$topic_id	);	($hook = get_hook('fn_sync_topic_qr_update_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	($hook = get_hook('fn_sync_topic_end')) ? eval($hook) : null;}// Iterates through all forum moderator lists and removes any erroneous entriesfunction clean_forum_moderators(){	global $forum_db;	$return = ($hook = get_hook('fn_clean_forum_moderators_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of forums and their respective lists of moderators	$query = array(		'SELECT'	=> 'f.id, f.moderators',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.moderators IS NOT NULL'	);	($hook = get_hook('fn_clean_forum_moderators_qr_get_forum_moderators')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$removed_moderators = array();	while ($cur_forum = $forum_db->fetch_assoc($result))	{		$cur_moderators = unserialize($cur_forum['moderators']);		$new_moderators = $cur_moderators;		// Iterate through each user in the list and check if he/she is in a moderator or admin group		foreach ($cur_moderators as $username => $user_id)		{			if (in_array($user_id, $removed_moderators))			{				unset($new_moderators[$username]);				continue;			}			$query = array(				'SELECT'	=> 'COUNT(u.id)',				'FROM'		=> 'users AS u',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'groups AS g',						'ON'			=> 'g.g_id=u.group_id'					)				),				'WHERE'		=> '(g.g_moderator=1 OR u.group_id=1) AND u.id='.$user_id			);			($hook = get_hook('fn_clean_forum_moderators_qr_check_user_in_moderator_group')) ? eval($hook) : null;			$result2 = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result2) < 1)	// If the user isn't in a moderator or admin group, remove him/her from the list			{				unset($new_moderators[$username]);				$removed_moderators[] = $user_id;			}		}		// If we changed anything, update the forum		if ($cur_moderators != $new_moderators)		{			$new_moderators = (!empty($new_moderators)) ? '\''.$forum_db->escape(serialize($new_moderators)).'\'' : 'NULL';			$query = array(				'UPDATE'	=> 'forums',				'SET'		=> 'moderators='.$new_moderators,				'WHERE'		=> 'id='.$cur_forum['id']			);			($hook = get_hook('fn_qr_clean_forum_moderators_set_forum_moderators')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	($hook = get_hook('fn_clean_forum_moderators_end')) ? eval($hook) : null;}// Send out subscription emailsfunction send_subscriptions($post_info, $new_pid){	global $forum_config, $forum_db, $forum_url, $lang_common;	$return = ($hook = get_hook('fn_send_subscriptions_start')) ? eval($hook) : null;	if ($return != null)		return;	if ($forum_config['o_subscriptions'] != '1')		return;	// Get the post time for the previous post in this topic	$query = array(		'SELECT'	=> 'p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.topic_id='.$post_info['topic_id'],		'ORDER BY'	=> 'p.id DESC',		'LIMIT'		=> '1, 1'	);	($hook = get_hook('fn_send_subscriptions_qr_get_previous_post_time')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$previous_post_time = $forum_db->result($result);	// Get any subscribed users that should be notified (banned users are excluded)	$query = array(		'SELECT'	=> 'u.id, u.email, u.notify_with_post, u.language',		'FROM'		=> 'users AS u',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'subscriptions AS s',				'ON'			=> 'u.id=s.user_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id='.$post_info['forum_id'].' AND fp.group_id=u.group_id)'			),			array(				'LEFT JOIN'		=> 'online AS o',				'ON'			=> 'u.id=o.user_id'			),			array(				'LEFT JOIN'		=> 'bans AS b',				'ON'			=> 'u.username=b.username'			),		),		'WHERE'		=> 'b.username IS NULL AND COALESCE(o.logged, u.last_visit)>'.$previous_post_time.' AND (fp.read_forum IS NULL OR fp.read_forum=1) AND s.topic_id='.$post_info['topic_id'].' AND u.id!='.$post_info['poster_id']	);	($hook = get_hook('fn_send_subscriptions_qr_get_users_to_notify')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subscribers = array();	while ($row = $forum_db->fetch_assoc($result))	{		$subscribers[] = $row;	}	if (!empty($subscribers))	{		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		$notification_emails = array();		// Loop through subscribed users and send e-mails		foreach ($subscribers as $cur_subscriber)		{			// Is the subscription e-mail for $cur_subscriber['language'] cached or not?			if (!isset($notification_emails[$cur_subscriber['language']]) && file_exists(FORUM_ROOT.'lang/'.$cur_subscriber['language'].'/mail_templates/new_reply.tpl'))			{				// Load the "new reply" template				$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$cur_subscriber['language'].'/mail_templates/new_reply.tpl'));				// Load the "new reply full" template (with post included)				$mail_tpl_full = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$cur_subscriber['language'].'/mail_templates/new_reply_full.tpl'));				// The first row contains the subject (it also starts with "Subject:")				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = forum_trim(substr($mail_tpl, $first_crlf));				$first_crlf = strpos($mail_tpl_full, "\n");				$mail_subject_full = forum_trim(substr($mail_tpl_full, 8, $first_crlf-8));				$mail_message_full = forum_trim(substr($mail_tpl_full, $first_crlf));				$mail_subject = str_replace('<topic_subject>', '\''.$post_info['subject'].'\'', $mail_subject);				$mail_message = str_replace('<topic_subject>', '\''.$post_info['subject'].'\'', $mail_message);				$mail_message = str_replace('<replier>', $post_info['poster'], $mail_message);				$mail_message = str_replace('<post_url>', forum_link($forum_url['post'], $new_pid), $mail_message);				$mail_message = str_replace('<unsubscribe_url>', forum_link($forum_url['unsubscribe'], array($post_info['topic_id'], generate_form_token('unsubscribe'.$post_info['topic_id'].$cur_subscriber['id']))), $mail_message);				$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);				$mail_subject_full = str_replace('<topic_subject>', '\''.$post_info['subject'].'\'', $mail_subject_full);				$mail_message_full = str_replace('<topic_subject>', '\''.$post_info['subject'].'\'', $mail_message_full);				$mail_message_full = str_replace('<replier>', $post_info['poster'], $mail_message_full);				$mail_message_full = str_replace('<message>', $post_info['message'], $mail_message_full);				$mail_message_full = str_replace('<post_url>', forum_link($forum_url['post'], $new_pid), $mail_message_full);				$mail_message_full = str_replace('<unsubscribe_url>', forum_link($forum_url['unsubscribe'], array($post_info['topic_id'], generate_form_token('unsubscribe'.$post_info['topic_id'].$cur_subscriber['id']))), $mail_message_full);				$mail_message_full = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message_full);				$notification_emails[$cur_subscriber['language']][0] = $mail_subject;				$notification_emails[$cur_subscriber['language']][1] = $mail_message;				$notification_emails[$cur_subscriber['language']][2] = $mail_subject_full;				$notification_emails[$cur_subscriber['language']][3] = $mail_message_full;				$mail_subject = $mail_message = $mail_subject_full = $mail_message_full = null;			}			// We have to double check here because the templates could be missing			// Make sure the e-mail address format is valid before sending			if (isset($notification_emails[$cur_subscriber['language']]) && is_valid_email($cur_subscriber['email']))			{				if ($cur_subscriber['notify_with_post'] == '0')					forum_mail($cur_subscriber['email'], $notification_emails[$cur_subscriber['language']][0], $notification_emails[$cur_subscriber['language']][1]);				else					forum_mail($cur_subscriber['email'], $notification_emails[$cur_subscriber['language']][2], $notification_emails[$cur_subscriber['language']][3]);			}		}	}	($hook = get_hook('fn_send_subscriptions_end')) ? eval($hook) : null;}//// Special pages//// Display a form that the user can use to confirm that they want to undertake an action.// Used when the CSRF token from the request does not match the token stored in the database.function csrf_confirm_form(){	global $forum_db, $forum_url, $lang_common, $forum_config, $base_url, $forum_start, $tpl_main, $forum_user, $forum_page, $forum_updates, $forum_flash, $forum_loader;	// If we've disabled the CSRF check for this page, we have nothing to do here.	if (defined('FORUM_DISABLE_CSRF_CONFIRM'))		return;	// User pressed the cancel button	if (isset($_POST['confirm_cancel']))		redirect(forum_htmlencode($_POST['prev_url']), $lang_common['Cancel redirect']);	// A helper function for csrf_confirm_form. It takes a multi-dimensional array and returns it as a	// single-dimensional array suitable for use in hidden fields.	function _csrf_confirm_form($key, $values)	{		$fields = array();		if (is_array($values))		{			foreach ($values as $cur_key => $cur_values)				$fields = array_merge($fields, _csrf_confirm_form($key.'['.$cur_key.']', $cur_values));			return $fields;		}		else			$fields[$key] = $values;		return $fields;	}	$return = ($hook = get_hook('fn_csrf_confirm_form_start')) ? eval($hook) : null;	if ($return != null)		return;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		$lang_common['Confirm action']	);	$forum_page['form_action'] = get_current_url();	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'prev_url'		=> '<input type="hidden" name="prev_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />'	);	foreach ($_POST as $submitted_key => $submitted_val)		if ($submitted_key != 'csrf_token' && $submitted_key != 'prev_url')		{			$hidden_fields = _csrf_confirm_form($submitted_key, $submitted_val);			foreach ($hidden_fields as $field_key => $field_val)				$forum_page['hidden_fields'][$field_key] = '<input type="hidden" name="'.forum_htmlencode($field_key).'" value="'.forum_htmlencode($field_val).'" />';		}	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('fn_csrf_confirm_form_pre_header_load')) ? eval($hook) : null;?><div id="brd-main" class="main">	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_common['Confirm action head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_common['CSRF token mismatch'] ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" value="<?php echo $lang_common['Confirm'] ?>" /></span>				<span class="cancel"><input type="submit" name="confirm_cancel" value="<?php echo $lang_common['Cancel'] ?>" /></span>			</div>		</form>	</div></div><?php	($hook = get_hook('fn_csrf_confirm_form_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Display a messagefunction message($message, $link = '', $heading = ''){	global $forum_db, $forum_url, $lang_common, $forum_config, $base_url, $forum_start, $tpl_main, $forum_user, $forum_page, $forum_updates, $forum_loader, $forum_flash;	($hook = get_hook('fn_message_start')) ? eval($hook) : null;	if (!defined('FORUM_HEADER'))	{		if ($heading == '')			$heading = $lang_common['Forum message'];		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			$lang_common['Forum message']		);		($hook = get_hook('fn_message_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'message');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('fn_message_output_start')) ? eval($hook) : null;	}?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $heading ?></span></h2>	</div>	<div class="main-content main-message">		<p><?php echo $message ?><?php if ($link != '') echo ' <span>'.$link.'</span>' ?></p>	</div><?php	($hook = get_hook('fn_message_output_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', "\t".$tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Display a message when board is in maintenance modefunction maintenance_message(){	global $forum_db, $forum_config, $lang_common, $forum_user, $base_url;	$return = ($hook = get_hook('fn_maintenance_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\t\t", '  ', '  ');	$replace = array('&#160; &#160; ', '&#160; ', ' &#160;');	$message = str_replace($pattern, $replace, $forum_config['o_maintenance_message']);	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	// Send a 503 HTTP response code to prevent search bots from indexing the maintenace message	header('HTTP/1.1 503 Service Temporarily Unavailable');	// Load the maintenance template	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/maintenance.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/maintenance.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/maintenance.tpl';	($hook = get_hook('fn_maintenance_message_pre_template_loaded')) ? eval($hook) : null;	$tpl_maint = forum_trim(file_get_contents($tpl_path));	($hook = get_hook('fn_maintenance_message_template_loaded')) ? eval($hook) : null;	// START SUBST - <!-- forum_local -->	$tpl_maint = str_replace('<!-- forum_local -->', 'xml:lang="'.$lang_common['lang_identifier'].'" lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_maint);	// END SUBST - <!-- forum_local -->	// START SUBST - <!-- forum_head -->	ob_start();	require FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';	$tpl_temp = forum_trim(ob_get_contents());	$tpl_maint = str_replace('<!-- forum_head -->', $tpl_temp, $tpl_maint);	ob_end_clean();	// END SUBST - <!-- forum_head -->	// START SUBST - <!-- forum_maint_main -->	ob_start();?>	<div class="main-head">		<h1 class="hn"><span><?php echo $lang_common['Maintenance mode'] ?></span></h1>	</div>	<div class="main-content main-message">		<div class="ct-box user-box">			<?php echo $message."\n" ?>		</div>	</div><?php	$tpl_temp = "\t".forum_trim(ob_get_contents());	$tpl_maint = str_replace('<!-- forum_maint_main -->', $tpl_temp, $tpl_maint);	ob_end_clean();	// END SUBST - <!-- forum_maint_main -->	// End the transaction	$forum_db->end_transaction();	// START SUBST - <!-- forum_include "*" -->	while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_maint, $cur_include))	{		if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))			error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template maintenance.tpl. There is no such file in folder /include/user/.');		ob_start();		include FORUM_ROOT.'include/user/'.$cur_include[1];		$tpl_temp = ob_get_contents();		$tpl_maint = str_replace($cur_include[0], $tpl_temp, $tpl_maint);		ob_end_clean();	}	// END SUBST - <!-- forum_include "*" -->	// Close the db connection (and free up any result data)	$forum_db->close();	exit($tpl_maint);}// Display $message and redirect user to $destination_urlfunction redirect($destination_url, $message){	global $forum_db, $forum_config, $lang_common, $forum_user, $base_url, $forum_loader;	define('FORUM_PAGE', 'redirect');	($hook = get_hook('fn_redirect_start')) ? eval($hook) : null;	// Prefix with base_url (unless it's there already)	if (strpos($destination_url, 'http://') !== 0 && strpos($destination_url, 'https://') !== 0 && strpos($destination_url, '/') !== 0)		$destination_url = $base_url.'/'.$destination_url;	// Do a little spring cleaning	$destination_url = preg_replace('/([\r\n])|(%0[ad])|(;[\s]*data[\s]*:)/i', '', $destination_url);	// If the delay is 0 seconds, we might as well skip the redirect all together	if ($forum_config['o_redirect_delay'] == '0')		header('Location: '.str_replace('&amp;', '&', $destination_url));	// Send no-cache headers	header('Expires: Thu, 21 Jul 1977 07:30:00 GMT');	// When yours truly first set eyes on this world! :)	header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: post-check=0, pre-check=0', false);	header('Pragma: no-cache');		// For HTTP/1.0 compability	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	// Load the redirect template	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/redirect.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/redirect.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/redirect.tpl';	($hook = get_hook('fn_redirect_pre_template_loaded')) ? eval($hook) : null;	$tpl_redir = forum_trim(file_get_contents($tpl_path));	($hook = get_hook('fn_redirect_template_loaded')) ? eval($hook) : null;	// START SUBST - <!-- forum_local -->	$tpl_redir = str_replace('<!-- forum_local -->', 'xml:lang="'.$lang_common['lang_identifier'].'" lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_redir);	// END SUBST - <!-- forum_local -->	// START SUBST - <!-- forum_head -->	$forum_head['refresh'] = '<meta http-equiv="refresh" content="'.$forum_config['o_redirect_delay'].';URL='.str_replace(array('<', '>', '"'), array('&lt;', '&gt;', '&quot;'), $destination_url).'" />';	$forum_head['title'] = '<title>'.$lang_common['Redirecting'].$lang_common['Title separator'].forum_htmlencode($forum_config['o_board_title']).'</title>';	ob_start();	// Include stylesheets	require FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';	$head_temp = forum_trim(ob_get_contents());	$num_temp = 0;	foreach (explode("\n", $head_temp) as $style_temp)		$forum_head['style'.$num_temp++] = $style_temp;	ob_end_clean();	($hook = get_hook('fn_redirect_head')) ? eval($hook) : null;	$tmp_head = implode("\n", $forum_head).$forum_loader->render_css();	$tpl_redir = str_replace('<!-- forum_head -->', $tmp_head, $tpl_redir);	unset($forum_head,$tmp_head);	// END SUBST - <!-- forum_head -->	// START SUBST - <!-- forum_redir_main -->	ob_start();?><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span><?php echo $message.$lang_common['Redirecting'] ?></span></h1>	</div>	<div class="main-content main-message">		<p><?php printf($lang_common['Forwarding info'], $forum_config['o_redirect_delay'], intval($forum_config['o_redirect_delay']) == 1 ? $lang_common['second'] : $lang_common['seconds']) ?><span> <a href="<?php echo $destination_url ?>"><?php echo $lang_common['Click redirect'] ?></a></span></p>	</div></div><?php	$tpl_temp = "\t".forum_trim(ob_get_contents());	$tpl_redir = str_replace('<!-- forum_redir_main -->', $tpl_temp, $tpl_redir);	ob_end_clean();	// END SUBST - <!-- forum_redir_main -->	// START SUBST - <!-- forum_debug -->	if (defined('FORUM_SHOW_QUERIES'))		$tpl_redir = str_replace('<!-- forum_debug -->', get_saved_queries(), $tpl_redir);	// End the transaction	$forum_db->end_transaction();	// END SUBST - <!-- forum_debug -->	// START SUBST - <!-- forum_include "*" -->	while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_redir, $cur_include))	{		if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))			error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template redirect.tpl. There is no such file in folder /include/user/.');		ob_start();		include FORUM_ROOT.'include/user/'.$cur_include[1];		$tpl_temp = ob_get_contents();		$tpl_redir = str_replace($cur_include[0], $tpl_temp, $tpl_redir);		ob_end_clean();	}	// END SUBST - <!-- forum_include "*" -->	// Close the db connection (and free up any result data)	$forum_db->close();	exit($tpl_redir);}// Display a simple error messagefunction error(){	global $forum_config;	if (!headers_sent())	{		// if no HTTP responce code is set we send 503		if (!defined('FORUM_HTTP_RESPONSE_CODE_SET'))			header('HTTP/1.1 503 Service Temporarily Unavailable');		header('Content-type: text/html; charset=utf-8');	}	/*		Parse input parameters. Possible function signatures:		error('Error message.');		error(__FILE__, __LINE__);		error('Error message.', __FILE__, __LINE__);	*/	$num_args = func_num_args();	if ($num_args == 3)	{		$message = func_get_arg(0);		$file = func_get_arg(1);		$line = func_get_arg(2);	}	else if ($num_args == 2)	{		$file = func_get_arg(0);		$line = func_get_arg(1);	}	else if ($num_args == 1)		$message = func_get_arg(0);	// Set a default title and gzip setting if the script failed before $forum_config could be populated	if (empty($forum_config))	{		$forum_config['o_board_title'] = 'PunBB';		$forum_config['o_gzip'] = '0';	}	// Empty all output buffers and stop buffering	while (@ob_end_clean());	// "Restart" output buffering if we are using ob_gzhandler (since the gzip header is already sent)	if (!empty($forum_config['o_gzip']) && extension_loaded('zlib') && !empty($_SERVER['HTTP_ACCEPT_ENCODING']) && (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') !== false))		ob_start('ob_gzhandler');?><!DOCTYPE html><html lang="en" dir="ltr"><head><title>Error - <?php echo forum_htmlencode($forum_config['o_board_title']) ?></title></head><body style="margin: 40px; font: 85%/150% verdana, arial, sans-serif; color: #333;"><h1>An error was encountered</h1><hr /><?php	if (isset($message))		echo '<p>'.$message.'</p>'."\n";	if ($num_args > 1)	{		if (defined('FORUM_DEBUG'))		{			if (isset($file) && isset($line))				echo '<p><em>The error occurred on line '.$line.' in '.$file.'</em></p>'."\n";			$db_error = isset($GLOBALS['forum_db']) ? $GLOBALS['forum_db']->error() : array();			if (!empty($db_error['error_msg']))			{				echo '<p><strong>Database reported:</strong> '.forum_htmlencode($db_error['error_msg']).(($db_error['error_no']) ? ' (Errno: '.$db_error['error_no'].')' : '').'.</p>'."\n";				if ($db_error['error_sql'] != '')					echo '<p><strong>Failed query:</strong> <code>'.forum_htmlencode($db_error['error_sql']).'</code></p>'."\n";			}		}		else			echo '<p><strong>Note:</strong> For detailed error information (necessary for troubleshooting), enable "DEBUG mode". To enable "DEBUG mode", open up the file config.php in a text editor, add a line that looks like "define(\'FORUM_DEBUG\', 1);" (without the quotation marks), and re-upload the file. Once you\'ve solved the problem, it is recommended that "DEBUG mode" be turned off again (just remove the line from the file and re-upload it).</p>'."\n";	}?></body></html><?php	// If a database connection was established (before this error) we close it	if (isset($GLOBALS['forum_db']))		$GLOBALS['forum_db']->close();	exit;}
<?php/** * Loads various functions used to parse posts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Load the IDNA class for international url handlingrequire FORUM_ROOT.'include/idna/idna_convert.class.php';// Here you can add additional smilies if you like (please note that you must escape singlequote and backslash)$smilies = array(':)' => 'smile.png', '=)' => 'smile.png', ':|' => 'neutral.png', '=|' => 'neutral.png', ':(' => 'sad.png', '=(' => 'sad.png', ':D' => 'big_smile.png', '=D' => 'big_smile.png', ':o' => 'yikes.png', ':O' => 'yikes.png', ';)' => 'wink.png', ':/' => 'hmm.png', ':P' => 'tongue.png', ':p' => 'tongue.png', ':lol:' => 'lol.png', ':mad:' => 'mad.png', ':rolleyes:' => 'roll.png', ':cool:' => 'cool.png');($hook = get_hook('ps_start')) ? eval($hook) : null;//// Make sure all BBCodes are lower case and do a little cleanup//function preparse_bbcode($text, &$errors, $is_signature = false){	global $forum_config;	$return = ($hook = get_hook('ps_preparse_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($is_signature)	{		global $lang_profile;		if (preg_match('#\[quote(=(&quot;|"|\'|)(.*)\\1)?\]|\[/quote\]|\[code\]|\[/code\]|\[list(=([1a\*]))?\]|\[/list\]#i', $text))			$errors[] = $lang_profile['Signature quote/code/list'];	}	if ($forum_config['p_sig_bbcode'] == '1' && $is_signature || $forum_config['p_message_bbcode'] == '1' && !$is_signature)	{		// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)		if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)		{			list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);			$text = implode("\xc1", $outside);		}		// Tidy up lists		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$text = preg_replace($pattern, $replace, $text);		$text = str_replace('*'."\0".']', '*]', $text);		if ($forum_config['o_make_links'] == '1')		{			// Check Unicode support			$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');			$text = do_clickable($text, $unicode);		}		// If we split up the message before we have to concatenate it together again (code tags)		if (isset($inside))		{			$outside = explode("\xc1", $text);			$text = '';			$num_tokens = count($outside);			for ($i = 0; $i < $num_tokens; ++$i)			{				$text .= $outside[$i];				if (isset($inside[$i]))					$text .= '[code]'.$inside[$i].'[/code]';			}		}		$temp_text = false;		if (empty($errors))			$temp_text = preparse_tags($text, $errors, $is_signature);		if ($temp_text !== false)			$text = $temp_text;		// Remove empty tags		while ($new_text = preg_replace('/\[(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]\[\/\1\]/', '', $text))		{			if ($new_text != $text)				$text = $new_text;			else				break;		}	}	$return = ($hook = get_hook('ps_preparse_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return forum_trim($text);}//// Check the structure of bbcode tags and fix simple mistakes where possible//function preparse_tags($text, &$errors, $is_signature = false){	global $lang_common, $forum_config;	// Start off by making some arrays of bbcode tags and what we need to do with each one	// List of all the tags	$tags = array('quote', 'code', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'img', 'list', '*', 'h');	// List of tags that we need to check are open (You could not put b,i,u in here then illegal nesting like [b][i][/b][/i] would be allowed)	$tags_opened = $tags;	// and tags we need to check are closed (the same as above, added it just in case)	$tags_closed = $tags;	// Tags we can nest and the depth they can be nested to (only quotes )	$tags_nested = array('quote' => $forum_config['o_quote_depth'], 'list' => 5, '*' => 5);	// Tags to ignore the contents of completely (just code)	$tags_ignore = array('code');	// Block tags, block tags can only go within another block tag, they cannot be in a normal tag	$tags_block = array('quote', 'code', 'list', 'h', '*');	// Inline tags, we do not allow new lines in these	$tags_inline = array('b', 'i', 'u', 'color', 'colour', 'h');	// Tags we trim interior space	$tags_trim = array('img');	// Tags we remove quotes from the argument	$tags_quotes = array('url', 'email', 'img');	// Tags we limit bbcode in	$tags_limit_bbcode = array(		'*' 	=> array('b', 'i', 'u', 'color', 'colour', 'url', 'email', 'list', 'img'),		'list' 	=> array('*'),		'url' 	=> array('b', 'i', 'u', 'color', 'colour', 'img'),		'email' => array('b', 'i', 'u', 'color', 'colour', 'img'),		'img' 	=> array()	);	// Tags we can automatically fix bad nesting	$tags_fix = array('quote', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'h');	$return = ($hook = get_hook('ps_preparse_tags_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$split_text = preg_split("/(\[[\*a-zA-Z0-9-\/]*?(?:=.*?)?\])/", $text, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);	$open_tags = array('post');	$open_args = array('');	$opened_tag = 0;	$new_text = '';	$current_ignore = '';	$current_nest = '';	$current_depth = array();	$limit_bbcode = $tags;	foreach ($split_text as $current)	{		if ($current == '')			continue;		// Are we dealing with a tag?		if (substr($current, 0, 1) != '[' || substr($current, -1, 1) != ']')		{			// Its not a bbcode tag so we put it on the end and continue			// If we are nested too deeply don't add to the end			if ($current_nest)				continue;			$current = str_replace("\r\n", "\n", $current);			$current = str_replace("\r", "\n", $current);			if (in_array($open_tags[$opened_tag], $tags_inline) && strpos($current, "\n") !== false)			{				// Deal with new lines				$split_current = preg_split("/(\n\n+)/", $current, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);				$current = '';				if (!forum_trim($split_current[0], "\n")) // the first part is a linebreak so we need to handle any open tags first					array_unshift($split_current, '');				for ($i = 1; $i < count($split_current); $i += 2)				{					$temp_opened = array();					$temp_opened_arg = array();					$temp = $split_current[$i - 1];					while (!empty($open_tags))					{						$temp_tag = array_pop($open_tags);						$temp_arg = array_pop($open_args);						if (in_array($temp_tag , $tags_inline))						{							array_push($temp_opened, $temp_tag);							array_push($temp_opened_arg, $temp_arg);							$temp .= '[/'.$temp_tag.']';						}						else						{							array_push($open_tags, $temp_tag);							array_push($open_args, $temp_arg);							break;						}					}					$current .= $temp.$split_current[$i];					$temp = '';					while (!empty($temp_opened))					{						$temp_tag = array_pop($temp_opened);						$temp_arg = array_pop($temp_opened_arg);						if (empty($temp_arg))							$temp .= '['.$temp_tag.']';						else							$temp .= '['.$temp_tag.'='.$temp_arg.']';						array_push($open_tags, $temp_tag);						array_push($open_args, $temp_arg);					}					$current .= $temp;				}				if (array_key_exists($i - 1, $split_current))					$current .= $split_current[$i - 1];			}			if (in_array($open_tags[$opened_tag], $tags_trim))				$new_text .= forum_trim($current);			else				$new_text .= $current;			continue;		}		// Get the name of the tag		$current_arg = '';		if (strpos($current, '/') === 1)		{			$current_tag = substr($current, 2, -1);		}		else if (strpos($current, '=') === false)		{			$current_tag = substr($current, 1, -1);		}		else		{			$current_tag = substr($current, 1, strpos($current, '=')-1);			$current_arg = substr($current, strpos($current, '=')+1, -1);		}		$current_tag = strtolower($current_tag);		// Is the tag defined?		if (!in_array($current_tag, $tags))		{			// Its not a bbcode tag so we put it on the end and continue			if (!$current_nest)				$new_text .= $current;			continue;		}		// We definitely have a bbcode tag.		// Make the tag string lower case		if ($equalpos = strpos($current,'='))		{			// We have an argument for the tag which we don't want to make lowercase			if (strlen(substr($current, $equalpos)) == 2)			{				// Empty tag argument				$errors[] = sprintf($lang_common['BBCode error 6'], $current_tag);				return false;			}			$current = strtolower(substr($current, 0, $equalpos)).substr($current, $equalpos);		}		else			$current = strtolower($current);		//This is if we are currently in a tag which escapes other bbcode such as code		if ($current_ignore)		{			if ('[/'.$current_ignore.']' == $current)			{				// We've finished the ignored section				$current = '[/'.$current_tag.']';				$current_ignore = '';			}			$new_text .= $current;			continue;		}		if ($current_nest)		{			// We are currently too deeply nested so lets see if we are closing the tag or not.			if ($current_tag != $current_nest)				continue;			if (substr($current, 1, 1) == '/')				$current_depth[$current_nest]--;			else				$current_depth[$current_nest]++;			if ($current_depth[$current_nest] <= $tags_nested[$current_nest])				$current_nest = '';			continue;		}		// Check the current tag is allowed here		if (!in_array($current_tag, $limit_bbcode) && $current_tag != $open_tags[$opened_tag])		{			$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);			return false;		}		if (substr($current, 1, 1) == '/')		{			//This is if we are closing a tag			if ($opened_tag == 0 || !in_array($current_tag, $open_tags))			{				//We tried to close a tag which is not open				if (in_array($current_tag, $tags_opened))				{					$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);					return false;				}			}			else			{				// Check nesting				while (true)				{					// Nesting is ok					if ($open_tags[$opened_tag] == $current_tag)					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;						break;					}					// Nesting isn't ok, try to fix it					if (in_array($open_tags[$opened_tag], $tags_closed) && in_array($current_tag, $tags_closed))					{						if (in_array($current_tag, $open_tags))						{							$temp_opened = array();							$temp_opened_arg = array();							$temp = '';							while (!empty($open_tags))							{								$temp_tag = array_pop($open_tags);								$temp_arg = array_pop($open_args);								if (!in_array($temp_tag, $tags_fix))								{									// We couldn't fix nesting									$errors[] = sprintf($lang_common['BBCode error 5'], array_pop($temp_opened));									return false;								}								array_push($temp_opened, $temp_tag);								array_push($temp_opened_arg, $temp_arg);								if ($temp_tag == $current_tag)									break;								else									$temp .= '[/'.$temp_tag.']';							}							$current = $temp.$current;							$temp = '';							array_pop($temp_opened);							array_pop($temp_opened_arg);							while (!empty($temp_opened))							{								$temp_tag = array_pop($temp_opened);								$temp_arg = array_pop($temp_opened_arg);								if (empty($temp_arg))									$temp .= '['.$temp_tag.']';								else									$temp .= '['.$temp_tag.'='.$temp_arg.']';								array_push($open_tags, $temp_tag);								array_push($open_args, $temp_arg);							}							$current .= $temp;							$opened_tag--;							break;						}						else						{							// We couldn't fix nesting							$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);							return false;						}					}					else if (in_array($open_tags[$opened_tag], $tags_closed))						break;					else					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;					}				}			}			if (in_array($current_tag, array_keys($tags_nested)))			{				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]--;			}			if (in_array($open_tags[$opened_tag], array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$open_tags[$opened_tag]];			else				$limit_bbcode = $tags;			$new_text .= $current;			continue;		}		else		{			// We are opening a tag			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			else				$limit_bbcode = $tags;			if (in_array($current_tag, $tags_block) && !in_array($open_tags[$opened_tag], $tags_block) && $opened_tag != 0)			{				// We tried to open a block tag within a non-block tag				$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);				return false;			}			if (in_array($current_tag, $tags_ignore))			{				// Its an ignore tag so we don't need to worry about whats inside it,				$current_ignore = $current_tag;				$new_text .= $current;				continue;			}			// Deal with nested tags			if (in_array($current_tag, $open_tags) && !in_array($current_tag, array_keys($tags_nested)))			{				// We nested a tag we shouldn't				$errors[] = sprintf($lang_common['BBCode error 4'], $current_tag);				return false;			}			else if (in_array($current_tag, array_keys($tags_nested)))			{				// We are allowed to nest this tag				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]++;				else					$current_depth[$current_tag] = 1;				// See if we are nested too deep				if ($current_depth[$current_tag] > $tags_nested[$current_tag])				{					$current_nest = $current_tag;					continue;				}			}			// Remove quotes from arguments for certain tags			if (strpos($current, '=') !== false && in_array($current_tag, $tags_quotes))			{				$current = preg_replace('#\['.$current_tag.'=("|\'|)(.*?)\\1\]\s*#i', '['.$current_tag.'=$2]', $current);			}			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			$open_tags[] = $current_tag;			$open_args[] = $current_arg;			$opened_tag++;			$new_text .= $current;			continue;		}	}	// Check we closed all the tags we needed to	foreach ($tags_closed as $check)	{		if (in_array($check, $open_tags))		{			// We left an important tag open			$errors[] = sprintf($lang_common['BBCode error 5'], $check);			return false;		}	}	if ($current_ignore)	{		// We left an ignore tag open		$errors[] = sprintf($lang_common['BBCode error 5'], $current_ignore);		return false;	}	$return = ($hook = get_hook('ps_preparse_tags_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $new_text;}//// Preparse the contents of [list] bbcode//function preparse_list_tag($content, $type = '*', &$errors){	global $lang_common;	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$content = preg_replace($pattern, $replace, $content);	}	$items = explode('[*]', str_replace('\"', '"', $content));	$content = '';	foreach ($items as $item)	{		if (forum_trim($item) != '')			$content .= '[*'."\0".']'.str_replace('[/*]', '', forum_trim($item)).'[/*'."\0".']'."\n";	}	return '[list='.$type.']'."\n".$content.'[/list]';}//// Split text into chunks ($inside contains all text inside $start and $end, and $outside contains all text outside)//function split_text($text, $start, $end, &$errors, $retab = true){	global $forum_config, $lang_common;	$tokens = explode($start, $text);	$outside[] = $tokens[0];	$num_tokens = count($tokens);	for ($i = 1; $i < $num_tokens; ++$i)	{		$temp = explode($end, $tokens[$i]);		if (count($temp) != 2)		{			$errors[] = $lang_common['BBCode code problem'];			return array(null, array($text));		}		$inside[] = $temp[0];		$outside[] = $temp[1];	}	if ($forum_config['o_indent_num_spaces'] != 8 && $retab)	{		$spaces = str_repeat(' ', $forum_config['o_indent_num_spaces']);		$inside = str_replace("\t", $spaces, $inside);	}	return array($inside, $outside);}//// Truncate URL if longer than 55 characters (add http:// or ftp:// if missing)//function handle_url_tag($url, $link = '', $bbcode = false){	$return = ($hook = get_hook('ps_handle_url_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$full_url = str_replace(array(' ', '\'', '`', '"'), array('%20', '', '', ''), $url);	if (strpos($url, 'www.') === 0)			// If it starts with www, we add http://		$full_url = 'http://'.$full_url;	else if (strpos($url, 'ftp.') === 0)	// Else if it starts with ftp, we add ftp://		$full_url = 'ftp://'.$full_url;	else if (!preg_match('#^([a-z0-9]{3,6})://#', $url)) 	// Else if it doesn't start with abcdef://, we add http://		$full_url = 'http://'.$full_url;	if (defined('FORUM_SUPPORT_PCRE_UNICODE'))	{		$idn = new idna_convert();		$idn->set_parameter('encoding', 'utf8');		$idn->set_parameter('strict', false);		$full_url = $idn->encode($full_url);	}	// Ok, not very pretty :-)	if (!$bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$link_name = ($link == '' || $link == $url) ? $url : $link;			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link_name))			{				$link = $idn->decode($link_name);			}		}		$link = ($link == '' || $link == $url) ? ((utf8_strlen($url) > 55) ? utf8_substr($url, 0 , 39).'  '.utf8_substr($url, -10) : $url) : stripslashes($link);	}	$return = ($hook = get_hook('ps_handle_url_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link))			{				$link = $idn->decode($link);			}		}		if ($full_url == $link)			return '[url]'.$link.'[/url]';		else			return '[url='.$full_url.']'.$link.'[/url]';	}	else		return '<a href="'.$full_url.'">'.$link.'</a>';}//// Turns an URL from the [img] tag into an <img> tag or a <a href...> tag//function handle_img_tag($url, $is_signature = false, $alt = null){	global $lang_common, $forum_user;	$return = ($hook = get_hook('ps_handle_img_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($alt == null)		$alt = $url;	$img_tag = '<a href="'.$url.'">&lt;'.$lang_common['Image link'].'&gt;</a>';	if ($is_signature && $forum_user['show_img_sig'] != '0')		$img_tag = '<img class="sigimage" src="'.$url.'" alt="'.forum_htmlencode($alt).'" />';	else if (!$is_signature && $forum_user['show_img'] != '0')		$img_tag = '<span class="postimg"><img src="'.$url.'" alt="'.forum_htmlencode($alt).'" /></span>';	$return = ($hook = get_hook('ps_handle_img_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $img_tag;}//// Parse the contents of [list] bbcode//function handle_list_tag($content, $type = '*'){	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('handle_list_tag(\'$2\', \'$1\')');		$content = preg_replace($pattern, $replace, $content);	}	$content = preg_replace('#\s*\[\*\](.*?)\[/\*\]\s*#s', '<li><p>$1</p></li>', forum_trim($content));	if ($type == '*')		$content = '<ul>'.$content.'</ul>';	else		if ($type == 'a')			$content = '<ol class="alpha">'.$content.'</ol>';		else			$content = '<ol class="decimal">'.$content.'</ol>';	return '</p>'.$content.'<p>';}//// Convert BBCodes to their HTML equivalent//function do_bbcode($text, $is_signature = false){	global $lang_common, $forum_user, $forum_config;	$return = ($hook = get_hook('ps_do_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strpos($text, '[quote') !== false)	{		$text = preg_replace('#\[quote=(&\#039;|&quot;|"|\'|)(.*?)\\1\]#e', '"</p><div class=\"quotebox\"><cite>".str_replace(array(\'[\', \'\\"\'), array(\'&#91;\', \'"\'), \'$2\')." ".$lang_common[\'wrote\'].":</cite><blockquote><p>"', $text);		$text = preg_replace('#\[quote\]\s*#', '</p><div class="quotebox"><blockquote><p>', $text);		$text = preg_replace('#\s*\[\/quote\]#S', '</p></blockquote></div><p>', $text);	}	if (!$is_signature)	{		$pattern[] = '%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise';		$replace[] = 'handle_list_tag(\'$2\', \'$1\')';	}	$pattern[] = '#\[b\](.*?)\[/b\]#ms';	$pattern[] = '#\[i\](.*?)\[/i\]#ms';	$pattern[] = '#\[u\](.*?)\[/u\]#ms';	$pattern[] = '#\[colou?r=([a-zA-Z]{3,20}|\#[0-9a-fA-F]{6}|\#[0-9a-fA-F]{3})](.*?)\[/colou?r\]#ms';	$pattern[] = '#\[h\](.*?)\[/h\]#ms';	$replace[] = '<strong>$1</strong>';	$replace[] = '<em>$1</em>';	$replace[] = '<span class="bbu">$1</span>';	$replace[] = '<span style="color: $1">$2</span>';	$replace[] = '</p><h5>$1</h5><p>';	if (($is_signature && $forum_config['p_sig_img_tag'] == '1') || (!$is_signature && $forum_config['p_message_img_tag'] == '1'))	{		$pattern[] = '#\[img\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		$pattern[] = '#\[img=([^\[]*?)\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		if ($is_signature)		{			$replace[] = 'handle_img_tag(\'$1$3\', true)';			$replace[] = 'handle_img_tag(\'$2$4\', true, \'$1\')';		}		else		{			$replace[] = 'handle_img_tag(\'$1$3\', false)';			$replace[] = 'handle_img_tag(\'$2$4\', false, \'$1\')';		}	}	$pattern[] = '#\[url\]([^\[]*?)\[/url\]#e';	$pattern[] = '#\[url=([^\[]+?)\](.*?)\[/url\]#e';	$pattern[] = '#\[email\]([^\[]*?)\[/email\]#';	$pattern[] = '#\[email=([^\[]+?)\](.*?)\[/email\]#';	$replace[] = 'handle_url_tag(\'$1\')';	$replace[] = 'handle_url_tag(\'$1\', \'$2\')';	$replace[] = '<a href="mailto:$1">$1</a>';	$replace[] = '<a href="mailto:$1">$2</a>';	$return = ($hook = get_hook('ps_do_bbcode_replace')) ? eval($hook) : null;	if ($return != null)		return $return;	// This thing takes a while! :)	$text = preg_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_do_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Make hyperlinks clickable//function do_clickable($text, $unicode = FALSE){	$text = ' '.$text;	if ($unicode)	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\p{Nd}\p{L}\-]+\.([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	else	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\w\-]+\.([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-]?)?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	return substr($text, 1);}//// Convert a series of smilies to images//function do_smilies($text){	global $forum_config, $base_url, $smilies;	$return = ($hook = get_hook('ps_do_smilies_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$text = ' '.$text.' ';	foreach ($smilies as $smiley_text => $smiley_img)	{		if (strpos($text, $smiley_text) !== false)			$text = preg_replace("#(?<=[>\s])".preg_quote($smiley_text, '#')."(?=\W)#m", '<img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.substr($smiley_img, 0, strrpos($smiley_img, '.')).'" />', $text);	}	$return = ($hook = get_hook('ps_do_smilies_end')) ? eval($hook) : null;	return substr($text, 1, -1);}//// Parse message text//function parse_message($text, $hide_smilies){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_message_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_message_pre_split')) ? eval($hook) : null;	if ($return != null)		return $return;	// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)	if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)	{		list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);		$text = implode("\xc1", $outside);	}	$return = ($hook = get_hook('ps_parse_message_post_split')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_message_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text);	if ($forum_config['o_smilies'] == '1' && $forum_user['show_smilies'] == '1' && $hide_smilies == '0')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_message_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_message_pre_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// If we split up the message before we have to concatenate it together again (code tags)	if (isset($inside))	{		$outside = explode("\xc1", $text);		$text = '';		$num_tokens = count($outside);		for ($i = 0; $i < $num_tokens; ++$i)		{			$text .= $outside[$i];			if (isset($inside[$i]))				$text .= '</p><div class="codebox"><pre><code>'.forum_trim($inside[$i], "\n\r").'</code></pre></div><p>';		}	}	$return = ($hook = get_hook('ps_parse_message_post_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// Add paragraph tag around post, but make sure there are no empty paragraphs	$text = preg_replace('#<br />\s*?<br />((\s*<br />)*)#i', "</p>$1<p>", $text);	$text = str_replace('<p><br />', '<p>', $text);	$text = str_replace('<p></p>', '', '<p>'.$text.'</p>');	$return = ($hook = get_hook('ps_parse_message_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Parse signature text//function parse_signature($text){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_signature_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_signature_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_signature_pre_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_sig_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text, true);	if ($forum_config['o_smilies_sig'] == '1' && $forum_user['show_smilies'] == '1')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_signature_post_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_signature_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}define('FORUM_PARSER_LOADED', 1);
<?php/** * Loads various functions that are used for searching the forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_SEARCH_MIN_WORD'))	define('FORUM_SEARCH_MIN_WORD', 3);if (!defined('FORUM_SEARCH_MAX_WORD'))	define('FORUM_SEARCH_MAX_WORD', 20);//// Cache the results of a search and redirect the user to the results page//function create_search_cache($keywords, $author, $search_in = false, $forum = array(-1), $show_as = 'topics', $sort_by = null, $sort_dir = 'DESC'){	global $forum_db, $forum_user, $forum_config, $forum_url, $lang_search, $lang_common, $db_type;	$return = ($hook = get_hook('sf_fn_create_search_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	if (utf8_strlen(str_replace(array('*', '%'), '', $author)) < 2)		$author = '';	if (utf8_strlen(str_replace(array('*', '%'), '', $keywords)) < FORUM_SEARCH_MIN_WORD)		$keywords = '';	if (!$keywords && !$author)		message($lang_search['No terms']);	$keywords = utf8_strtolower($keywords);	$author = utf8_strtolower($author);	// Flood protection	if ($forum_user['last_search'] && (time() - $forum_user['last_search']) < $forum_user['g_search_flood'] && (time() - $forum_user['last_search']) >= 0)		message(sprintf($lang_search['Search flood'], $forum_user['g_search_flood']));	if ($forum_user['is_guest'])	{		$query = array(			'UPDATE'	=> 'online',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);	}	else	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'id='.$forum_user['id'],		);	}	($hook = get_hook('sf_fn_create_search_cache_qr_update_last_search_time')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// We need to grab results, insert them into the cache and reload with a search id before showing them	$keyword_results = $author_results = array();	// If it's a search for keywords	if ($keywords)	{		// Remove any apostrophes which aren't part of words		$keywords = substr(preg_replace('((?<=\W)\'|\'(?=\W))', '', ' '.$keywords.' '), 1, -1);		// Remove symbols and multiple whitespace		$keywords = preg_replace('/[\^\$&\(\)<>`"\|,@_\?%~\+\[\]{}:=\/#\\\\;!\.\s]+/', ' ', $keywords);		// Fill an array with all the words		$keywords_array = array_unique(explode(' ', $keywords));		// Remove any words that are not indexed		$keywords_array = array_filter($keywords_array, 'validate_search_word');  		if (empty($keywords_array))			no_search_results();		$word_count = 0;		$match_type = 'and';		$result_list = array();		foreach ($keywords_array as $cur_word)		{			switch ($cur_word)			{				case 'and':				case 'or':				case 'not':					$match_type = $cur_word;					break;				default:				{					$query = array(						'SELECT'	=> 'm.post_id',						'FROM'		=> 'search_words AS w',						'JOINS'		=> array(							array(								'INNER JOIN'	=> 'search_matches AS m',								'ON'			=> 'm.word_id=w.id'							)						),						'WHERE'		=> 'w.word LIKE \''.$forum_db->escape(str_replace('*', '%', $cur_word)).'\''					);					// Search in what?					if ($search_in)						$query['WHERE'] .= ($search_in > 0 ? ' AND m.subject_match=0' : ' AND m.subject_match=1');					($hook = get_hook('sf_fn_create_search_cache_qr_get_keyword_hits')) ? eval($hook) : null;					$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);					$row = array();					while (list($post_id) = $forum_db->fetch_row($result))					{						$row[$post_id] = 1;						if (!$word_count)							$result_list[$post_id] = 1;						else if ($match_type == 'or')							$result_list[$post_id] = 1;						else if ($match_type == 'not')							$result_list[$post_id] = 0;					}					if ($match_type == 'and' && $word_count)					{						foreach (array_keys($result_list) as $post_id)						{							if (!isset($row[$post_id]))								$result_list[$post_id] = 0;						}					}					++$word_count;					$forum_db->free_result($result);					break;				}			}		}		foreach ($result_list as $post_id => $matches)		{			if ($matches)				$keyword_results[] = $post_id;		}		unset($result_list);	}	// If it's a search for author name (and that author name isn't Guest)	if ($author && $author != 'guest' && $author != utf8_strtolower($lang_common['Guest']))	{		$query = array(			'SELECT'	=> 'u.id',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.username '.($db_type == 'pgsql' ? 'ILIKE' : 'LIKE').' \''.$forum_db->escape(str_replace('*', '%', $author)).'\''		);		($hook = get_hook('sf_fn_create_search_cache_qr_get_author')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$user_ids = array();		while ($row = $forum_db->fetch_row($result))		{			$user_ids[] = $row[0];		}		if (!empty($user_ids))		{			$query = array(				'SELECT'	=> 'p.id',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.poster_id IN('.implode(',', $user_ids).')'			);			($hook = get_hook('sf_fn_create_search_cache_qr_get_author_hits')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$search_ids = array();			while ($row = $forum_db->fetch_row($result))				$author_results[] = $row[0];			$forum_db->free_result($result);		}	}	if ($author && $keywords)	{		// If we searched for both keywords and author name we want the intersection between the results		$search_ids = array_intersect($keyword_results, $author_results);		unset($keyword_results, $author_results);	}	else if ($keywords)		$search_ids = $keyword_results;	else		$search_ids = $author_results;	if (count($search_ids) == 0)		no_search_results();	// Setup the default show_as topics search	$query = array(		'SELECT'	=> 't.id',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'topics AS t',				'ON'			=> 't.id=p.topic_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id IN('.implode(',', $search_ids).')',		'GROUP BY'	=> 't.id'	);	// Search a specific forum?	if (!in_array(-1, $forum) || ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod']))		$query['WHERE'] .= ' AND t.forum_id IN('.implode(',', $forum).')';	// Adjust the query if show_as posts	if ($show_as == 'posts')	{		$query['SELECT'] = 'p.id';		unset($query['GROUP BY']);	}	($hook = get_hook('sf_fn_create_search_cache_qr_get_hits')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_ids = array();	while ($row = $forum_db->fetch_row($result))		$search_ids[] = $row[0];	// Prune "old" search results	$query = array(		'SELECT'	=> 'o.ident',		'FROM'		=> 'online AS o'	);	($hook = get_hook('sf_fn_create_search_cache_qr_get_online_idents')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$online_idents = array();	while ($row = $forum_db->fetch_row($result))	{		$online_idents[] = '\''.$forum_db->escape($row[0]).'\'';	}	if (!empty($online_idents))	{		$query = array(			'DELETE'	=> 'search_cache',			'WHERE'		=> 'ident NOT IN('.implode(',', $online_idents).')'		);		($hook = get_hook('sf_fn_create_search_cache_qr_delete_old_cached_searches')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Final search results	$search_results = implode(',', $search_ids);	// Fill an array with our results and search properties	$search_data = serialize(compact('search_results', 'sort_by', 'sort_dir', 'show_as'));	$search_id = mt_rand(1, 2147483647);	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'INSERT'	=> 'id, ident, search_data',		'INTO'		=> 'search_cache',		'VALUES'	=> $search_id.', \''.$forum_db->escape($ident).'\', \''.$forum_db->escape($search_data).'\''	);	($hook = get_hook('sf_fn_create_search_cache_qr_cache_search')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$return = ($hook = get_hook('sf_fn_create_search_cache_end')) ? eval($hook) : null;	if ($return != null)		return;	$forum_db->end_transaction();	$forum_db->close();	// Redirect the user to the cached result page	header('Location: '.str_replace('&amp;', '&', forum_link($forum_url['search_results'], $search_id)));	exit;}//// Generate query to grab the results for a cached search//function generate_cached_search_query($search_id, &$show_as){	global $forum_db, $db_type, $forum_user, $forum_config;	$return = ($hook = get_hook('sf_fn_generate_cached_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'SELECT'	=> 'sc.search_data',		'FROM'		=> 'search_cache AS sc',		'WHERE'		=> 'sc.id='.$search_id.' AND sc.ident=\''.$forum_db->escape($ident).'\''	);	($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_search_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($row = $forum_db->fetch_assoc($result))	{		$search_data = unserialize($row['search_data']);		$search_results = $search_data['search_results'];		$sort_by = $search_data['sort_by'];		$sort_dir = $search_data['sort_dir'];		$show_as = $search_data['show_as'];		unset($search_data);	}	else		return false;	// If there are no posts, we don't need to execute the query	if (empty($search_results))		return false;	switch ($sort_by)	{		case 1:			$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';			break;		case 2:			$sort_by_sql = 't.subject';			break;		case 3:			$sort_by_sql = 't.forum_id';			break;		default:			$sort_by_sql = ($show_as == 'topics') ? 't.posted' : 'p.posted';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_cached_sort_by')) ? eval($hook) : null;			break;	}	if ($show_as == 'posts')	{		$query = array(			'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'			=> 't.id=p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 'p.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_posts')) ? eval($hook) : null;	}	else	{		$query = array(			'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 't.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		// With "has posted" indication		if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')		{			$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';			$query['JOINS'][]	= array(				'LEFT JOIN'		=> 'posts AS p',				'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'			);			// Must have same columns as in prev SELECT			$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_has_posted')) ? eval($hook) : null;		}		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_topics')) ? eval($hook) : null;	}	($hook = get_hook('sf_fn_generate_cached_search_query_end')) ? eval($hook) : null;	return $query;}//// Generate query to grab the results for an action search (i.e. quicksearch)//function generate_action_search_query($action, $value, &$search_id, &$url_type, &$show_as){	global $forum_db, $forum_user, $forum_config, $lang_common, $forum_url, $db_type;	$return = ($hook = get_hook('sf_fn_generate_action_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	switch ($action)	{		case 'show_new':			if ($forum_user['is_guest'])				message($lang_common['No permission']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.$forum_user['last_visit'].' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			if ($value != -1)				$query['WHERE'] .= ' AND f.id='.$value;			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_new_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new')) ? eval($hook) : null;			break;		case 'show_recent':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.(time() - $value).' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_recent_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent')) ? eval($hook) : null;			break;		case 'show_user_posts':			$query = array(				'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',				'FROM'		=> 'posts AS p',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'topics AS t',						'ON'			=> 't.id=p.topic_id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 'pposted DESC'			);			$url_type = $forum_url['search_user_posts'];			$search_id = $value;			$show_as = 'posts';			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_posts')) ? eval($hook) : null;			break;		case 'show_user_topics':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'posts AS p',						'ON'			=> 't.first_post_id=p.id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_user_topics'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics')) ? eval($hook) : null;			break;		case 'show_subscriptions':			if ($forum_user['is_guest'])				message($lang_common['Bad request']);			// Check we're allowed to see the subscriptions we're trying to look at			if ($forum_user['g_id'] != FORUM_ADMIN && $forum_user['id'] != $value)				message($lang_common['Bad request']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'subscriptions AS s',						'ON'			=> '(t.id=s.topic_id AND s.user_id='.$value.')'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1)',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_subscriptions'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions')) ? eval($hook) : null;			break;		case 'show_unanswered':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.num_replies=0 AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_unanswered'];			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered')) ? eval($hook) : null;			break;	}	($hook = get_hook('sf_fn_generate_action_search_query_end')) ? eval($hook) : null;	return $query;}//// Get search results for a specified query, returns number of results//function get_search_results($query, &$search_set){	global $forum_db, $forum_user, $forum_page, $lang_common;	$return = ($hook = get_hook('sf_fn_get_search_results_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_results = array();	while ($row = $forum_db->fetch_assoc($result))	{		$search_results[] = $row;	}	// Make sure we actually have some results	$num_hits = count($search_results);	if ($num_hits == 0)		return 0;	// Work out the settings for pagination	$forum_page['num_pages'] = ceil($num_hits / $forum_page['per_page']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];	// Determine the topic or post offset (based on $forum_page['page'])	$forum_page['start_from'] = $forum_page['per_page'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_page['per_page']), $num_hits);	// Fill $search_set with out search hits	$search_set = array();	$row_num = 0;	foreach ($search_results as $row)	{		if ($forum_page['start_from'] <= $row_num && $forum_page['finish_at'] > $row_num)			$search_set[] = $row;		++$row_num;	}	$forum_db->free_result($result);	$return = ($hook = get_hook('sf_fn_get_search_results_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $num_hits;}//// Output a message if there are no results//function no_search_results($action = 'search'){	global $forum_page, $lang_search, $forum_url;	$forum_page['search_again'] = '<a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a>';	$return = ($hook = get_hook('sf_fn_no_search_results_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			message($lang_search['No new posts'], $forum_page['search_again'], $lang_search['Topics with new']);			break;		case 'show_recent':			message($lang_search['No recent posts'], $forum_page['search_again'], $lang_search['Recently active topics']);			break;		case 'show_user_posts':			message($lang_search['No user posts'], $forum_page['search_again'], $lang_search['Posts by user']);			break;		case 'show_user_topics':			message($lang_search['No user topics'], $forum_page['search_again'], $lang_search['Topics by user']);			break;		case 'show_subscriptions':			message($lang_search['No subscriptions'], $forum_page['search_again'], $lang_search['Subscriptions']);			break;		case 'show_unanswered':			message($lang_search['No unanswered'], $forum_page['search_again'], $lang_search['Unanswered topics']);			break;		default:			message($lang_search['No hits'], $forum_page['search_again'], $lang_search['Search results']);			break;	}}//// Generate search breadcrumbs//function generate_search_crumbs($action = null){	global $forum_page, $lang_common, $lang_search, $forum_url, $forum_user, $num_hits, $search_set, $search_id, $show_as;	$return = ($hook = get_hook('sf_fn_generate_search_crumbs_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			$forum_page['crumbs'][] = $lang_search['Topics with new'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			$forum_page['main_foot_options']['mark_all'] = '<span'.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['mark_read'], generate_form_token('markread'.$forum_user['id'])).'">'.$lang_common['Mark all as read'].'</a></span>';			// Add link for show all topics, not only new (updated)			$forum_page['main_head_options']['show_all'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['forum'], $search_set[0]['forum_id']).'">'.$lang_search['All Topics'].'</a></span>';			break;		case 'show_recent':			$forum_page['crumbs'][] = $lang_search['Recently active topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_unanswered':			$forum_page['crumbs'][] = $lang_search['Unanswered topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_posts':			$forum_page['crumbs'][] = sprintf($lang_search['Posts by'], $search_set[0]['pposter'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['items_info'] = generate_items_info($lang_search['Posts found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_topics'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_topics'], $search_id).'">'.sprintf($lang_search['Topics by'], forum_htmlencode($search_set[0]['pposter'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_topics':			$forum_page['crumbs'][] = sprintf($lang_search['Topics by'], $search_set[0]['poster']);			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_posts'] =  '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_posts'], $search_id).'">'.sprintf($lang_search['Posts by'], forum_htmlencode($search_set[0]['poster'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_subscriptions':			$forum_page['crumbs'][] = $lang_search['Subscriptions'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		default:			$forum_page['crumbs'][] = $lang_search['Search results'];			$forum_page['items_info'] = generate_items_info((($show_as == 'topics') ? $lang_search['Topics found'] : $lang_search['Posts found']), ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['new_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a></span>';			break;	}}//// Checks to see if an action is valid//function validate_search_action($action){	// A list of valid actions (extensions can add their own actions to the array)	$valid_actions = array('search', 'show_new', 'show_recent', 'show_user_posts', 'show_user_topics', 'show_subscriptions', 'show_unanswered');	$return = ($hook = get_hook('sf_fn_validate_actions_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return in_array($action, $valid_actions);}
<?php// Language definitions used in login.php$lang_login = array(// Miscellaneous'Login'								=>	'Login','Login info'						=>	'Login to %s','Username'							=>	'Username','Password'							=>	'Password','Remember me'						=>	'Remember me','E-mail address'					=>	'Email address','E-mail address help'				=>	'Enter the email address set in your profile.','Login errors'						=>	'<strong>Warning!</strong> The following errors must be corrected before you can login:','Wrong user/pass'					=>	'Incorrect username and/or password.','Login redirect'					=>	'Logged in successfully.','Logout redirect'					=>	'Logged out.','No e-mail match'					=>	'There is no user registered with the email address %s.','Invalid e-mail'					=>	'The email address you entered is invalid.','Login options'						=>	'Do you need to %1$s or obtain a %2$s before you login?','Obtain pass'						=>	'new password','register'							=>	'register','Submit password request'			=>	'Submit request','Email flood'						=>	'This account has already requested a new password in the past %s seconds. Please wait a while before requesting a new password again.','New password request'				=>	'New password request','New password errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before a new password can be sent:','New password info'					=>	'<strong>Important!</strong> An email will be sent to the specified address with instructions on how to change your password.','New password cancel redirect'		=>	'New password request cancelled.','Forget mail'						=>	'An email has been sent to the specified address with instructions on how to change your password. If it does not arrive you can contact the forum administrator at %s.','Persistent login'					=>	'Log me in automatically each time I visit.');
<?php// Language definitions used in various scripts$lang_misc = array('Mark read redirect'		=>	'All topics and forums have been marked as read.','Mark forum read redirect'	=>	'All topics in the specified forum have been marked as read.',// Send e-mail'Form e-mail disabled'		=>	'The user you are trying to send an email to has disabled form email.','Form e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be sent:','No e-mail subject'			=>	'You must enter a subject.','No e-mail message'			=>	'You must enter a message.','Too long e-mail message'	=>	'Your message length is %s bytes. This exceeds the %s bytes limit.','Email flood'				=>	'At least %s seconds have to pass between sent emails. Please wait a while and try sending again.','E-mail sent redirect'		=>	'Email sent.','E-mail subject'			=>	'Subject','E-mail message'			=>	'Message','E-mail disclosure note'	=>	'<strong>Important!</strong> When you send an email using this form your email address will be disclosed to the recipient.','Write e-mail'				=>	'Compose email','Send forum e-mail'			=>	'Send email to %s via the forum',// Report'No reason'					=>	'You must enter a reason.','Report flood'				=>	'At least %s seconds have to pass between reports. Please wait a while and try sending again.','Report redirect'			=>	'Post reported.','Report post'				=>	'Report post','Reason'					=>	'Reason','Reason help'				=>	'Enter a short reason why you are reporting this post.','Too long reason'			=>	'Your report length is %s bytes. This exceeds the %s bytes limit.','Report errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before your report can be sent:',// Subscriptions'Already subscribed'		=>	'You are already subscribed to this topic.','Subscribe redirect'		=>	'Your subscription has been added.','Not subscribed'			=>	'You are not subscribed to this topic.','Unsubscribe redirect'		=>	'Your subscription has been removed.',// General forum and topic moderation'Moderate forum'			=>	'Moderate forum','Select'					=>	'Select',	// the header of a column of checkboxes'Move'						=>	'Move','Merge'						=>	'Merge','Open'						=>  'Open','Close'						=>  'Close','Select all'				=>	'Select all',// Hostname lookup'Hostname lookup'			=>	'The IP address is: %1$s<br />The host name is: %2$s<br /><br />%3$s','Show more users'			=>	'Show more users for this IP',// Moderate forum'Moderate forum head'		=>	'Moderate: %s','Topics'					=>	'Topics','Move topic'				=>	'Move topic','Move topics'				=>	'Move topics','Merge topics'				=>	'Merge topics','Delete topics'				=>	'Delete topics','Delete topic'				=>	'Delete topic','To new forum'				=>	'to a new forum','Move to'					=>	'Destination forum','Nowhere to move'			=>	'There are no forums into which you can move topics.','Leave redirect'			=>	'Leave a redirect topic in the forum from which the topic was moved.','Leave redirects'			=>	'Leave redirect topics in the forum from which topics were moved.','Leave merge redirects'		=>	'Leave redirect topics for those topics which were merged.','Move topic redirect'		=>	'Topic moved.','Move topics redirect'		=>	'Topics moved.','Merge topics redirect'		=>	'Topics merged.','Delete topic comply'		=>	'Are you sure you want to delete the selected topic?','Delete topics comply'		=>	'Are you sure you want to delete all the selected topics?','Delete topic redirect'		=>	'Topic deleted.','Delete topics redirect'	=>	'Topics deleted.','Open topic redirect'		=>	'Topic opened.','Open topics redirect'		=>	'Topics opened.','Close topic redirect'		=>	'Topic closed.','Close topics redirect'		=>	'Topics closed.','No topics selected'		=>	'You must select at least one topic.','Stick topic redirect'		=>	'Topic is now sticky.','Unstick topic redirect'	=>	'Topic no longer sticky.','Merge error'				=>	'You should select more than 1 topic to merge.',// Moderate topic'Posts'						=>	'Posts','Delete posts'				=>	'Delete selected posts','Split posts'				=>	'Split selected posts','Delete whole topic'		=>	'Delete whole topic','Moderate topic head'		=>	'Moderate topic: %s','New subject'				=>	'New topic subject:','Select post'				=>	'Select post', // Label for checkbox'Confirm post delete'		=>	'Confirm deletion of all selected posts','Confirm topic delete'		=>	'Confirm deletion of all selected topics','Confirm topic split'		=>	'Confirm splitting of all selected posts into a new topic','Confirm topic merge'		=>	'Confirm merging of all selected topics into one topic','Confirm post split'		=>	'Confirm splitting of all selected posts','Delete posts redirect'		=>	'Posts deleted.','Split posts redirect'		=>	'Posts split into a new topic.','No posts selected'			=>	'You must select at least one post.');
<?php// Language definitions used in post.php and edit.php$lang_post = array(// Post validation stuff (many are similar to those in edit.php)'No subject'			=>	'Topics must contain a subject.','Too long subject'		=>	'Subjects cannot be longer than 70 characters.','All caps subject'		=>	'Subjects cannot contain only capital letters.','No message'			=>	'You must enter a message.','Too long message'		=>	'Your post length is %s bytes. This exceeds the %s bytes limit.','All caps message'		=>	'Posts cannot contain only capital letters.','CSRF token mismatch'	=>	'Unable to confirm security token. A likely cause for this is that some time passed between when you first entered the page and when you posted the form. Clicking "Submit" again should solve the problem.','Invalid e-mail'		=>	'The email address you entered is invalid.',// Posting'Compose your reply'	=>	'Compose and post your new reply','Compose your topic'	=>	'Compose and post your new topic','Compose edited reply'	=>	'Compose and post your edited reply','Compose edited topic'	=>	'Compose and post your edited topic','Guest post legend'		=>	'Required information for guests','Post errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be posted:','Guest name'			=>	'Guest name',	// For guests (instead of Username)'Guest e-mail'			=>	'Guest email','Post redirect'			=>	'Post entered.','Post reply'			=>	'Post new reply','Post new topic'		=>	'Post new topic','Topic subject'			=>	'Topic subject','Write message'			=>	'Write message','Hide smilies'			=>	'Never show smilies as icons (images) for this post.','Subscribe'				=>	'Subscribe to this topic.','Stay subscribed'		=>	'Stay subscribed to this topic.','Topic review'			=>	'Topic review (newest first)','Flood'					=>	'At least %s seconds have to pass between posts. Please wait a while and try posting again.','Permalink post'		=>	'Permanent link to this post','Post settings'			=>	'Optional post settings','Preview reply'			=>	'Preview your new reply','Preview new topic'		=>	'Preview your new topic','Preview reply'			=>	'Preview reply', // For preview button'Preview topic'			=>	'Preview topic', // For preview button'Submit reply'			=>	'Submit reply', // For submit button'Submit topic'			=>	'Submit topic', // For submit button'Post byline'			=>	'<span>Post by </span>%s','Topic byline'			=>	'<span>Topic by </span>%s','Reply byline'			=>	'<span>Reply by </span>%s','Post posted'			=>	'<span>Posted </span>%s',// Edit post'Edit post legend'		=>	'Edit message','Edit topic'			=>	'Edit topic','Edit reply'			=>	'Edit reply','Silent edit'			=>	'Silent edit (don\'t display "Last edited by" in topic view for this edit).','Preview edited topic'	=>	'Preview of your edited topic','Preview edited reply'	=>	'Preview of your edited reply','Edit redirect'			=>	'Post updated.');
<?php$lang_profile = array(// Navigation and sections'Profile redirect'			=>	'Profile updated.','Instructions'				=>	'You will be redirected back to this page','Update profile'			=>	'Update profile',// Administration stuff'User delete redirect'		=>	'User deleted.','Section admin'				=>	'Administration','Delete user'				=>	'Delete user','Delete warning'			=>	'<strong>Warning!</strong> Once deleted a user and/or their posts cannot be restored.','Delete posts info'			=>	'<strong>Warning!</strong> If you choose not to delete this user\'s posts they can only be deleted manually at a later time.','Delete posts'				=>	'Delete posts','Delete posts label'		=>	'Delete any posts and topics %s has made.','Group membership redirect'	=>	'Group membership updated.','Moderate forums redirect'	=>	'Forum moderator rights updated.','Ban redirect'				=>	'Redirecting','Ban user'					=>	'Ban user','Ban user info'				=>	'Ban this user via the administration console.','Delete user info'			=>	'Permanently delete this user and, optionally, all their posts.','User management'			=>	'User management','Group membership'			=>	'Group membership','User group'				=>	'Assign user to group','Moderator assignment'		=>	'Moderator assignment','Cannot delete admin'		=>	'Administrators cannot be deleted. In order to delete this user, you must first move him/her to a different user group.','Update groups'				=>	'Update user group','Update forums'				=>	'Update moderator assignment',// Avatar stuff'Avatar welcome'			=>	'Set an avatar image to enhance your forum identity','Avatar welcome user'		=>	'Set an avatar image to enhance  %s\'s forum identity','Avatar deleted redirect'	=>	'Avatar deleted.','Avatars disabled'			=>	'The administrator has disabled avatar support.','No file'					=>	'You did not select a file for upload.','Too large ini'				=>	'The selected file was too large to upload. The server didn\'t allow the upload.','Partial upload'			=>	'The selected file was only partially uploaded. Please try again.','No tmp directory'			=>	'PHP was unable to save the uploaded file to a temporary location.','Bad type'					=>	'The file you tried to upload is not of an allowed type. Allowed file types are gif, jpeg and png.','Too large'					=>	'The file you tried to upload is larger than the maximum allowed %s bytes.','Move failed'				=>	'The server was unable to save the uploaded file. Please contact the forum administrator at %s.','Too wide or high'			=>	'The file you tried to upload is wider and/or higher than the maximum allowed %sx%s pixels.','Unknown failure'			=>	'An unknown error occurred. Please try again.','Avatar'					=>	'Avatar','Current avatar'			=>	'Current avatar','No avatar info'			=>	'No avatar is currently uploaded.','Avatar info replace'		=>	'Uploading a new avatar will replace your existing avatar.','Avatar info none'			=>	'To display an avatar you first need to upload one.','Avatar info type'			=>	'The allowed image file types are gif, jpeg and png.','Avatar info size'			=>	'The maximum image size allowed is %sx%s pixels and %s bytes (%s KB).','Delete avatar info'		=>	'Delete avatar to stop displaying any avatar.','Upload avatar file'		=>	'Upload avatar file','Avatar upload help'		=>	'Select file then update your profile to install.','No upload warn'			=>	'<strong>IMPORTANT! </strong> You must choose a file to upload before updating your profile.',// About and Identity sections'Users profile'				=>	'%s\'s profile','Section about'				=>	'Introduction','Profile welcome'			=>	'Welcome to your profile','Profile welcome user'		=>	'Welcome to %s\'s profile','Identity welcome'			=>	'Modify your personal and contact details','Identity welcome user'		=>	'Modify %s\'s personal and contact details','View your posts'			=>	'View all your posts','View your topics'			=>	'View all your topics','View user posts'			=>	'View all %s\'s posts','View user topics'			=>	'View all %s\'s topics','View your subscriptions'	=>	'View all your subscriptions','View user subscriptions'	=>	'View all %s\'s subscriptions','Realname'					=>	'Real name','Location'					=>	'Location','From'						=>	'From','Registered'				=>	'Registered','Website'					=>	'Website','Facebook'					=>	'Facebook','Twitter'					=>	'Twitter','LinkedIn'					=>	'LinkedIn','Skype'						=>	'Skype','IP'						=>	'IP','Note'						=>	'Note','Posts'						=>	'Posts','Last post'					=>	'Last post','Last visit'				=> 	'Last visit','Send forum e-mail'			=>	'Send forum email','Contact info'				=>	'Contact information','Jabber'					=>	'Jabber','ICQ'						=>	'ICQ','MSN'						=>	'MSN Messenger','AOL IM'					=>	'AOL IM','Forbidden title'			=>	'The title you entered contains a forbidden word. You must choose a different title.','Bad ICQ'					=>	'You entered an invalid ICQ UIN.','Yahoo'						=>	'Yahoo! Messenger','Posts and topics'			=>	'Posts and topics','Private info'				=>	'Private information','Current signature'			=>	'Current signature','Section identity'			=>	'Identity','Section settings'			=>	'Settings','Section avatar'			=>	'Avatar','Section signature'			=>	'Signature','Signature info'			=>	'Your signature will appear at the foot of your posts. It can contain almost anything such as your favourite quote or star sign. It\'s up to you!','Personal legend'			=>	'Personal details','Title'						=>	'Title','Leave blank'				=>	'Leave blank to use forum default.','Edit count'				=>	'Edit post count','Admin note'				=>	'Admin note','Contact legend'			=>	'Contact details','Contact messengers legend'	=>	'Contact messengers details','Name or Url'				=>	'Enter the url or username',// Settings section'Local settings'			=>	'Local settings','Settings welcome'			=>	'Modify your localization, display and email settings','Settings welcome user'		=>	'Modify %s\'s localization, display and email settings','Timezone info'				=>	'Must be set for correct time display.','Time format'				=>  'Time format','Default'					=>  'default','Date format'				=>  'Date format','Display settings'			=>	'Display settings','Styles'					=>	'Available styles','Image display'				=>	'Image display','Show avatars'				=>	'Show user avatars in posts.','Show images sigs'			=>	'Show images in user signatures.','Show images'				=>	'Show images in posts.','Show sigs'					=>	'Show user signatures in posts.','Show smilies'				=>	'Show smilies as graphic icons.','Signature display'			=>	'Signature display','Pagination settings'		=>	'Pagination settings','Topics per page'			=>	'Topics per page','Posts per page'			=>	'Posts per page','E-mail and sub settings'	=>	'Email and subscription settings','Subscription settings'		=>	'Subscription settings','Notify full'				=>	'Include a plain text copy of posts in subscription emails.','Subscribe by default'		=>	'Subscribe to topics by default when posting.','UTC-12:00'					=>	'(UTC-12:00) International Date Line West','UTC-11:00'					=>	'(UTC-11:00) Niue, Samoa','UTC-10:00'					=>	'(UTC-10:00) Hawaii-Aleutian, Cook Island','UTC-09:30'					=>	'(UTC-09:30) Marquesas Islands','UTC-09:00'					=>	'(UTC-09:00) Alaska, Gambier Island','UTC-08:00'					=>	'(UTC-08:00) Pacific','UTC-07:00'					=>	'(UTC-07:00) Mountain','UTC-06:00'					=>	'(UTC-06:00) Central','UTC-05:00'					=>	'(UTC-05:00) Eastern','UTC-04:00'					=>	'(UTC-04:00) Atlantic','UTC-03:30'					=>	'(UTC-03:30) Newfoundland','UTC-03:00'					=>	'(UTC-03:00) Amazon, Central Greenland','UTC-02:00'					=>	'(UTC-02:00) Mid-Atlantic','UTC-01:00'					=>	'(UTC-01:00) Azores, Cape Verde, Eastern Greenland','UTC'						=>	'(UTC) Western European, Greenwich','UTC+01:00'					=>	'(UTC+01:00) Central European, West African','UTC+02:00'					=>	'(UTC+02:00) Eastern European, Central African','UTC+03:00'					=>	'(UTC+03:00) Moscow, Eastern African','UTC+03:30'					=>	'(UTC+03:30) Iran','UTC+04:00'					=>	'(UTC+04:00) Gulf, Samara','UTC+04:30'					=>	'(UTC+04:30) Afghanistan','UTC+05:00'					=>	'(UTC+05:00) Pakistan, Yekaterinburg','UTC+05:30'					=>	'(UTC+05:30) India, Sri Lanka','UTC+05:45'					=>	'(UTC+05:45) Nepal','UTC+06:00'					=>	'(UTC+06:00) Bangladesh, Bhutan, Novosibirsk','UTC+06:30'					=>	'(UTC+06:30) Cocos Islands, Myanmar','UTC+07:00'					=>	'(UTC+07:00) Indochina, Krasnoyarsk','UTC+08:00'					=>	'(UTC+08:00) Greater China, Australian Western, Irkutsk','UTC+08:45'					=>	'(UTC+08:45) Southeastern Western Australia','UTC+09:00'					=>	'(UTC+09:00) Japan, Korea, Chita','UTC+09:30'					=>	'(UTC+09:30) Australian Central','UTC+10:00'					=>	'(UTC+10:00) Australian Eastern, Vladivostok','UTC+10:30'					=>	'(UTC+10:30) Lord Howe','UTC+11:00'					=>	'(UTC+11:00) Solomon Island, Magadan','UTC+11:30'					=>	'(UTC+11:30) Norfolk Island','UTC+12:00'					=>	'(UTC+12:00) New Zealand, Fiji, Kamchatka','UTC+12:45'					=>	'(UTC+12:45) Chatham Islands','UTC+13:00'					=>	'(UTC+13:00) Tonga, Phoenix Islands','UTC+14:00'					=>	'(UTC+14:00) Line Islands',// Change Password stuff'Change pass errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your password can be updated:','Pass logout'				=>	'A user is currently logged in. Please logout and try again.','Pass key bad'				=>	'The specified password activation key was incorrect or has expired. Please re-request a new password. If that fails, contact the forum administrator at %s.','Pass updated'				=>	'Password updated. Login with your new password.','Change your password'		=>	'Change your password','Change user password'		=>	'Change %s\'s password','Old password'				=>	'Old password','Old password help'			=>	'You must enter your existing password.','New password'				=>	'New password','Confirm new password'		=>	'Confirm new password','Wrong old password'		=>	'The old password you entered was incorrect.','Pass updated redirect'		=>	'Password updated.',// Change E-mail stuff'Change e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your email address can be updated:','E-mail key bad'			=>	'The specified email activation key was incorrect or has expired. Please re-request change of email address. If that fails, contact the forum administrator at %s.','E-mail updated'			=>	'Your email address has been updated.','E-mail updated redirect'	=>	'Your email address has been updated.','Wrong password'			=>	'The password you entered was incorrect.','Activate e-mail sent'		=>	'An email has been sent to the specified address with instructions on how to activate the new email address. If it doesn\'t arrive you can contact the forum administrator at %s.','Change your e-mail'		=>	'Change your email address','Change user e-mail'		=>	'Change %s\'s email address','New e-mail'				=>	'New email address',// Signatures'Sig welcome'				=>	'Create or modify a signature for display in your posts','Sig welcome user'			=>	'Create or modify a signature for display in %s\'s posts','Signatures disabled'		=>	'The administrator has disabled signatures support.','Sig too long'				=>	'Signatures cannot be longer than %1$s characters. Please reduce your signature by %2$s characters.','Sig too many lines'		=>	'Signatures cannot have more than %s lines.','Signature'					=>	'Signature','Compose signature'			=>	'Compose signature','Sig max size'				=>	'Maximum size %s characters long and %s lines high.',// Registration stuff (some of these also used by profile)'No new regs'				=>	'This forum is not accepting new registrations.','Reg cancel redirect'		=>	'Registration cancelled.','Agreement'					=>	'Agreement','Agreement label'			=>	'I agree to the rules set out above and wish to register.','Agree'						=>	'Agree','Registration flood'		=>	'A new user was registered with the same IP address as you within the last hour. To prevent registration flooding, at least an hour has to pass between registrations from the same IP. Sorry for the inconvenience.','Pass too short'			=>	'Passwords must be at least 4 characters long. Please choose another (longer) password.','Pass not match'			=>	'Passwords do not match.','E-mail not match'			=>	'Email addresses do not match.','Banned e-mail'				=>	'The email address you entered is banned in this forum. Please choose another email address.','Dupe e-mail'				=>	'Someone else is already registered with that email address. Please choose another email address.','Reg e-mail'				=>	'Thank you for registering. An email has been sent to the specified address with instructions on how to activate your new account. If it doesn\'t arrive you can contact the forum administrator at %s.','Reg complete'				=>	'Registration complete. Logging in and redirecting','Register errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before you can register:','E-mail info'				=>	'<strong>Important!</strong> An email will be sent to your new address with an activation link. You must click the link in the email you receive to activate the new address. You must therefore ensure that you enter a valid and current email address.','Reg e-mail info'			=>	'<strong>Important!</strong> An email with an activation link will be sent to the address you provide. You must click the link in the email in order to activate your new account. It must be done in 72 hours after registration, or else your account will be deleted.','Register at'				=>	'Register at %s','Register intro'			=>	'Registration enables you to use features not available when browsing the board as a guest. The fields below only make up a small part of all the settings you can alter in your profile. If you have any questions regarding this forum you should ask an administrator. Please complete the form below in order to register.','Username'					=>	'Username','Username help'				=>	'Between 2 and 25 characters.','Password'					=>	'Password','Password help'				=>	'Minimum 4 characters. Case sensitive.','Confirm password'			=>	'Confirm password','Confirm password help'		=>	'Re-enter your password exactly as before.','E-mail'					=>	'Email','E-mail help'				=>	'A current valid email address.','Confirm e-mail'			=>	'Confirm email','Confirm e-mail help'		=>	'Re-enter your email address exactly as before.','Optional legend'			=>	'Optional settings','Language'					=>	'Language','Timezone'					=>	'Your timezone','DST label'					=>	'Daylight saving time (advance times by 1 hour).','E-mail settings'			=>	'Email settings','E-mail setting 1'			=>	'Display your email address to other users.','E-mail setting 2'			=>	'Hide your email address but allow email via the forum.','E-mail setting 3'			=>	'Hide your email address and disallow email via the forum.','Reg rules head'			=>	'You must agree to the forum rules set out below in order to register.','Register'					=>	'Register', // Registration button text// Form validation stuff'Profile update errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your profile can be updated:','Username BBCode'			=>	'Usernames may not contain any of the text formatting tags (BBCode) that the forum uses. Please choose another username.','Username IP'				=>	'Usernames may not be in the form of an IP address. Please choose another username.','Username censor'			=>	'The username you entered contains one or more censored words. Please choose a different username.','Username dupe'				=>	'Someone is already registered with the username %s. The username you entered is too similar. The username must differ from that by at least one alphanumerical character (a-z or 0-9). Please choose another username.','Username guest'			=>	'The username guest is reserved. Please choose another username.','Username reserved chars'	=>	'Usernames may not contain all the characters \', " and [ or ] at once. Please choose another username.','Username too long'			=>	'Usernames must not be more than 25 characters long. Please choose another (shorter) username.','Username too short'		=>	'Usernames must be at least 2 characters long. Please choose another (longer) username.','Signature quote/code'		=>	'The quote and code BBCodes are not allowed in signatures.','Invalid e-mail'			=>	'The email address you entered is invalid.','Signature quote/code/list'	=>	'Signature may not contain of the text formatting tags (BBCode) [quote], [code] or [list]. Please choose another tags or delete it.',);
<?php// Language definitions used in search.php$lang_search = array(// The search form'No search permission'		=>	'You do not have permission to use the search feature.','Search heading'			=>	'Search forums using your criteria','Search flood'				=>	'At least %s seconds have to pass between searches. Please wait a while and try searching again.','Search legend'				=>	'Search criteria','Results legend'			=>	'Search results','Keywords info'				=>	'You may search for a single keyword or for multiple keywords separated by spaces.','Refine info'				=>	'You may use <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> to refine your searches by keyword.','Wildcard info'				=>	'Use the wildcard character <strong>*</strong> for partial keyword or username matches.','Forum default info'		=>	'By default all forums are searched. You may narrow your search by selecting one or more forums to search.','Forum require info'		=>	'You may choose to search one or more forums. You <strong>must</strong> select at least one forum to search.','Keyword search'			=>	'Keyword or words','Author search'				=>	'Author\'s username','Forum search'				=>	'Select forums to search','Forum search default'		=>	'If no forums are selected then all forums will be searched.','Forum search require'		=>	'You must select at least one forum to search.','Sort by'					=>	'Sort results by','Sort order'				=>	'Results sort order','Sort by post time'			=>	'Post time','Sort by author'			=>	'Author','Sort by subject'			=>	'Subject','Sort by forum'				=>	'Forum','Ascending'					=>	'Ascending','Descending'				=>	'Descending','Display results'			=>	'Display results','Show as topics'			=>	'As topics','Show as posts'				=>	'As posts','Submit search'				=>	'Submit','User defined search'		=>	'User defined search','Advanced search'			=>	'Advanced search','Search in'					=>	'Search in','Message and subject'		=>	'Message text and topic subject','Message only'				=>	'Message text only','Topic only'				=>	'Topic subject only',// Results'Search results'			=>	'Search results','Topics with new'			=>	'Topics with new posts','All Topics'				=>	'Show all topics','Recently active topics'	=>	'Recently active topics','Unanswered topics'			=>	'Unanswered topics','Subscriptions'				=>	'Subscriptions','Topics found'				=>	'Topics found','Posts found'				=>	'Posts found','Topics by'					=>	'Topics by %s','Posts by'					=>	'Posts by %s','Topics by user'			=>	'Topics by this user','Posts by user'				=>	'Posts by this user','Perform new search'		=>	'Perform new search','Search options'			=>	'Search options','Posted in'					=>	'Posted in ','No terms'					=>	'You have to enter at least one keyword and/or an author to search for.','No hits'					=>	'Your search returned no hits.','No user posts'				=>	'There are no posts by this user in this forum.','No user topics'			=>	'There are no topics by this user in this forum.','No subscriptions'			=>	'There are no topics which have been subscribed to.','No new posts'				=>	'There are no topics with new posts since your last visit.','No recent posts'			=>	'No posts have been made recently.','No unanswered'				=>	'There are no unanswered posts in this forum.','Go to post'				=>	'Go to post','Go to forum'				=>	'Go to forum','Go to topic'				=>	'Go to topic','Go to profile'				=>	'Go to %s\'s profile');
<?php/** * Handles logins, logouts, and password reset requests. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (isset($_GET['action']))	define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('li_start')) ? eval($hook) : null;// Load the login.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/login.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$errors = array();// Loginif (isset($_POST['form_sent']) && empty($action)){	$form_username = forum_trim($_POST['req_username']);	$form_password = forum_trim($_POST['req_password']);	$save_pass = isset($_POST['save_pass']);	($hook = get_hook('li_login_form_submitted')) ? eval($hook) : null;	// Get user info matching login attempt	$query = array(		'SELECT'	=> 'u.id, u.group_id, u.password, u.salt',		'FROM'		=> 'users AS u'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$query['WHERE'] = 'username=\''.$forum_db->escape($form_username).'\'';	else		$query['WHERE'] = 'LOWER(username)=LOWER(\''.$forum_db->escape($form_username).'\')';	($hook = get_hook('li_login_qr_get_login_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($user_id, $group_id, $db_password_hash, $salt) = $forum_db->fetch_row($result);	$authorized = false;	if (!empty($db_password_hash))	{		$sha1_in_db = (strlen($db_password_hash) == 40) ? true : false;		$form_password_hash = forum_hash($form_password, $salt);		if ($sha1_in_db && $db_password_hash == $form_password_hash)			$authorized = true;		else if ((!$sha1_in_db && $db_password_hash == md5($form_password)) || ($sha1_in_db && $db_password_hash == sha1($form_password)))		{			$authorized = true;			$salt = random_key(12);			$form_password_hash = forum_hash($form_password, $salt);			// There's an old MD5 hash or an unsalted SHA1 hash in the database, so we replace it			// with a randomly generated salt and a new, salted SHA1 hash			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$form_password_hash.'\', salt=\''.$forum_db->escape($salt).'\'',				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_hash')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	($hook = get_hook('li_login_pre_auth_message')) ? eval($hook) : null;	if (!$authorized)		$errors[] = sprintf($lang_login['Wrong user/pass']);	// Did everything go according to plan?	if (empty($errors))	{		// Update the status if this is the first time the user logged in		if ($group_id == FORUM_UNVERIFIED)		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$forum_config['o_default_user_group'],				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_group')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove this user's guest entry from the online list		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);		($hook = get_hook('li_login_qr_delete_online_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$expire = ($save_pass) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];		forum_setcookie($cookie_name, base64_encode($user_id.'|'.$form_password_hash.'|'.$expire.'|'.sha1($salt.$form_password_hash.forum_hash($expire, $salt))), $expire);		($hook = get_hook('li_login_pre_redirect')) ? eval($hook) : null;		redirect(forum_htmlencode($_POST['redirect_url']).((substr_count($_POST['redirect_url'], '?') == 1) ? '&amp;' : '?').'login=1', $lang_login['Login redirect']);	}}// Logoutelse if ($action == 'out'){	if ($forum_user['is_guest'] || !isset($_GET['id']) || $_GET['id'] != $forum_user['id'])	{		header('Location: '.forum_link($forum_url['index']));		exit;	}	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('logout'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('li_logout_selected')) ? eval($hook) : null;	// Remove user from "users online" list.	$query = array(		'DELETE'	=> 'online',		'WHERE'		=> 'user_id='.$forum_user['id']	);	($hook = get_hook('li_logout_qr_delete_online_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Update last_visit (make sure there's something to update it with)	if (isset($forum_user['logged']))	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_visit='.$forum_user['logged'],			'WHERE'		=> 'id='.$forum_user['id']		);		($hook = get_hook('li_logout_qr_update_last_visit')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	$expire = time() + 1209600;	forum_setcookie($cookie_name, base64_encode('1|'.random_key(8, false, true).'|'.$expire.'|'.random_key(8, false, true)), $expire);	// Reset tracked topics	set_tracked_topics(null);	($hook = get_hook('li_logout_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['index']), $lang_login['Logout redirect']);}// New passwordelse if ($action == 'forget' || $action == 'forget_2'){	if (!$forum_user['is_guest'])		header('Location: '.forum_link($forum_url['index']));	($hook = get_hook('li_forgot_pass_selected')) ? eval($hook) : null;	if (isset($_POST['form_sent']))	{		// User pressed the cancel button		if (isset($_POST['cancel']))			redirect(forum_link($forum_url['index']), $lang_login['New password cancel redirect']);		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$email = strtolower(forum_trim($_POST['req_email']));		if (!is_valid_email($email))			$errors[] = $lang_login['Invalid e-mail'];		($hook = get_hook('li_forgot_pass_end_validation')) ? eval($hook) : null;		// Did everything go according to plan?		if (empty($errors))		{			$users_with_email = array();			// Fetch user matching $email			$query = array(				'SELECT'	=> 'u.id, u.username, u.salt, u.last_email_sent',				'FROM'		=> 'users AS u',				'WHERE'		=> 'u.email=\''.$forum_db->escape($email).'\''			);			($hook = get_hook('li_forgot_pass_qr_get_user_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_user = $forum_db->fetch_assoc($result))			{				$users_with_email[] = $cur_user;			}			if (!empty($users_with_email))			{				($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null;				// Load the "activate password" template				$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_password.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = forum_trim(substr($mail_tpl, $first_crlf));				// Do the generic replacements first (they apply to all e-mails sent out here)				$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);				$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);				($hook = get_hook('li_forgot_pass_new_general_replace_data')) ? eval($hook) : null;				// Loop through users we found				foreach ($users_with_email as $cur_hit)				{					$forgot_pass_timeout = 3600;					($hook = get_hook('li_forgot_pass_pre_flood_check')) ? eval($hook) : null;					if ($cur_hit['last_email_sent'] != '' && (time() - $cur_hit['last_email_sent']) < $forgot_pass_timeout && (time() - $cur_hit['last_email_sent']) >= 0)						message(sprintf($lang_login['Email flood'], $forgot_pass_timeout));					// Generate a new password activation key					$new_password_key = random_key(8, true);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'activate_key=\''.$new_password_key.'\', last_email_sent = '.time(),						'WHERE'		=> 'id='.$cur_hit['id']					);					($hook = get_hook('li_forgot_pass_qr_set_activate_key')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Do the user specific replacements to the template					$cur_mail_message = str_replace('<username>', $cur_hit['username'], $mail_message);					$cur_mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_password_key'], array($cur_hit['id'], $new_password_key))), $cur_mail_message);					($hook = get_hook('li_forgot_pass_new_user_replace_data')) ? eval($hook) : null;					forum_mail($email, $mail_subject, $cur_mail_message);				}				message(sprintf($lang_login['Forget mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			}			else				$errors[] = sprintf($lang_login['No e-mail match'], forum_htmlencode($email));		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['request_password']);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_login['New password request'], forum_link($forum_url['request_password']))	);	($hook = get_hook('li_forgot_pass_pre_header_load')) ? eval($hook) : null;	define ('FORUM_PAGE', 'reqpass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('li_forgot_pass_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_login['New password request'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p class="important"><?php echo $lang_login['New password info'] ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_forgot_pass_pre_new_password_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['New password errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('li_forgot_pass_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['E-mail address'] ?></span> <small><?php echo $lang_login['E-mail address help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="req_email" value="<?php echo isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : '' ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('li_forgot_pass_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_forgot_pass_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="request_pass" value="<?php echo $lang_login['Submit password request'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('li_forgot_pass_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}if (!$forum_user['is_guest'])	header('Location: '.forum_link($forum_url['index']));// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['login']);$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'redirect_url'	=> '<input type="hidden" name="redirect_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_login['Login info'], $forum_config['o_board_title']), forum_link($forum_url['login'])));($hook = get_hook('li_login_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'login');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('li_login_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_login['Login info'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="content-head">			<p class="hn"><?php printf($lang_login['Login options'], '<a href="'.forum_link($forum_url['register']).'">'.$lang_login['register'].'</a>', '<a href="'.forum_link($forum_url['request_password']).'">'.$lang_login['Obtain pass'].'</a>') ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();	foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_pre_login_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['Login errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('li_login_pre_login_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_login_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Username'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '' ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_pass')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Password'] ?></span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" value="<?php echo isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : '' ?>" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_remember_me_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="save_pass" value="1" <?php echo isset($_POST['save_pass']) ? 'checked="checked" ' : '' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_login['Remember me'] ?></label>					</div>				</div><?php ($hook = get_hook('li_login_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_login_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="login" value="<?php echo $lang_login['Login'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('li_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Provides various features for forum users (ie: display rules, send emails through the forum, mark a forum as read, etc). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (isset($_GET['action']))	define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('mi_start')) ? eval($hook) : null;// Load the misc.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$errors = array();// Show the forum rules?if ($action == 'rules'){	if ($forum_config['o_rules'] == '0' || ($forum_user['is_guest'] && $forum_user['g_read_board'] == '0' && $forum_config['o_regs_allow'] == '0'))		message($lang_common['Bad request']);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_common['Rules'], forum_link($forum_url['rules']))	);	($hook = get_hook('mi_rules_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'rules');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mi_rules_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_common['Rules'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box user-box">			<?php echo $forum_config['o_rules_message']."\n" ?>		</div>	</div><?php	($hook = get_hook('mi_rules_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Mark all topics/posts as read?else if ($action == 'markread'){	if ($forum_user['is_guest'])		message($lang_common['No permission']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('markread'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('mi_markread_selected')) ? eval($hook) : null;	$query = array(		'UPDATE'	=> 'users',		'SET'		=> 'last_visit='.$forum_user['logged'],		'WHERE'		=> 'id='.$forum_user['id']	);	($hook = get_hook('mi_markread_qr_update_last_visit')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Reset tracked topics	set_tracked_topics(null);	$forum_flash->add_info($lang_misc['Mark read redirect']);	($hook = get_hook('mi_markread_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['index']), $lang_misc['Mark read redirect']);}// Mark the topics/posts in a forum as read?else if ($action == 'markforumread'){	if ($forum_user['is_guest'])		message($lang_common['No permission']);	$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;	if ($fid < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('markforumread'.$fid.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('mi_markforumread_selected')) ? eval($hook) : null;	// Fetch some info about the forum	$query = array(		'SELECT'	=> 'f.forum_name',		'FROM'		=> 'forums AS f',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid	);	($hook = get_hook('mi_markforumread_qr_get_forum_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_name = $forum_db->result($result);	if (!$forum_name)	{		message($lang_common['Bad request']);	}	$tracked_topics = get_tracked_topics();	$tracked_topics['forums'][$fid] = time();	set_tracked_topics($tracked_topics);	$forum_flash->add_info($lang_misc['Mark forum read redirect']);	($hook = get_hook('mi_markforumread_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($forum_name))), $lang_misc['Mark forum read redirect']);}// Send form e-mail?else if (isset($_GET['email'])){	if ($forum_user['is_guest'] || $forum_user['g_send_email'] == '0')		message($lang_common['No permission']);	$recipient_id = intval($_GET['email']);	if ($recipient_id < 2)		message($lang_common['Bad request']);	($hook = get_hook('mi_email_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_htmlencode($_POST['redirect_url']), $lang_common['Cancel redirect']);	$query = array(		'SELECT'	=> 'u.username, u.email, u.email_setting',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.id='.$recipient_id	);	($hook = get_hook('mi_email_qr_get_form_email_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$recipient_info = $forum_db->fetch_row($result);	if (!$recipient_info)	{		message($lang_common['Bad request']);	}	list($recipient, $recipient_email, $email_setting) = $recipient_info;	if ($email_setting == 2 && !$forum_user['is_admmod'])		message($lang_misc['Form e-mail disabled']);	if ($recipient_email == '')		message($lang_common['Bad request']);	if (isset($_POST['form_sent']))	{		($hook = get_hook('mi_email_form_submitted')) ? eval($hook) : null;		// Clean up message and subject from POST		$subject = forum_trim($_POST['req_subject']);		$message = forum_trim($_POST['req_message']);		if ($subject == '')			$errors[] = $lang_misc['No e-mail subject'];		if ($message == '')			$errors[] = $lang_misc['No e-mail message'];		else if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)			$errors[] = sprintf($lang_misc['Too long e-mail message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));		if ($forum_user['last_email_sent'] != '' && (time() - $forum_user['last_email_sent']) < $forum_user['g_email_flood'] && (time() - $forum_user['last_email_sent']) >= 0)			$errors[] = sprintf($lang_misc['Email flood'], $forum_user['g_email_flood']);		($hook = get_hook('mi_email_end_validation')) ? eval($hook) : null;		// Did everything go according to plan?		if (empty($errors))		{			// Load the "form e-mail" template			$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/form_email.tpl'));			// The first row contains the subject			$first_crlf = strpos($mail_tpl, "\n");			$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));			$mail_message = forum_trim(substr($mail_tpl, $first_crlf));			$mail_subject = str_replace('<mail_subject>', $subject, $mail_subject);			$mail_message = str_replace('<sender>', $forum_user['username'], $mail_message);			$mail_message = str_replace('<board_title>', $forum_config['o_board_title'], $mail_message);			$mail_message = str_replace('<mail_message>', $message, $mail_message);			$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);			($hook = get_hook('mi_email_new_replace_data')) ? eval($hook) : null;			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			forum_mail($recipient_email, $mail_subject, $mail_message, $forum_user['email'], $forum_user['username']);			// Set the user's last_email_sent time			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'last_email_sent='.time(),				'WHERE'		=> 'id='.$forum_user['id'],			);			($hook = get_hook('mi_email_qr_update_last_email_sent')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_flash->add_info($lang_misc['E-mail sent redirect']);			($hook = get_hook('mi_email_pre_redirect')) ? eval($hook) : null;			redirect(forum_htmlencode($_POST['redirect_url']), $lang_misc['E-mail sent redirect']);		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['email'], $recipient_id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'redirect_url'	=> '<input type="hidden" name="redirect_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup main heading	$forum_page['main_head'] = sprintf($lang_misc['Send forum e-mail'], forum_htmlencode($recipient));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		sprintf($lang_misc['Send forum e-mail'], forum_htmlencode($recipient))	);	($hook = get_hook('mi_email_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'formemail');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mi_email_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['main_head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<p class="important"><?php echo $lang_misc['E-mail disclosure note'] ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('mi_pre_email_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_misc['Form e-mail errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mi_email_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Write e-mail'] ?></strong></legend><?php ($hook = get_hook('mi_email_pre_subject')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required longtext">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['E-mail subject'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_subject" value="<?php echo(isset($_POST['req_subject']) ? forum_htmlencode($_POST['req_subject']) : '') ?>" size="75" maxlength="70" required /></span>					</div>				</div><?php ($hook = get_hook('mi_email_pre_message_contents')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['E-mail message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="10" cols="95" required><?php echo(isset($_POST['req_message']) ? forum_htmlencode($_POST['req_message']) : '') ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('mi_email_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mi_email_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('mi_email_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Report a post?else if (isset($_GET['report'])){	if ($forum_user['is_guest'])		message($lang_common['No permission']);	$post_id = intval($_GET['report']);	if ($post_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('mi_report_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['post'], $post_id), $lang_common['Cancel redirect']);	if (isset($_POST['form_sent']))	{		($hook = get_hook('mi_report_form_submitted')) ? eval($hook) : null;		// Start with a clean slate		$errors = array();		// Flood protection		if ($forum_user['last_email_sent'] != '' && (time() - $forum_user['last_email_sent']) < $forum_user['g_email_flood'] && (time() - $forum_user['last_email_sent']) >= 0)			message(sprintf($lang_misc['Report flood'], $forum_user['g_email_flood']));		// Clean up reason from POST		$reason = forum_linebreaks(forum_trim($_POST['req_reason']));		if ($reason == '')			message($lang_misc['No reason']);		if (strlen($reason) > FORUM_MAX_POSTSIZE_BYTES)		{			$errors[] = sprintf($lang_misc['Too long reason'], forum_number_format(strlen($reason)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));		}		if (empty($errors)) {			// Get some info about the topic we're reporting			$query = array(				'SELECT'	=> 't.id, t.subject, t.forum_id',				'FROM'		=> 'posts AS p',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'topics AS t',						'ON'			=> 't.id=p.topic_id'					)				),				'WHERE'		=> 'p.id='.$post_id			);			($hook = get_hook('mi_report_qr_get_topic_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$topic_info = $forum_db->fetch_row($result);			if (!$topic_info)			{				message($lang_common['Bad request']);			}			list($topic_id, $subject, $forum_id) = $topic_info;			($hook = get_hook('mi_report_pre_reports_sent')) ? eval($hook) : null;			// Should we use the internal report handling?			if ($forum_config['o_report_method'] == 0 || $forum_config['o_report_method'] == 2)			{				$query = array(					'INSERT'	=> 'post_id, topic_id, forum_id, reported_by, created, message',					'INTO'		=> 'reports',					'VALUES'	=> $post_id.', '.$topic_id.', '.$forum_id.', '.$forum_user['id'].', '.time().', \''.$forum_db->escape($reason).'\''				);				($hook = get_hook('mi_report_add_report')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}			// Should we e-mail the report?			if ($forum_config['o_report_method'] == 1 || $forum_config['o_report_method'] == 2)			{				// We send it to the complete mailing-list in one swoop				if ($forum_config['o_mailing_list'] != '')				{					$mail_subject = 'Report('.$forum_id.') - \''.$subject.'\'';					$mail_message = 'User \''.$forum_user['username'].'\' has reported the following message:'."\n".forum_link($forum_url['post'], $post_id)."\n\n".'Reason:'."\n".$reason;					if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))						require FORUM_ROOT.'include/email.php';					($hook = get_hook('mi_report_modify_message')) ? eval($hook) : null;					forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);				}			}			// Set last_email_sent time to prevent flooding			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'last_email_sent='.time(),				'WHERE'		=> 'id='.$forum_user['id']			);			($hook = get_hook('mi_report_qr_update_last_email_sent')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_flash->add_info($lang_misc['Report redirect']);			($hook = get_hook('mi_report_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['post'], $post_id), $lang_misc['Report redirect']);		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['report'], $post_id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		$lang_misc['Report post']	);	// Setup main heading	$forum_page['main_head'] = end($forum_page['crumbs']);	($hook = get_hook('mi_report_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'report');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mi_report_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['main_head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div><?php		// If there were any errors, show them		if (!empty($errors)) {			$forum_page['errors'] = array();			foreach ($errors as $cur_error) {				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			}			($hook = get_hook('mi_pre_report_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_misc['Report errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mi_report_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('mi_report_pre_reason')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Reason'] ?></span> <small><?php echo $lang_misc['Reason help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_reason" rows="5" cols="60" required></textarea></span></div>					</div>				</div><?php ($hook = get_hook('mi_report_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mi_report_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('mi_report_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Subscribe to a topic?else if (isset($_GET['subscribe'])){	if ($forum_user['is_guest'] || $forum_config['o_subscriptions'] != '1')		message($lang_common['No permission']);	$topic_id = intval($_GET['subscribe']);	if ($topic_id < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('subscribe'.$topic_id.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('mi_subscribe_selected')) ? eval($hook) : null;	// Make sure the user can view the topic	$query = array(		'SELECT'	=> 'subject',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$topic_id.' AND t.moved_to IS NULL'	);	($hook = get_hook('mi_subscribe_qr_topic_exists')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'SELECT'	=> 'COUNT(s.user_id)',		'FROM'		=> 'subscriptions AS s',		'WHERE'		=> 'user_id='.$forum_user['id'].' AND topic_id='.$topic_id	);	($hook = get_hook('mi_subscribe_qr_check_subscribed')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) > 0)	{		message($lang_misc['Already subscribed']);	}	$query = array(		'INSERT'	=> 'user_id, topic_id',		'INTO'		=> 'subscriptions',		'VALUES'	=> $forum_user['id'].' ,'.$topic_id	);	($hook = get_hook('mi_subscribe_add_subscription')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Subscribe redirect']);	($hook = get_hook('mi_subscribe_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $lang_misc['Subscribe redirect']);}// Unsubscribe from a topic?else if (isset($_GET['unsubscribe'])){	if ($forum_user['is_guest'] || $forum_config['o_subscriptions'] != '1')		message($lang_common['No permission']);	$topic_id = intval($_GET['unsubscribe']);	if ($topic_id < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('unsubscribe'.$topic_id.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('mi_unsubscribe_selected')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'subscriptions AS s',				'ON'			=> 's.user_id='.$forum_user['id'].' AND s.topic_id=t.id'			)		),		'WHERE'		=> 't.id='.$topic_id	);	($hook = get_hook('mi_unsubscribe_qr_check_subscribed')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_misc['Not subscribed']);	}	$query = array(		'DELETE'	=> 'subscriptions',		'WHERE'		=> 'user_id='.$forum_user['id'].' AND topic_id='.$topic_id	);	($hook = get_hook('mi_unsubscribe_qr_delete_subscription')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Unsubscribe redirect']);	($hook = get_hook('mi_unsubscribe_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $lang_misc['Unsubscribe redirect']);}($hook = get_hook('mi_new_action')) ? eval($hook) : null;message($lang_common['Bad request']);
<?php/** * Provides various mass-moderation tools to moderators. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('mr_start')) ? eval($hook) : null;// Load the misc.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';// This particular function doesn't require forum-based moderator access. It can be used// by all moderators and admins.if (isset($_GET['get_host'])){	if (!$forum_user['is_admmod'])		message($lang_common['No permission']);	($hook = get_hook('mr_view_ip_selected')) ? eval($hook) : null;	// Is get_host an IP address or a post ID?	if (preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_GET['get_host']) || preg_match('/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/', $_GET['get_host']))		$ip = $_GET['get_host'];	else	{		$get_host = intval($_GET['get_host']);		if ($get_host < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'p.poster_ip',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.id='.$get_host		);		($hook = get_hook('mr_view_ip_qr_get_poster_ip')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ip = $forum_db->result($result);		if (!$ip)			message($lang_common['Bad request']);	}	($hook = get_hook('mr_view_ip_pre_output')) ? eval($hook) : null;	message(sprintf($lang_misc['Hostname lookup'], $ip, @gethostbyaddr($ip), '<a href="'.forum_link($forum_url['admin_users']).'?show_users='.$ip.'">'.$lang_misc['Show more users'].'</a>'));}// All other functions require moderator/admin access$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($fid < 1)	message($lang_common['Bad request']);// Get some info about the forum we're moderating$query = array(	'SELECT'	=> 'f.forum_name, f.redirect_url, f.num_topics, f.moderators, f.sort_by',	'FROM'		=> 'forums AS f',	'JOINS'		=> array(		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid);($hook = get_hook('mr_qr_get_forum_data')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_forum = $forum_db->fetch_assoc($result);if (!$cur_forum)	message($lang_common['Bad request']);// Make sure we're not trying to moderate a redirect forumif ($cur_forum['redirect_url'] != '')	message($lang_common['Bad request']);// Setup the array of moderators$mods_array = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();($hook = get_hook('mr_pre_permission_check')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || !array_key_exists($forum_user['username'], $mods_array)))	message($lang_common['No permission']);// Get topic/forum tracking dataif (!$forum_user['is_guest'])	$tracked_topics = get_tracked_topics();// Did someone click a cancel button?if (isset($_POST['cancel']))	redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);// All topic moderation features require a topic id in GETif (isset($_GET['tid'])){	($hook = get_hook('mr_post_actions_selected')) ? eval($hook) : null;	$tid = intval($_GET['tid']);	if ($tid < 1)		message($lang_common['Bad request']);	// Fetch some info about the topic	$query = array(		'SELECT'	=> 't.subject, t.poster, t.first_post_id, t.posted, t.num_replies',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$tid.' AND t.moved_to IS NULL'	);	($hook = get_hook('mr_post_actions_qr_get_topic_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_topic = $forum_db->fetch_assoc($result);	if (!$cur_topic)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['delete_posts_cancel']))		redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['Cancel redirect']);	// Delete one or more posts	if (isset($_POST['delete_posts']) || isset($_POST['delete_posts_comply']))	{		($hook = get_hook('mr_delete_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['delete_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			($hook = get_hook('mr_confirm_delete_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_delete_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			// Delete the posts			$query = array(				'DELETE'	=> 'posts',				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_delete_posts_qr_delete_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($posts);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Delete posts redirect']);			($hook = get_hook('mr_confirm_delete_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_misc['Delete posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Delete posts']		);		($hook = get_hook('mr_confirm_delete_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_delete_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Delete posts'] ?></strong></legend><?php ($hook = get_hook('mr_confirm_delete_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm post delete'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_delete_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_posts_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_delete_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if (isset($_POST['split_posts']) || isset($_POST['split_posts_comply']))	{		($hook = get_hook('mr_split_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['split_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			// Load the post.php language file			require FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';			($hook = get_hook('mr_confirm_split_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_split_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			$new_subject = isset($_POST['new_subject']) ? forum_trim($_POST['new_subject']) : '';			if ($new_subject == '')				message($lang_post['No subject']);			else if (utf8_strlen($new_subject) > 70)				message($lang_post['Too long subject']);			// Get data from the new first post			$query = array(				'SELECT'	=> 'p.id, p.poster, p.posted',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id = '.min($posts)			);			($hook = get_hook('mr_confirm_split_posts_qr_get_first_post_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$first_post_data = $forum_db->fetch_assoc($result);			// Create the new topic			$query = array(				'INSERT'	=> 'poster, subject, posted, first_post_id, forum_id',				'INTO'		=> 'topics',				'VALUES'	=> '\''.$forum_db->escape($first_post_data['poster']).'\', \''.$forum_db->escape($new_subject).'\', '.$first_post_data['posted'].', '.$first_post_data['id'].', '.$fid			);			($hook = get_hook('mr_confirm_split_posts_qr_add_topic')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$new_tid = $forum_db->insert_id();			// Move the posts to the new topic			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'topic_id='.$new_tid,				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_split_posts_qr_move_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Sync last post data for the old topic, the new topic, and the forum itself			sync_topic($new_tid);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Split posts redirect']);			($hook = get_hook('mr_confirm_split_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($new_tid, sef_friendly($new_subject))), $lang_misc['Split posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Split posts']		);		($hook = get_hook('mr_confirm_split_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_split_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post split'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Split posts'] ?></strong></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>"><?php ($hook = get_hook('mr_confirm_split_posts_pre_subject')) ? eval($hook) : null; ?>					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['New subject'] ?> <em><?php echo $lang_common['Required'] ?></em></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_subject" value="" size="70" maxlength="70" /></span>					</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm topic split'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_split_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="split_posts_comply" value="<?php echo $lang_common['Split'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_split_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	// Show the moderate topic view	// Load the viewtopic.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';	// Used to disable the Split and Delete buttons if there are no replies to this topic	$forum_page['button_status'] = ($cur_topic['num_replies'] == 0) ? ' disabled="disabled"' : '';	// Determine the post offset (based on $_GET['p'])	$forum_page['num_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);	$forum_page['start_from'] = $forum_user['disp_posts'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_posts']), ($cur_topic['num_replies'] + 1));	$forum_page['items_info'] = generate_items_info($lang_misc['Posts'], ($forum_page['start_from'] + 1), ($cur_topic['num_replies'] + 1));	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_topic'], $lang_common['Paging separator'], array($fid, $tid)).'</p>';	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], $forum_page['num_pages'], array($fid, $tid)).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] + 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] - 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_topic'], array($fid, $tid)).'" title="'.$lang_common['Page'].' 1" />';	}	if ($forum_config['o_censoring'] == '1')		$cur_topic['subject'] = censor_words($cur_topic['subject']);	// Setup form	$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),		$lang_topic['Moderate topic']	);	// Setup main heading	$forum_page['main_title'] = sprintf($lang_misc['Moderate topic head'], forum_htmlencode($cur_topic['subject']));	$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	($hook = get_hook('mr_post_actions_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'modtopic');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_post_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-post-actions-form" class="newform" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-content main-topic">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['item_count'] = 0;	// Keep track of post numbers	// Retrieve the posts (and their respective poster)	$query = array(		'SELECT'	=> 'u.title, u.num_posts, g.g_id, g.g_user_title, p.id, p.poster, p.poster_id, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'u.id=p.poster_id'			),			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'p.topic_id='.$tid,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> $forum_page['start_from'].','.$forum_user['disp_posts']	);	($hook = get_hook('mr_post_actions_qr_get_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_post = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_post_actions_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		$forum_page['post_ident'] = array();		$forum_page['message'] = array();		$forum_page['user_ident'] = array();		$cur_post['username'] = $cur_post['poster'];		// Generate the post heading		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';		if ($cur_post['poster_id'] > 1)			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), (($forum_user['g_view_users'] == '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>')).'</span>';		else			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('mr_row_pre_item_ident_merge')) ? eval($hook) : null;		// Generate the checkbox field		if ($cur_post['id'] != $cur_topic['first_post_id'])			$forum_page['item_select'] = '<p class="item-select"><input type="checkbox" id="fld'.$cur_post['id'].'" name="posts[]" value="'.$cur_post['id'].'" /> <label for="fld'.$cur_post['id'].'">'.$lang_misc['Select post'].' '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</label></p>';		// Generate author identification		$forum_page['author_ident']['username'] = '<li class="username">'.(($cur_post['poster_id'] > '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</li>';		$forum_page['author_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($cur_post).'</span></li>';		// Give the post some class		$forum_page['item_status'] = array(			'post',			($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even'		);		if ($forum_page['item_count'] == 1)			$forum_page['item_status']['firstpost'] = 'firstpost';		if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])			$forum_page['item_status']['lastpost'] = 'lastpost';		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_status']['topicpost'] = 'topicpost';		else			$forum_page['item_status']['replypost'] = 'replypost';		// Generate the post title		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_subject'] = sprintf($lang_topic['Topic title'], $cur_topic['subject']);		else			$forum_page['item_subject'] = sprintf($lang_topic['Reply title'], $cur_topic['subject']);		$forum_page['item_subject'] = forum_htmlencode($forum_page['item_subject']);		// Perform the main parsing of the message (BBCode, smilies, censor words etc)		$forum_page['message']['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		if ($cur_post['edited'] != '')			$forum_page['message']['edited'] = '<p class="lastedit"><em>'.sprintf($lang_topic['Last edited'], forum_htmlencode($cur_post['edited_by']), format_time($cur_post['edited'])).'</em></p>';		($hook = get_hook('mr_post_actions_row_pre_display')) ? eval($hook) : null;?>			<div class="<?php echo implode(' ', $forum_page['item_status']) ?>">				<div id="p<?php echo $cur_post['id'] ?>" class="posthead">					<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('mr_post_actions_pre_item_select')) ? eval($hook) : null; ?><?php if (isset($forum_page['item_select'])) echo "\t\t\t\t".$forum_page['item_select']."\n" ?><?php ($hook = get_hook('mr_post_actions_new_post_head_option')) ? eval($hook) : null; ?>				</div>				<div class="postbody">					<div class="post-author">						<ul class="author-ident">							<?php echo implode("\n\t\t\t\t\t\t", $forum_page['author_ident'])."\n" ?>						</ul><?php ($hook = get_hook('mr_post_actions_new_user_ident_data')) ? eval($hook) : null; ?>					</div>					<div class="post-entry">						<h4 class="entry-title"><?php echo $forum_page['item_subject'] ?></h4>						<div class="entry-content">							<?php echo implode("\n\t\t\t\t\t\t\t", $forum_page['message'])."\n" ?>						</div><?php ($hook = get_hook('mr_post_actions_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div><?php	}?>	</div><?php$forum_page['mod_options'] = array(	'del_posts'		=> '<span class="submit first-item"><input type="submit" name="delete_posts" value="'.$lang_misc['Delete posts'].'" /></span>',	'split_posts'	=> '<span class="submit"><input type="submit" name="split_posts" value="'.$lang_misc['Split posts'].'" /></span>',	'del_topic'		=> '<span><a href="'.forum_link($forum_url['delete'], $cur_topic['first_post_id']).'">'.$lang_misc['Delete whole topic'].'</a></span>');($hook = get_hook('mr_post_actions_pre_mod_options')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	$forum_id = $fid;	// Init JS helper for select-all	$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));	($hook = get_hook('mr_post_actions_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Move one or more topicsif (isset($_REQUEST['move_topics']) || isset($_POST['move_topics_to'])){	if (isset($_POST['move_topics_to']))	{		($hook = get_hook('mr_confirm_move_topics_form_submitted')) ? eval($hook) : null;		$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? explode(',', $_POST['topics']) : array();		$topics = array_map('intval', $topics);		$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;		if (empty($topics) || $move_to_forum < 1)			message($lang_common['Bad request']);		// Fetch the forum name for the forum we're moving to		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$move_to_forum		);		($hook = get_hook('mr_confirm_move_topics_qr_get_move_to_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$move_to_forum_name = $forum_db->result($result);		if (!$move_to_forum_name)			message($lang_common['Bad request']);		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_move_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Delete any redirect topics if there are any (only if we moved/copied the topic back to where it where it was once moved from)		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'forum_id='.$move_to_forum.' AND moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_delete_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Move the topic(s)		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'forum_id='.$move_to_forum,			'WHERE'		=> 'id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_move_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))		{			foreach ($topics as $cur_topic)			{				// Fetch info for the redirect topic				$query = array(					'SELECT'	=> 't.poster, t.subject, t.posted, t.last_post',					'FROM'		=> 'topics AS t',					'WHERE'		=> 't.id='.$cur_topic				);				($hook = get_hook('mr_confirm_move_topics_qr_get_redirect_topic_data')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$moved_to = $forum_db->fetch_assoc($result);				// Create the redirect topic				$query = array(					'INSERT'	=> 'poster, subject, posted, last_post, moved_to, forum_id',					'INTO'		=> 'topics',					'VALUES'	=> '\''.$forum_db->escape($moved_to['poster']).'\', \''.$forum_db->escape($moved_to['subject']).'\', '.$moved_to['posted'].', '.$moved_to['last_post'].', '.$cur_topic.', '.$fid				);				($hook = get_hook('mr_confirm_move_topics_qr_add_redirect_topic')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		sync_forum($fid);			// Synchronize the forum FROM which the topic was moved		sync_forum($move_to_forum);	// Synchronize the forum TO which the topic was moved		$forum_page['redirect_msg'] = (count($topics) > 1) ? $lang_misc['Move topics redirect'] : $lang_misc['Move topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_confirm_move_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($move_to_forum, sef_friendly($move_to_forum_name))), $forum_page['redirect_msg']);	}	if (isset($_POST['move_topics']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		if (count($topics) == 1)		{			$topics = $topics[0];			$action = 'single';		}		else			$action = 'multiple';	}	else	{		$topics = intval($_GET['move_topics']);		if ($topics < 1)			message($lang_common['Bad request']);		$action = 'single';	}	if ($action == 'single')	{		// Fetch the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topics		);		($hook = get_hook('mr_move_topics_qr_get_topic_to_move_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}	}	// Get forums we can move the post into	$query = array(		'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL AND f.id!='.$fid,		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('mr_move_topics_qr_get_target_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_list = array();	while ($cur_sel_forum = $forum_db->fetch_assoc($result))	{		$forum_list[] = $cur_sel_forum;	}	if (empty($forum_list))	{		message($lang_misc['Nowhere to move']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.($action == 'single' ? $topics : implode(',', $topics)).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$forum_page['crumbs'][] = array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))));	if ($action == 'single')		$forum_page['crumbs'][] = array($subject, forum_link($forum_url['topic'], array($topics, sef_friendly($subject))));	else		$forum_page['crumbs'][] = array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid));	$forum_page['crumbs'][] = ($action == 'single') ? $lang_misc['Move topic'] : $lang_misc['Move topics'];	//Setup main heading	$forum_page['main_title'] = end($forum_page['crumbs']).' '.$lang_misc['To new forum'];	($hook = get_hook('mr_move_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_move_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']).' '.$lang_misc['To new forum'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Move topic'] ?></strong></legend><?php ($hook = get_hook('mr_move_topics_pre_move_to_forum')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Move to'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_forum"><?php	$forum_page['cur_category'] = 0;	foreach ($forum_list as $cur_forum)	{		if ($cur_forum['cid'] != $forum_page['cur_category'])	// A new category since last iteration?		{			if ($forum_page['cur_category'])				echo "\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";			$forum_page['cur_category'] = $cur_forum['cid'];		}		if ($cur_forum['fid'] != $fid)			echo "\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.forum_htmlencode($cur_forum['forum_name']).'</option>'."\n";	}?>						</optgroup>						</select></span>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1"<?php if ($action == 'single') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo ($action == 'single') ? $lang_misc['Leave redirect'] : $lang_misc['Leave redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_move_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="move_topics_to" value="<?php echo $lang_misc['Move'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_move_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Merge topicselse if (isset($_POST['merge_topics']) || isset($_POST['merge_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	if (count($topics) == 1)		message($lang_misc['Merge error']);	if (isset($_POST['merge_topics_comply']))	{		($hook = get_hook('mr_confirm_merge_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id), MIN(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.moved_to IS NULL AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_merge_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		list($num_topics, $merge_to_tid) = $forum_db->fetch_row($result);		if ($num_topics != count($topics))			message($lang_common['Bad request']);		// Make any redirect topics point to our new, merged topic		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'moved_to='.$merge_to_tid,			'WHERE'		=> 'moved_to IN('.implode(',', $topics).')'		);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))			$query['WHERE'] .= ' OR (id IN('.implode(',', $topics).') AND id != '.$merge_to_tid.')';		($hook = get_hook('mr_confirm_merge_topics_qr_fix_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Merge the posts into the topic		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'topic_id='.$merge_to_tid,			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_merge_topics_qr_merge_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).') AND topic_id != '.$merge_to_tid		);		($hook = get_hook('mr_confirm_merge_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (!isset($_POST['with_redirect']))		{			// Delete the topics that have been merged			$query = array(				'DELETE'	=> 'topics',				'WHERE'		=> 'id IN('.implode(',', $topics).') AND id != '.$merge_to_tid			);			($hook = get_hook('mr_confirm_merge_topics_qr_delete_merged_topics')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Synchronize the topic we merged to and the forum where the topics were merged		sync_topic($merge_to_tid);		sync_forum($fid);		$forum_flash->add_info($lang_misc['Merge topics redirect']);		($hook = get_hook('mr_confirm_merge_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_misc['Merge topics redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$lang_misc['Merge topics']	);	($hook = get_hook('mr_merge_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_merge_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic merge'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Merge topics'] ?></strong></legend><?php ($hook = get_hook('mr_merge_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Redirect topic'] ?></span> <?php echo $lang_misc['Leave merge redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_merge_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="merge_topics_comply" value="<?php echo $lang_misc['Merge'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_merge_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Delete one or more topicselse if (isset($_REQUEST['delete_topics']) || isset($_POST['delete_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	$multi = count($topics) > 1;	if (isset($_POST['delete_topics_comply']))	{		if (!isset($_POST['req_confirm']))			redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);		($hook = get_hook('mr_confirm_delete_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_delete_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Create an array of forum IDs that need to be synced		$forum_ids = array($fid);		$query = array(			'SELECT'	=> 't.forum_id',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_forums_to_sync')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			$forum_ids[] = $row[0];		// Delete the topics and any redirect topics		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.implode(',', $topics).') OR moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Create a list of the post ID's in the deleted topic and strip the search index		$query = array(			'SELECT'	=> 'p.id',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_deleted_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$post_ids = array();		while ($row = $forum_db->fetch_row($result))			$post_ids[] = $row[0];		// Strip the search index provided we're not just deleting redirect topics		if (!empty($post_ids))		{			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($post_ids);		}		// Delete posts		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topic_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		foreach ($forum_ids as $cur_forum_id)			sync_forum($cur_forum_id);		$forum_flash->add_info($multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);		($hook = get_hook('mr_confirm_delete_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] =0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topic']	);	($hook = get_hook('mr_delete_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_delete_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topics'] ?></strong></legend><?php ($hook = get_hook('mr_delete_topics_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $multi ? $lang_misc['Delete topics comply'] : $lang_misc['Delete topic comply'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_delete_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_topics_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_delete_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Open or close one or more topicselse if (isset($_REQUEST['open']) || isset($_REQUEST['close'])){	$action = (isset($_REQUEST['open'])) ? 0 : 1;	($hook = get_hook('mr_open_close_topic_selected')) ? eval($hook) : null;	// There could be an array of topic ID's in $_POST	if (isset($_POST['open']) || isset($_POST['close']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id IN('.implode(',', $topics).') AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_multi_topics_qr_open_close_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (count($topics) == 1)			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		else			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topics redirect'] : $lang_misc['Open topics redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_multi_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['moderate_forum'], $fid), $forum_page['redirect_msg']);	}	// Or just one in $_GET	else	{		$topic_id = ($action) ? intval($_GET['close']) : intval($_GET['open']);		if ($topic_id < 1)			message($lang_common['Bad request']);		// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.		// If it's in GET, we need to make sure it's valid.		if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token(($action ? 'close' : 'open').$topic_id)))			csrf_confirm_form();		// Get the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_get_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_open_close_topic')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_single_topic_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $forum_page['redirect_msg']);	}}// Stick a topicelse if (isset($_GET['stick'])){	$stick = intval($_GET['stick']);	if ($stick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('stick'.$stick)))		csrf_confirm_form();	($hook = get_hook('mr_stick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=1',		'WHERE'		=> 'id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_stick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Stick topic redirect']);	($hook = get_hook('mr_stick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($stick, sef_friendly($subject))), $lang_misc['Stick topic redirect']);}// Unstick a topicelse if (isset($_GET['unstick'])){	$unstick = intval($_GET['unstick']);	if ($unstick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('unstick'.$unstick)))		csrf_confirm_form();	($hook = get_hook('mr_unstick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=0',		'WHERE'		=> 'id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_unstick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Unstick topic redirect']);	($hook = get_hook('mr_unstick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($unstick, sef_friendly($subject))), $lang_misc['Unstick topic redirect']);}($hook = get_hook('mr_new_action')) ? eval($hook) : null;// No specific forum moderation action was specified in the query string, so we'll display the moderate forum view// If forum is emptyif ($cur_forum['num_topics'] == 0)	message($lang_common['Bad request']);// Load the viewforum.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';// Determine the topic offset (based on $_GET['p'])$forum_page['num_pages'] = ceil($cur_forum['num_topics'] / $forum_user['disp_topics']);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($cur_forum['num_topics']));$forum_page['items_info'] = generate_items_info($lang_misc['Topics'], ($forum_page['start_from'] + 1), $cur_forum['num_topics']);// Select topics$query = array(	'SELECT'	=> 't.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to',	'FROM'		=> 'topics AS t',	'WHERE'		=> 'forum_id='.$fid,	'ORDER BY'	=> 't.sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 't.posted' : 't.last_post').' DESC',	'LIMIT'		=>	$forum_page['start_from'].', '.$forum_user['disp_topics']);// With "has posted" indicationif (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1'){	$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';	$query['JOINS'][]	= array(		'LEFT JOIN'		=> 'posts AS p',		'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'	);	// Must have same columns as in prev SELECT	$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to';	($hook = get_hook('mr_qr_get_has_posted')) ? eval($hook) : null;}($hook = get_hook('mr_qr_get_topics')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);// Generate paging links$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_forum'], $lang_common['Paging separator'], $fid).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], $forum_page['num_pages'], $fid).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] + 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] - 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_forum'], $fid).'" title="'.$lang_common['Page'].' 1" />';}// Setup form$forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),	sprintf($lang_misc['Moderate forum head'], forum_htmlencode($cur_forum['forum_name'])));// Setup main headingif ($forum_page['num_pages'] > 1)	$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';($hook = get_hook('mr_topic_actions_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'modforum');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();$forum_page['item_header'] = array();$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';if ($forum_config['o_topic_views'] == '1')	$forum_page['item_header']['info']['views'] = '<strong class="info-views">'.$lang_forum['views'].'</strong>';$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';($hook = get_hook('mr_topic_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-topic-actions-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-subhead">		<p class="item-summary<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>"><span><?php printf($lang_forum['Forum subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div id="forum<?php echo $fid ?>" class="main-content main-forum<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	$forum_page['item_count'] = 0;	while ($cur_topic = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_topic_actions_row_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		// Start from scratch		$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_topic['poster'])).'</span>';		if ($cur_topic['moved_to'] != null)		{			$forum_page['item_status']['moved'] = 'moved';			$forum_page['item_title']['link'] = '<span class="item-status"><em class="moved">'.sprintf($lang_forum['Item status'], $lang_forum['Moved']).'</em></span> <a href="'.forum_link($forum_url['topic'], array($cur_topic['moved_to'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a>';			// Combine everything to produce the Topic heading			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> <strong>'.$forum_page['item_title']['link'].'</strong></h3>';			($hook = get_hook('mr_topic_actions_moved_row_pre_item_subject_merge')) ? eval($hook) : null;			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><span class="label">'.$lang_forum['No views info'].'</span></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><span class="label">'.$lang_forum['No replies info'].'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['No lastpost info'].'</span></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_moved_row_pre_output')) ? eval($hook) : null;		}		else		{			$forum_page['ghost_topic'] = false;			// First assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_topic['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_topic['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_topic['closed'] == '1')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<strong><a href="'.forum_link($forum_url['topic'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a></strong>';			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			$forum_page['item_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_topic['id'], sef_friendly($cur_topic['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_topic['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$fid]) || $tracked_topics['forums'][$fid] < $cur_topic['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_nav_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			// Assemble the Topic subject			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_topic['num_replies']).'</strong> <span class="label">'.(($cur_topic['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><strong>'.forum_number_format($cur_topic['num_views']).'</strong> <span class="label">'.(($cur_topic['num_views'] == 1) ? $lang_forum['View'] : $lang_forum['Views']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_topic['last_post_id']).'">'.format_time($cur_topic['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_topic['last_poster'])).'</cite></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_normal_row_pre_output')) ? eval($hook) : null;		}		$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';		($hook = get_hook('mr_topic_actions_row_pre_item_status_merge')) ? eval($hook) : null;		$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');		($hook = get_hook('mr_topic_actions_row_pre_display')) ? eval($hook) : null;?>			<div id="topic<?php echo $cur_topic['id'] ?>" class="main-item<?php echo $forum_page['item_style'] ?>">				<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>				<div class="item-subject">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>				</div>				<ul class="item-info">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>				</ul>			</div><?php	}?>	</div><?php	($hook = get_hook('mr_topic_actions_post_topic_list')) ? eval($hook) : null;	// Setup moderator control buttons	$forum_page['mod_options'] = array(		'mod_move'		=> '<span class="submit first-item"><input type="submit" name="move_topics" value="'.$lang_misc['Move'].'" /></span>',		'mod_delete'	=> '<span class="submit"><input type="submit" name="delete_topics" value="'.$lang_common['Delete'].'" /></span>',		'mod_merge'		=> '<span class="submit"><input type="submit" name="merge_topics" value="'.$lang_misc['Merge'].'" /></span>',		'mod_open'		=> '<span class="submit"><input type="submit" name="open" value="'.$lang_misc['Open'].'" /></span>',		'mod_close'		=> '<span class="submit"><input type="submit" name="close" value="'.$lang_misc['Close'].'" /></span>'	);	($hook = get_hook('mr_topic_actions_pre_mod_option_output')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php$forum_id = $fid;// Init JS helper for select-all$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));($hook = get_hook('mr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Adds a new post to the specified topic or a new topic to the specified forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_SKIP_CSRF_CONFIRM', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('po_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$tid = isset($_GET['tid']) ? intval($_GET['tid']) : 0;$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($tid < 1 && $fid < 1 || $tid > 0 && $fid > 0)	message($lang_common['Bad request']);// Fetch some info about the topic and/or the forumif ($tid){	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, s.user_id AS is_subscribed',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'f.id=t.forum_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			),			array(				'LEFT JOIN'		=> 'subscriptions AS s',				'ON'			=> '(t.id=s.topic_id AND s.user_id='.$forum_user['id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$tid	);	($hook = get_hook('po_qr_get_topic_forum_info')) ? eval($hook) : null;}else{	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics',		'FROM'		=> 'forums AS f',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid	);	($hook = get_hook('po_qr_get_forum_info')) ? eval($hook) : null;}$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_posting = $forum_db->fetch_assoc($result);if (!$cur_posting)	message($lang_common['Bad request']);$is_subscribed = $tid && $cur_posting['is_subscribed'];// Is someone trying to post into a redirect forum?if ($cur_posting['redirect_url'] != '')	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_posting['moderators'] != '') ? unserialize($cur_posting['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('po_pre_permission_check')) ? eval($hook) : null;// Do we have permission to post?if ((($tid && (($cur_posting['post_replies'] == '' && $forum_user['g_post_replies'] == '0') || $cur_posting['post_replies'] == '0')) ||	($fid && (($cur_posting['post_topics'] == '' && $forum_user['g_post_topics'] == '0') || $cur_posting['post_topics'] == '0')) ||	(isset($cur_posting['closed']) && $cur_posting['closed'] == '1')) &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);($hook = get_hook('po_posting_location_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();// Did someone just hit "Submit" or "Preview"?if (isset($_POST['form_sent'])){	($hook = get_hook('po_form_submitted')) ? eval($hook) : null;	// Make sure form_user is correct	if (($forum_user['is_guest'] && $_POST['form_user'] != 'Guest') || (!$forum_user['is_guest'] && $_POST['form_user'] != $forum_user['username']))		message($lang_common['Bad request']);	// Flood protection	if (!isset($_POST['preview']) && $forum_user['last_post'] != '' && (time() - $forum_user['last_post']) < $forum_user['g_post_flood'] && (time() - $forum_user['last_post']) >= 0)		$errors[] = sprintf($lang_post['Flood'], $forum_user['g_post_flood']);	// If it's a new topic	if ($fid)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// If the user is logged in we get the username and e-mail from $forum_user	if (!$forum_user['is_guest'])	{		$username = $forum_user['username'];		$email = $forum_user['email'];	}	// Otherwise it should be in $_POST	else	{		$username = forum_trim($_POST['req_username']);		$email = strtolower(forum_trim(($forum_config['p_force_guest_email'] == '1') ? $_POST['req_email'] : $_POST['email']));		// Load the profile.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';		// It's a guest, so we have to validate the username		$errors = array_merge($errors, validate_username($username));		if ($forum_config['p_force_guest_email'] == '1' || $email != '')		{			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			if (!is_valid_email($email))				$errors[] = $lang_post['Invalid e-mail'];			if (is_banned_email($email))				$errors[] = $lang_profile['Banned e-mail'];		}	}	// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid	if ($forum_user['is_admmod'] && (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url())))		$errors[] = $lang_post['CSRF token mismatch'];	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	$subscribe = isset($_POST['subscribe']) ? 1 : 0;	$now = time();	($hook = get_hook('po_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		// If it's a reply		if ($tid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $cur_posting['subject'],				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscr_action'	=> ($forum_config['o_subscriptions'] == '1' && $subscribe && !$is_subscribed) ? 1 : (($forum_config['o_subscriptions'] == '1' && !$subscribe && $is_subscribed) ? 2 : 0),				'topic_id'		=> $tid,				'forum_id'		=> $cur_posting['id'],				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_post')) ? eval($hook) : null;			add_post($post_info, $new_pid);		}		// If it's a new topic		else if ($fid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $subject,				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscribe'		=> ($forum_config['o_subscriptions'] == '1' && (isset($_POST['subscribe']) && $_POST['subscribe'] == '1')),				'forum_id'		=> $fid,				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_topic')) ? eval($hook) : null;			add_topic($post_info, $new_tid, $new_pid);		}		($hook = get_hook('po_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $new_pid), $lang_post['Post redirect']);	}}// Are we quoting someone?if ($tid && isset($_GET['qid'])){	$qid = intval($_GET['qid']);	if ($qid < 1)		message($lang_common['Bad request']);	// Get the quote and quote poster	$query = array(		'SELECT'	=> 'p.poster, p.message',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'id='.$qid.' AND topic_id='.$tid	);	($hook = get_hook('po_qr_get_quote')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$quote_poster_and_message = $forum_db->fetch_row($result);	if (!$quote_poster_and_message)	{		message($lang_common['Bad request']);	}	list($q_poster, $q_message) = $quote_poster_and_message;	($hook = get_hook('po_modify_quote_info')) ? eval($hook) : null;	if ($forum_config['p_message_bbcode'] == '1')	{		// If username contains a square bracket, we add "" or '' around it (so we know when it starts and ends)		if (strpos($q_poster, '[') !== false || strpos($q_poster, ']') !== false)		{			if (strpos($q_poster, '\'') !== false)				$q_poster = '"'.$q_poster.'"';			else				$q_poster = '\''.$q_poster.'\'';		}		else		{			// Get the characters at the start and end of $q_poster			$ends = utf8_substr($q_poster, 0, 1).utf8_substr($q_poster, -1, 1);			// Deal with quoting "Username" or 'Username' (becomes '"Username"' or "'Username'")			if ($ends == '\'\'')				$q_poster = '"'.$q_poster.'"';			else if ($ends == '""')				$q_poster = '\''.$q_poster.'\'';		}		$forum_page['quote'] = '[quote='.$q_poster.']'.$q_message.'[/quote]'."\n";	}	else		$forum_page['quote'] = '> '.$q_poster.' '.$lang_common['wrote'].':'."\n\n".'> '.$q_message."\n";}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = ($tid ? forum_link($forum_url['new_reply'], $tid) : forum_link($forum_url['new_topic'], $fid));$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'form_user'		=> '<input type="hidden" name="form_user" value="'.((!$forum_user['is_guest']) ? forum_htmlencode($forum_user['username']) : 'Guest').'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['text_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));$forum_page['crumbs'][] = array($cur_posting['forum_name'], forum_link($forum_url['forum'], array($cur_posting['id'], sef_friendly($cur_posting['forum_name']))));if ($tid)	$forum_page['crumbs'][] = array($cur_posting['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_posting['subject']))));$forum_page['crumbs'][] = $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'];($hook = get_hook('po_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'post');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('po_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($errors)){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['preview_message'] = parse_message(forum_trim($message), $hide_smilies);	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($tid) ? $lang_post['Reply byline'] : $lang_post['Topic byline']), '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	($hook = get_hook('po_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Preview reply'] : $lang_post['Preview new topic']; ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('po_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($tid) ? $lang_post['Compose your reply'] : $lang_post['Compose your topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('po_pre_post_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_post['Post errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?phpif ($forum_user['is_guest']){	$forum_page['email_form_name'] = ($forum_config['p_force_guest_email'] == '1') ? 'req_email' : 'email';	($hook = get_hook('po_pre_guest_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Guest post legend'] ?></strong></legend><?php ($hook = get_hook('po_pre_guest_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php if (isset($_POST['req_username'])) echo forum_htmlencode($username); ?>" size="35" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text<?php if ($forum_config['p_force_guest_email'] == '1') echo ' required' ?>">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest e-mail'] ?><?php if ($forum_config['p_force_guest_email'] == '1') echo ' <em>'.$lang_common['Required'].'</em>' ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="<?php echo $forum_page['email_form_name'] ?>" value="<?php if (isset($_POST[$forum_page['email_form_name']])) echo forum_htmlencode($email); ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('po_guest_info_fieldset_end')) ? eval($hook) : null;	// Reset counters	$forum_page['group_count'] = $forum_page['item_count'] = 0;}($hook = get_hook('po_pre_req_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?phpif ($fid){	($hook = get_hook('po_pre_req_subject')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required longtext">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" value="<?php if (isset($_POST['req_subject'])) echo forum_htmlencode($subject); ?>" size="70" maxlength="70" required /></span>					</div>				</div><?php}($hook = get_hook('po_pre_post_contents')) ? eval($hook) : null;?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo isset($_POST['req_message']) ? forum_htmlencode($message) : (isset($forum_page['quote']) ? forum_htmlencode($forum_page['quote']) : ''); ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1')	$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1"'.(isset($_POST['hide_smilies']) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';// Check/uncheck the checkbox for subscriptions depending on scenarioif (!$forum_user['is_guest'] && $forum_config['o_subscriptions'] == '1'){	$subscr_checked = false;	// If it's a preview	if (isset($_POST['preview']))		$subscr_checked = isset($_POST['subscribe']) ? true : false;	// If auto subscribed	else if ($forum_user['auto_notify'])		$subscr_checked = true;	// If already subscribed to the topic	else if ($is_subscribed)		$subscr_checked = true;	$forum_page['checkboxes']['subscribe'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="subscribe" value="1"'.($subscr_checked ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.($is_subscribed ? $lang_post['Stay subscribed'] : $lang_post['Subscribe']).'</label></div>';}($hook = get_hook('po_pre_optional_fieldset')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('po_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('po_pre_req_info_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('po_req_info_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($tid) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($tid) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php// Check if the topic review is to be displayedif ($tid && $forum_config['o_topic_review'] != '0'){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Get the amount of posts in the topic	$query = array(		'SELECT'	=> 'count(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid	);	($hook = get_hook('po_topic_review_qr_get_post_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['total_post_count'] = $forum_db->result($result, 0);	// Get posts to display in topic review	$query = array(		'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid,		'ORDER BY'	=> 'id DESC',		'LIMIT'		=> $forum_config['o_topic_review']	);	($hook = get_hook('po_topic_review_qr_get_topic_review_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$posts = array();	while ($cur_post = $forum_db->fetch_assoc($result))	{		$posts[] = $cur_post;	}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_post['Topic review'] ?></span></h2>	</div>	<div id="topic-review" class="main-content main-frm"><?php	$forum_page['item_count'] = 0;	$forum_page['item_total'] = count($posts);	foreach ($posts as $cur_post)	{		++$forum_page['item_count'];		$forum_page['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		// Generate the post heading		$forum_page['post_ident'] = array();		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['total_post_count'] - $forum_page['item_count'] + 1).'</span>';		$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf($lang_post['Post byline'], '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_post['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('po_topic_review_row_pre_display')) ? eval($hook) : null;?>		<div class="post<?php echo ($forum_page['item_count'] == 1) ? ' firstpost' : '' ?><?php echo ($forum_page['item_total'] == $forum_page['item_count']) ? ' lastpost' : '' ?>">			<div class="posthead">				<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_topic_review_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['message']."\n" ?><?php ($hook = get_hook('po_topic_review_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div>		</div><?php	}?>	</div><?php}$forum_id = $cur_posting['id'];($hook = get_hook('po_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Allows users to view and edit their details. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('pf_start')) ? eval($hook) : null;$action = isset($_GET['action']) ? $_GET['action'] : null;$section = isset($_GET['section']) ? $_GET['section'] : 'about';	// Default to section "about"$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 2)	message($lang_common['Bad request']);$errors = array();if ($action != 'change_pass' || !isset($_GET['key'])){	if ($forum_user['g_read_board'] == '0')		message($lang_common['No view']);	else if ($forum_user['g_view_users'] == '0' && ($forum_user['is_guest'] || $forum_user['id'] != $id))		message($lang_common['No permission']);}// Load the profile.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';// Fetch info about the user whose profile we're viewing$query = array(	'SELECT'	=> 'u.*, g.g_id, g.g_user_title, g.g_moderator',	'FROM'		=> 'users AS u',	'JOINS'		=> array(		array(			'LEFT JOIN'	=> 'groups AS g',			'ON'		=> 'g.g_id=u.group_id'		)	),	'WHERE'		=> 'u.id='.$id);($hook = get_hook('pf_qr_get_user_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$user = $forum_db->fetch_assoc($result);if (!$user)	message($lang_common['Bad request']);if ($action == 'change_pass'){	($hook = get_hook('pf_change_pass_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		// If the user is already logged in we shouldn't be here :)		if (!$forum_user['is_guest'])			message($lang_profile['Pass logout']);		($hook = get_hook('pf_change_pass_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['Pass key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			if (isset($_POST['form_sent']))			{				($hook = get_hook('pf_change_pass_key_form_submitted')) ? eval($hook) : null;				$new_password1 = forum_trim($_POST['req_new_password1']);				$new_password2 = forum_trim($_POST['req_new_password2']);				if (utf8_strlen($new_password1) < 4)					$errors[] = $lang_profile['Pass too short'];				else if ($new_password1 != $new_password2)					$errors[] = $lang_profile['Pass not match'];				// Did everything go according to plan?				if (empty($errors))				{					$new_password_hash = forum_hash($new_password1, $user['salt']);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'password=\''.$new_password_hash.'\', activate_key=NULL',						'WHERE'		=> 'id='.$id					);					($hook = get_hook('pf_change_pass_key_qr_update_password')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Add flash message					$forum_flash->add_info($lang_profile['Pass updated']);					($hook = get_hook('pf_change_pass_key_pre_redirect')) ? eval($hook) : null;					redirect(forum_link($forum_url['index']), $lang_profile['Pass updated']);				}			}			// Is this users own profile			$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;			// Setup form			$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;			$forum_page['form_action'] = forum_link($forum_url['change_password_key'], array($id, $key));			// Setup breadcrumbs			$forum_page['crumbs'] = array(				array($forum_config['o_board_title'], forum_link($forum_url['index'])),				array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),				($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password']), $id)			);			($hook = get_hook('pf_change_pass_key_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE', 'profile-changepass');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('pf_change_pass_key_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php			// If there were any errors, show them			if (!empty($errors))			{				$forum_page['errors'] = array();				foreach ($errors as $cur_error)					$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';				($hook = get_hook('pf_change_pass_key_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php			}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" autocomplete="off">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_key_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_key_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php			($hook = get_hook('pf_change_pass_key_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}	}	// Make sure we are allowed to change this user's password	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $forum_user['g_mod_change_passwords'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_pass_normal_form_submitted')) ? eval($hook) : null;		$old_password = isset($_POST['req_old_password']) ? forum_trim($_POST['req_old_password']) : '';		$new_password1 = forum_trim($_POST['req_new_password1']);		$new_password2 = forum_trim($_POST['req_new_password2']);		if (utf8_strlen($new_password1) < 4)			$errors[] = $lang_profile['Pass too short'];		else if ($new_password1 != $new_password2)			$errors[] = $lang_profile['Pass not match'];		$authorized = false;		if (!empty($user['password']))		{			$old_password_hash = forum_hash($old_password, $user['salt']);			if (($user['password'] == $old_password_hash) || $forum_user['is_admmod'])				$authorized = true;		}		if (!$authorized)			$errors[] = $lang_profile['Wrong old password'];		// Did everything go according to plan?		if (empty($errors))		{			$new_password_hash = forum_hash($new_password1, $user['salt']);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$new_password_hash.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_pass_normal_qr_update_password')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_user['id'] == $id)			{				$cookie_data = @explode('|', base64_decode($_COOKIE[$cookie_name]));				$expire = ($cookie_data[2] > time() + $forum_config['o_timeout_visit']) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];				forum_setcookie($cookie_name, base64_encode($forum_user['id'].'|'.$new_password_hash.'|'.$expire.'|'.sha1($user['salt'].$new_password_hash.forum_hash($expire, $user['salt']))), $expire);			}			// Add flash message			$forum_flash->add_info($lang_profile['Pass updated redirect']);			($hook = get_hook('pf_change_pass_normal_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['Pass updated redirect']);		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_password'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password'], $id))	);	($hook = get_hook('pf_change_pass_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changepass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_pass_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_pass_normal_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>" autocomplete="off">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_normal_pre_old_password')) ? eval($hook) : null; ?><?php if (!$forum_user['is_admmod'] || $forum_user['id'] == $id): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Old password'] ?></span> <small><?php echo $lang_profile['Old password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_old_password" size="35" value="<?php echo(isset($_POST['req_old_password']) ? forum_htmlencode($_POST['req_old_password']) : ''); ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_pass_normal_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_pass_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'change_email'){	// Make sure we are allowed to change this user's e-mail	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_email_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		($hook = get_hook('pf_change_email_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['E-mail key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'email=activate_string, activate_string=NULL, activate_key=NULL',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			message($lang_profile['E-mail updated']);		}	}	else if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_email_normal_form_submitted')) ? eval($hook) : null;		if (forum_hash($_POST['req_password'], $forum_user['salt']) !== $forum_user['password'])			$errors[] = $lang_profile['Wrong password'];		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$new_email = strtolower(forum_trim($_POST['req_new_email']));		if (!is_valid_email($new_email))			$errors[] = $lang_common['Invalid e-mail'];		// Check if it's a banned e-mail address		if (is_banned_email($new_email))		{			($hook = get_hook('pf_change_email_normal_banned_email')) ? eval($hook) : null;			if ($forum_config['p_allow_banned_email'] == '0')				$errors[] = $lang_profile['Banned e-mail'];			else if ($forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Banned e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to banned e-mail address: '.$new_email."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Check if someone else already has registered with that e-mail address		$query = array(			'SELECT'	=> 'u.id, u.username',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.email=\''.$forum_db->escape($new_email).'\''		);		($hook = get_hook('pf_change_email_normal_qr_check_email_dupe')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dupe_list = array();		while ($cur_dupe = $forum_db->fetch_assoc($result))		{			$dupe_list[] = $cur_dupe['username'];		}		if (!empty($dupe_list))		{			($hook = get_hook('pf_change_email_normal_dupe_email')) ? eval($hook) : null;			if ($forum_config['p_allow_dupe_email'] == '0')				$errors[] = $lang_profile['Dupe e-mail'];			else if (($forum_config['o_mailing_list'] != '') && empty($errors))			{				$mail_subject = 'Alert - Duplicate e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to an e-mail address that also belongs to: '.implode(', ', $dupe_list)."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Did everything go according to plan?		if (empty($errors))		{			if ($forum_config['o_regs_verify'] != '1')			{				// We have no confirmed e-mail so we change e-mail right now				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'email=\''.$forum_db->escape($new_email).'\'',					'WHERE'		=> 'id='.$id				);				($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['E-mail updated redirect']);			}			// We have a confirmed e-mail so we going to send an activation link			$new_email_key = random_key(8, true);			// Save new e-mail and activation key			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'activate_string=\''.$forum_db->escape($new_email).'\', activate_key=\''.$new_email_key.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_normal_qr_update_email_activation')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Load the "activate e-mail" template			$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_email.tpl'));			// The first row contains the subject			$first_crlf = strpos($mail_tpl, "\n");			$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));			$mail_message = forum_trim(substr($mail_tpl, $first_crlf));			$mail_message = str_replace('<username>', $forum_user['username'], $mail_message);			$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);			$mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_email_key'], array($id, $new_email_key))), $mail_message);			$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);			($hook = get_hook('pf_change_email_normal_pre_activation_email_sent')) ? eval($hook) : null;			forum_mail($new_email, $mail_subject, $mail_message);			message(sprintf($lang_profile['Activate e-mail sent'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_email'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup form information	$forum_page['frm_info'] = '<p class="important"><span>'.$lang_profile['E-mail info'].'</span></p>';	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your e-mail'], forum_link($forum_url['change_email'], $id)) : array(sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username'])), forum_link($forum_url['change_email'], $id))	);	($hook = get_hook('pf_change_email_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changemail');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_email_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<?php echo $forum_page['frm_info']."\n" ?>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_email_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change e-mail errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_email_normal_pre_new_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New e-mail'] ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_email" size="50" maxlength="80" value="<?php echo(isset($_POST['req_new_email']) ? forum_htmlencode($_POST['req_new_email']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Password'] ?> </span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" size="25" value="<?php echo(isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_email_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_email_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_user' || isset($_POST['delete_user_comply']) || isset($_POST['cancel'])){	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_admin'], $id), $lang_common['Cancel redirect']);	($hook = get_hook('pf_delete_user_selected')) ? eval($hook) : null;	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	if ($user['g_id'] == FORUM_ADMIN)		message($lang_profile['Cannot delete admin']);	if (isset($_POST['delete_user_comply']))	{		($hook = get_hook('pf_delete_user_form_submitted')) ? eval($hook) : null;		delete_user($id, isset($_POST['delete_posts']));		($hook = get_hook('pf_delete_user_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['index']), $lang_profile['User delete redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['delete_user'], $id);	// Setup form information	$forum_page['frm_info'] = array(		'<li class="warn"><span>'.$lang_profile['Delete warning'].'</span></li>',		'<li class="warn"><span>'.$lang_profile['Delete posts info'].'</span></li>'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section admin']), forum_link($forum_url['profile_admin'], $id)),		array($lang_profile['Delete user'], forum_link($forum_url['delete_user'], $id))	);	($hook = get_hook('pf_delete_user_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_delete_user_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm_info'])."\n" ?>			</ul>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_delete_user_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Delete posts'] ?></span> <?php printf($lang_profile['Delete posts label'], forum_htmlencode($user['username'])) ?></label>					</div>				</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_delete_user_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_user_comply" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_delete_user_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_avatar'){	// Make sure we are allowed to delete this user's avatar	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('delete_avatar'.$id.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('pf_delete_avatar_selected')) ? eval($hook) : null;	delete_avatar($id);	// Add flash message	$forum_flash->add_info($lang_profile['Avatar deleted redirect']);	($hook = get_hook('pf_delete_avatar_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_avatar'], $id), $lang_profile['Avatar deleted redirect']);}else if (isset($_POST['update_group_membership'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_change_group_form_submitted')) ? eval($hook) : null;	$new_group_id = intval($_POST['group_id']);	$query = array(		'UPDATE'	=> 'users',		'SET'		=> 'group_id='.$new_group_id,		'WHERE'		=> 'id='.$id	);	($hook = get_hook('pf_change_group_qr_update_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'SELECT'	=> 'g.g_moderator',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$new_group_id	);	($hook = get_hook('pf_change_group_qr_check_new_group_mod')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_group_mod = $forum_db->result($result);	// If the user was a moderator or an administrator (and no longer is), we remove him/her from the moderator list in all forums	if (($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1') && $new_group_id != FORUM_ADMIN && $new_group_mod != '1')		clean_forum_moderators();	// Add flash message	$forum_flash->add_info($lang_profile['Group membership redirect']);	($hook = get_hook('pf_change_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Group membership redirect']);}else if (isset($_POST['update_forums'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_forum_moderators_form_submitted')) ? eval($hook) : null;	$moderator_in = (isset($_POST['moderator_in'])) ? array_keys($_POST['moderator_in']) : array();	// Loop through all forums	$query = array(		'SELECT'	=> 'f.id, f.moderators',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('pf_forum_moderators_qr_get_all_forum_mods')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();		// If the user should have moderator access (and he/she doesn't already have it)		if (in_array($cur_forum['id'], $moderator_in) && !in_array($id, $cur_moderators))		{			$cur_moderators[$user['username']] = $id;			ksort($cur_moderators);		}		// If the user shouldn't have moderator access (and he/she already has it)		else if (!in_array($cur_forum['id'], $moderator_in) && in_array($id, $cur_moderators))			unset($cur_moderators[$user['username']]);		$cur_moderators = (!empty($cur_moderators)) ? '\''.$forum_db->escape(serialize($cur_moderators)).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'moderators='.$cur_moderators,			'WHERE'		=> 'id='.$cur_forum['id']		);		($hook = get_hook('pf_forum_moderators_qr_update_forum_moderators')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Add flash message	$forum_flash->add_info($lang_profile['Moderate forums redirect']);	($hook = get_hook('pf_forum_moderators_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Moderate forums redirect']);}else if (isset($_POST['ban'])){	if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission']);	($hook = get_hook('pf_ban_user_selected')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id, $lang_profile['Ban redirect']);}else if (isset($_POST['form_sent'])){	// Make sure we are allowed to edit this user's profile	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_details_form_submitted')) ? eval($hook) : null;	// Extract allowed elements from $_POST['form']	function extract_elements($allowed_elements)	{		$form = array();		foreach ($_POST['form'] as $key => $value)		{			if (in_array($key, $allowed_elements))				$form[$key] = $value;		}		return $form;	}	$username_updated = false;	// Validate input depending on section	switch ($section)	{		case 'identity':		{			$form = extract_elements(array('realname', 'url', 'location', 'jabber', 'icq', 'msn', 'aim', 'yahoo', 'facebook', 'twitter', 'linkedin', 'skype'));			($hook = get_hook('pf_change_details_identity_validation')) ? eval($hook) : null;			if ($forum_user['is_admmod'])			{				// Are we allowed to change usernames?				if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_rename_users'] == '1'))				{					$form['username'] = forum_trim($_POST['req_username']);					$old_username = forum_trim($_POST['old_username']);					// Validate the new username					$errors = array_merge($errors, validate_username($form['username'], $id));					if ($form['username'] != $old_username)						$username_updated = true;				}				// We only allow administrators to update the post count				if ($forum_user['g_id'] == FORUM_ADMIN)					$form['num_posts'] = intval($_POST['num_posts']);			}			if ($forum_user['is_admmod'])			{				if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/email.php';				// Validate the email-address				$form['email'] = strtolower(forum_trim($_POST['req_email']));				if (!is_valid_email($form['email']))					$errors[] = $lang_common['Invalid e-mail'];			}			if ($forum_user['is_admmod'])				$form['admin_note'] = forum_trim($_POST['admin_note']);			if ($forum_user['g_id'] == FORUM_ADMIN)				$form['title'] = forum_trim($_POST['title']);			else if ($forum_user['g_set_title'] == '1')			{				$form['title'] = forum_trim($_POST['title']);				if ($form['title'] != '')				{					// A list of words that the title may not contain					// If the language is English, there will be some duplicates, but it's not the end of the world					$forbidden = array('Member', 'Moderator', 'Administrator', 'Banned', 'Guest', $lang_common['Member'], $lang_common['Moderator'], $lang_common['Administrator'], $lang_common['Banned'], $lang_common['Guest']);					if (in_array($form['title'], $forbidden))						$errors[] = $lang_profile['Forbidden title'];				}			}			// Add http:// if the URL doesn't contain it or https:// already			if ($form['url'] != '' && strpos(strtolower($form['url']), 'http://') !== 0  && strpos(strtolower($form['url']), 'https://') !== 0)				$form['url'] = 'http://'.$form['url'];			// If the ICQ UIN contains anything other than digits it's invalid			if ($form['icq'] != '' && !ctype_digit($form['icq']))				$errors[] = $lang_profile['Bad ICQ'];			break;		}		case 'settings':		{			$form = extract_elements(array('dst', 'timezone', 'language', 'email_setting', 'notify_with_post', 'auto_notify', 'time_format', 'date_format', 'disp_topics', 'disp_posts', 'show_smilies', 'show_img', 'show_img_sig', 'show_avatars', 'show_sig', 'style'));			($hook = get_hook('pf_change_details_settings_validation')) ? eval($hook) : null;			$form['dst'] = (isset($form['dst'])) ? 1 : 0;			$form['time_format'] = (isset($form['time_format'])) ? intval($form['time_format']) : 0;			$form['date_format'] = (isset($form['date_format'])) ? intval($form['date_format']) : 0;			$form['timezone'] = (isset($form['timezone'])) ? floatval($form['timezone']) : $forum_config['o_default_timezone'];			// Validate timezone			if (($form['timezone'] > 14.0) || ($form['timezone'] < -12.0)) {				message($lang_common['Bad request']);			}			$form['email_setting'] = intval($form['email_setting']);			if ($form['email_setting'] < 0 || $form['email_setting'] > 2) $form['email_setting'] = 1;			if ($forum_config['o_subscriptions'] == '1')			{				if (!isset($form['notify_with_post']) || $form['notify_with_post'] != '1') $form['notify_with_post'] = '0';				if (!isset($form['auto_notify']) || $form['auto_notify'] != '1') $form['auto_notify'] = '0';			}			// Make sure we got a valid language string			if (isset($form['language']))			{				$form['language'] = preg_replace('#[\.\\\/]#', '', $form['language']);				if (!file_exists(FORUM_ROOT.'lang/'.$form['language'].'/common.php'))					message($lang_common['Bad request']);			}			if ($form['disp_topics'] != '' && intval($form['disp_topics']) < 3) $form['disp_topics'] = 3;			if ($form['disp_topics'] != '' && intval($form['disp_topics']) > 75) $form['disp_topics'] = 75;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) < 3) $form['disp_posts'] = 3;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) > 75) $form['disp_posts'] = 75;			if (!isset($form['show_smilies']) || $form['show_smilies'] != '1') $form['show_smilies'] = '0';			if (!isset($form['show_img']) || $form['show_img'] != '1') $form['show_img'] = '0';			if (!isset($form['show_img_sig']) || $form['show_img_sig'] != '1') $form['show_img_sig'] = '0';			if (!isset($form['show_avatars']) || $form['show_avatars'] != '1') $form['show_avatars'] = '0';			if (!isset($form['show_sig']) || $form['show_sig'] != '1') $form['show_sig'] = '0';			// Make sure we got a valid style string			if (isset($form['style']))			{				$form['style'] = preg_replace('#[\.\\\/]#', '', $form['style']);				if (!file_exists(FORUM_ROOT.'style/'.$form['style'].'/'.$form['style'].'.php'))					message($lang_common['Bad request']);			}			break;		}		case 'signature':		{			if ($forum_config['o_signatures'] == '0')				message($lang_profile['Signatures disabled']);			($hook = get_hook('pf_change_details_signature_validation')) ? eval($hook) : null;			// Clean up signature from POST			$form['signature'] = forum_linebreaks(forum_trim($_POST['signature']));			// Validate signature			if (utf8_strlen($form['signature']) > $forum_config['p_sig_length'])				$errors[] = sprintf($lang_profile['Sig too long'], forum_number_format($forum_config['p_sig_length']), forum_number_format(utf8_strlen($form['signature']) - $forum_config['p_sig_length']));			if (substr_count($form['signature'], "\n") > ($forum_config['p_sig_lines'] - 1))				$errors[] = sprintf($lang_profile['Sig too many lines'], forum_number_format($forum_config['p_sig_lines']));			if ($form['signature'] != '' && $forum_config['p_sig_all_caps'] == '0' && check_is_all_caps($form['signature']) && !$forum_user['is_admmod'])				$form['signature'] = utf8_ucwords(utf8_strtolower($form['signature']));			// Validate BBCode syntax			if ($forum_config['p_sig_bbcode'] == '1' || $forum_config['o_make_links'] == '1')			{				if (!defined('FORUM_PARSER_LOADED'))					require FORUM_ROOT.'include/parser.php';				$form['signature'] = preparse_bbcode($form['signature'], $errors, true);			}			break;		}		case 'avatar':		{			if ($forum_config['o_avatars'] == '0')				message($lang_profile['Avatars disabled']);			($hook = get_hook('pf_change_details_avatar_validation')) ? eval($hook) : null;			if (!isset($_FILES['req_file']))			{				$errors[] = $lang_profile['No file'];				break;			}			else				$uploaded_file = $_FILES['req_file'];			// Make sure the upload went smooth			if (isset($uploaded_file['error']) && empty($errors))			{				switch ($uploaded_file['error'])				{					case 1:	// UPLOAD_ERR_INI_SIZE					case 2:	// UPLOAD_ERR_FORM_SIZE						$errors[] = $lang_profile['Too large ini'];						break;					case 3:	// UPLOAD_ERR_PARTIAL						$errors[] = $lang_profile['Partial upload'];						break;					case 4:	// UPLOAD_ERR_NO_FILE						$errors[] = $lang_profile['No file'];						break;					case 6:	// UPLOAD_ERR_NO_TMP_DIR						$errors[] = $lang_profile['No tmp directory'];						break;					default:						// No error occured, but was something actually uploaded?						if ($uploaded_file['size'] == 0)							$errors[] = $lang_profile['No file'];						break;				}			}			if (is_uploaded_file($uploaded_file['tmp_name']) && empty($errors))			{				$allowed_types = array(IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_GIF);				($hook = get_hook('pf_change_details_avatar_allowed_types')) ? eval($hook) : null;				list($width, $height, $type,) = @/**/getimagesize($uploaded_file['tmp_name']);				if (!in_array($type, $allowed_types))					$errors[] = $lang_profile['Bad type'];				else				{					// Make sure the file isn't too big					if ($uploaded_file['size'] > $forum_config['o_avatars_size'])						$errors[] = sprintf($lang_profile['Too large'], forum_number_format($forum_config['o_avatars_size']));				}				if (empty($errors))				{					// Determine type					$extension = null;					$avatar_type = FORUM_AVATAR_NONE;					if ($type == IMAGETYPE_GIF)					{						$extension = '.gif';						$avatar_type = FORUM_AVATAR_GIF;					}					else if ($type == IMAGETYPE_JPEG)					{						$extension = '.jpg';						$avatar_type = FORUM_AVATAR_JPG;					}					else if ($type == IMAGETYPE_PNG)					{						$extension = '.png';						$avatar_type = FORUM_AVATAR_PNG;					}					($hook = get_hook('pf_change_details_avatar_determine_extension')) ? eval($hook) : null;					// Move the file to the avatar directory. We do this before checking the width/height to circumvent open_basedir restrictions.					if (!@move_uploaded_file($uploaded_file['tmp_name'], $forum_config['o_avatars_dir'].'/'.$id.'.tmp'))						$errors[] = sprintf($lang_profile['Move failed'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>');					if (empty($errors))					{						($hook = get_hook('pf_change_details_avatar_modify_size')) ? eval($hook) : null;						// Now check the width/height						if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = sprintf($lang_profile['Too wide or high'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height']);						}						else if ($type == 1 && $uploaded_file['type'] != 'image/gif')	// Prevent dodgy uploads						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = $lang_profile['Bad type'];						}						($hook = get_hook('pf_change_details_avatar_validate_file')) ? eval($hook) : null;						if (empty($errors))						{							// Delete any old avatars							delete_avatar($id);							// Put the new avatar in its place							@rename($forum_config['o_avatars_dir'].'/'.$id.'.tmp', $forum_config['o_avatars_dir'].'/'.$id.$extension);							@chmod($forum_config['o_avatars_dir'].'/'.$id.$extension, 0644);							// Avatar							$avatar_width = (intval($width) > 0) ? intval($width) : 0;							$avatar_height = (intval($height) > 0) ? intval($height) : 0;							// Save to DB							$query = array(								'UPDATE'	=> 'users',								'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$avatar_height.'\', avatar_width=\''.$avatar_width.'\'',								'WHERE'		=> 'id='.$id							);							($hook = get_hook('pf_change_details_avatar_qr_update_avatar')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);							// Update avatar info							$user['avatar'] = $avatar_type;							$user['avatar_width'] = $width;							$user['avatar_height'] = $height;						}					}				}			}			else if (empty($errors))				$errors[] = $lang_profile['Unknown failure'];			break;		}		default:		{			($hook = get_hook('pf_change_details_new_section_validation')) ? eval($hook) : null;			break;		}	}	$skip_db_update_sections = array('avatar');	($hook = get_hook('pf_change_details_pre_database_validation')) ? eval($hook) : null;	// All sections apart from avatar potentially affect the database	if (!in_array($section, $skip_db_update_sections) && empty($errors))	{		($hook = get_hook('pf_change_details_database_validation')) ? eval($hook) : null;		// Singlequotes around non-empty values and NULL for empty values		$new_values = array();		foreach ($form as $key => $input)		{			$value = ($input !== '') ? '\''.$forum_db->escape($input).'\'' : 'NULL';			$new_values[] = $key.'='.$value;		}		// Make sure we have something to update		if (empty($new_values))			message($lang_common['Bad request']);		// Run the update		$query = array(			'UPDATE'	=> 'users',			'SET'		=> implode(',', $new_values),			'WHERE'		=> 'id='.$id		);		($hook = get_hook('pf_change_details_qr_update_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If we changed the username we have to update some stuff		if ($username_updated)		{			($hook = get_hook('pf_change_details_username_changed')) ? eval($hook) : null;			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster_id='.$id			);			($hook = get_hook('pf_change_details_qr_update_posts_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forums',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_forums_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'ident=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'ident=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_online_ident')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'edited_by=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'edited_by=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_posts_edited_by')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// If the user is a moderator or an administrator we have to update the moderator lists and bans cache			if ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')			{				$query = array(					'SELECT'	=> 'f.id, f.moderators',					'FROM'		=> 'forums AS f'				);				($hook = get_hook('pf_change_details_qr_get_all_forum_mods')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_forum = $forum_db->fetch_assoc($result))				{					$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();					if (in_array($id, $cur_moderators))					{						unset($cur_moderators[$old_username]);						$cur_moderators[$form['username']] = $id;						ksort($cur_moderators);						$query = array(							'UPDATE'	=> 'forums',							'SET'		=> 'moderators=\''.$forum_db->escape(serialize($cur_moderators)).'\'',							'WHERE'		=> 'id='.$cur_forum['id']						);						($hook = get_hook('pf_change_details_qr_update_forum_moderators')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}				// Regenerate the bans cache				if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/cache.php';				generate_bans_cache();			}		}		// Add flash message		$forum_flash->add_info($lang_profile['Profile redirect']);		($hook = get_hook('pf_change_details_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['profile_'.$section], $id), $lang_profile['Profile redirect']);	}}($hook = get_hook('pf_new_action')) ? eval($hook) : null;if ($user['signature'] != ''){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$parsed_signature = parse_signature($user['signature']);}// View or edit?if ($forum_user['id'] != $id &&	$forum_user['g_id'] != FORUM_ADMIN &&	($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')){	// Setup user identification	$forum_page['user_ident'] = array();	($hook = get_hook('pf_view_details_selected')) ? eval($hook) : null;	$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';	if ($forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		if (!empty($forum_page['avatar_markup']))			$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';	}	$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';	// Setup user information	$forum_page['user_info'] = array();	if ($user['realname'] !='')		$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';	if ($user['location'] !='')		$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';	$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';	$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>';	if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])		$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';	// Setup user address	$forum_page['user_contact'] = array();	if ($user['email_setting'] == '0' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';	if ($user['email_setting'] != '2' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';	if ($user['url'] != '')	{		$url_source = $user['url'];		// IDNA?		// Load the IDNA class for international url handling		require_once FORUM_ROOT.'include/idna/idna_convert.class.php';		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$idn = new idna_convert();			$idn->set_parameter('encoding', 'utf8');			$idn->set_parameter('strict', false);			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))			{				$user['url'] = $idn->decode($url_source);			}			else			{				$url_source = $idn->encode($url_source);			}		}		if ($forum_config['o_censoring'] == '1')			$user['url'] = censor_words($user['url']);		$url_source = forum_htmlencode($url_source);		$user['url'] = forum_htmlencode($user['url']);		$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';		$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';	}	if ($user['jabber'] !='')		$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';	if ($user['icq'] !='')		$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong> '.forum_htmlencode($user['icq']).'</strong></span></li>';	if ($user['msn'] !='')		$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';	if ($user['aim'] !='')		$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';	if ($user['yahoo'] !='')		$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';	// Setup signature demo	if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))		$forum_page['sig_demo'] = $parsed_signature;	// Setup search links	if ($forum_user['g_search'] == '1')	{		$forum_page['user_activity'] = array();		$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.sprintf($lang_profile['View user posts'], forum_htmlencode($user['username'])).'</a></li>';		$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.sprintf($lang_profile['View user topics'], forum_htmlencode($user['username'])).'</a></li>';	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	($hook = get_hook('pf_view_details_pre_header_load')) ? eval($hook) : null;	define('FORUM_ALLOW_INDEX', 1);	define('FORUM_PAGE', 'profile');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_view_details_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php ($hook = get_hook('pf_view_details_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_view_details_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_view_details_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_activity_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h3>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_sig_info')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h3>					<div class="sig-demo"><?php echo $forum_page['sig_demo']."\n" ?></div>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_view_details_user_info_end')) ? eval($hook) : null; ?>	</div><?php	($hook = get_hook('pf_view_details_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else{	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup navigation menu	$forum_page['main_menu'] = array();	$forum_page['main_menu']['about'] = '<li class="first-item'.(($section == 'about')  ? ' active' : '').'"><a href="'.forum_link($forum_url['profile_about'], $id).'"><span>'.$lang_profile['Section about'].'</span></a></li>';	$forum_page['main_menu']['identity'] = '<li'.(($section == 'identity')  ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_identity'], $id).'"><span>'.$lang_profile['Section identity'].'</span></a></li>';	$forum_page['main_menu']['settings'] = '<li'.(($section == 'settings') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_settings'], $id).'"><span>'.$lang_profile['Section settings'].'</span></a></li>';	if ($forum_config['o_signatures'] == '1')		$forum_page['main_menu']['signature'] = '<li'.(($section == 'signature') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_signature'], $id).'"><span>'.$lang_profile['Section signature'].'</span></a></li>';	if ($forum_config['o_avatars'] == '1')		$forum_page['main_menu']['avatar'] = '<li'.(($section == 'avatar') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_avatar'], $id).'"><span>'.$lang_profile['Section avatar'].'</span></a></li>';	if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_ban_users'] == '1' && !$forum_page['own_profile']))		$forum_page['main_menu']['admin'] = '<li'.(($section == 'admin') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_admin'], $id).'"><span>'.$lang_profile['Section admin'].'</span></a></li>';	($hook = get_hook('pf_change_details_modify_main_menu')) ? eval($hook) : null;	// End navigation menu	if ($section == 'about')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array(sprintf($lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		);		// Setup user identification		$forum_page['user_ident'] = array();		($hook = get_hook('pf_change_details_about_selected')) ? eval($hook) : null;		$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';		if ($forum_config['o_avatars'] == '1')		{			$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);			if (!empty($forum_page['avatar_markup']))				$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';		}		$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';		// Create array for private information		$forum_page['user_private'] = array();		// Setup user information		$forum_page['user_info'] = array();		if ($user['realname'] !='')			$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';		if ($user['location'] !='')			$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';		$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';		$forum_page['user_info']['lastvisit'] = '<li><span>'.$lang_profile['Last visit'].': <strong> '.format_time($user['last_visit']).'</strong></span></li>';		$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>'; 		if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])			$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		else			$forum_page['user_private']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		if ($forum_user['is_admmod'] && $user['admin_note'] != '')			$forum_page['user_private']['note'] = '<li><span>'.$lang_profile['Note'].': <strong>'.forum_htmlencode($user['admin_note']).'</strong></span></li>';		// Setup user address		$forum_page['user_contact'] = array();		if (($user['email_setting'] == '0' && !$forum_user['is_guest']) && $forum_user['g_send_email'] == '1')			$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		else if ($forum_page['own_profile'] || $forum_user['is_admmod'])				$forum_page['user_private']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		if ($user['email_setting'] != '2')			$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		else if ($forum_user['id'] == $id || ($forum_user['is_admmod'] && $user['email_setting'] == '2'))			$forum_page['user_private']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		// Website		if ($user['url'] != '')		{			$url_source = $user['url'];			// IDNA?			// Load the IDNA class for international url handling			require_once FORUM_ROOT.'include/idna/idna_convert.class.php';			if (defined('FORUM_SUPPORT_PCRE_UNICODE'))			{				$idn = new idna_convert();				$idn->set_parameter('encoding', 'utf8');				$idn->set_parameter('strict', false);				if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))				{					$user['url'] = $idn->decode($url_source);				}				else				{					$url_source = $idn->encode($url_source);				}			}			if ($forum_config['o_censoring'] == '1')				$user['url'] = censor_words($user['url']);			$url_source = forum_htmlencode($url_source);			$user['url'] = forum_htmlencode($user['url']);			$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';			$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';		}		// Facebook		if ($user['facebook'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['facebook'] = censor_words($user['facebook']);			}			$facebook_url = (strpos($user['facebook'], 'http') === 0) ? forum_htmlencode($user['facebook']) : forum_htmlencode('https://www.facebook.com/'.$user['facebook']);			$forum_page['facebook'] = '<a href="'.$facebook_url.'" class="external url">'.$facebook_url.'</a>';			$forum_page['user_contact']['facebook'] = '<li><span>'.$lang_profile['Facebook'].': '.$forum_page['facebook'].'</span></li>';		}		// Twitter		if ($user['twitter'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['twitter'] = censor_words($user['twitter']);			}			$twitter_url = (strpos($user['twitter'], 'http') === 0) ? forum_htmlencode($user['twitter']) : forum_htmlencode('https://twitter.com/'.$user['twitter']);			$forum_page['twitter'] = '<a href="'.$twitter_url.'" class="external url">'.$twitter_url.'</a>';			$forum_page['user_contact']['twitter'] = '<li><span>'.$lang_profile['Twitter'].': '.$forum_page['twitter'].'</span></li>';		}		// LinkedIn		if ($user['linkedin'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['linkedin'] = censor_words($user['linkedin']);			}			$linkedin_url = forum_htmlencode($user['linkedin']);			$forum_page['linkedin'] = '<a href="'.$linkedin_url.'" class="external url" rel="me">'.$linkedin_url.'</a>';			$forum_page['user_contact']['linkedin'] = '<li><span>'.$lang_profile['LinkedIn'].': '.$forum_page['linkedin'].'</span></li>';		}		if ($forum_user['is_admmod'])			$forum_page['user_private']['ip']= '<li><span>'.$lang_profile['IP'].': <a href="'.forum_link($forum_url['get_host'], forum_htmlencode($user['registration_ip'])).'">'.forum_htmlencode($user['registration_ip']).'</a></span></li>';		// Setup user messaging		if ($user['jabber'] !='')			$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';		if ($user['skype'] !='')			$forum_page['user_contact']['skype'] = '<li><span>'.$lang_profile['Skype'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['skype']) : $user['skype']).'</strong></span></li>';		if ($user['icq'] !='')			$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong>'.forum_htmlencode($user['icq']).'</strong></span></li>';		if ($user['msn'] !='')			$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';		if ($user['aim'] !='')			$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';		if ($user['yahoo'] !='')			$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';		// Setup signature demo		if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))			$forum_page['sig_demo'] = $parsed_signature;		// Setup search links		$forum_page['user_activity'] = array();		if ($forum_user['g_search'] == '1' || $forum_user['is_admmod'])		{			$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your posts'] : sprintf($lang_profile['View user posts'], forum_htmlencode($user['username']))).'</a></li>';			$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your topics'] : sprintf($lang_profile['View user topics'], forum_htmlencode($user['username']))).'</a></li>';		}		if (($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN) && $forum_config['o_subscriptions'] == '1')			 $forum_page['user_activity']['search_subs'] = '<li'.(empty($forum_page['user_activity']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_subscriptions'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your subscriptions'] : sprintf($lang_profile['View user subscriptions'], forum_htmlencode($user['username']))).'</a></li>';		// Setup user options		$forum_page['user_options'] = array();		if ($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_change_passwords'] == '1'))			$forum_page['user_options']['change_password'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_password'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username']))).'</a></span>';		if (!$forum_user['is_admmod'])			$forum_page['user_options']['change_email'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_email'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your e-mail'] : sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username']))).'</a></span>';		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		($hook = get_hook('pf_change_details_about_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-about');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_about_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<p class="content-options options"><?php echo implode(' ', $forum_page['user_options']) ?></p><?php ($hook = get_hook('pf_change_details_about_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_change_details_about_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_activity_info')) ? eval($hook) : null; ?><?php endif; if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_sig_info')) ? eval($hook) : null; ?><?php endif; if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h4>					<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>				</div>			</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_about_pre_user_private_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_private'])): ?>			<div id="private-profile" class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Private info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_private'])."\n" ?>					</ul>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_change_details_about_user_info_end')) ? eval($hook) : null; ?>	</div><?php		($hook = get_hook('pf_change_details_about_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'identity')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section identity'],forum_link($forum_url['profile_identity'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_identity'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1'))			$forum_page['hidden_fields']['old_username'] = '<input type="hidden" name="old_username" value="'.forum_htmlencode($user['username']).'" />';		// Does the form have required fields		$forum_page['has_required'] = ((($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')) || $forum_user['is_admmod']) ? true : false);		($hook = get_hook('pf_change_details_identity_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-identity');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_identity_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Identity welcome'] : $lang_profile['Identity welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();			foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_details_identity_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}if ($forum_page['has_required']): ?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div><?php endif; ?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php if ($forum_page['has_required']): ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_username')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Username'] ?></span> <small><?php echo $lang_profile['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo(isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : forum_htmlencode($user['username'])) ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_email')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['E-mail'] ?></span> <small><?php echo $lang_profile['E-mail help'] ?></small></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_email" value="<?php echo(isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : forum_htmlencode($user['email'])) ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_req_info_fieldset_end')) ? eval($hook) : null; ?><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Personal legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_realname')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Realname'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[realname]" value="<?php echo(isset($form['realname']) ? forum_htmlencode($form['realname']) : forum_htmlencode($user['realname'])) ?>" size="35" maxlength="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_title')) ? eval($hook) : null; ?><?php if ($forum_user['g_set_title'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Title'] ?></span><small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="title" value="<?php echo(isset($_POST['title']) ? forum_htmlencode($_POST['title']) : forum_htmlencode($user['title'])) ?>" size="35" maxlength="50" /></span><br />					</div>				</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_identity_pre_location')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Location'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[location]" value="<?php echo((isset($form['location']) ? forum_htmlencode($form['location']) : forum_htmlencode($user['location']))) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_admin_note')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Admin note'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="admin_note" value="<?php echo(isset($_POST['admin_note']) ? forum_htmlencode($_POST['admin_note']) : forum_htmlencode($user['admin_note'])) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_num_posts')) ? eval($hook) : null; ?><?php if ($forum_user['g_id'] == FORUM_ADMIN): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Edit count'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="num_posts" value="<?php echo $user['num_posts'] ?>" size="8" maxlength="8" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_personal_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Website'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[url]" value="<?php echo(isset($form['url']) ? forum_htmlencode($form['url']) : forum_htmlencode($user['url'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_facebook')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Facebook'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[facebook]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['facebook']) ? forum_htmlencode($form['facebook']) : forum_htmlencode($user['facebook'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_twitter')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Twitter'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[twitter]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['twitter']) ? forum_htmlencode($form['twitter']) : forum_htmlencode($user['twitter'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_linkedin')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['LinkedIn'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[linkedin]" value="<?php echo(isset($form['linkedin']) ? forum_htmlencode($form['linkedin']) : forum_htmlencode($user['linkedin'])) ?>" size="35" maxlength="80" /></span>					</div>				</div>			</fieldset>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact messengers legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_jabber')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Jabber'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="form[jabber]" value="<?php echo(isset($form['jabber']) ? forum_htmlencode($form['jabber']) : forum_htmlencode($user['jabber'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_skype')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Skype'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[skype]" value="<?php echo(isset($form['skype']) ? forum_htmlencode($form['skype']) : forum_htmlencode($user['skype'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_msn')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['MSN'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[msn]" value="<?php echo(isset($form['msn']) ? forum_htmlencode($form['msn']) : forum_htmlencode($user['msn'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_icq')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['ICQ'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[icq]" value="<?php echo(isset($form['icq']) ? forum_htmlencode($form['icq']) : $user['icq']) ?>" size="20" maxlength="12" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_aim')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['AOL IM'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[aim]" value="<?php echo(isset($form['aim']) ? forum_htmlencode($form['aim']) : forum_htmlencode($user['aim'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_yahoo')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Yahoo'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[yahoo]" value="<?php echo(isset($form['yahoo']) ? forum_htmlencode($form['yahoo']) : forum_htmlencode($user['yahoo'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_contact_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_contact_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_identity_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'settings')	{		$forum_page['styles'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'style');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'style/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'style/'.$forum_page['entry'].'/'.$forum_page['entry'].'.php'))				$forum_page['styles'][] = $forum_page['entry'];		}		$forum_page['d']->close();		$forum_page['languages'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'lang');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'lang/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'lang/'.$forum_page['entry'].'/common.php'))				$forum_page['languages'][] = $forum_page['entry'];		}		$forum_page['d']->close();		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section settings'],forum_link($forum_url['profile_settings'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_settings'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		($hook = get_hook('pf_change_details_settings_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-settings');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_settings_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Settings welcome'] : $lang_profile['Settings welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Local settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_language')) ? eval($hook) : null;		// Only display the language selection box if there's more than one language available		if (count($forum_page['languages']) > 1)		{			natcasesort($forum_page['languages']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Language'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[language]"><?php			foreach ($forum_page['languages'] as $temp)			{				if ($forum_user['language'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_timezone')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Timezone'] ?></span> <small><?php echo $lang_profile['Timezone info'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[timezone]">						<option value="-12"<?php if ($user['timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-12:00'] ?></option>						<option value="-11"<?php if ($user['timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-11:00'] ?></option>						<option value="-10"<?php if ($user['timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-10:00'] ?></option>						<option value="-9.5"<?php if ($user['timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:30'] ?></option>						<option value="-9"<?php if ($user['timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:00'] ?></option>						<option value="-8"<?php if ($user['timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-08:00'] ?></option>						<option value="-7"<?php if ($user['timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-07:00'] ?></option>						<option value="-6"<?php if ($user['timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-06:00'] ?></option>						<option value="-5"<?php if ($user['timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-05:00'] ?></option>						<option value="-4"<?php if ($user['timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-04:00'] ?></option>						<option value="-3.5"<?php if ($user['timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:30'] ?></option>						<option value="-3"<?php if ($user['timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:00'] ?></option>						<option value="-2"<?php if ($user['timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-02:00'] ?></option>						<option value="-1"<?php if ($user['timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-01:00'] ?></option>						<option value="0"<?php if ($user['timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC'] ?></option>						<option value="1"<?php if ($user['timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+01:00'] ?></option>						<option value="2"<?php if ($user['timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+02:00'] ?></option>						<option value="3"<?php if ($user['timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:00'] ?></option>						<option value="3.5"<?php if ($user['timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:30'] ?></option>						<option value="4"<?php if ($user['timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:00'] ?></option>						<option value="4.5"<?php if ($user['timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:30'] ?></option>						<option value="5"<?php if ($user['timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:00'] ?></option>						<option value="5.5"<?php if ($user['timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:30'] ?></option>						<option value="5.75"<?php if ($user['timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:45'] ?></option>						<option value="6"<?php if ($user['timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:00'] ?></option>						<option value="6.5"<?php if ($user['timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:30'] ?></option>						<option value="7"<?php if ($user['timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+07:00'] ?></option>						<option value="8"<?php if ($user['timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:00'] ?></option>						<option value="8.75"<?php if ($user['timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:45'] ?></option>						<option value="9"<?php if ($user['timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:00'] ?></option>						<option value="9.5"<?php if ($user['timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:30'] ?></option>						<option value="10"<?php if ($user['timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:00'] ?></option>						<option value="10.5"<?php if ($user['timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:30'] ?></option>						<option value="11"<?php if ($user['timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:00'] ?></option>						<option value="11.5"<?php if ($user['timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:30'] ?></option>						<option value="12"<?php if ($user['timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:00'] ?></option>						<option value="12.75"<?php if ($user['timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:45'] ?></option>						<option value="13"<?php if ($user['timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+13:00'] ?></option>						<option value="14"<?php if ($user['timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+14:00'] ?></option>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_dst_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[dst]" value="1" <?php if ($user['dst'] == 1) echo 'checked="checked" ' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['DST label'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_time_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Time format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[time_format]"><?php		foreach (array_unique($forum_time_formats) as $key => $time_format)		{			echo "\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['time_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 2, null, $time_format);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_date_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="legend"><?php echo $lang_profile['Date format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[date_format]"><?php		foreach (array_unique($forum_date_formats) as $key => $date_format)		{			echo "\t\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['date_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 1, $date_format, null, true);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_local_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Display settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_style')) ? eval($hook) : null;		// Only display the style selection box if there's more than one style available		if (count($forum_page['styles']) == 1)			echo "\t\t\t\t".'<input type="hidden" name="form[style]" value="'.$forum_page['styles'][0].'" />'."\n";		else if (count($forum_page['styles']) > 1)		{			natcasesort($forum_page['styles']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Styles'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[style]"><?php			foreach ($forum_page['styles'] as $temp)			{				if ($user['style'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Image display'] ?></span></legend>					<div class="mf-box"><?php if ($forum_config['o_smilies'] == '1' || $forum_config['o_smilies_sig'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_smilies]" value="1"<?php if ($user['show_smilies'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show smilies'] ?></label>						</div><?php endif; if ($forum_config['o_avatars'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_avatars]" value="1"<?php if ($user['show_avatars'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show avatars'] ?></label>						</div><?php endif; if ($forum_config['p_message_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img]" value="1"<?php if ($user['show_img'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images'] ?></label>						</div><?php endif; if ($forum_config['o_signatures'] == '1' && $forum_config['p_sig_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img_sig]" value="1"<?php if ($user['show_img_sig'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images sigs'] ?></label>						</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_new_image_display_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_pre_show_sigs_checkbox')) ? eval($hook) : null; ?><?php if ($forum_config['o_signatures'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_sig]" value="1"<?php if ($user['show_sig'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Signature display'] ?></span> <?php echo $lang_profile['Show sigs'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_display_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Pagination settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_disp_topics')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Topics per page'] ?></span> <small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_topics]" value="<?php echo $user['disp_topics'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_disp_posts')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Posts per page'] ?></span>	<small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_posts]" value="<?php echo $user['disp_posts'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_pagination_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['E-mail and sub settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['E-mail settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="0"<?php if ($user['email_setting'] == '0') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 1'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="1"<?php if ($user['email_setting'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 2'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="2"<?php if ($user['email_setting'] == '2') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 3'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_email_setting_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_email_settings_fieldset_end')) ? eval($hook) : null; ?><?php if ($forum_config['o_subscriptions'] == '1'): ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Subscription settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[notify_with_post]" value="1"<?php if ($user['notify_with_post'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Notify full'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[auto_notify]" value="1"<?php if ($user['auto_notify'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Subscribe by default'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_subscription_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_subscription_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_subscription_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_email_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_settings_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'signature' && $forum_config['o_signatures'] == '1')	{		$forum_page['sig_info'][] = '<li>'.$lang_profile['Signature info'].'</li>';		if ($user['signature'] != '')			$forum_page['sig_demo'] = $parsed_signature;		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section signature'], forum_link($forum_url['profile_signature'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_signature'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup help		$forum_page['text_options'] = array();		if ($forum_config['p_sig_bbcode'] == '1')			$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';		if ($forum_config['p_sig_img_tag'] == '1')			$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';		if ($forum_config['o_smilies_sig'] == '1')			$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';		($hook = get_hook('pf_change_details_signature_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-signature');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_signature_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Sig welcome'] : $lang_profile['Sig welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		if (!empty($forum_page['text_options']))			echo "\t\t".'<p class="content-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_signature_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Signature'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_signature_pre_signature_demo')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="ct-legend hn"><?php echo $lang_profile['Current signature'] ?></h3>						<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_signature_pre_signature_text')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Compose signature'] ?></span> <small><?php printf($lang_profile['Sig max size'], forum_number_format($forum_config['p_sig_length']), forum_number_format($forum_config['p_sig_lines'])) ?></small></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="signature" rows="4" cols="65"><?php echo(isset($_POST['signature']) ? forum_htmlencode($_POST['signature']) : forum_htmlencode($user['signature'])) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_signature_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_signature_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'avatar' && $forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section avatar'],forum_link($forum_url['profile_avatar'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_avatar'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'max_file_size'	=> '<input type="hidden" name="MAX_FILE_SIZE" value="'.$forum_config['o_avatars_size'].'" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup form information		$forum_page['frm_info'] = array();		if (!empty($forum_page['avatar_markup']))		{			$forum_page['frm_info']['avatar_replace'] = '<li><span>'.$lang_profile['Avatar info replace'].'</span></li>';			$forum_page['frm_info']['avatar_type'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';			$forum_page['avatar_demo'] = $forum_page['avatar_markup'];		}		else		{			$forum_page['frm_info']['avatar_none'] = '<li><span>'.$lang_profile['Avatar info none'].'</span></li>';			$forum_page['frm_info']['avatar_info'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';		}		($hook = get_hook('pf_change_details_avatar_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-avatar');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_avatar_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Avatar welcome'] : $lang_profile['Avatar welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_avatar_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" enctype="multipart/form-data">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset')) ? eval($hook) : null; ?>			<div class="ct-box info-box">				<ul class="info-list">					<?php echo implode("\n\t\t\t\t\t", $forum_page['frm_info'])."\n" ?>				</ul>			</div>			<div id="req-msg" class="req-warn ct-box info-box">    			<p class="important"><?php echo $lang_profile['No upload warn'] ?></p>   			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Avatar'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_avatar_pre_cur_avatar_info')) ? eval($hook) : null; ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="hn ct-legend"><?php echo $lang_profile['Current avatar'] ?></h3><?php if (isset($forum_page['avatar_demo'])): ?>						<p class="avatar-demo"><span><?php echo $forum_page['avatar_demo'] ?></span></p><?php endif; ?>						<p><?php echo (isset($forum_page['avatar_demo'])) ? '<a href="'.forum_link($forum_url['delete_avatar'], array($id, generate_form_token('delete_avatar'.$id.$forum_user['id']))).'"><strong>'.$lang_profile['Delete avatar info'].'</strong></a>' : $lang_profile['No avatar info'] ?></p>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_avatar_upload')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Upload avatar file'] ?></span><small><?php echo $lang_profile['Avatar upload help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" name="req_file" type="file" size="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_avatar_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_avatar_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'admin')	{		if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0' || $forum_user['id'] == $id))			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section admin'],forum_link($forum_url['profile_admin'], $id))		);		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_admin'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup ban and delete options		$forum_page['user_management'] = array();		if ($forum_user['g_moderator'] == '1')			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		else if ($forum_user['g_moderator'] != '1' && $user['g_id'] != FORUM_ADMIN )		{			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';			$forum_page['user_management']['delete'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Delete user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['delete_user'], $id).'">'.$lang_profile['Delete user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		}		($hook = get_hook('pf_change_details_admin_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-admin');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_admin_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_profile['User management'] ?></span></h2>	</div>	<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">		<div class="hidden">			<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>		</div>		<div class="main-content main-frm">			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php		($hook = get_hook('pf_change_details_admin_pre_user_management')) ? eval($hook) : null;		if (!empty($forum_page['user_management']))		{			echo "\t\t\t".implode("\n\t\t\t", $forum_page['user_management'])."\n";			($hook = get_hook('pf_change_details_admin_pre_membership')) ? eval($hook) : null;			if ($forum_user['g_moderator'] != '1' && !$forum_page['own_profile'])			{				($hook = get_hook('pf_change_details_admin_pre_group_membership')) ? eval($hook) : null;?>			<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box select">					<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['User group'] ?></span></label><br />					<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="group_id"><?php				$query = array(					'SELECT'	=> 'g.g_id, g.g_title',					'FROM'		=> 'groups AS g',					'WHERE'		=> 'g.g_id!='.FORUM_GUEST,					'ORDER BY'	=> 'g.g_title'				);				($hook = get_hook('pf_change_details_admin_qr_get_groups')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_group = $forum_db->fetch_assoc($result))				{					if ($cur_group['g_id'] == $user['g_id'] || ($cur_group['g_id'] == $forum_config['o_default_user_group'] && $user['g_id'] == ''))						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";					else						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";				}?>					</select></span>				</div>			</div><?php ($hook = get_hook('pf_change_details_admin_pre_group_membership_submit')) ? eval($hook) : null; ?>			<div class="sf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box text">	 				<span class="submit"><input type="submit" name="update_group_membership" value="<?php echo $lang_profile['Update groups'] ?>" /></span>	 			</div>			</div><?php			}		}		($hook = get_hook('pf_change_details_admin_pre_mod_assignment')) ? eval($hook) : null;		if ($forum_user['g_id'] == FORUM_ADMIN && ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		{			($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset')) ? eval($hook) : null;?>			<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">				<legend><span><?php echo $lang_profile['Moderator assignment'] ?></span></legend><?php ($hook = get_hook('pf_change_details_admin_pre_forum_checklist')) ? eval($hook) : null; ?>				<div class="mf-box">					<div class="checklist"><?php			$query = array(				'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.moderators',				'FROM'		=> 'categories AS c',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'c.id=f.cat_id'					)				),				'WHERE'		=> 'f.redirect_url IS NULL',				'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'			);			($hook = get_hook('pf_change_details_admin_qr_get_cats_and_forums')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$cur_category = 0;			while ($cur_forum = $forum_db->fetch_assoc($result))			{				($hook = get_hook('pf_change_details_admin_forum_loop_start')) ? eval($hook) : null;				if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?				{					if ($cur_category)						echo "\n\t\t\t\t\t".'</fieldset>'."\n";					echo "\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t".'<legend><span>'.$cur_forum['cat_name'].':</span></legend>'."\n";					$cur_category = $cur_forum['cid'];				}				$moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				echo "\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="moderator_in['.$cur_forum['fid'].']" value="1"'.((in_array($id, $moderators)) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";			}?>						</fieldset>					</div>				</div><?php ($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_admin_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			<div class="mf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="mf-box text">					<span class="submit"><input type="submit" name="update_forums" value="<?php echo $lang_profile['Update forums'] ?>" /></span>				</div>			</div><?php			($hook = get_hook('pf_change_details_admin_form_end')) ? eval($hook) : null;		}?>		</div>		<div class="frm-buttons">			<span class="submit"><?php echo $lang_profile['Instructions'] ?></span>		</div>	</div>	</form><?php		($hook = get_hook('pf_change_details_admin_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	($hook = get_hook('pf_change_details_new_section')) ? eval($hook) : null;	message($lang_common['Bad request']);}
<?php/** * Allows users to search the forum based on various criteria. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('se_start')) ? eval($hook) : null;// Load the search.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/search.php';// Load the necessary search functionsrequire FORUM_ROOT.'include/search_functions.php';if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);else if ($forum_user['g_search'] == '0')	message($lang_search['No search permission']);// If a search_id was suppliedif (isset($_GET['search_id'])){	$search_id = intval($_GET['search_id']);	if ($search_id < 1)		message($lang_common['Bad request']);	// Generate the query to grab the cached results	$query = generate_cached_search_query($search_id, $show_as);	$url_type = $forum_url['search_results'];}// We aren't just grabbing a cached searchelse if (isset($_GET['action'])){	$action = $_GET['action'];	// Validate action	if (!validate_search_action($action))		message($lang_common['Bad request']);	// If it's a regular search (keywords and/or author)	if ($action == 'search')	{		$keywords = (isset($_GET['keywords'])) ? forum_trim($_GET['keywords']) : null;		$author = (isset($_GET['author'])) ? forum_trim($_GET['author']) : null;		$sort_dir = (isset($_GET['sort_dir'])) ? (($_GET['sort_dir'] == 'DESC') ? 'DESC' : 'ASC') : 'DESC';		$show_as = (isset($_GET['show_as'])) ? $_GET['show_as'] : 'posts';		$sort_by = (isset($_GET['sort_by'])) ? intval($_GET['sort_by']) : null;		$search_in = (!isset($_GET['search_in']) || $_GET['search_in'] == 'all') ? 0 : (($_GET['search_in'] == 'message') ? 1 : -1);		$forum = (isset($_GET['forum']) && is_array($_GET['forum'])) ? array_map('intval', $_GET['forum']) : array(-1);		if (preg_match('#^[\*%]+$#', $keywords))			$keywords = '';		if (preg_match('#^[\*%]+$#', $author))			$author = '';		if (!$keywords && !$author)			message($lang_search['No terms']);		// Create a cache of the results and redirect the user to the results		create_search_cache($keywords, $author, $search_in, $forum, $show_as, $sort_by, $sort_dir);	}	// Its not a regular search, so its a quicksearch	else	{		$value = null;		// Get any additional variables for quicksearches		if ($action == 'show_user_posts' || $action == 'show_user_topics' || $action == 'show_subscriptions')		{			$value = isset($_GET['user_id']) ? intval($_GET['user_id']) : 0;			if ($value < 2)				message($lang_common['Bad request']);		}		else if ($action == 'show_recent')			$value = (isset($_GET['value'])) ? intval($_GET['value']) : 86400;		else if ($action == 'show_new')			$value = (isset($_GET['forum'])) ? intval($_GET['forum']) : -1;		($hook = get_hook('se_additional_quicksearch_variables')) ? eval($hook) : null;		$search_id = '';		$show_as = 'topics';		// Generate the query for the search		$query = generate_action_search_query($action, $value, $search_id, $url_type, $show_as);	}}($hook = get_hook('se_pre_search_query')) ? eval($hook) : null;// We have the query to get the results, lets get them!if (isset($query)){	// No results?	if (!$query)		no_search_results();	// Work out the settings for pagination	$forum_page['per_page'] = ($show_as == 'posts') ? $forum_user['disp_posts'] : $forum_user['disp_topics'];	// We now have a query that will give us our results in $query, lets get the data!	$num_hits = get_search_results($query, $search_set);	($hook = get_hook('se_post_results_fetched')) ? eval($hook) : null;	// No search results?	if ($num_hits == 0)		no_search_results($action);	//	// Output the search results	//	// Setup breadcrumbs and results header and footer	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$action = (isset($action)) ? $action : null;	generate_search_crumbs($action);	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $url_type, $lang_common['Paging separator'], $search_id).'</p>';	// Get topic/forum tracking data	if (!$forum_user['is_guest'])		$tracked_topics = get_tracked_topics();	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($url_type, $forum_url['page'], $forum_page['num_pages'], $search_id).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] + 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] - 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($url_type, $search_id).'" title="'.$lang_common['Page'].' 1" />';	}	// Setup main heading	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	// Setup main options header	$forum_page['main_title'] = $lang_search['Search options'];	($hook = get_hook('se_results_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', $show_as == 'topics' ? 'searchtopics' : 'searchposts');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('se_results_output_start')) ? eval($hook) : null;	if ($show_as == 'topics')	{		// Load the forum.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';		$forum_page['item_header'] = array();		$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';		$forum_page['item_header']['info']['forum'] = '<strong class="info-forum">'.$lang_forum['Forum'].'</strong>';		$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';		$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';		($hook = get_hook('se_results_topics_pre_item_header_output')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-subhead">		<p class="item-summary forum-noview"><span><?php printf($lang_forum['Search subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div class="main-content main-forum forum-forums"><?php	}	else	{		// Load the topic.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-content main-topic"><?php	}	$forum_page['item_count'] = 0;	if ($show_as == 'posts')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';	}	// Finally, lets loop through the results and output them	foreach ($search_set as $cur_set)	{		($hook = get_hook('se_results_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		if ($forum_config['o_censoring'] == '1')			$cur_set['subject'] = censor_words($cur_set['subject']);		if ($show_as == 'posts')		{			// Generate the result heading			$forum_page['post_ident'] = array();			$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_set['pposter']).'</strong>').'</span>';			$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.format_time($cur_set['pposted']).'</a></span>';			($hook = get_hook('se_results_posts_row_pre_item_ident_merge')) ? eval($hook) : null;			// Generate the topic title			$forum_page['item_subject'] = '<a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic title'] : $lang_topic['Reply title']), forum_htmlencode($cur_set['subject'])).'</a> <small>'.sprintf($lang_topic['Search replies'], forum_number_format($cur_set['num_replies']), '<a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.forum_htmlencode($cur_set['forum_name']).'</a>').'</small>';			// Generate author identification			$forum_page['user_ident'] = ($cur_set['poster_id'] > 1 && $forum_user['g_view_users'] == '1') ? '<strong class="username"><a title="'.sprintf($lang_search['Go to profile'], forum_htmlencode($cur_set['pposter'])).'" href="'.forum_link($forum_url['user'], $cur_set['poster_id']).'">'.forum_htmlencode($cur_set['pposter']).'</a></strong>' : '<strong class="username">'.forum_htmlencode($cur_set['pposter']).'</strong>';			// Generate the post actions links			$forum_page['post_actions'] = array();			$forum_page['post_actions']['forum'] = '<span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$lang_search['Go to forum'].'<span>: '.forum_htmlencode($cur_set['forum_name']).'</span></a></span>';			if ($cur_set['pid'] != $cur_set['first_post_id'])				$forum_page['post_actions']['topic'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.$lang_search['Go to topic'].'<span>: '.forum_htmlencode($cur_set['subject']).'</span></a></span>';			$forum_page['post_actions']['post'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.$lang_search['Go to post'].'<span> '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span></a></span>';			$forum_page['message'] = parse_message($cur_set['message'], $cur_set['hide_smilies']);			// Give the post some class			$forum_page['item_status'] = array(				'post',				(($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even' )			);			if ($forum_page['item_count'] == 1)				$forum_page['item_status']['firstpost'] = 'firstpost';			if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])				$forum_page['item_status']['lastpost'] = 'lastpost';			if ($cur_set['pid'] == $cur_set['first_post_id'])				$forum_page['item_status']['topicpost'] = 'topicpost';			($hook = get_hook('se_results_posts_row_pre_display')) ? eval($hook) : null;?>	<div class="<?php echo implode(' ', $forum_page['item_status']) ?> resultpost">		<div class="posthead">			<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3>			<h4 class="hn post-title"><span><?php echo $forum_page['item_subject'] ?></span></h4>		</div>		<div class="postbody">			<div class="post-entry">				<div class="entry-content">					<?php echo $forum_page['message'] ?>				</div><?php ($hook = get_hook('se_results_posts_row_new_post_entry_data')) ? eval($hook) : null; ?>			</div>		</div>		<div class="postfoot">			<div class="post-options">				<p class="post-actions"><?php echo implode(' ', $forum_page['post_actions']) ?></p>			</div>		</div>	</div><?php		}		else		{			// Start from scratch			$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();			// Assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_set['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_set['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_set['closed'] != '0')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('se_results_topics_row_pre_item_subject_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<a href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.forum_htmlencode($cur_set['subject']).'</a>';			($hook = get_hook('se_results_topics_row_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			$forum_page['item_pages'] = ceil(($cur_set['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_set['tid'], sef_friendly($cur_set['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_set['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_set['tid']]) || $tracked_topics['topics'][$cur_set['tid']] < $cur_set['last_post']) && (!isset($tracked_topics['forums'][$cur_set['forum_id']]) || $tracked_topics['forums'][$cur_set['forum_id']] < $cur_set['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'" title="'.$lang_forum['New posts info'].'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('se_results_topics_row_pre_item_nav_merge')) ? eval($hook) : null;			$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_set['poster'])).'</span>';			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			($hook = get_hook('se_results_topics_row_pre_item_subject_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			($hook = get_hook('se_results_topics_pre_item_status_merge')) ? eval($hook) : null;			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');			$forum_page['item_body']['info']['forum'] = '<li class="info-forum"><span class="label">'.$lang_search['Posted in'].'</span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$cur_set['forum_name'].'</a></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_set['num_replies']).'</strong> <span class="label">'.(($cur_set['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_set['last_post_id']).'">'.format_time($cur_set['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_set['last_poster'])).'</cite></li>';			($hook = get_hook('se_results_topics_row_pre_display')) ? eval($hook) : null;?>		<div class="main-item<?php echo $forum_page['item_style'] ?>">			<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>			<div class="item-subject">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>			</div>			<ul class="item-info">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>			</ul>		</div><?php		}	}?>	</div>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	($hook = get_hook('se_results_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}//// Display the search form//// Setup form information$forum_page['frm-info'] = array(	'keywords'	=> '<li><span>'.$lang_search['Keywords info'].'</span></li>',	'refine'	=> '<li><span>'.$lang_search['Refine info'].'</span></li>',	'wildcard'	=> '<li><span>'.$lang_search['Wildcard info'].'</span></li>');if ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod'])	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum default info'].'</span></li>';else	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum require info'].'</span></li>';// Setup sort by options$forum_page['frm-sort'] = array(	'post_time'		=> '<option value="0">'.$lang_search['Sort by post time'].'</option>',	'author'		=> '<option value="1">'.$lang_search['Sort by author'].'</option>',	'subject'		=> '<option value="2">'.$lang_search['Sort by subject'].'</option>',	'forum_name'	=> '<option value="3">'.$lang_search['Sort by forum'].'</option>');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_common['Search'], forum_link($forum_url['search'])));$advanced_search = isset($_GET['advanced']) ? true : false;// Show link for advanced formif (!$advanced_search){	$forum_page['main_head_options']['advanced_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_advanced']).'">'.$lang_search['Advanced search'].'</a></span>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;($hook = get_hook('se_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'search');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('se_main_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $lang_search['Search heading'] ?></span></h2>	</div>	<div class="main-content main-frm"><?php if ($advanced_search): ?>		<div class="ct-box info-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm-info'])."\n" ?>			</ul>		</div><?php endif; ?>		<form id="afocus" class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['search']) ?>">			<div class="hidden">				<input type="hidden" name="action" value="search" />			</div><?php ($hook = get_hook('se_pre_criteria_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Search legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_keywords')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Keyword search'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="keywords" size="40" maxlength="100" <?php echo ($advanced_search) ? '' : 'required'  ?> /></span>					</div>				</div><?php ($hook = get_hook('se_pre_author')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Author search'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="author" size="40" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('se_pre_search_in')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Search in'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="search_in">							<option value="all"><?php echo $lang_search['Message and subject'] ?></option>							<option value="message"><?php echo $lang_search['Message only'] ?></option>							<option value="topic"><?php echo $lang_search['Topic only'] ?></option>						</select></span>					</div>				</div><?php endif; if ((!$advanced_search && ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod'])) || $advanced_search): ?><?php ($hook = get_hook('se_pre_forum_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Forum search'] ?> <em><?php echo ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod']) ? $lang_search['Forum search default'] : $lang_search['Forum search require'] ?></em></span></legend><?php ($hook = get_hook('se_pre_forum_checklist')) ? eval($hook) : null; ?>					<div class="mf-box">						<div class="checklist"><?php// Get the list of categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL',	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('se_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	$cur_category = 0;	foreach ($forums as $cur_forum)	{		($hook = get_hook('se_forum_loop_start')) ? eval($hook) : null;		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";			echo "\t\t\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t\t\t".'<legend><span>'.forum_htmlencode($cur_forum['cat_name']).':</span></legend>'."\n";			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'"  name="forum[]" value="'.$cur_forum['fid'].'" /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";	}	echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";}?>						</div>					</div><?php ($hook = get_hook('se_pre_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php endif; ?><?php ($hook = get_hook('se_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('se_criteria_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('se_pre_results_fieldset')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Results legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Sort by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['frm-sort'])."\n" ?>						</select></span>					</div>				</div><?php ($hook = get_hook('se_pre_sort_order_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Sort order'] ?></span></legend><?php ($hook = get_hook('se_pre_sort_order')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="ASC" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Ascending'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="DESC" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Descending'] ?></label>						</div>					</div><?php ($hook = get_hook('se_pre_sort_order_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_display_choices_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Display results'] ?></span></legend><?php ($hook = get_hook('se_pre_display_choices')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="topics" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as topics'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="posts" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as posts'] ?></label>						</div><?php ($hook = get_hook('se_new_display_choices')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('se_pre_display_choices_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_results_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php endif; ($hook = get_hook('se_results_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="search" value="<?php echo $lang_search['Submit search'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('se_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
