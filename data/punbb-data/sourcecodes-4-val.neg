<?php/** * Allows users to search the forum based on various criteria. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('se_start')) ? eval($hook) : null;// Load the search.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/search.php';// Load the necessary search functionsrequire FORUM_ROOT.'include/search_functions.php';if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);else if ($forum_user['g_search'] == '0')	message($lang_search['No search permission']);// If a search_id was suppliedif (isset($_GET['search_id'])){	$search_id = intval($_GET['search_id']);	if ($search_id < 1)		message($lang_common['Bad request']);	// Generate the query to grab the cached results	$query = generate_cached_search_query($search_id, $show_as);	$url_type = $forum_url['search_results'];}// We aren't just grabbing a cached searchelse if (isset($_GET['action'])){	$action = $_GET['action'];	// Validate action	if (!validate_search_action($action))		message($lang_common['Bad request']);	// If it's a regular search (keywords and/or author)	if ($action == 'search')	{		$keywords = (isset($_GET['keywords'])) ? forum_trim($_GET['keywords']) : null;		$author = (isset($_GET['author'])) ? forum_trim($_GET['author']) : null;		$sort_dir = (isset($_GET['sort_dir'])) ? (($_GET['sort_dir'] == 'DESC') ? 'DESC' : 'ASC') : 'DESC';		$show_as = (isset($_GET['show_as'])) ? $_GET['show_as'] : 'posts';		$sort_by = (isset($_GET['sort_by'])) ? intval($_GET['sort_by']) : null;		$search_in = (!isset($_GET['search_in']) || $_GET['search_in'] == 'all') ? 0 : (($_GET['search_in'] == 'message') ? 1 : -1);		$forum = (isset($_GET['forum']) && is_array($_GET['forum'])) ? array_map('intval', $_GET['forum']) : array(-1);		if (preg_match('#^[\*%]+$#', $keywords))			$keywords = '';		if (preg_match('#^[\*%]+$#', $author))			$author = '';		if (!$keywords && !$author)			message($lang_search['No terms']);		// Create a cache of the results and redirect the user to the results		create_search_cache($keywords, $author, $search_in, $forum, $show_as, $sort_by, $sort_dir);	}	// Its not a regular search, so its a quicksearch	else	{		$value = null;		// Get any additional variables for quicksearches		if ($action == 'show_user_posts' || $action == 'show_user_topics' || $action == 'show_subscriptions')		{			$value = isset($_GET['user_id']) ? intval($_GET['user_id']) : 0;			if ($value < 2)				message($lang_common['Bad request']);		}		else if ($action == 'show_recent')			$value = (isset($_GET['value'])) ? intval($_GET['value']) : 86400;		else if ($action == 'show_new')			$value = (isset($_GET['forum'])) ? intval($_GET['forum']) : -1;		($hook = get_hook('se_additional_quicksearch_variables')) ? eval($hook) : null;		$search_id = '';		$show_as = 'topics';		// Generate the query for the search		$query = generate_action_search_query($action, $value, $search_id, $url_type, $show_as);	}}($hook = get_hook('se_pre_search_query')) ? eval($hook) : null;// We have the query to get the results, lets get them!if (isset($query)){	// No results?	if (!$query)		no_search_results();	// Work out the settings for pagination	$forum_page['per_page'] = ($show_as == 'posts') ? $forum_user['disp_posts'] : $forum_user['disp_topics'];	// We now have a query that will give us our results in $query, lets get the data!	$num_hits = get_search_results($query, $search_set);	($hook = get_hook('se_post_results_fetched')) ? eval($hook) : null;	// No search results?	if ($num_hits == 0)		no_search_results($action);	//	// Output the search results	//	// Setup breadcrumbs and results header and footer	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$action = (isset($action)) ? $action : null;	generate_search_crumbs($action);	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $url_type, $lang_common['Paging separator'], $search_id).'</p>';	// Get topic/forum tracking data	if (!$forum_user['is_guest'])		$tracked_topics = get_tracked_topics();	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($url_type, $forum_url['page'], $forum_page['num_pages'], $search_id).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] + 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] - 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($url_type, $search_id).'" title="'.$lang_common['Page'].' 1" />';	}	// Setup main heading	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	// Setup main options header	$forum_page['main_title'] = $lang_search['Search options'];	($hook = get_hook('se_results_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', $show_as == 'topics' ? 'searchtopics' : 'searchposts');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('se_results_output_start')) ? eval($hook) : null;	if ($show_as == 'topics')	{		// Load the forum.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';		$forum_page['item_header'] = array();		$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';		$forum_page['item_header']['info']['forum'] = '<strong class="info-forum">'.$lang_forum['Forum'].'</strong>';		$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';		$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';		($hook = get_hook('se_results_topics_pre_item_header_output')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-subhead">		<p class="item-summary forum-noview"><span><?php printf($lang_forum['Search subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div class="main-content main-forum forum-forums"><?php	}	else	{		// Load the topic.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-content main-topic"><?php	}	$forum_page['item_count'] = 0;	if ($show_as == 'posts')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';	}	// Finally, lets loop through the results and output them	foreach ($search_set as $cur_set)	{		($hook = get_hook('se_results_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		if ($forum_config['o_censoring'] == '1')			$cur_set['subject'] = censor_words($cur_set['subject']);		if ($show_as == 'posts')		{			// Generate the result heading			$forum_page['post_ident'] = array();			$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_set['pposter']).'</strong>').'</span>';			$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.format_time($cur_set['pposted']).'</a></span>';			($hook = get_hook('se_results_posts_row_pre_item_ident_merge')) ? eval($hook) : null;			// Generate the topic title			$forum_page['item_subject'] = '<a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic title'] : $lang_topic['Reply title']), forum_htmlencode($cur_set['subject'])).'</a> <small>'.sprintf($lang_topic['Search replies'], forum_number_format($cur_set['num_replies']), '<a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.forum_htmlencode($cur_set['forum_name']).'</a>').'</small>';			// Generate author identification			$forum_page['user_ident'] = ($cur_set['poster_id'] > 1 && $forum_user['g_view_users'] == '1') ? '<strong class="username"><a title="'.sprintf($lang_search['Go to profile'], forum_htmlencode($cur_set['pposter'])).'" href="'.forum_link($forum_url['user'], $cur_set['poster_id']).'">'.forum_htmlencode($cur_set['pposter']).'</a></strong>' : '<strong class="username">'.forum_htmlencode($cur_set['pposter']).'</strong>';			// Generate the post actions links			$forum_page['post_actions'] = array();			$forum_page['post_actions']['forum'] = '<span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$lang_search['Go to forum'].'<span>: '.forum_htmlencode($cur_set['forum_name']).'</span></a></span>';			if ($cur_set['pid'] != $cur_set['first_post_id'])				$forum_page['post_actions']['topic'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.$lang_search['Go to topic'].'<span>: '.forum_htmlencode($cur_set['subject']).'</span></a></span>';			$forum_page['post_actions']['post'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.$lang_search['Go to post'].'<span> '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span></a></span>';			$forum_page['message'] = parse_message($cur_set['message'], $cur_set['hide_smilies']);			// Give the post some class			$forum_page['item_status'] = array(				'post',				(($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even' )			);			if ($forum_page['item_count'] == 1)				$forum_page['item_status']['firstpost'] = 'firstpost';			if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])				$forum_page['item_status']['lastpost'] = 'lastpost';			if ($cur_set['pid'] == $cur_set['first_post_id'])				$forum_page['item_status']['topicpost'] = 'topicpost';			($hook = get_hook('se_results_posts_row_pre_display')) ? eval($hook) : null;?>	<div class="<?php echo implode(' ', $forum_page['item_status']) ?> resultpost">		<div class="posthead">			<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3>			<h4 class="hn post-title"><span><?php echo $forum_page['item_subject'] ?></span></h4>		</div>		<div class="postbody">			<div class="post-entry">				<div class="entry-content">					<?php echo $forum_page['message'] ?>				</div><?php ($hook = get_hook('se_results_posts_row_new_post_entry_data')) ? eval($hook) : null; ?>			</div>		</div>		<div class="postfoot">			<div class="post-options">				<p class="post-actions"><?php echo implode(' ', $forum_page['post_actions']) ?></p>			</div>		</div>	</div><?php		}		else		{			// Start from scratch			$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();			// Assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_set['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_set['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_set['closed'] != '0')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('se_results_topics_row_pre_item_subject_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<a href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.forum_htmlencode($cur_set['subject']).'</a>';			($hook = get_hook('se_results_topics_row_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			$forum_page['item_pages'] = ceil(($cur_set['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_set['tid'], sef_friendly($cur_set['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_set['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_set['tid']]) || $tracked_topics['topics'][$cur_set['tid']] < $cur_set['last_post']) && (!isset($tracked_topics['forums'][$cur_set['forum_id']]) || $tracked_topics['forums'][$cur_set['forum_id']] < $cur_set['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'" title="'.$lang_forum['New posts info'].'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('se_results_topics_row_pre_item_nav_merge')) ? eval($hook) : null;			$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_set['poster'])).'</span>';			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			($hook = get_hook('se_results_topics_row_pre_item_subject_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			($hook = get_hook('se_results_topics_pre_item_status_merge')) ? eval($hook) : null;			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');			$forum_page['item_body']['info']['forum'] = '<li class="info-forum"><span class="label">'.$lang_search['Posted in'].'</span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$cur_set['forum_name'].'</a></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_set['num_replies']).'</strong> <span class="label">'.(($cur_set['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_set['last_post_id']).'">'.format_time($cur_set['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_set['last_poster'])).'</cite></li>';			($hook = get_hook('se_results_topics_row_pre_display')) ? eval($hook) : null;?>		<div class="main-item<?php echo $forum_page['item_style'] ?>">			<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>			<div class="item-subject">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>			</div>			<ul class="item-info">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>			</ul>		</div><?php		}	}?>	</div>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	($hook = get_hook('se_results_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}//// Display the search form//// Setup form information$forum_page['frm-info'] = array(	'keywords'	=> '<li><span>'.$lang_search['Keywords info'].'</span></li>',	'refine'	=> '<li><span>'.$lang_search['Refine info'].'</span></li>',	'wildcard'	=> '<li><span>'.$lang_search['Wildcard info'].'</span></li>');if ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod'])	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum default info'].'</span></li>';else	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum require info'].'</span></li>';// Setup sort by options$forum_page['frm-sort'] = array(	'post_time'		=> '<option value="0">'.$lang_search['Sort by post time'].'</option>',	'author'		=> '<option value="1">'.$lang_search['Sort by author'].'</option>',	'subject'		=> '<option value="2">'.$lang_search['Sort by subject'].'</option>',	'forum_name'	=> '<option value="3">'.$lang_search['Sort by forum'].'</option>');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_common['Search'], forum_link($forum_url['search'])));$advanced_search = isset($_GET['advanced']) ? true : false;// Show link for advanced formif (!$advanced_search){	$forum_page['main_head_options']['advanced_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_advanced']).'">'.$lang_search['Advanced search'].'</a></span>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;($hook = get_hook('se_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'search');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('se_main_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $lang_search['Search heading'] ?></span></h2>	</div>	<div class="main-content main-frm"><?php if ($advanced_search): ?>		<div class="ct-box info-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm-info'])."\n" ?>			</ul>		</div><?php endif; ?>		<form id="afocus" class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['search']) ?>">			<div class="hidden">				<input type="hidden" name="action" value="search" />			</div><?php ($hook = get_hook('se_pre_criteria_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Search legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_keywords')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Keyword search'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="keywords" size="40" maxlength="100" <?php echo ($advanced_search) ? '' : 'required'  ?> /></span>					</div>				</div><?php ($hook = get_hook('se_pre_author')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Author search'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="author" size="40" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('se_pre_search_in')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Search in'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="search_in">							<option value="all"><?php echo $lang_search['Message and subject'] ?></option>							<option value="message"><?php echo $lang_search['Message only'] ?></option>							<option value="topic"><?php echo $lang_search['Topic only'] ?></option>						</select></span>					</div>				</div><?php endif; if ((!$advanced_search && ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod'])) || $advanced_search): ?><?php ($hook = get_hook('se_pre_forum_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Forum search'] ?> <em><?php echo ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod']) ? $lang_search['Forum search default'] : $lang_search['Forum search require'] ?></em></span></legend><?php ($hook = get_hook('se_pre_forum_checklist')) ? eval($hook) : null; ?>					<div class="mf-box">						<div class="checklist"><?php// Get the list of categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL',	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('se_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	$cur_category = 0;	foreach ($forums as $cur_forum)	{		($hook = get_hook('se_forum_loop_start')) ? eval($hook) : null;		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";			echo "\t\t\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t\t\t".'<legend><span>'.forum_htmlencode($cur_forum['cat_name']).':</span></legend>'."\n";			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'"  name="forum[]" value="'.$cur_forum['fid'].'" /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";	}	echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";}?>						</div>					</div><?php ($hook = get_hook('se_pre_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php endif; ?><?php ($hook = get_hook('se_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('se_criteria_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('se_pre_results_fieldset')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Results legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Sort by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['frm-sort'])."\n" ?>						</select></span>					</div>				</div><?php ($hook = get_hook('se_pre_sort_order_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Sort order'] ?></span></legend><?php ($hook = get_hook('se_pre_sort_order')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="ASC" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Ascending'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="DESC" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Descending'] ?></label>						</div>					</div><?php ($hook = get_hook('se_pre_sort_order_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_display_choices_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Display results'] ?></span></legend><?php ($hook = get_hook('se_pre_display_choices')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="topics" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as topics'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="posts" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as posts'] ?></label>						</div><?php ($hook = get_hook('se_new_display_choices')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('se_pre_display_choices_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_results_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php endif; ($hook = get_hook('se_results_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="search" value="<?php echo $lang_search['Submit search'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('se_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database.<br/>MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = @mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * Loads various functions used to parse posts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Load the IDNA class for international url handlingrequire FORUM_ROOT.'include/idna/idna_convert.class.php';// Here you can add additional smilies if you like (please note that you must escape singlequote and backslash)$smilies = array(':)' => 'smile.png', '=)' => 'smile.png', ':|' => 'neutral.png', '=|' => 'neutral.png', ':(' => 'sad.png', '=(' => 'sad.png', ':D' => 'big_smile.png', '=D' => 'big_smile.png', ':o' => 'yikes.png', ':O' => 'yikes.png', ';)' => 'wink.png', ':/' => 'hmm.png', ':P' => 'tongue.png', ':p' => 'tongue.png', ':lol:' => 'lol.png', ':mad:' => 'mad.png', ':rolleyes:' => 'roll.png', ':cool:' => 'cool.png');($hook = get_hook('ps_start')) ? eval($hook) : null;//// Make sure all BBCodes are lower case and do a little cleanup//function preparse_bbcode($text, &$errors, $is_signature = false){	global $forum_config;	$return = ($hook = get_hook('ps_preparse_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($is_signature)	{		global $lang_profile;		if (preg_match('#\[quote(=(&quot;|"|\'|)(.*)\\1)?\]|\[/quote\]|\[code\]|\[/code\]|\[list(=([1a\*]))?\]|\[/list\]#i', $text))			$errors[] = $lang_profile['Signature quote/code/list'];	}	if ($forum_config['p_sig_bbcode'] == '1' && $is_signature || $forum_config['p_message_bbcode'] == '1' && !$is_signature)	{		// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)		if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)		{			list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);			$text = implode("\xc1", $outside);		}		// Tidy up lists		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$text = preg_replace($pattern, $replace, $text);		$text = str_replace('*'."\0".']', '*]', $text);		if ($forum_config['o_make_links'] == '1')		{			// Check Unicode support			$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');			$text = do_clickable($text, $unicode);		}		// If we split up the message before we have to concatenate it together again (code tags)		if (isset($inside))		{			$outside = explode("\xc1", $text);			$text = '';			$num_tokens = count($outside);			for ($i = 0; $i < $num_tokens; ++$i)			{				$text .= $outside[$i];				if (isset($inside[$i]))					$text .= '[code]'.$inside[$i].'[/code]';			}		}		$temp_text = false;		if (empty($errors))			$temp_text = preparse_tags($text, $errors, $is_signature);		if ($temp_text !== false)			$text = $temp_text;		// Remove empty tags		while ($new_text = preg_replace('/\[(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]\[\/\1\]/', '', $text))		{			if ($new_text != $text)				$text = $new_text;			else				break;		}	}	$return = ($hook = get_hook('ps_preparse_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return forum_trim($text);}//// Check the structure of bbcode tags and fix simple mistakes where possible//function preparse_tags($text, &$errors, $is_signature = false){	global $lang_common, $forum_config;	// Start off by making some arrays of bbcode tags and what we need to do with each one	// List of all the tags	$tags = array('quote', 'code', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'img', 'list', '*', 'h');	// List of tags that we need to check are open (You could not put b,i,u in here then illegal nesting like [b][i][/b][/i] would be allowed)	$tags_opened = $tags;	// and tags we need to check are closed (the same as above, added it just in case)	$tags_closed = $tags;	// Tags we can nest and the depth they can be nested to (only quotes )	$tags_nested = array('quote' => $forum_config['o_quote_depth'], 'list' => 5, '*' => 5);	// Tags to ignore the contents of completely (just code)	$tags_ignore = array('code');	// Block tags, block tags can only go within another block tag, they cannot be in a normal tag	$tags_block = array('quote', 'code', 'list', 'h', '*');	// Inline tags, we do not allow new lines in these	$tags_inline = array('b', 'i', 'u', 'color', 'colour', 'h');	// Tags we trim interior space	$tags_trim = array('img');	// Tags we remove quotes from the argument	$tags_quotes = array('url', 'email', 'img');	// Tags we limit bbcode in	$tags_limit_bbcode = array(		'*' 	=> array('b', 'i', 'u', 'color', 'colour', 'url', 'email', 'list', 'img'),		'list' 	=> array('*'),		'url' 	=> array('b', 'i', 'u', 'color', 'colour', 'img'),		'email' => array('b', 'i', 'u', 'color', 'colour', 'img'),		'img' 	=> array()	);	// Tags we can automatically fix bad nesting	$tags_fix = array('quote', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'h');	$return = ($hook = get_hook('ps_preparse_tags_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$split_text = preg_split("/(\[[\*a-zA-Z0-9-\/]*?(?:=.*?)?\])/", $text, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);	$open_tags = array('post');	$open_args = array('');	$opened_tag = 0;	$new_text = '';	$current_ignore = '';	$current_nest = '';	$current_depth = array();	$limit_bbcode = $tags;	foreach ($split_text as $current)	{		if ($current == '')			continue;		// Are we dealing with a tag?		if (substr($current, 0, 1) != '[' || substr($current, -1, 1) != ']')		{			// Its not a bbcode tag so we put it on the end and continue			// If we are nested too deeply don't add to the end			if ($current_nest)				continue;			$current = str_replace("\r\n", "\n", $current);			$current = str_replace("\r", "\n", $current);			if (in_array($open_tags[$opened_tag], $tags_inline) && strpos($current, "\n") !== false)			{				// Deal with new lines				$split_current = preg_split("/(\n\n+)/", $current, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);				$current = '';				if (!forum_trim($split_current[0], "\n")) // the first part is a linebreak so we need to handle any open tags first					array_unshift($split_current, '');				for ($i = 1; $i < count($split_current); $i += 2)				{					$temp_opened = array();					$temp_opened_arg = array();					$temp = $split_current[$i - 1];					while (!empty($open_tags))					{						$temp_tag = array_pop($open_tags);						$temp_arg = array_pop($open_args);						if (in_array($temp_tag , $tags_inline))						{							array_push($temp_opened, $temp_tag);							array_push($temp_opened_arg, $temp_arg);							$temp .= '[/'.$temp_tag.']';						}						else						{							array_push($open_tags, $temp_tag);							array_push($open_args, $temp_arg);							break;						}					}					$current .= $temp.$split_current[$i];					$temp = '';					while (!empty($temp_opened))					{						$temp_tag = array_pop($temp_opened);						$temp_arg = array_pop($temp_opened_arg);						if (empty($temp_arg))							$temp .= '['.$temp_tag.']';						else							$temp .= '['.$temp_tag.'='.$temp_arg.']';						array_push($open_tags, $temp_tag);						array_push($open_args, $temp_arg);					}					$current .= $temp;				}				if (array_key_exists($i - 1, $split_current))					$current .= $split_current[$i - 1];			}			if (in_array($open_tags[$opened_tag], $tags_trim))				$new_text .= forum_trim($current);			else				$new_text .= $current;			continue;		}		// Get the name of the tag		$current_arg = '';		if (strpos($current, '/') === 1)		{			$current_tag = substr($current, 2, -1);		}		else if (strpos($current, '=') === false)		{			$current_tag = substr($current, 1, -1);		}		else		{			$current_tag = substr($current, 1, strpos($current, '=')-1);			$current_arg = substr($current, strpos($current, '=')+1, -1);		}		$current_tag = strtolower($current_tag);		// Is the tag defined?		if (!in_array($current_tag, $tags))		{			// Its not a bbcode tag so we put it on the end and continue			if (!$current_nest)				$new_text .= $current;			continue;		}		// We definitely have a bbcode tag.		// Make the tag string lower case		if ($equalpos = strpos($current,'='))		{			// We have an argument for the tag which we don't want to make lowercase			if (strlen(substr($current, $equalpos)) == 2)			{				// Empty tag argument				$errors[] = sprintf($lang_common['BBCode error 6'], $current_tag);				return false;			}			$current = strtolower(substr($current, 0, $equalpos)).substr($current, $equalpos);		}		else			$current = strtolower($current);		//This is if we are currently in a tag which escapes other bbcode such as code		if ($current_ignore)		{			if ('[/'.$current_ignore.']' == $current)			{				// We've finished the ignored section				$current = '[/'.$current_tag.']';				$current_ignore = '';			}			$new_text .= $current;			continue;		}		if ($current_nest)		{			// We are currently too deeply nested so lets see if we are closing the tag or not.			if ($current_tag != $current_nest)				continue;			if (substr($current, 1, 1) == '/')				$current_depth[$current_nest]--;			else				$current_depth[$current_nest]++;			if ($current_depth[$current_nest] <= $tags_nested[$current_nest])				$current_nest = '';			continue;		}		// Check the current tag is allowed here		if (!in_array($current_tag, $limit_bbcode) && $current_tag != $open_tags[$opened_tag])		{			$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);			return false;		}		if (substr($current, 1, 1) == '/')		{			//This is if we are closing a tag			if ($opened_tag == 0 || !in_array($current_tag, $open_tags))			{				//We tried to close a tag which is not open				if (in_array($current_tag, $tags_opened))				{					$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);					return false;				}			}			else			{				// Check nesting				while (true)				{					// Nesting is ok					if ($open_tags[$opened_tag] == $current_tag)					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;						break;					}					// Nesting isn't ok, try to fix it					if (in_array($open_tags[$opened_tag], $tags_closed) && in_array($current_tag, $tags_closed))					{						if (in_array($current_tag, $open_tags))						{							$temp_opened = array();							$temp_opened_arg = array();							$temp = '';							while (!empty($open_tags))							{								$temp_tag = array_pop($open_tags);								$temp_arg = array_pop($open_args);								if (!in_array($temp_tag, $tags_fix))								{									// We couldn't fix nesting									$errors[] = sprintf($lang_common['BBCode error 5'], array_pop($temp_opened));									return false;								}								array_push($temp_opened, $temp_tag);								array_push($temp_opened_arg, $temp_arg);								if ($temp_tag == $current_tag)									break;								else									$temp .= '[/'.$temp_tag.']';							}							$current = $temp.$current;							$temp = '';							array_pop($temp_opened);							array_pop($temp_opened_arg);							while (!empty($temp_opened))							{								$temp_tag = array_pop($temp_opened);								$temp_arg = array_pop($temp_opened_arg);								if (empty($temp_arg))									$temp .= '['.$temp_tag.']';								else									$temp .= '['.$temp_tag.'='.$temp_arg.']';								array_push($open_tags, $temp_tag);								array_push($open_args, $temp_arg);							}							$current .= $temp;							$opened_tag--;							break;						}						else						{							// We couldn't fix nesting							$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);							return false;						}					}					else if (in_array($open_tags[$opened_tag], $tags_closed))						break;					else					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;					}				}			}			if (in_array($current_tag, array_keys($tags_nested)))			{				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]--;			}			if (in_array($open_tags[$opened_tag], array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$open_tags[$opened_tag]];			else				$limit_bbcode = $tags;			$new_text .= $current;			continue;		}		else		{			// We are opening a tag			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			else				$limit_bbcode = $tags;			if (in_array($current_tag, $tags_block) && !in_array($open_tags[$opened_tag], $tags_block) && $opened_tag != 0)			{				// We tried to open a block tag within a non-block tag				$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);				return false;			}			if (in_array($current_tag, $tags_ignore))			{				// Its an ignore tag so we don't need to worry about whats inside it,				$current_ignore = $current_tag;				$new_text .= $current;				continue;			}			// Deal with nested tags			if (in_array($current_tag, $open_tags) && !in_array($current_tag, array_keys($tags_nested)))			{				// We nested a tag we shouldn't				$errors[] = sprintf($lang_common['BBCode error 4'], $current_tag);				return false;			}			else if (in_array($current_tag, array_keys($tags_nested)))			{				// We are allowed to nest this tag				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]++;				else					$current_depth[$current_tag] = 1;				// See if we are nested too deep				if ($current_depth[$current_tag] > $tags_nested[$current_tag])				{					$current_nest = $current_tag;					continue;				}			}			// Remove quotes from arguments for certain tags			if (strpos($current, '=') !== false && in_array($current_tag, $tags_quotes))			{				$current = preg_replace('#\['.$current_tag.'=("|\'|)(.*?)\\1\]\s*#i', '['.$current_tag.'=$2]', $current);			}			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			$open_tags[] = $current_tag;			$open_args[] = $current_arg;			$opened_tag++;			$new_text .= $current;			continue;		}	}	// Check we closed all the tags we needed to	foreach ($tags_closed as $check)	{		if (in_array($check, $open_tags))		{			// We left an important tag open			$errors[] = sprintf($lang_common['BBCode error 5'], $check);			return false;		}	}	if ($current_ignore)	{		// We left an ignore tag open		$errors[] = sprintf($lang_common['BBCode error 5'], $current_ignore);		return false;	}	$return = ($hook = get_hook('ps_preparse_tags_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $new_text;}//// Preparse the contents of [list] bbcode//function preparse_list_tag($content, $type = '*', &$errors){	global $lang_common;	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$content = preg_replace($pattern, $replace, $content);	}	$items = explode('[*]', str_replace('\"', '"', $content));	$content = '';	foreach ($items as $item)	{		if (forum_trim($item) != '')			$content .= '[*'."\0".']'.str_replace('[/*]', '', forum_trim($item)).'[/*'."\0".']'."\n";	}	return '[list='.$type.']'."\n".$content.'[/list]';}//// Split text into chunks ($inside contains all text inside $start and $end, and $outside contains all text outside)//function split_text($text, $start, $end, &$errors, $retab = true){	global $forum_config, $lang_common;	$tokens = explode($start, $text);	$outside[] = $tokens[0];	$num_tokens = count($tokens);	for ($i = 1; $i < $num_tokens; ++$i)	{		$temp = explode($end, $tokens[$i]);		if (count($temp) != 2)		{			$errors[] = $lang_common['BBCode code problem'];			return array(null, array($text));		}		$inside[] = $temp[0];		$outside[] = $temp[1];	}	if ($forum_config['o_indent_num_spaces'] != 8 && $retab)	{		$spaces = str_repeat(' ', $forum_config['o_indent_num_spaces']);		$inside = str_replace("\t", $spaces, $inside);	}	return array($inside, $outside);}//// Truncate URL if longer than 55 characters (add http:// or ftp:// if missing)//function handle_url_tag($url, $link = '', $bbcode = false){	$return = ($hook = get_hook('ps_handle_url_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$full_url = str_replace(array(' ', '\'', '`', '"'), array('%20', '', '', ''), $url);	if (strpos($url, 'www.') === 0)			// If it starts with www, we add http://		$full_url = 'http://'.$full_url;	else if (strpos($url, 'ftp.') === 0)	// Else if it starts with ftp, we add ftp://		$full_url = 'ftp://'.$full_url;	else if (!preg_match('#^([a-z0-9]{3,6})://#', $url)) 	// Else if it doesn't start with abcdef://, we add http://		$full_url = 'http://'.$full_url;	if (defined('FORUM_SUPPORT_PCRE_UNICODE'))	{		$idn = new idna_convert();		$idn->set_parameter('encoding', 'utf8');		$idn->set_parameter('strict', false);		$full_url = $idn->encode($full_url);	}	// Ok, not very pretty :-)	if (!$bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$link_name = ($link == '' || $link == $url) ? $url : $link;			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link_name))			{				$link = $idn->decode($link_name);			}		}		$link = ($link == '' || $link == $url) ? ((utf8_strlen($url) > 55) ? utf8_substr($url, 0 , 39).'  '.utf8_substr($url, -10) : $url) : stripslashes($link);	}	$return = ($hook = get_hook('ps_handle_url_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link))			{				$link = $idn->decode($link);			}		}		if ($full_url == $link)			return '[url]'.$link.'[/url]';		else			return '[url='.$full_url.']'.$link.'[/url]';	}	else		return '<a href="'.$full_url.'">'.$link.'</a>';}//// Turns an URL from the [img] tag into an <img> tag or a <a href...> tag//function handle_img_tag($url, $is_signature = false, $alt = null){	global $lang_common, $forum_user;	$return = ($hook = get_hook('ps_handle_img_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($alt == null)		$alt = $url;	$img_tag = '<a href="'.$url.'">&lt;'.$lang_common['Image link'].'&gt;</a>';	if ($is_signature && $forum_user['show_img_sig'] != '0')		$img_tag = '<img class="sigimage" src="'.$url.'" alt="'.forum_htmlencode($alt).'" />';	else if (!$is_signature && $forum_user['show_img'] != '0')		$img_tag = '<span class="postimg"><img src="'.$url.'" alt="'.forum_htmlencode($alt).'" /></span>';	$return = ($hook = get_hook('ps_handle_img_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $img_tag;}//// Parse the contents of [list] bbcode//function handle_list_tag($content, $type = '*'){	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('handle_list_tag(\'$2\', \'$1\')');		$content = preg_replace($pattern, $replace, $content);	}	$content = preg_replace('#\s*\[\*\](.*?)\[/\*\]\s*#s', '<li><p>$1</p></li>', forum_trim($content));	if ($type == '*')		$content = '<ul>'.$content.'</ul>';	else		if ($type == 'a')			$content = '<ol class="alpha">'.$content.'</ol>';		else			$content = '<ol class="decimal">'.$content.'</ol>';	return '</p>'.$content.'<p>';}//// Convert BBCodes to their HTML equivalent//function do_bbcode($text, $is_signature = false){	global $lang_common, $forum_user, $forum_config;	$return = ($hook = get_hook('ps_do_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strpos($text, '[quote') !== false)	{		$text = preg_replace('#\[quote=(&\#039;|&quot;|"|\'|)(.*?)\\1\]#e', '"</p><div class=\"quotebox\"><cite>".str_replace(array(\'[\', \'\\"\'), array(\'&#91;\', \'"\'), \'$2\')." ".$lang_common[\'wrote\'].":</cite><blockquote><p>"', $text);		$text = preg_replace('#\[quote\]\s*#', '</p><div class="quotebox"><blockquote><p>', $text);		$text = preg_replace('#\s*\[\/quote\]#S', '</p></blockquote></div><p>', $text);	}	if (!$is_signature)	{		$pattern[] = '%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise';		$replace[] = 'handle_list_tag(\'$2\', \'$1\')';	}	$pattern[] = '#\[b\](.*?)\[/b\]#ms';	$pattern[] = '#\[i\](.*?)\[/i\]#ms';	$pattern[] = '#\[u\](.*?)\[/u\]#ms';	$pattern[] = '#\[colou?r=([a-zA-Z]{3,20}|\#[0-9a-fA-F]{6}|\#[0-9a-fA-F]{3})](.*?)\[/colou?r\]#ms';	$pattern[] = '#\[h\](.*?)\[/h\]#ms';	$replace[] = '<strong>$1</strong>';	$replace[] = '<em>$1</em>';	$replace[] = '<span class="bbu">$1</span>';	$replace[] = '<span style="color: $1">$2</span>';	$replace[] = '</p><h5>$1</h5><p>';	if (($is_signature && $forum_config['p_sig_img_tag'] == '1') || (!$is_signature && $forum_config['p_message_img_tag'] == '1'))	{		$pattern[] = '#\[img\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		$pattern[] = '#\[img=([^\[]*?)\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		if ($is_signature)		{			$replace[] = 'handle_img_tag(\'$1$3\', true)';			$replace[] = 'handle_img_tag(\'$2$4\', true, \'$1\')';		}		else		{			$replace[] = 'handle_img_tag(\'$1$3\', false)';			$replace[] = 'handle_img_tag(\'$2$4\', false, \'$1\')';		}	}	$pattern[] = '#\[url\]([^\[]*?)\[/url\]#e';	$pattern[] = '#\[url=([^\[]+?)\](.*?)\[/url\]#e';	$pattern[] = '#\[email\]([^\[]*?)\[/email\]#';	$pattern[] = '#\[email=([^\[]+?)\](.*?)\[/email\]#';	$replace[] = 'handle_url_tag(\'$1\')';	$replace[] = 'handle_url_tag(\'$1\', \'$2\')';	$replace[] = '<a href="mailto:$1">$1</a>';	$replace[] = '<a href="mailto:$1">$2</a>';	$return = ($hook = get_hook('ps_do_bbcode_replace')) ? eval($hook) : null;	if ($return != null)		return $return;	// This thing takes a while! :)	$text = preg_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_do_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Make hyperlinks clickable//function do_clickable($text, $unicode = FALSE){	$text = ' '.$text;	if ($unicode)	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\p{Nd}\p{L}\-]+\.([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	else	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\w\-]+\.([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-]?)?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	return substr($text, 1);}//// Convert a series of smilies to images//function do_smilies($text){	global $forum_config, $base_url, $smilies;	$return = ($hook = get_hook('ps_do_smilies_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$text = ' '.$text.' ';	foreach ($smilies as $smiley_text => $smiley_img)	{		if (strpos($text, $smiley_text) !== false)			$text = preg_replace("#(?<=[>\s])".preg_quote($smiley_text, '#')."(?=\W)#m", '<img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.substr($smiley_img, 0, strrpos($smiley_img, '.')).'" />', $text);	}	$return = ($hook = get_hook('ps_do_smilies_end')) ? eval($hook) : null;	return substr($text, 1, -1);}//// Parse message text//function parse_message($text, $hide_smilies){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_message_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_message_pre_split')) ? eval($hook) : null;	if ($return != null)		return $return;	// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)	if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)	{		list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);		$text = implode("\xc1", $outside);	}	$return = ($hook = get_hook('ps_parse_message_post_split')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_message_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text);	if ($forum_config['o_smilies'] == '1' && $forum_user['show_smilies'] == '1' && $hide_smilies == '0')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_message_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_message_pre_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// If we split up the message before we have to concatenate it together again (code tags)	if (isset($inside))	{		$outside = explode("\xc1", $text);		$text = '';		$num_tokens = count($outside);		for ($i = 0; $i < $num_tokens; ++$i)		{			$text .= $outside[$i];			if (isset($inside[$i]))				$text .= '</p><div class="codebox"><pre><code>'.forum_trim($inside[$i], "\n\r").'</code></pre></div><p>';		}	}	$return = ($hook = get_hook('ps_parse_message_post_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// Add paragraph tag around post, but make sure there are no empty paragraphs	$text = preg_replace('#<br />\s*?<br />((\s*<br />)*)#i', "</p>$1<p>", $text);	$text = str_replace('<p><br />', '<p>', $text);	$text = str_replace('<p></p>', '', '<p>'.$text.'</p>');	$return = ($hook = get_hook('ps_parse_message_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Parse signature text//function parse_signature($text){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_signature_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_signature_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_signature_pre_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_sig_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text, true);	if ($forum_config['o_smilies_sig'] == '1' && $forum_user['show_smilies'] == '1')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_signature_post_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_signature_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}define('FORUM_PARSER_LOADED', 1);
<?php$lang_profile = array(// Navigation and sections'Profile redirect'			=>	'Profile updated.','Instructions'				=>	'You will be redirected back to this page','Update profile'			=>	'Update profile',// Administration stuff'User delete redirect'		=>	'User deleted.','Section admin'				=>	'Administration','Delete user'				=>	'Delete user','Delete warning'			=>	'<strong>Warning!</strong> Once deleted a user and/or their posts cannot be restored.','Delete posts info'			=>	'<strong>Warning!</strong> If you choose not to delete this user\'s posts they can only be deleted manually at a later time.','Delete posts'				=>	'Delete posts','Delete posts label'		=>	'Delete any posts and topics %s has made.','Group membership redirect'	=>	'Group membership updated.','Moderate forums redirect'	=>	'Forum moderator rights updated.','Ban redirect'				=>	'Redirecting','Ban user'					=>	'Ban user','Ban user info'				=>	'Ban this user via the administration console.','Delete user info'			=>	'Permanently delete this user and, optionally, all their posts.','User management'			=>	'User management','Group membership'			=>	'Group membership','User group'				=>	'Assign user to group','Moderator assignment'		=>	'Moderator assignment','Cannot delete admin'		=>	'Administrators cannot be deleted. In order to delete this user, you must first move him/her to a different user group.','Update groups'				=>	'Update user group','Update forums'				=>	'Update moderator assignment',// Avatar stuff'Avatar welcome'			=>	'Set an avatar image to enhance your forum identity','Avatar welcome user'		=>	'Set an avatar image to enhance  %s\'s forum identity','Avatar deleted redirect'	=>	'Avatar deleted.','Avatars disabled'			=>	'The administrator has disabled avatar support.','No file'					=>	'You did not select a file for upload.','Too large ini'				=>	'The selected file was too large to upload. The server didn\'t allow the upload.','Partial upload'			=>	'The selected file was only partially uploaded. Please try again.','No tmp directory'			=>	'PHP was unable to save the uploaded file to a temporary location.','Bad type'					=>	'The file you tried to upload is not of an allowed type. Allowed file types are gif, jpeg and png.','Too large'					=>	'The file you tried to upload is larger than the maximum allowed %s bytes.','Move failed'				=>	'The server was unable to save the uploaded file. Please contact the forum administrator at %s.','Too wide or high'			=>	'The file you tried to upload is wider and/or higher than the maximum allowed %sx%s pixels.','Unknown failure'			=>	'An unknown error occurred. Please try again.','Avatar'					=>	'Avatar','Current avatar'			=>	'Current avatar','No avatar info'			=>	'No avatar is currently uploaded.','Avatar info replace'		=>	'Uploading a new avatar will replace your existing avatar.','Avatar info none'			=>	'To display an avatar you first need to upload one.','Avatar info type'			=>	'The allowed image file types are gif, jpeg and png.','Avatar info size'			=>	'The maximum image size allowed is %sx%s pixels and %s bytes (%s KB).','Delete avatar info'		=>	'Delete avatar to stop displaying any avatar.','Upload avatar file'		=>	'Upload avatar file','Avatar upload help'		=>	'Select file then update your profile to install.','No upload warn'			=>	'<strong>IMPORTANT! </strong> You must choose a file to upload before updating your profile.',// About and Identity sections'Users profile'				=>	'%s\'s profile','Section about'				=>	'Introduction','Profile welcome'			=>	'Welcome to your profile','Profile welcome user'		=>	'Welcome to %s\'s profile','Identity welcome'			=>	'Modify your personal and contact details','Identity welcome user'		=>	'Modify %s\'s personal and contact details','View your posts'			=>	'View all your posts','View your topics'			=>	'View all your topics','View user posts'			=>	'View all %s\'s posts','View user topics'			=>	'View all %s\'s topics','View your subscriptions'	=>	'View all your subscriptions','View user subscriptions'	=>	'View all %s\'s subscriptions','Realname'					=>	'Real name','Location'					=>	'Location','From'						=>	'From','Registered'				=>	'Registered','Website'					=>	'Website','Facebook'					=>	'Facebook','Twitter'					=>	'Twitter','LinkedIn'					=>	'LinkedIn','Skype'						=>	'Skype','IP'						=>	'IP','Note'						=>	'Note','Posts'						=>	'Posts','Last post'					=>	'Last post','Last visit'				=> 	'Last visit','Send forum e-mail'			=>	'Send forum email','Contact info'				=>	'Contact information','Jabber'					=>	'Jabber','ICQ'						=>	'ICQ','MSN'						=>	'MSN Messenger','AOL IM'					=>	'AOL IM','Forbidden title'			=>	'The title you entered contains a forbidden word. You must choose a different title.','Bad ICQ'					=>	'You entered an invalid ICQ UIN.','Yahoo'						=>	'Yahoo! Messenger','Posts and topics'			=>	'Posts and topics','Private info'				=>	'Private information','Current signature'			=>	'Current signature','Section identity'			=>	'Identity','Section settings'			=>	'Settings','Section avatar'			=>	'Avatar','Section signature'			=>	'Signature','Signature info'			=>	'Your signature will appear at the foot of your posts. It can contain almost anything such as your favourite quote or star sign. It\'s up to you!','Personal legend'			=>	'Personal details','Title'						=>	'Title','Leave blank'				=>	'Leave blank to use forum default.','Edit count'				=>	'Edit post count','Admin note'				=>	'Admin note','Contact legend'			=>	'Contact details','Contact messengers legend'	=>	'Contact messengers details','Name or Url'				=>	'Enter the url or username',// Settings section'Local settings'			=>	'Local settings','Settings welcome'			=>	'Modify your localization, display and email settings','Settings welcome user'		=>	'Modify %s\'s localization, display and email settings','Timezone info'				=>	'Must be set for correct time display.','Time format'				=>  'Time format','Default'					=>  'default','Date format'				=>  'Date format','Display settings'			=>	'Display settings','Styles'					=>	'Available styles','Image display'				=>	'Image display','Show avatars'				=>	'Show user avatars in posts.','Show images sigs'			=>	'Show images in user signatures.','Show images'				=>	'Show images in posts.','Show sigs'					=>	'Show user signatures in posts.','Show smilies'				=>	'Show smilies as graphic icons.','Signature display'			=>	'Signature display','Pagination settings'		=>	'Pagination settings','Topics per page'			=>	'Topics per page','Posts per page'			=>	'Posts per page','E-mail and sub settings'	=>	'Email and subscription settings','Subscription settings'		=>	'Subscription settings','Notify full'				=>	'Include a plain text copy of posts in subscription emails.','Subscribe by default'		=>	'Subscribe to topics by default when posting.','UTC-12:00'					=>	'(UTC-12:00) International Date Line West','UTC-11:00'					=>	'(UTC-11:00) Niue, Samoa','UTC-10:00'					=>	'(UTC-10:00) Hawaii-Aleutian, Cook Island','UTC-09:30'					=>	'(UTC-09:30) Marquesas Islands','UTC-09:00'					=>	'(UTC-09:00) Alaska, Gambier Island','UTC-08:00'					=>	'(UTC-08:00) Pacific','UTC-07:00'					=>	'(UTC-07:00) Mountain','UTC-06:00'					=>	'(UTC-06:00) Central','UTC-05:00'					=>	'(UTC-05:00) Eastern','UTC-04:00'					=>	'(UTC-04:00) Atlantic','UTC-03:30'					=>	'(UTC-03:30) Newfoundland','UTC-03:00'					=>	'(UTC-03:00) Amazon, Central Greenland','UTC-02:00'					=>	'(UTC-02:00) Mid-Atlantic','UTC-01:00'					=>	'(UTC-01:00) Azores, Cape Verde, Eastern Greenland','UTC'						=>	'(UTC) Western European, Greenwich','UTC+01:00'					=>	'(UTC+01:00) Central European, West African','UTC+02:00'					=>	'(UTC+02:00) Eastern European, Central African','UTC+03:00'					=>	'(UTC+03:00) Moscow, Eastern African','UTC+03:30'					=>	'(UTC+03:30) Iran','UTC+04:00'					=>	'(UTC+04:00) Gulf, Samara','UTC+04:30'					=>	'(UTC+04:30) Afghanistan','UTC+05:00'					=>	'(UTC+05:00) Pakistan, Yekaterinburg','UTC+05:30'					=>	'(UTC+05:30) India, Sri Lanka','UTC+05:45'					=>	'(UTC+05:45) Nepal','UTC+06:00'					=>	'(UTC+06:00) Bangladesh, Bhutan, Novosibirsk','UTC+06:30'					=>	'(UTC+06:30) Cocos Islands, Myanmar','UTC+07:00'					=>	'(UTC+07:00) Indochina, Krasnoyarsk','UTC+08:00'					=>	'(UTC+08:00) Greater China, Australian Western, Irkutsk','UTC+08:45'					=>	'(UTC+08:45) Southeastern Western Australia','UTC+09:00'					=>	'(UTC+09:00) Japan, Korea, Chita','UTC+09:30'					=>	'(UTC+09:30) Australian Central','UTC+10:00'					=>	'(UTC+10:00) Australian Eastern, Vladivostok','UTC+10:30'					=>	'(UTC+10:30) Lord Howe','UTC+11:00'					=>	'(UTC+11:00) Solomon Island, Magadan','UTC+11:30'					=>	'(UTC+11:30) Norfolk Island','UTC+12:00'					=>	'(UTC+12:00) New Zealand, Fiji, Kamchatka','UTC+12:45'					=>	'(UTC+12:45) Chatham Islands','UTC+13:00'					=>	'(UTC+13:00) Tonga, Phoenix Islands','UTC+14:00'					=>	'(UTC+14:00) Line Islands',// Change Password stuff'Change pass errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your password can be updated:','Pass logout'				=>	'A user is currently logged in. Please logout and try again.','Pass key bad'				=>	'The specified password activation key was incorrect or has expired. Please re-request a new password. If that fails, contact the forum administrator at %s.','Pass updated'				=>	'Password updated. Login with your new password.','Change your password'		=>	'Change your password','Change user password'		=>	'Change %s\'s password','Old password'				=>	'Old password','Old password help'			=>	'You must enter your existing password.','New password'				=>	'New password','Confirm new password'		=>	'Confirm new password','Wrong old password'		=>	'The old password you entered was incorrect.','Pass updated redirect'		=>	'Password updated.',// Change E-mail stuff'Change e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your email address can be updated:','E-mail key bad'			=>	'The specified email activation key was incorrect or has expired. Please re-request change of email address. If that fails, contact the forum administrator at %s.','E-mail updated'			=>	'Your email address has been updated.','E-mail updated redirect'	=>	'Your email address has been updated.','Wrong password'			=>	'The password you entered was incorrect.','Activate e-mail sent'		=>	'An email has been sent to the specified address with instructions on how to activate the new email address. If it doesn\'t arrive you can contact the forum administrator at %s.','Change your e-mail'		=>	'Change your email address','Change user e-mail'		=>	'Change %s\'s email address','New e-mail'				=>	'New email address',// Signatures'Sig welcome'				=>	'Create or modify a signature for display in your posts','Sig welcome user'			=>	'Create or modify a signature for display in %s\'s posts','Signatures disabled'		=>	'The administrator has disabled signatures support.','Sig too long'				=>	'Signatures cannot be longer than %1$s characters. Please reduce your signature by %2$s characters.','Sig too many lines'		=>	'Signatures cannot have more than %s lines.','Signature'					=>	'Signature','Compose signature'			=>	'Compose signature','Sig max size'				=>	'Maximum size %s characters long and %s lines high.',// Registration stuff (some of these also used by profile)'No new regs'				=>	'This forum is not accepting new registrations.','Reg cancel redirect'		=>	'Registration cancelled.','Agreement'					=>	'Agreement','Agreement label'			=>	'I agree to the rules set out above and wish to register.','Agree'						=>	'Agree','Registration flood'		=>	'A new user was registered with the same IP address as you within the last hour. To prevent registration flooding, at least an hour has to pass between registrations from the same IP. Sorry for the inconvenience.','Pass too short'			=>	'Passwords must be at least 4 characters long. Please choose another (longer) password.','Pass not match'			=>	'Passwords do not match.','E-mail not match'			=>	'Email addresses do not match.','Banned e-mail'				=>	'The email address you entered is banned in this forum. Please choose another email address.','Dupe e-mail'				=>	'Someone else is already registered with that email address. Please choose another email address.','Reg e-mail'				=>	'Thank you for registering. An email has been sent to the specified address with instructions on how to activate your new account. If it doesn\'t arrive you can contact the forum administrator at %s.','Reg complete'				=>	'Registration complete. Logging in and redirecting','Register errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before you can register:','E-mail info'				=>	'<strong>Important!</strong> An email will be sent to your new address with an activation link. You must click the link in the email you receive to activate the new address. You must therefore ensure that you enter a valid and current email address.','Reg e-mail info'			=>	'<strong>Important!</strong> An email with an activation link will be sent to the address you provide. You must click the link in the email in order to activate your new account. It must be done in 72 hours after registration, or else your account will be deleted.','Register at'				=>	'Register at %s','Register intro'			=>	'Registration enables you to use features not available when browsing the board as a guest. The fields below only make up a small part of all the settings you can alter in your profile. If you have any questions regarding this forum you should ask an administrator. Please complete the form below in order to register.','Username'					=>	'Username','Username help'				=>	'Between 2 and 25 characters.','Password'					=>	'Password','Password help'				=>	'Minimum 4 characters. Case sensitive.','Confirm password'			=>	'Confirm password','Confirm password help'		=>	'Re-enter your password exactly as before.','E-mail'					=>	'Email','E-mail help'				=>	'A current valid email address.','Confirm e-mail'			=>	'Confirm email','Confirm e-mail help'		=>	'Re-enter your email address exactly as before.','Optional legend'			=>	'Optional settings','Language'					=>	'Language','Timezone'					=>	'Your timezone','DST label'					=>	'Daylight saving time (advance times by 1 hour).','E-mail settings'			=>	'Email settings','E-mail setting 1'			=>	'Display your email address to other users.','E-mail setting 2'			=>	'Hide your email address but allow email via the forum.','E-mail setting 3'			=>	'Hide your email address and disallow email via the forum.','Reg rules head'			=>	'You must agree to the forum rules set out below in order to register.','Register'					=>	'Register', // Registration button text// Form validation stuff'Profile update errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your profile can be updated:','Username BBCode'			=>	'Usernames may not contain any of the text formatting tags (BBCode) that the forum uses. Please choose another username.','Username IP'				=>	'Usernames may not be in the form of an IP address. Please choose another username.','Username censor'			=>	'The username you entered contains one or more censored words. Please choose a different username.','Username dupe'				=>	'Someone is already registered with the username %s. The username you entered is too similar. The username must differ from that by at least one alphanumerical character (a-z or 0-9). Please choose another username.','Username guest'			=>	'The username guest is reserved. Please choose another username.','Username reserved chars'	=>	'Usernames may not contain all the characters \', " and [ or ] at once. Please choose another username.','Username too long'			=>	'Usernames must not be more than 25 characters long. Please choose another (shorter) username.','Username too short'		=>	'Usernames must be at least 2 characters long. Please choose another (longer) username.','Signature quote/code'		=>	'The quote and code BBCodes are not allowed in signatures.','Invalid e-mail'			=>	'The email address you entered is invalid.','Signature quote/code/list'	=>	'Signature may not contain of the text formatting tags (BBCode) [quote], [code] or [list]. Please choose another tags or delete it.',);
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
<?php/** * Edit post page. * * Modifies the contents of the specified post. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ed_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request']);// Fetch some info about the post, the topic and the forum$query = array(	'SELECT'	=> 'f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies',	'FROM'		=> 'posts AS p',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'topics AS t',			'ON'			=> 't.id=p.topic_id'		),		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'f.id=t.forum_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id);($hook = get_hook('ed_qr_get_post_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_post = $forum_db->fetch_assoc($result);if (!$cur_post)	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('ed_pre_permission_check')) ? eval($hook) : null;// Do we have permission to edit this post?if (($forum_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $forum_user['id'] ||	$cur_post['closed'] == '1') &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);$can_edit_subject = $id == $cur_post['first_post_id'];($hook = get_hook('ed_post_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	($hook = get_hook('ed_form_submitted')) ? eval($hook) : null;	// If it is a topic it must contain a subject	if ($can_edit_subject)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$subject = utf8_ucwords(utf8_strtolower($subject));	}	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$message = utf8_ucwords(utf8_strtolower($message));	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	($hook = get_hook('ed_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		($hook = get_hook('ed_pre_post_edited')) ? eval($hook) : null;		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'subject=\''.$forum_db->escape($subject).'\'',				'WHERE'		=> 'id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']			);			($hook = get_hook('ed_qr_update_subject')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'message=\''.$forum_db->escape($message).'\', hide_smilies=\''.$hide_smilies.'\'',			'WHERE'		=> 'id='.$id		);		if (!isset($_POST['silent']) || !$forum_page['is_admmod'])			$query['SET'] .= ', edited='.time().', edited_by=\''.$forum_db->escape($forum_user['username']).'\'';		($hook = get_hook('ed_qr_update_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		($hook = get_hook('ed_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $id), $lang_post['Edit redirect']);	}}// Setup error messagesif (!empty($errors)){	$forum_page['errors'] = array();	foreach ($errors as $cur_error)		$forum_page['errors'][] = '<li><span>'.$cur_error.'</span></li>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['edit'], $id);$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['main_head_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_post['forum_name'], forum_link($forum_url['forum'], array($cur_post['fid'], sef_friendly($cur_post['forum_name'])))),	array($cur_post['subject'], forum_link($forum_url['topic'], array($cur_post['tid'], sef_friendly($cur_post['subject'])))),	(($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply']));($hook = get_hook('ed_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'postedit');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ed_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo ($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($forum_page['errors'])){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($id == $cur_post['first_post_id']) ? $lang_post['Topic byline'] : $lang_post['Reply byline']), '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	$forum_page['preview_message'] = parse_message($message, $hide_smilies);	($hook = get_hook('ed_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $id == $cur_post['first_post_id'] ? $lang_post['Preview edited topic'] : $lang_post['Preview edited reply'] ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('ed_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('ed_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Compose edited reply'] : $lang_post['Compose edited topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";// If there were any errors, show themif (isset($forum_page['errors'])){?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_post['Post errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('ed_pre_main_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Edit post legend'] ?></strong></legend><?php ($hook = get_hook('ed_pre_subject')) ? eval($hook) : null; ?><?php if ($can_edit_subject): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" size="70" maxlength="70" value="<?php echo forum_htmlencode(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('ed_pre_message_box')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo forum_htmlencode(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';	else		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';}if ($forum_page['is_admmod']){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';	else		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';}($hook = get_hook('ed_pre_checkbox_display')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('ed_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('ed_pre_main_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('ed_main_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php$forum_id = $cur_post['fid'];($hook = get_hook('ed_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads common data and performs various functions necessary for the site to work properly. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	exit('The constant FORUM_ROOT must be defined and point to a valid PunBB installation root directory.');if (!defined('FORUM_ESSENTIALS_LOADED'))	require FORUM_ROOT.'include/essentials.php';// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Strip slashes from GET/POST/COOKIE (if magic_quotes_gpc is enabled)if (get_magic_quotes_gpc()){	function stripslashes_array($array)	{		return is_array($array) ? array_map('stripslashes_array', $array) : stripslashes($array);	}	$_GET = stripslashes_array($_GET);	$_POST = stripslashes_array($_POST);	$_COOKIE = stripslashes_array($_COOKIE);}// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// Enable output bufferingif (!defined('FORUM_DISABLE_BUFFERING')){	// For some very odd reason, "Norton Internet Security" unsets this	$_SERVER['HTTP_ACCEPT_ENCODING'] = isset($_SERVER['HTTP_ACCEPT_ENCODING']) ? $_SERVER['HTTP_ACCEPT_ENCODING'] : '';	// Should we use gzip output compression?	if ($forum_config['o_gzip'] && extension_loaded('zlib') && (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') !== false))		ob_start('ob_gzhandler');	else		ob_start();}// Define standard date/time formats$forum_time_formats = array($forum_config['o_time_format'], 'H:i:s', 'H:i', 'g:i:s a', 'g:i a');$forum_date_formats = array($forum_config['o_date_format'], 'Y-m-d', 'Y-d-m', 'd-m-Y', 'm-d-Y', 'M j Y', 'jS M Y');// Create forum_page array$forum_page = array();// Login and fetch user info$forum_user = array();cookie_login($forum_user);// Attempt to load the common language fileif (file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php'))	include FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php';else	error('There is no valid language pack \''.forum_htmlencode($forum_user['language']).'\' installed. Please reinstall a language of that name.');// Setup the URL rewriting schemeif (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php'))	require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php';else	require FORUM_ROOT.'include/url/Default/forum_urls.php';// A good place to modify the URL scheme($hook = get_hook('co_modify_url_scheme')) ? eval($hook) : null;// Check if we are to display a maintenance messageif ($forum_config['o_maintenance'] && $forum_user['g_id'] > FORUM_ADMIN && !defined('FORUM_TURN_OFF_MAINT'))	maintenance_message();// Load cached updates infoif ($forum_user['g_id'] == FORUM_ADMIN){	if (file_exists(FORUM_CACHE_DIR.'cache_updates.php'))		include FORUM_CACHE_DIR.'cache_updates.php';	// Regenerate cache only if automatic updates are enabled and if the cache is more than 12 hours old	if ($forum_config['o_check_for_updates'] == '1' && (!defined('FORUM_UPDATES_LOADED') || $forum_updates['cached'] < (time() - 43200)))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_updates_cache();		require FORUM_CACHE_DIR.'cache_updates.php';	}}// Load cached bansif (file_exists(FORUM_CACHE_DIR.'cache_bans.php'))	include FORUM_CACHE_DIR.'cache_bans.php';if (!defined('FORUM_BANS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	require FORUM_CACHE_DIR.'cache_bans.php';}// Check if current user is bannedcheck_bans();// Update online listupdate_users_online();// Check to see if we logged in without a cookie being setif ($forum_user['is_guest'] && isset($_GET['login']))	message($lang_common['No cookie']);// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid (token in post.php is dealt with in post.php)if (!empty($_POST) && (isset($_POST['confirm_cancel']) || (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url()))) && !defined('FORUM_SKIP_CSRF_CONFIRM'))	csrf_confirm_form();($hook = get_hook('co_common')) ? eval($hook) : null;
<?php/** * Provides various mass-moderation tools to moderators. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('mr_start')) ? eval($hook) : null;// Load the misc.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';// This particular function doesn't require forum-based moderator access. It can be used// by all moderators and admins.if (isset($_GET['get_host'])){	if (!$forum_user['is_admmod'])		message($lang_common['No permission']);	($hook = get_hook('mr_view_ip_selected')) ? eval($hook) : null;	// Is get_host an IP address or a post ID?	if (preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_GET['get_host']) || preg_match('/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/', $_GET['get_host']))		$ip = $_GET['get_host'];	else	{		$get_host = intval($_GET['get_host']);		if ($get_host < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'p.poster_ip',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.id='.$get_host		);		($hook = get_hook('mr_view_ip_qr_get_poster_ip')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ip = $forum_db->result($result);		if (!$ip)			message($lang_common['Bad request']);	}	($hook = get_hook('mr_view_ip_pre_output')) ? eval($hook) : null;	message(sprintf($lang_misc['Hostname lookup'], $ip, @gethostbyaddr($ip), '<a href="'.forum_link($forum_url['admin_users']).'?show_users='.$ip.'">'.$lang_misc['Show more users'].'</a>'));}// All other functions require moderator/admin access$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($fid < 1)	message($lang_common['Bad request']);// Get some info about the forum we're moderating$query = array(	'SELECT'	=> 'f.forum_name, f.redirect_url, f.num_topics, f.moderators, f.sort_by',	'FROM'		=> 'forums AS f',	'JOINS'		=> array(		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid);($hook = get_hook('mr_qr_get_forum_data')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_forum = $forum_db->fetch_assoc($result);if (!$cur_forum)	message($lang_common['Bad request']);// Make sure we're not trying to moderate a redirect forumif ($cur_forum['redirect_url'] != '')	message($lang_common['Bad request']);// Setup the array of moderators$mods_array = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();($hook = get_hook('mr_pre_permission_check')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || !array_key_exists($forum_user['username'], $mods_array)))	message($lang_common['No permission']);// Get topic/forum tracking dataif (!$forum_user['is_guest'])	$tracked_topics = get_tracked_topics();// Did someone click a cancel button?if (isset($_POST['cancel']))	redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);// All topic moderation features require a topic id in GETif (isset($_GET['tid'])){	($hook = get_hook('mr_post_actions_selected')) ? eval($hook) : null;	$tid = intval($_GET['tid']);	if ($tid < 1)		message($lang_common['Bad request']);	// Fetch some info about the topic	$query = array(		'SELECT'	=> 't.subject, t.poster, t.first_post_id, t.posted, t.num_replies',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$tid.' AND t.moved_to IS NULL'	);	($hook = get_hook('mr_post_actions_qr_get_topic_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_topic = $forum_db->fetch_assoc($result);	if (!$cur_topic)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['delete_posts_cancel']))		redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['Cancel redirect']);	// Delete one or more posts	if (isset($_POST['delete_posts']) || isset($_POST['delete_posts_comply']))	{		($hook = get_hook('mr_delete_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['delete_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			($hook = get_hook('mr_confirm_delete_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_delete_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			// Delete the posts			$query = array(				'DELETE'	=> 'posts',				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_delete_posts_qr_delete_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($posts);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Delete posts redirect']);			($hook = get_hook('mr_confirm_delete_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_misc['Delete posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Delete posts']		);		($hook = get_hook('mr_confirm_delete_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_delete_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Delete posts'] ?></strong></legend><?php ($hook = get_hook('mr_confirm_delete_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm post delete'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_delete_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_posts_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_delete_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if (isset($_POST['split_posts']) || isset($_POST['split_posts_comply']))	{		($hook = get_hook('mr_split_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['split_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			// Load the post.php language file			require FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';			($hook = get_hook('mr_confirm_split_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_split_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			$new_subject = isset($_POST['new_subject']) ? forum_trim($_POST['new_subject']) : '';			if ($new_subject == '')				message($lang_post['No subject']);			else if (utf8_strlen($new_subject) > 70)				message($lang_post['Too long subject']);			// Get data from the new first post			$query = array(				'SELECT'	=> 'p.id, p.poster, p.posted',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id = '.min($posts)			);			($hook = get_hook('mr_confirm_split_posts_qr_get_first_post_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$first_post_data = $forum_db->fetch_assoc($result);			// Create the new topic			$query = array(				'INSERT'	=> 'poster, subject, posted, first_post_id, forum_id',				'INTO'		=> 'topics',				'VALUES'	=> '\''.$forum_db->escape($first_post_data['poster']).'\', \''.$forum_db->escape($new_subject).'\', '.$first_post_data['posted'].', '.$first_post_data['id'].', '.$fid			);			($hook = get_hook('mr_confirm_split_posts_qr_add_topic')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$new_tid = $forum_db->insert_id();			// Move the posts to the new topic			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'topic_id='.$new_tid,				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_split_posts_qr_move_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Sync last post data for the old topic, the new topic, and the forum itself			sync_topic($new_tid);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Split posts redirect']);			($hook = get_hook('mr_confirm_split_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($new_tid, sef_friendly($new_subject))), $lang_misc['Split posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Split posts']		);		($hook = get_hook('mr_confirm_split_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_split_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post split'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Split posts'] ?></strong></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>"><?php ($hook = get_hook('mr_confirm_split_posts_pre_subject')) ? eval($hook) : null; ?>					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['New subject'] ?> <em><?php echo $lang_common['Required'] ?></em></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_subject" value="" size="70" maxlength="70" /></span>					</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm topic split'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_split_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="split_posts_comply" value="<?php echo $lang_common['Split'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_split_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	// Show the moderate topic view	// Load the viewtopic.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';	// Used to disable the Split and Delete buttons if there are no replies to this topic	$forum_page['button_status'] = ($cur_topic['num_replies'] == 0) ? ' disabled="disabled"' : '';	// Determine the post offset (based on $_GET['p'])	$forum_page['num_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);	$forum_page['start_from'] = $forum_user['disp_posts'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_posts']), ($cur_topic['num_replies'] + 1));	$forum_page['items_info'] = generate_items_info($lang_misc['Posts'], ($forum_page['start_from'] + 1), ($cur_topic['num_replies'] + 1));	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_topic'], $lang_common['Paging separator'], array($fid, $tid)).'</p>';	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], $forum_page['num_pages'], array($fid, $tid)).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] + 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] - 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_topic'], array($fid, $tid)).'" title="'.$lang_common['Page'].' 1" />';	}	if ($forum_config['o_censoring'] == '1')		$cur_topic['subject'] = censor_words($cur_topic['subject']);	// Setup form	$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),		$lang_topic['Moderate topic']	);	// Setup main heading	$forum_page['main_title'] = sprintf($lang_misc['Moderate topic head'], forum_htmlencode($cur_topic['subject']));	$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	($hook = get_hook('mr_post_actions_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'modtopic');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_post_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-post-actions-form" class="newform" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-content main-topic">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['item_count'] = 0;	// Keep track of post numbers	// Retrieve the posts (and their respective poster)	$query = array(		'SELECT'	=> 'u.title, u.num_posts, g.g_id, g.g_user_title, p.id, p.poster, p.poster_id, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'u.id=p.poster_id'			),			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'p.topic_id='.$tid,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> $forum_page['start_from'].','.$forum_user['disp_posts']	);	($hook = get_hook('mr_post_actions_qr_get_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_post = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_post_actions_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		$forum_page['post_ident'] = array();		$forum_page['message'] = array();		$forum_page['user_ident'] = array();		$cur_post['username'] = $cur_post['poster'];		// Generate the post heading		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';		if ($cur_post['poster_id'] > 1)			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), (($forum_user['g_view_users'] == '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>')).'</span>';		else			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('mr_row_pre_item_ident_merge')) ? eval($hook) : null;		// Generate the checkbox field		if ($cur_post['id'] != $cur_topic['first_post_id'])			$forum_page['item_select'] = '<p class="item-select"><input type="checkbox" id="fld'.$cur_post['id'].'" name="posts[]" value="'.$cur_post['id'].'" /> <label for="fld'.$cur_post['id'].'">'.$lang_misc['Select post'].' '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</label></p>';		// Generate author identification		$forum_page['author_ident']['username'] = '<li class="username">'.(($cur_post['poster_id'] > '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</li>';		$forum_page['author_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($cur_post).'</span></li>';		// Give the post some class		$forum_page['item_status'] = array(			'post',			($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even'		);		if ($forum_page['item_count'] == 1)			$forum_page['item_status']['firstpost'] = 'firstpost';		if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])			$forum_page['item_status']['lastpost'] = 'lastpost';		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_status']['topicpost'] = 'topicpost';		else			$forum_page['item_status']['replypost'] = 'replypost';		// Generate the post title		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_subject'] = sprintf($lang_topic['Topic title'], $cur_topic['subject']);		else			$forum_page['item_subject'] = sprintf($lang_topic['Reply title'], $cur_topic['subject']);		$forum_page['item_subject'] = forum_htmlencode($forum_page['item_subject']);		// Perform the main parsing of the message (BBCode, smilies, censor words etc)		$forum_page['message']['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		if ($cur_post['edited'] != '')			$forum_page['message']['edited'] = '<p class="lastedit"><em>'.sprintf($lang_topic['Last edited'], forum_htmlencode($cur_post['edited_by']), format_time($cur_post['edited'])).'</em></p>';		($hook = get_hook('mr_post_actions_row_pre_display')) ? eval($hook) : null;?>			<div class="<?php echo implode(' ', $forum_page['item_status']) ?>">				<div id="p<?php echo $cur_post['id'] ?>" class="posthead">					<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('mr_post_actions_pre_item_select')) ? eval($hook) : null; ?><?php if (isset($forum_page['item_select'])) echo "\t\t\t\t".$forum_page['item_select']."\n" ?><?php ($hook = get_hook('mr_post_actions_new_post_head_option')) ? eval($hook) : null; ?>				</div>				<div class="postbody">					<div class="post-author">						<ul class="author-ident">							<?php echo implode("\n\t\t\t\t\t\t", $forum_page['author_ident'])."\n" ?>						</ul><?php ($hook = get_hook('mr_post_actions_new_user_ident_data')) ? eval($hook) : null; ?>					</div>					<div class="post-entry">						<h4 class="entry-title"><?php echo $forum_page['item_subject'] ?></h4>						<div class="entry-content">							<?php echo implode("\n\t\t\t\t\t\t\t", $forum_page['message'])."\n" ?>						</div><?php ($hook = get_hook('mr_post_actions_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div><?php	}?>	</div><?php$forum_page['mod_options'] = array(	'del_posts'		=> '<span class="submit first-item"><input type="submit" name="delete_posts" value="'.$lang_misc['Delete posts'].'" /></span>',	'split_posts'	=> '<span class="submit"><input type="submit" name="split_posts" value="'.$lang_misc['Split posts'].'" /></span>',	'del_topic'		=> '<span><a href="'.forum_link($forum_url['delete'], $cur_topic['first_post_id']).'">'.$lang_misc['Delete whole topic'].'</a></span>');($hook = get_hook('mr_post_actions_pre_mod_options')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	$forum_id = $fid;	// Init JS helper for select-all	$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));	($hook = get_hook('mr_post_actions_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Move one or more topicsif (isset($_REQUEST['move_topics']) || isset($_POST['move_topics_to'])){	if (isset($_POST['move_topics_to']))	{		($hook = get_hook('mr_confirm_move_topics_form_submitted')) ? eval($hook) : null;		$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? explode(',', $_POST['topics']) : array();		$topics = array_map('intval', $topics);		$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;		if (empty($topics) || $move_to_forum < 1)			message($lang_common['Bad request']);		// Fetch the forum name for the forum we're moving to		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$move_to_forum		);		($hook = get_hook('mr_confirm_move_topics_qr_get_move_to_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$move_to_forum_name = $forum_db->result($result);		if (!$move_to_forum_name)			message($lang_common['Bad request']);		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_move_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Delete any redirect topics if there are any (only if we moved/copied the topic back to where it where it was once moved from)		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'forum_id='.$move_to_forum.' AND moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_delete_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Move the topic(s)		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'forum_id='.$move_to_forum,			'WHERE'		=> 'id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_move_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))		{			foreach ($topics as $cur_topic)			{				// Fetch info for the redirect topic				$query = array(					'SELECT'	=> 't.poster, t.subject, t.posted, t.last_post',					'FROM'		=> 'topics AS t',					'WHERE'		=> 't.id='.$cur_topic				);				($hook = get_hook('mr_confirm_move_topics_qr_get_redirect_topic_data')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$moved_to = $forum_db->fetch_assoc($result);				// Create the redirect topic				$query = array(					'INSERT'	=> 'poster, subject, posted, last_post, moved_to, forum_id',					'INTO'		=> 'topics',					'VALUES'	=> '\''.$forum_db->escape($moved_to['poster']).'\', \''.$forum_db->escape($moved_to['subject']).'\', '.$moved_to['posted'].', '.$moved_to['last_post'].', '.$cur_topic.', '.$fid				);				($hook = get_hook('mr_confirm_move_topics_qr_add_redirect_topic')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		sync_forum($fid);			// Synchronize the forum FROM which the topic was moved		sync_forum($move_to_forum);	// Synchronize the forum TO which the topic was moved		$forum_page['redirect_msg'] = (count($topics) > 1) ? $lang_misc['Move topics redirect'] : $lang_misc['Move topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_confirm_move_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($move_to_forum, sef_friendly($move_to_forum_name))), $forum_page['redirect_msg']);	}	if (isset($_POST['move_topics']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		if (count($topics) == 1)		{			$topics = $topics[0];			$action = 'single';		}		else			$action = 'multiple';	}	else	{		$topics = intval($_GET['move_topics']);		if ($topics < 1)			message($lang_common['Bad request']);		$action = 'single';	}	if ($action == 'single')	{		// Fetch the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topics		);		($hook = get_hook('mr_move_topics_qr_get_topic_to_move_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}	}	// Get forums we can move the post into	$query = array(		'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL AND f.id!='.$fid,		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('mr_move_topics_qr_get_target_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_list = array();	while ($cur_sel_forum = $forum_db->fetch_assoc($result))	{		$forum_list[] = $cur_sel_forum;	}	if (empty($forum_list))	{		message($lang_misc['Nowhere to move']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.($action == 'single' ? $topics : implode(',', $topics)).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$forum_page['crumbs'][] = array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))));	if ($action == 'single')		$forum_page['crumbs'][] = array($subject, forum_link($forum_url['topic'], array($topics, sef_friendly($subject))));	else		$forum_page['crumbs'][] = array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid));	$forum_page['crumbs'][] = ($action == 'single') ? $lang_misc['Move topic'] : $lang_misc['Move topics'];	//Setup main heading	$forum_page['main_title'] = end($forum_page['crumbs']).' '.$lang_misc['To new forum'];	($hook = get_hook('mr_move_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_move_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']).' '.$lang_misc['To new forum'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Move topic'] ?></strong></legend><?php ($hook = get_hook('mr_move_topics_pre_move_to_forum')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Move to'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_forum"><?php	$forum_page['cur_category'] = 0;	foreach ($forum_list as $cur_forum)	{		if ($cur_forum['cid'] != $forum_page['cur_category'])	// A new category since last iteration?		{			if ($forum_page['cur_category'])				echo "\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";			$forum_page['cur_category'] = $cur_forum['cid'];		}		if ($cur_forum['fid'] != $fid)			echo "\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.forum_htmlencode($cur_forum['forum_name']).'</option>'."\n";	}?>						</optgroup>						</select></span>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1"<?php if ($action == 'single') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo ($action == 'single') ? $lang_misc['Leave redirect'] : $lang_misc['Leave redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_move_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="move_topics_to" value="<?php echo $lang_misc['Move'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_move_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Merge topicselse if (isset($_POST['merge_topics']) || isset($_POST['merge_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	if (count($topics) == 1)		message($lang_misc['Merge error']);	if (isset($_POST['merge_topics_comply']))	{		($hook = get_hook('mr_confirm_merge_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id), MIN(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.moved_to IS NULL AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_merge_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		list($num_topics, $merge_to_tid) = $forum_db->fetch_row($result);		if ($num_topics != count($topics))			message($lang_common['Bad request']);		// Make any redirect topics point to our new, merged topic		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'moved_to='.$merge_to_tid,			'WHERE'		=> 'moved_to IN('.implode(',', $topics).')'		);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))			$query['WHERE'] .= ' OR (id IN('.implode(',', $topics).') AND id != '.$merge_to_tid.')';		($hook = get_hook('mr_confirm_merge_topics_qr_fix_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Merge the posts into the topic		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'topic_id='.$merge_to_tid,			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_merge_topics_qr_merge_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).') AND topic_id != '.$merge_to_tid		);		($hook = get_hook('mr_confirm_merge_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (!isset($_POST['with_redirect']))		{			// Delete the topics that have been merged			$query = array(				'DELETE'	=> 'topics',				'WHERE'		=> 'id IN('.implode(',', $topics).') AND id != '.$merge_to_tid			);			($hook = get_hook('mr_confirm_merge_topics_qr_delete_merged_topics')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Synchronize the topic we merged to and the forum where the topics were merged		sync_topic($merge_to_tid);		sync_forum($fid);		$forum_flash->add_info($lang_misc['Merge topics redirect']);		($hook = get_hook('mr_confirm_merge_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_misc['Merge topics redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$lang_misc['Merge topics']	);	($hook = get_hook('mr_merge_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_merge_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic merge'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Merge topics'] ?></strong></legend><?php ($hook = get_hook('mr_merge_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Redirect topic'] ?></span> <?php echo $lang_misc['Leave merge redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_merge_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="merge_topics_comply" value="<?php echo $lang_misc['Merge'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_merge_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Delete one or more topicselse if (isset($_REQUEST['delete_topics']) || isset($_POST['delete_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	$multi = count($topics) > 1;	if (isset($_POST['delete_topics_comply']))	{		if (!isset($_POST['req_confirm']))			redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);		($hook = get_hook('mr_confirm_delete_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_delete_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Create an array of forum IDs that need to be synced		$forum_ids = array($fid);		$query = array(			'SELECT'	=> 't.forum_id',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_forums_to_sync')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			$forum_ids[] = $row[0];		// Delete the topics and any redirect topics		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.implode(',', $topics).') OR moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Create a list of the post ID's in the deleted topic and strip the search index		$query = array(			'SELECT'	=> 'p.id',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_deleted_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$post_ids = array();		while ($row = $forum_db->fetch_row($result))			$post_ids[] = $row[0];		// Strip the search index provided we're not just deleting redirect topics		if (!empty($post_ids))		{			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($post_ids);		}		// Delete posts		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topic_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		foreach ($forum_ids as $cur_forum_id)			sync_forum($cur_forum_id);		$forum_flash->add_info($multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);		($hook = get_hook('mr_confirm_delete_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] =0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topic']	);	($hook = get_hook('mr_delete_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_delete_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topics'] ?></strong></legend><?php ($hook = get_hook('mr_delete_topics_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $multi ? $lang_misc['Delete topics comply'] : $lang_misc['Delete topic comply'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_delete_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_topics_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_delete_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Open or close one or more topicselse if (isset($_REQUEST['open']) || isset($_REQUEST['close'])){	$action = (isset($_REQUEST['open'])) ? 0 : 1;	($hook = get_hook('mr_open_close_topic_selected')) ? eval($hook) : null;	// There could be an array of topic ID's in $_POST	if (isset($_POST['open']) || isset($_POST['close']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id IN('.implode(',', $topics).') AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_multi_topics_qr_open_close_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (count($topics) == 1)			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		else			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topics redirect'] : $lang_misc['Open topics redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_multi_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['moderate_forum'], $fid), $forum_page['redirect_msg']);	}	// Or just one in $_GET	else	{		$topic_id = ($action) ? intval($_GET['close']) : intval($_GET['open']);		if ($topic_id < 1)			message($lang_common['Bad request']);		// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.		// If it's in GET, we need to make sure it's valid.		if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token(($action ? 'close' : 'open').$topic_id)))			csrf_confirm_form();		// Get the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_get_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_open_close_topic')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_single_topic_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $forum_page['redirect_msg']);	}}// Stick a topicelse if (isset($_GET['stick'])){	$stick = intval($_GET['stick']);	if ($stick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('stick'.$stick)))		csrf_confirm_form();	($hook = get_hook('mr_stick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=1',		'WHERE'		=> 'id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_stick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Stick topic redirect']);	($hook = get_hook('mr_stick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($stick, sef_friendly($subject))), $lang_misc['Stick topic redirect']);}// Unstick a topicelse if (isset($_GET['unstick'])){	$unstick = intval($_GET['unstick']);	if ($unstick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('unstick'.$unstick)))		csrf_confirm_form();	($hook = get_hook('mr_unstick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=0',		'WHERE'		=> 'id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_unstick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Unstick topic redirect']);	($hook = get_hook('mr_unstick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($unstick, sef_friendly($subject))), $lang_misc['Unstick topic redirect']);}($hook = get_hook('mr_new_action')) ? eval($hook) : null;// No specific forum moderation action was specified in the query string, so we'll display the moderate forum view// If forum is emptyif ($cur_forum['num_topics'] == 0)	message($lang_common['Bad request']);// Load the viewforum.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';// Determine the topic offset (based on $_GET['p'])$forum_page['num_pages'] = ceil($cur_forum['num_topics'] / $forum_user['disp_topics']);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($cur_forum['num_topics']));$forum_page['items_info'] = generate_items_info($lang_misc['Topics'], ($forum_page['start_from'] + 1), $cur_forum['num_topics']);// Select topics$query = array(	'SELECT'	=> 't.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to',	'FROM'		=> 'topics AS t',	'WHERE'		=> 'forum_id='.$fid,	'ORDER BY'	=> 't.sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 't.posted' : 't.last_post').' DESC',	'LIMIT'		=>	$forum_page['start_from'].', '.$forum_user['disp_topics']);// With "has posted" indicationif (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1'){	$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';	$query['JOINS'][]	= array(		'LEFT JOIN'		=> 'posts AS p',		'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'	);	// Must have same columns as in prev SELECT	$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to';	($hook = get_hook('mr_qr_get_has_posted')) ? eval($hook) : null;}($hook = get_hook('mr_qr_get_topics')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);// Generate paging links$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_forum'], $lang_common['Paging separator'], $fid).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], $forum_page['num_pages'], $fid).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] + 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] - 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_forum'], $fid).'" title="'.$lang_common['Page'].' 1" />';}// Setup form$forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),	sprintf($lang_misc['Moderate forum head'], forum_htmlencode($cur_forum['forum_name'])));// Setup main headingif ($forum_page['num_pages'] > 1)	$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';($hook = get_hook('mr_topic_actions_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'modforum');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();$forum_page['item_header'] = array();$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';if ($forum_config['o_topic_views'] == '1')	$forum_page['item_header']['info']['views'] = '<strong class="info-views">'.$lang_forum['views'].'</strong>';$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';($hook = get_hook('mr_topic_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-topic-actions-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-subhead">		<p class="item-summary<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>"><span><?php printf($lang_forum['Forum subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div id="forum<?php echo $fid ?>" class="main-content main-forum<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	$forum_page['item_count'] = 0;	while ($cur_topic = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_topic_actions_row_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		// Start from scratch		$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_topic['poster'])).'</span>';		if ($cur_topic['moved_to'] != null)		{			$forum_page['item_status']['moved'] = 'moved';			$forum_page['item_title']['link'] = '<span class="item-status"><em class="moved">'.sprintf($lang_forum['Item status'], $lang_forum['Moved']).'</em></span> <a href="'.forum_link($forum_url['topic'], array($cur_topic['moved_to'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a>';			// Combine everything to produce the Topic heading			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> <strong>'.$forum_page['item_title']['link'].'</strong></h3>';			($hook = get_hook('mr_topic_actions_moved_row_pre_item_subject_merge')) ? eval($hook) : null;			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><span class="label">'.$lang_forum['No views info'].'</span></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><span class="label">'.$lang_forum['No replies info'].'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['No lastpost info'].'</span></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_moved_row_pre_output')) ? eval($hook) : null;		}		else		{			$forum_page['ghost_topic'] = false;			// First assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_topic['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_topic['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_topic['closed'] == '1')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<strong><a href="'.forum_link($forum_url['topic'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a></strong>';			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			$forum_page['item_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_topic['id'], sef_friendly($cur_topic['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_topic['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$fid]) || $tracked_topics['forums'][$fid] < $cur_topic['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_nav_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			// Assemble the Topic subject			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_topic['num_replies']).'</strong> <span class="label">'.(($cur_topic['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><strong>'.forum_number_format($cur_topic['num_views']).'</strong> <span class="label">'.(($cur_topic['num_views'] == 1) ? $lang_forum['View'] : $lang_forum['Views']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_topic['last_post_id']).'">'.format_time($cur_topic['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_topic['last_poster'])).'</cite></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_normal_row_pre_output')) ? eval($hook) : null;		}		$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';		($hook = get_hook('mr_topic_actions_row_pre_item_status_merge')) ? eval($hook) : null;		$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');		($hook = get_hook('mr_topic_actions_row_pre_display')) ? eval($hook) : null;?>			<div id="topic<?php echo $cur_topic['id'] ?>" class="main-item<?php echo $forum_page['item_style'] ?>">				<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>				<div class="item-subject">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>				</div>				<ul class="item-info">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>				</ul>			</div><?php	}?>	</div><?php	($hook = get_hook('mr_topic_actions_post_topic_list')) ? eval($hook) : null;	// Setup moderator control buttons	$forum_page['mod_options'] = array(		'mod_move'		=> '<span class="submit first-item"><input type="submit" name="move_topics" value="'.$lang_misc['Move'].'" /></span>',		'mod_delete'	=> '<span class="submit"><input type="submit" name="delete_topics" value="'.$lang_common['Delete'].'" /></span>',		'mod_merge'		=> '<span class="submit"><input type="submit" name="merge_topics" value="'.$lang_misc['Merge'].'" /></span>',		'mod_open'		=> '<span class="submit"><input type="submit" name="open" value="'.$lang_misc['Open'].'" /></span>',		'mod_close'		=> '<span class="submit"><input type="submit" name="close" value="'.$lang_misc['Close'].'" /></span>'	);	($hook = get_hook('mr_topic_actions_pre_mod_option_output')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php$forum_id = $fid;// Init JS helper for select-all$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));($hook = get_hook('mr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
