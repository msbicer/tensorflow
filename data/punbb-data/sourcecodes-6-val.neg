<?php$lang_profile = array(// Navigation and sections'Profile redirect'			=>	'Profile updated.','Instructions'				=>	'You will be redirected back to this page','Update profile'			=>	'Update profile',// Administration stuff'User delete redirect'		=>	'User deleted.','Section admin'				=>	'Administration','Delete user'				=>	'Delete user','Delete warning'			=>	'<strong>Warning!</strong> Once deleted a user and/or their posts cannot be restored.','Delete posts info'			=>	'<strong>Warning!</strong> If you choose not to delete this user\'s posts they can only be deleted manually at a later time.','Delete posts'				=>	'Delete posts','Delete posts label'		=>	'Delete any posts and topics %s has made.','Group membership redirect'	=>	'Group membership updated.','Moderate forums redirect'	=>	'Forum moderator rights updated.','Ban redirect'				=>	'Redirecting','Ban user'					=>	'Ban user','Ban user info'				=>	'Ban this user via the administration console.','Delete user info'			=>	'Permanently delete this user and, optionally, all their posts.','User management'			=>	'User management','Group membership'			=>	'Group membership','User group'				=>	'Assign user to group','Moderator assignment'		=>	'Moderator assignment','Cannot delete admin'		=>	'Administrators cannot be deleted. In order to delete this user, you must first move him/her to a different user group.','Update groups'				=>	'Update user group','Update forums'				=>	'Update moderator assignment',// Avatar stuff'Avatar welcome'			=>	'Set an avatar image to enhance your forum identity','Avatar welcome user'		=>	'Set an avatar image to enhance  %s\'s forum identity','Avatar deleted redirect'	=>	'Avatar deleted.','Avatars disabled'			=>	'The administrator has disabled avatar support.','No file'					=>	'You did not select a file for upload.','Too large ini'				=>	'The selected file was too large to upload. The server didn\'t allow the upload.','Partial upload'			=>	'The selected file was only partially uploaded. Please try again.','No tmp directory'			=>	'PHP was unable to save the uploaded file to a temporary location.','Bad type'					=>	'The file you tried to upload is not of an allowed type. Allowed file types are gif, jpeg and png.','Too large'					=>	'The file you tried to upload is larger than the maximum allowed %s bytes.','Move failed'				=>	'The server was unable to save the uploaded file. Please contact the forum administrator at %s.','Too wide or high'			=>	'The file you tried to upload is wider and/or higher than the maximum allowed %sx%s pixels.','Unknown failure'			=>	'An unknown error occurred. Please try again.','Avatar'					=>	'Avatar','Current avatar'			=>	'Current avatar','No avatar info'			=>	'No avatar is currently uploaded.','Avatar info replace'		=>	'Uploading a new avatar will replace your existing avatar.','Avatar info none'			=>	'To display an avatar you first need to upload one.','Avatar info type'			=>	'The allowed image file types are gif, jpeg and png.','Avatar info size'			=>	'The maximum image size allowed is %sx%s pixels and %s bytes (%s KB).','Delete avatar info'		=>	'Delete avatar to stop displaying any avatar.','Upload avatar file'		=>	'Upload avatar file','Avatar upload help'		=>	'Select file then update your profile to install.','No upload warn'			=>	'<strong>IMPORTANT! </strong> You must choose a file to upload before updating your profile.',// About and Identity sections'Users profile'				=>	'%s\'s profile','Section about'				=>	'Introduction','Profile welcome'			=>	'Welcome to your profile','Profile welcome user'		=>	'Welcome to %s\'s profile','Identity welcome'			=>	'Modify your personal and contact details','Identity welcome user'		=>	'Modify %s\'s personal and contact details','View your posts'			=>	'View all your posts','View your topics'			=>	'View all your topics','View user posts'			=>	'View all %s\'s posts','View user topics'			=>	'View all %s\'s topics','View your subscriptions'	=>	'View all your subscriptions','View user subscriptions'	=>	'View all %s\'s subscriptions','Realname'					=>	'Real name','Location'					=>	'Location','From'						=>	'From','Registered'				=>	'Registered','Website'					=>	'Website','Facebook'					=>	'Facebook','Twitter'					=>	'Twitter','LinkedIn'					=>	'LinkedIn','Skype'						=>	'Skype','IP'						=>	'IP','Note'						=>	'Note','Posts'						=>	'Posts','Last post'					=>	'Last post','Last visit'				=> 	'Last visit','Send forum e-mail'			=>	'Send forum email','Contact info'				=>	'Contact information','Jabber'					=>	'Jabber','ICQ'						=>	'ICQ','MSN'						=>	'MSN Messenger','AOL IM'					=>	'AOL IM','Forbidden title'			=>	'The title you entered contains a forbidden word. You must choose a different title.','Bad ICQ'					=>	'You entered an invalid ICQ UIN.','Yahoo'						=>	'Yahoo! Messenger','Posts and topics'			=>	'Posts and topics','Private info'				=>	'Private information','Current signature'			=>	'Current signature','Section identity'			=>	'Identity','Section settings'			=>	'Settings','Section avatar'			=>	'Avatar','Section signature'			=>	'Signature','Signature info'			=>	'Your signature will appear at the foot of your posts. It can contain almost anything such as your favourite quote or star sign. It\'s up to you!','Personal legend'			=>	'Personal details','Title'						=>	'Title','Leave blank'				=>	'Leave blank to use forum default.','Edit count'				=>	'Edit post count','Admin note'				=>	'Admin note','Contact legend'			=>	'Contact details','Contact messengers legend'	=>	'Contact messengers details','Name or Url'				=>	'Enter the url or username',// Settings section'Local settings'			=>	'Local settings','Settings welcome'			=>	'Modify your localization, display and email settings','Settings welcome user'		=>	'Modify %s\'s localization, display and email settings','Timezone info'				=>	'Must be set for correct time display.','Time format'				=>  'Time format','Default'					=>  'default','Date format'				=>  'Date format','Display settings'			=>	'Display settings','Styles'					=>	'Available styles','Image display'				=>	'Image display','Show avatars'				=>	'Show user avatars in posts.','Show images sigs'			=>	'Show images in user signatures.','Show images'				=>	'Show images in posts.','Show sigs'					=>	'Show user signatures in posts.','Show smilies'				=>	'Show smilies as graphic icons.','Signature display'			=>	'Signature display','Pagination settings'		=>	'Pagination settings','Topics per page'			=>	'Topics per page','Posts per page'			=>	'Posts per page','E-mail and sub settings'	=>	'Email and subscription settings','Subscription settings'		=>	'Subscription settings','Notify full'				=>	'Include a plain text copy of posts in subscription emails.','Subscribe by default'		=>	'Subscribe to topics by default when posting.','UTC-12:00'					=>	'(UTC-12:00) International Date Line West','UTC-11:00'					=>	'(UTC-11:00) Niue, Samoa','UTC-10:00'					=>	'(UTC-10:00) Hawaii-Aleutian, Cook Island','UTC-09:30'					=>	'(UTC-09:30) Marquesas Islands','UTC-09:00'					=>	'(UTC-09:00) Alaska, Gambier Island','UTC-08:00'					=>	'(UTC-08:00) Pacific','UTC-07:00'					=>	'(UTC-07:00) Mountain','UTC-06:00'					=>	'(UTC-06:00) Central','UTC-05:00'					=>	'(UTC-05:00) Eastern','UTC-04:00'					=>	'(UTC-04:00) Atlantic','UTC-03:30'					=>	'(UTC-03:30) Newfoundland','UTC-03:00'					=>	'(UTC-03:00) Amazon, Central Greenland','UTC-02:00'					=>	'(UTC-02:00) Mid-Atlantic','UTC-01:00'					=>	'(UTC-01:00) Azores, Cape Verde, Eastern Greenland','UTC'						=>	'(UTC) Western European, Greenwich','UTC+01:00'					=>	'(UTC+01:00) Central European, West African','UTC+02:00'					=>	'(UTC+02:00) Eastern European, Central African','UTC+03:00'					=>	'(UTC+03:00) Moscow, Eastern African','UTC+03:30'					=>	'(UTC+03:30) Iran','UTC+04:00'					=>	'(UTC+04:00) Gulf, Samara','UTC+04:30'					=>	'(UTC+04:30) Afghanistan','UTC+05:00'					=>	'(UTC+05:00) Pakistan, Yekaterinburg','UTC+05:30'					=>	'(UTC+05:30) India, Sri Lanka','UTC+05:45'					=>	'(UTC+05:45) Nepal','UTC+06:00'					=>	'(UTC+06:00) Bangladesh, Bhutan, Novosibirsk','UTC+06:30'					=>	'(UTC+06:30) Cocos Islands, Myanmar','UTC+07:00'					=>	'(UTC+07:00) Indochina, Krasnoyarsk','UTC+08:00'					=>	'(UTC+08:00) Greater China, Australian Western, Irkutsk','UTC+08:45'					=>	'(UTC+08:45) Southeastern Western Australia','UTC+09:00'					=>	'(UTC+09:00) Japan, Korea, Chita','UTC+09:30'					=>	'(UTC+09:30) Australian Central','UTC+10:00'					=>	'(UTC+10:00) Australian Eastern, Vladivostok','UTC+10:30'					=>	'(UTC+10:30) Lord Howe','UTC+11:00'					=>	'(UTC+11:00) Solomon Island, Magadan','UTC+11:30'					=>	'(UTC+11:30) Norfolk Island','UTC+12:00'					=>	'(UTC+12:00) New Zealand, Fiji, Kamchatka','UTC+12:45'					=>	'(UTC+12:45) Chatham Islands','UTC+13:00'					=>	'(UTC+13:00) Tonga, Phoenix Islands','UTC+14:00'					=>	'(UTC+14:00) Line Islands',// Change Password stuff'Change pass errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your password can be updated:','Pass logout'				=>	'A user is currently logged in. Please logout and try again.','Pass key bad'				=>	'The specified password activation key was incorrect or has expired. Please re-request a new password. If that fails, contact the forum administrator at %s.','Pass updated'				=>	'Password updated. Login with your new password.','Change your password'		=>	'Change your password','Change user password'		=>	'Change %s\'s password','Old password'				=>	'Old password','Old password help'			=>	'You must enter your existing password.','New password'				=>	'New password','Confirm new password'		=>	'Confirm new password','Wrong old password'		=>	'The old password you entered was incorrect.','Pass updated redirect'		=>	'Password updated.',// Change E-mail stuff'Change e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your email address can be updated:','E-mail key bad'			=>	'The specified email activation key was incorrect or has expired. Please re-request change of email address. If that fails, contact the forum administrator at %s.','E-mail updated'			=>	'Your email address has been updated.','E-mail updated redirect'	=>	'Your email address has been updated.','Wrong password'			=>	'The password you entered was incorrect.','Activate e-mail sent'		=>	'An email has been sent to the specified address with instructions on how to activate the new email address. If it doesn\'t arrive you can contact the forum administrator at %s.','Change your e-mail'		=>	'Change your email address','Change user e-mail'		=>	'Change %s\'s email address','New e-mail'				=>	'New email address',// Signatures'Sig welcome'				=>	'Create or modify a signature for display in your posts','Sig welcome user'			=>	'Create or modify a signature for display in %s\'s posts','Signatures disabled'		=>	'The administrator has disabled signatures support.','Sig too long'				=>	'Signatures cannot be longer than %1$s characters. Please reduce your signature by %2$s characters.','Sig too many lines'		=>	'Signatures cannot have more than %s lines.','Signature'					=>	'Signature','Compose signature'			=>	'Compose signature','Sig max size'				=>	'Maximum size %s characters long and %s lines high.',// Registration stuff (some of these also used by profile)'No new regs'				=>	'This forum is not accepting new registrations.','Reg cancel redirect'		=>	'Registration cancelled.','Agreement'					=>	'Agreement','Agreement label'			=>	'I agree to the rules set out above and wish to register.','Agree'						=>	'Agree','Registration flood'		=>	'A new user was registered with the same IP address as you within the last hour. To prevent registration flooding, at least an hour has to pass between registrations from the same IP. Sorry for the inconvenience.','Pass too short'			=>	'Passwords must be at least 4 characters long. Please choose another (longer) password.','Pass not match'			=>	'Passwords do not match.','E-mail not match'			=>	'Email addresses do not match.','Banned e-mail'				=>	'The email address you entered is banned in this forum. Please choose another email address.','Dupe e-mail'				=>	'Someone else is already registered with that email address. Please choose another email address.','Reg e-mail'				=>	'Thank you for registering. An email has been sent to the specified address with instructions on how to activate your new account. If it doesn\'t arrive you can contact the forum administrator at %s.','Reg complete'				=>	'Registration complete. Logging in and redirecting','Register errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before you can register:','E-mail info'				=>	'<strong>Important!</strong> An email will be sent to your new address with an activation link. You must click the link in the email you receive to activate the new address. You must therefore ensure that you enter a valid and current email address.','Reg e-mail info'			=>	'<strong>Important!</strong> An email with an activation link will be sent to the address you provide. You must click the link in the email in order to activate your new account. It must be done in 72 hours after registration, or else your account will be deleted.','Register at'				=>	'Register at %s','Register intro'			=>	'Registration enables you to use features not available when browsing the board as a guest. The fields below only make up a small part of all the settings you can alter in your profile. If you have any questions regarding this forum you should ask an administrator. Please complete the form below in order to register.','Username'					=>	'Username','Username help'				=>	'Between 2 and 25 characters.','Password'					=>	'Password','Password help'				=>	'Minimum 4 characters. Case sensitive.','Confirm password'			=>	'Confirm password','Confirm password help'		=>	'Re-enter your password exactly as before.','E-mail'					=>	'Email','E-mail help'				=>	'A current valid email address.','Confirm e-mail'			=>	'Confirm email','Confirm e-mail help'		=>	'Re-enter your email address exactly as before.','Optional legend'			=>	'Optional settings','Language'					=>	'Language','Timezone'					=>	'Your timezone','DST label'					=>	'Daylight saving time (advance times by 1 hour).','E-mail settings'			=>	'Email settings','E-mail setting 1'			=>	'Display your email address to other users.','E-mail setting 2'			=>	'Hide your email address but allow email via the forum.','E-mail setting 3'			=>	'Hide your email address and disallow email via the forum.','Reg rules head'			=>	'You must agree to the forum rules set out below in order to register.','Register'					=>	'Register', // Registration button text// Form validation stuff'Profile update errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your profile can be updated:','Username BBCode'			=>	'Usernames may not contain any of the text formatting tags (BBCode) that the forum uses. Please choose another username.','Username IP'				=>	'Usernames may not be in the form of an IP address. Please choose another username.','Username censor'			=>	'The username you entered contains one or more censored words. Please choose a different username.','Username dupe'				=>	'Someone is already registered with the username %s. The username you entered is too similar. The username must differ from that by at least one alphanumerical character (a-z or 0-9). Please choose another username.','Username guest'			=>	'The username guest is reserved. Please choose another username.','Username reserved chars'	=>	'Usernames may not contain all the characters \', " and [ or ] at once. Please choose another username.','Username too long'			=>	'Usernames must not be more than 25 characters long. Please choose another (shorter) username.','Username too short'		=>	'Usernames must be at least 2 characters long. Please choose another (longer) username.','Signature quote/code'		=>	'The quote and code BBCodes are not allowed in signatures.','Invalid e-mail'			=>	'The email address you entered is invalid.','Signature quote/code/list'	=>	'Signature may not contain of the text formatting tags (BBCode) [quote], [code] or [list]. Please choose another tags or delete it.',);
<?php/** * Outputs the header used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Send no-cache headersheader('Expires: Thu, 21 Jul 1977 07:30:00 GMT');	// When yours truly first set eyes on this world! :)header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');header('Cache-Control: post-check=0, pre-check=0', false);header('Pragma: no-cache');		// For HTTP/1.0 compability// Send the Content-type header in case the web server is setup to send something elseheader('Content-type: text/html; charset=utf-8');// Load the main templateif (substr(FORUM_PAGE, 0, 5) == 'admin'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/admin.tpl';}else if (FORUM_PAGE == 'help'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/help.tpl';}else{	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/main.tpl';}($hook = get_hook('hd_pre_template_loaded')) ? eval($hook) : null;$tpl_main = file_get_contents($tpl_path);($hook = get_hook('hd_template_loaded')) ? eval($hook) : null;// START SUBST - <!-- forum_include "*" -->while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_main, $cur_include)){	if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))		error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template main.tpl. There is no such file in folder /include/user/', __FILE__, __LINE__);	ob_start();	include FORUM_ROOT.'include/user/'.$cur_include[1];	$tpl_temp = ob_get_contents();	$tpl_main = str_replace($cur_include[0], $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_include "*" -->// START SUBST - <!-- forum_local -->$tpl_main = str_replace('<!-- forum_local -->', 'lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_main);// END SUBST - <!-- forum_local -->// START SUBST - <!-- forum_head -->// Is this a page that we want search index spiders to index?if (!defined('FORUM_ALLOW_INDEX'))	$forum_head['robots'] = '<meta name="ROBOTS" content="NOINDEX, FOLLOW" />';else	$forum_head['descriptions'] = '<meta name="description" content="'.generate_crumbs(true).$lang_common['Title separator'].forum_htmlencode($forum_config['o_board_desc']).'" />';// Should we output a MicroID? http://microid.org/if (strpos(FORUM_PAGE, 'profile') === 0)	$forum_head['microid'] = '<meta name="microid" content="mailto+http:sha1:'.sha1(sha1('mailto:'.$user['email']).sha1(forum_link($forum_url['user'], $id))).'" />';$forum_head['title'] = '<title>'.generate_crumbs(true).'</title>';// Should we output feed links?if (FORUM_PAGE == 'index'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['index_rss']).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['index_atom']).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewforum'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['forum_rss'], $id).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['forum_atom'], $id).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewtopic'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['topic_rss'], $id).'" title="RSS" />';	$forum_head['atom'] =  '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['topic_atom'], $id).'" title="ATOM" />';}$forum_head['top'] = '<link rel="top" href="'.$base_url.'" title="'.$lang_common['Forum index'].'" />';// If there are more than two breadcrumbs, add the "up" link (second last)if (count($forum_page['crumbs']) > 2)	$forum_head['up'] = '<link rel="up" href="'.$forum_page['crumbs'][count($forum_page['crumbs']) - 2][1].'" title="'.forum_htmlencode($forum_page['crumbs'][count($forum_page['crumbs']) - 2][0]).'" />';// If there are other page navigation links (first, next, prev and last)if (!empty($forum_page['nav']))	$forum_head['nav'] = implode("\n", $forum_page['nav']);$forum_head['search'] = '<link rel="search" href="'.forum_link($forum_url['search']).'" title="'.$lang_common['Search'].'" />';$forum_head['author'] = '<link rel="author" href="'.forum_link($forum_url['users']).'" title="'.$lang_common['User list'].'" />';ob_start();// Include stylesheetsrequire FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';$head_temp = forum_trim(ob_get_contents());$num_temp = 0;foreach (explode("\n", $head_temp) as $style_temp)	$forum_head['style'.$num_temp++] = $style_temp;ob_end_clean();($hook = get_hook('hd_head')) ? eval($hook) : null;// Render CSS from forum_loader$tmp_head = implode("\n", $forum_head).$forum_loader->render_css();$tpl_main = str_replace('<!-- forum_head -->', $tmp_head, $tpl_main);unset($forum_head, $tmp_head);// END SUBST - <!-- forum_head -->// START SUBST OF COMMON ELEMENTS// Setup array of general elements$gen_elements = array();// Forum page id and classesif (!defined('FORUM_PAGE_TYPE')){	if (substr(FORUM_PAGE, 0, 5) == 'admin')		define('FORUM_PAGE_TYPE', 'admin-page');	else	{		if (!empty($forum_page['page_post']))			define('FORUM_PAGE_TYPE', 'paged-page');		else if (!empty($forum_page['main_menu']))			define('FORUM_PAGE_TYPE', 'menu-page');		else			define('FORUM_PAGE_TYPE', 'basic-page');	}}$gen_elements['<!-- forum_page -->'] = 'id="brd-'.FORUM_PAGE.'" class="brd-page '.FORUM_PAGE_TYPE.'"';// Skip link$gen_elements['<!-- forum_skip -->'] = '<p id="brd-access"><a href="#brd-main">'.$lang_common['Skip to content'].'</a></p>';// Forum Title$gen_elements['<!-- forum_title -->'] = '<p id="brd-title"><a href="'.forum_link($forum_url['index']).'">'.forum_htmlencode($forum_config['o_board_title']).'</a></p>';// Forum Description$gen_elements['<!-- forum_desc -->'] = ($forum_config['o_board_desc'] != '') ? '<p id="brd-desc">'.forum_htmlencode($forum_config['o_board_desc']).'</p>' : '';// Main Navigation$gen_elements['<!-- forum_navlinks -->'] = '<ul>'."\n\t\t".generate_navlinks()."\n\t".'</ul>';// Announcement$gen_elements['<!-- forum_announcement -->'] = ($forum_config['o_announcement'] == '1' && $forum_user['g_read_board'] == '1') ? '<div id="brd-announcement" class="gen-content">'.($forum_config['o_announcement_heading'] != '' ? "\n\t".'<h1 class="hn"><span>'.$forum_config['o_announcement_heading'].'</span></h1>' : '')."\n\t".'<div class="content">'.$forum_config['o_announcement_message'].'</div>'."\n".'</div>'."\n" : '';// Flash messages$gen_elements['<!-- forum_messages -->'] = '<div id="brd-messages" class="brd">'.$forum_flash->show(true).'</div>'."\n";// Maintenance Warning$gen_elements['<!-- forum_maint -->'] = ($forum_user['g_id'] == FORUM_ADMIN && $forum_config['o_maintenance'] == '1') ? '<p id="maint-alert" class="warn">'.sprintf($lang_common['Maintenance warning'], '<a href="'.forum_link($forum_url['admin_settings_maintenance']).'">'.$lang_common['Maintenance mode'].'</a>').'</p>' : '';($hook = get_hook('hd_gen_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($gen_elements), array_values($gen_elements), $tpl_main);unset($gen_elements);// END SUBST OF COMMON ELEMENTS// START SUBST VISIT ELEMENTS$visit_elements = array();if ($forum_user['is_guest'])	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.$lang_common['Not logged in'].'</span> <span>'.$lang_common['Login nag'].'</span></p>';else	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.sprintf($lang_common['Logged in as'], '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span> <span>'.sprintf($lang_common['Last visit'], format_time($forum_user['last_visit'])).'</span></p>';if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1'){	$visit_links = array();	if (!$forum_user['is_guest'])		$visit_links['newposts'] = '<span id="visit-new"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_new']).'" title="'.$lang_common['New posts title'].'">'.$lang_common['New posts'].'</a></span>';	$visit_links['recent'] = '<span id="visit-recent"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_recent']).'" title="'.$lang_common['Active topics title'].'">'.$lang_common['Active topics'].'</a></span>';	$visit_links['unanswered'] = '<span id="visit-unanswered"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_unanswered']).'" title="'.$lang_common['Unanswered topics title'].'">'.$lang_common['Unanswered topics'].'</a></span>';}$visit_elements['<!-- forum_visit -->'] = (!empty($visit_links)) ? '<p id="visit-links" class="options">'.implode(' ', $visit_links).'</p>' : '';($hook = get_hook('hd_visit_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($visit_elements), array_values($visit_elements), $tpl_main);unset($visit_elements);// END SUBST VISIT ELEMENTS// START SUBST - <!-- forum_admod -->$admod_links = array();// We only need to run this query for mods/admins if there will actually be reports to look atif ($forum_user['is_admmod'] && $forum_config['o_report_method'] != 1){	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'reports AS r',		'WHERE'		=> 'r.zapped IS NULL',	);	($hook = get_hook('hd_qr_get_unread_reports_count')) ? eval($hook) : null;	$result_header = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result_header))		$admod_links['reports'] = '<span id="reports"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_common['New reports'].'</a></span>';}if ($forum_user['g_id'] == FORUM_ADMIN){	$alert_items = array();	// Warn the admin that maintenance mode is enabled	if ($forum_config['o_maintenance'] == '1')		$alert_items['maintenance'] = '<p id="maint-alert" class="warn">'.$lang_common['Maintenance alert'].'</p>';	if ($forum_config['o_check_for_updates'] == '1')	{		if ($forum_updates['fail'])			$alert_items['update_fail'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.$lang_common['Updates failed'].'</p>';		else if (isset($forum_updates['version']) && isset($forum_updates['hotfix']))			$alert_items['update_version_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version n hf'], $forum_updates['version'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';		else if (isset($forum_updates['version']))			$alert_items['update_version'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version'], $forum_updates['version']).'</p>';		else if (isset($forum_updates['hotfix']))			$alert_items['update_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates hf'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';	}	// Warn the admin that their version of the database is newer than the version supported by the code	// NOTE: Why is it done on any page, but shown in admin section only.	if ($forum_config['o_database_revision'] > FORUM_DB_REVISION)		$alert_items['newer_database'] = '<p><strong>'.$lang_common['Database mismatch'].'</strong> '.$lang_common['Database mismatch alert'].'</p>';	if (!empty($alert_items))		$admod_links['alert'] = '<span id="alert"><a href="'.forum_link($forum_url['admin_index']).'"><strong>'.$lang_common['New alerts'].'</strong></a></span>';	($hook = get_hook('hd_alert')) ? eval($hook) : null;}$tpl_main = str_replace('<!-- forum_admod -->', (!empty($admod_links)) ? '<p id="brd-admod">'.implode(' ', $admod_links).'</p>' : '', $tpl_main);// END SUBST - <!-- forum_admod -->// MAIN SECTION INTERFACE ELEMENT SUBSTITUTION$main_elements = array();// Top breadcrumbs$main_elements['<!-- forum_crumbs_top -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-top" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Bottom breadcrumbs$main_elements['<!-- forum_crumbs_end -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-end" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Main section heading$main_elements['<!-- forum_main_title -->'] =  '<h1 class="main-title">'.((isset($forum_page['main_title'])) ? $forum_page['main_title'] : forum_htmlencode(is_array($last_crumb = end($forum_page['crumbs'])) ? reset($last_crumb) : $last_crumb)).(isset($forum_page['main_head_pages']) ? ' <small>'.$forum_page['main_head_pages'].'</small>' : '').'</h1>'."\n";// Top pagination and post links$main_elements['<!-- forum_main_pagepost_top -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-top" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Bottom pagination and postlink$main_elements['<!-- forum_main_pagepost_end -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-end" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Main section menu e.g. profile menu$main_elements['<!-- forum_main_menu -->'] = (!empty($forum_page['main_menu'])) ? '<div class="main-menu gen-content">'."\n\t".'<ul>'."\n\t\t".implode("\n\t\t", $forum_page['main_menu'])."\n\t".'</ul>'."\n".'</div>' : '';// Main section menu e.g. profile menuif (substr(FORUM_PAGE, 0, 5) == 'admin' && FORUM_PAGE_TYPE != 'paged'){	$main_elements['<!-- forum_admin_menu -->'] = '<div class="admin-menu gen-content">'."\n\t".'<ul>'."\n\t\t".generate_admin_menu(false)."\n\t".'</ul>'."\n".'</div>';	$forum_page['admin_sub'] = generate_admin_menu(true);		$main_elements['<!-- forum_admin_submenu -->'] = ($forum_page['admin_sub'] != '') ? '<div class="admin-submenu gen-content">'."\n\t".'<ul>'."\n\t\t".$forum_page['admin_sub']."\n\t".'</ul>'."\n".'</div>' : '';}($hook = get_hook('hd_main_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($main_elements),  array_values($main_elements), $tpl_main);unset($main_elements);// END MAIN SECTION INTERFACE ELEMENT SUBSTITUTION($hook = get_hook('hd_end')) ? eval($hook) : null;if (!defined('FORUM_HEADER'))	define('FORUM_HEADER', 1);
<?php/** * Handles logins, logouts, and password reset requests. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (isset($_GET['action']))	define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('li_start')) ? eval($hook) : null;// Load the login.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/login.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$errors = array();// Loginif (isset($_POST['form_sent']) && empty($action)){	$form_username = forum_trim($_POST['req_username']);	$form_password = forum_trim($_POST['req_password']);	$save_pass = isset($_POST['save_pass']);	($hook = get_hook('li_login_form_submitted')) ? eval($hook) : null;	// Get user info matching login attempt	$query = array(		'SELECT'	=> 'u.id, u.group_id, u.password, u.salt',		'FROM'		=> 'users AS u'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$query['WHERE'] = 'username=\''.$forum_db->escape($form_username).'\'';	else		$query['WHERE'] = 'LOWER(username)=LOWER(\''.$forum_db->escape($form_username).'\')';	($hook = get_hook('li_login_qr_get_login_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($user_id, $group_id, $db_password_hash, $salt) = $forum_db->fetch_row($result);	$authorized = false;	if (!empty($db_password_hash))	{		$sha1_in_db = (strlen($db_password_hash) == 40) ? true : false;		$form_password_hash = forum_hash($form_password, $salt);		if ($sha1_in_db && $db_password_hash == $form_password_hash)			$authorized = true;		else if ((!$sha1_in_db && $db_password_hash == md5($form_password)) || ($sha1_in_db && $db_password_hash == sha1($form_password)))		{			$authorized = true;			$salt = random_key(12);			$form_password_hash = forum_hash($form_password, $salt);			// There's an old MD5 hash or an unsalted SHA1 hash in the database, so we replace it			// with a randomly generated salt and a new, salted SHA1 hash			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$form_password_hash.'\', salt=\''.$forum_db->escape($salt).'\'',				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_hash')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	($hook = get_hook('li_login_pre_auth_message')) ? eval($hook) : null;	if (!$authorized)		$errors[] = sprintf($lang_login['Wrong user/pass']);	// Did everything go according to plan?	if (empty($errors))	{		// Update the status if this is the first time the user logged in		if ($group_id == FORUM_UNVERIFIED)		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$forum_config['o_default_user_group'],				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_group')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove this user's guest entry from the online list		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);		($hook = get_hook('li_login_qr_delete_online_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$expire = ($save_pass) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];		forum_setcookie($cookie_name, base64_encode($user_id.'|'.$form_password_hash.'|'.$expire.'|'.sha1($salt.$form_password_hash.forum_hash($expire, $salt))), $expire);		($hook = get_hook('li_login_pre_redirect')) ? eval($hook) : null;		redirect(forum_htmlencode($_POST['redirect_url']).((substr_count($_POST['redirect_url'], '?') == 1) ? '&amp;' : '?').'login=1', $lang_login['Login redirect']);	}}// Logoutelse if ($action == 'out'){	if ($forum_user['is_guest'] || !isset($_GET['id']) || $_GET['id'] != $forum_user['id'])	{		header('Location: '.forum_link($forum_url['index']));		exit;	}	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('logout'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('li_logout_selected')) ? eval($hook) : null;	// Remove user from "users online" list.	$query = array(		'DELETE'	=> 'online',		'WHERE'		=> 'user_id='.$forum_user['id']	);	($hook = get_hook('li_logout_qr_delete_online_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Update last_visit (make sure there's something to update it with)	if (isset($forum_user['logged']))	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_visit='.$forum_user['logged'],			'WHERE'		=> 'id='.$forum_user['id']		);		($hook = get_hook('li_logout_qr_update_last_visit')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	$expire = time() + 1209600;	forum_setcookie($cookie_name, base64_encode('1|'.random_key(8, false, true).'|'.$expire.'|'.random_key(8, false, true)), $expire);	// Reset tracked topics	set_tracked_topics(null);	($hook = get_hook('li_logout_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['index']), $lang_login['Logout redirect']);}// New passwordelse if ($action == 'forget' || $action == 'forget_2'){	if (!$forum_user['is_guest'])		header('Location: '.forum_link($forum_url['index']));	($hook = get_hook('li_forgot_pass_selected')) ? eval($hook) : null;	if (isset($_POST['form_sent']))	{		// User pressed the cancel button		if (isset($_POST['cancel']))			redirect(forum_link($forum_url['index']), $lang_login['New password cancel redirect']);		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$email = strtolower(forum_trim($_POST['req_email']));		if (!is_valid_email($email))			$errors[] = $lang_login['Invalid e-mail'];		($hook = get_hook('li_forgot_pass_end_validation')) ? eval($hook) : null;		// Did everything go according to plan?		if (empty($errors))		{			$users_with_email = array();			// Fetch user matching $email			$query = array(				'SELECT'	=> 'u.id, u.username, u.salt, u.last_email_sent',				'FROM'		=> 'users AS u',				'WHERE'		=> 'u.email=\''.$forum_db->escape($email).'\''			);			($hook = get_hook('li_forgot_pass_qr_get_user_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_user = $forum_db->fetch_assoc($result))			{				$users_with_email[] = $cur_user;			}			if (!empty($users_with_email))			{				($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null;				// Load the "activate password" template				$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_password.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = forum_trim(substr($mail_tpl, $first_crlf));				// Do the generic replacements first (they apply to all e-mails sent out here)				$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);				$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);				($hook = get_hook('li_forgot_pass_new_general_replace_data')) ? eval($hook) : null;				// Loop through users we found				foreach ($users_with_email as $cur_hit)				{					$forgot_pass_timeout = 3600;					($hook = get_hook('li_forgot_pass_pre_flood_check')) ? eval($hook) : null;					if ($cur_hit['last_email_sent'] != '' && (time() - $cur_hit['last_email_sent']) < $forgot_pass_timeout && (time() - $cur_hit['last_email_sent']) >= 0)						message(sprintf($lang_login['Email flood'], $forgot_pass_timeout));					// Generate a new password activation key					$new_password_key = random_key(8, true);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'activate_key=\''.$new_password_key.'\', last_email_sent = '.time(),						'WHERE'		=> 'id='.$cur_hit['id']					);					($hook = get_hook('li_forgot_pass_qr_set_activate_key')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Do the user specific replacements to the template					$cur_mail_message = str_replace('<username>', $cur_hit['username'], $mail_message);					$cur_mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_password_key'], array($cur_hit['id'], $new_password_key))), $cur_mail_message);					($hook = get_hook('li_forgot_pass_new_user_replace_data')) ? eval($hook) : null;					forum_mail($email, $mail_subject, $cur_mail_message);				}				message(sprintf($lang_login['Forget mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			}			else				$errors[] = sprintf($lang_login['No e-mail match'], forum_htmlencode($email));		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['request_password']);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_login['New password request'], forum_link($forum_url['request_password']))	);	($hook = get_hook('li_forgot_pass_pre_header_load')) ? eval($hook) : null;	define ('FORUM_PAGE', 'reqpass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('li_forgot_pass_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_login['New password request'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p class="important"><?php echo $lang_login['New password info'] ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_forgot_pass_pre_new_password_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['New password errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('li_forgot_pass_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['E-mail address'] ?></span> <small><?php echo $lang_login['E-mail address help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="req_email" value="<?php echo isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : '' ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('li_forgot_pass_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_forgot_pass_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="request_pass" value="<?php echo $lang_login['Submit password request'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('li_forgot_pass_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}if (!$forum_user['is_guest'])	header('Location: '.forum_link($forum_url['index']));// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['login']);$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'redirect_url'	=> '<input type="hidden" name="redirect_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_login['Login info'], $forum_config['o_board_title']), forum_link($forum_url['login'])));($hook = get_hook('li_login_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'login');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('li_login_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_login['Login info'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="content-head">			<p class="hn"><?php printf($lang_login['Login options'], '<a href="'.forum_link($forum_url['register']).'">'.$lang_login['register'].'</a>', '<a href="'.forum_link($forum_url['request_password']).'">'.$lang_login['Obtain pass'].'</a>') ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();	foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_pre_login_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['Login errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('li_login_pre_login_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_login_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Username'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '' ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_pass')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Password'] ?></span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" value="<?php echo isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : '' ?>" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_remember_me_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="save_pass" value="1" <?php echo isset($_POST['save_pass']) ? 'checked="checked" ' : '' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_login['Remember me'] ?></label>					</div>				</div><?php ($hook = get_hook('li_login_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_login_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="login" value="<?php echo $lang_login['Login'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('li_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php// Language definitions used in various scripts$lang_misc = array('Mark read redirect'		=>	'All topics and forums have been marked as read.','Mark forum read redirect'	=>	'All topics in the specified forum have been marked as read.',// Send e-mail'Form e-mail disabled'		=>	'The user you are trying to send an email to has disabled form email.','Form e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be sent:','No e-mail subject'			=>	'You must enter a subject.','No e-mail message'			=>	'You must enter a message.','Too long e-mail message'	=>	'Your message length is %s bytes. This exceeds the %s bytes limit.','Email flood'				=>	'At least %s seconds have to pass between sent emails. Please wait a while and try sending again.','E-mail sent redirect'		=>	'Email sent.','E-mail subject'			=>	'Subject','E-mail message'			=>	'Message','E-mail disclosure note'	=>	'<strong>Important!</strong> When you send an email using this form your email address will be disclosed to the recipient.','Write e-mail'				=>	'Compose email','Send forum e-mail'			=>	'Send email to %s via the forum',// Report'No reason'					=>	'You must enter a reason.','Report flood'				=>	'At least %s seconds have to pass between reports. Please wait a while and try sending again.','Report redirect'			=>	'Post reported.','Report post'				=>	'Report post','Reason'					=>	'Reason','Reason help'				=>	'Enter a short reason why you are reporting this post.','Too long reason'			=>	'Your report length is %s bytes. This exceeds the %s bytes limit.','Report errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before your report can be sent:',// Subscriptions'Already subscribed'		=>	'You are already subscribed to this topic.','Subscribe redirect'		=>	'Your subscription has been added.','Not subscribed'			=>	'You are not subscribed to this topic.','Unsubscribe redirect'		=>	'Your subscription has been removed.',// General forum and topic moderation'Moderate forum'			=>	'Moderate forum','Select'					=>	'Select',	// the header of a column of checkboxes'Move'						=>	'Move','Merge'						=>	'Merge','Open'						=>  'Open','Close'						=>  'Close','Select all'				=>	'Select all',// Hostname lookup'Hostname lookup'			=>	'The IP address is: %1$s<br />The host name is: %2$s<br /><br />%3$s','Show more users'			=>	'Show more users for this IP',// Moderate forum'Moderate forum head'		=>	'Moderate: %s','Topics'					=>	'Topics','Move topic'				=>	'Move topic','Move topics'				=>	'Move topics','Merge topics'				=>	'Merge topics','Delete topics'				=>	'Delete topics','Delete topic'				=>	'Delete topic','To new forum'				=>	'to a new forum','Move to'					=>	'Destination forum','Nowhere to move'			=>	'There are no forums into which you can move topics.','Leave redirect'			=>	'Leave a redirect topic in the forum from which the topic was moved.','Leave redirects'			=>	'Leave redirect topics in the forum from which topics were moved.','Leave merge redirects'		=>	'Leave redirect topics for those topics which were merged.','Move topic redirect'		=>	'Topic moved.','Move topics redirect'		=>	'Topics moved.','Merge topics redirect'		=>	'Topics merged.','Delete topic comply'		=>	'Are you sure you want to delete the selected topic?','Delete topics comply'		=>	'Are you sure you want to delete all the selected topics?','Delete topic redirect'		=>	'Topic deleted.','Delete topics redirect'	=>	'Topics deleted.','Open topic redirect'		=>	'Topic opened.','Open topics redirect'		=>	'Topics opened.','Close topic redirect'		=>	'Topic closed.','Close topics redirect'		=>	'Topics closed.','No topics selected'		=>	'You must select at least one topic.','Stick topic redirect'		=>	'Topic is now sticky.','Unstick topic redirect'	=>	'Topic no longer sticky.','Merge error'				=>	'You should select more than 1 topic to merge.',// Moderate topic'Posts'						=>	'Posts','Delete posts'				=>	'Delete selected posts','Split posts'				=>	'Split selected posts','Delete whole topic'		=>	'Delete whole topic','Moderate topic head'		=>	'Moderate topic: %s','New subject'				=>	'New topic subject:','Select post'				=>	'Select post', // Label for checkbox'Confirm post delete'		=>	'Confirm deletion of all selected posts','Confirm topic delete'		=>	'Confirm deletion of all selected topics','Confirm topic split'		=>	'Confirm splitting of all selected posts into a new topic','Confirm topic merge'		=>	'Confirm merging of all selected topics into one topic','Confirm post split'		=>	'Confirm splitting of all selected posts','Delete posts redirect'		=>	'Posts deleted.','Split posts redirect'		=>	'Posts split into a new topic.','No posts selected'			=>	'You must select at least one post.');
<?php/** * Adds a new post to the specified topic or a new topic to the specified forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_SKIP_CSRF_CONFIRM', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('po_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$tid = isset($_GET['tid']) ? intval($_GET['tid']) : 0;$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($tid < 1 && $fid < 1 || $tid > 0 && $fid > 0)	message($lang_common['Bad request']);// Fetch some info about the topic and/or the forumif ($tid){	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, s.user_id AS is_subscribed',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'f.id=t.forum_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			),			array(				'LEFT JOIN'		=> 'subscriptions AS s',				'ON'			=> '(t.id=s.topic_id AND s.user_id='.$forum_user['id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$tid	);	($hook = get_hook('po_qr_get_topic_forum_info')) ? eval($hook) : null;}else{	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics',		'FROM'		=> 'forums AS f',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid	);	($hook = get_hook('po_qr_get_forum_info')) ? eval($hook) : null;}$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_posting = $forum_db->fetch_assoc($result);if (!$cur_posting)	message($lang_common['Bad request']);$is_subscribed = $tid && $cur_posting['is_subscribed'];// Is someone trying to post into a redirect forum?if ($cur_posting['redirect_url'] != '')	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_posting['moderators'] != '') ? unserialize($cur_posting['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('po_pre_permission_check')) ? eval($hook) : null;// Do we have permission to post?if ((($tid && (($cur_posting['post_replies'] == '' && $forum_user['g_post_replies'] == '0') || $cur_posting['post_replies'] == '0')) ||	($fid && (($cur_posting['post_topics'] == '' && $forum_user['g_post_topics'] == '0') || $cur_posting['post_topics'] == '0')) ||	(isset($cur_posting['closed']) && $cur_posting['closed'] == '1')) &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);($hook = get_hook('po_posting_location_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();// Did someone just hit "Submit" or "Preview"?if (isset($_POST['form_sent'])){	($hook = get_hook('po_form_submitted')) ? eval($hook) : null;	// Make sure form_user is correct	if (($forum_user['is_guest'] && $_POST['form_user'] != 'Guest') || (!$forum_user['is_guest'] && $_POST['form_user'] != $forum_user['username']))		message($lang_common['Bad request']);	// Flood protection	if (!isset($_POST['preview']) && $forum_user['last_post'] != '' && (time() - $forum_user['last_post']) < $forum_user['g_post_flood'] && (time() - $forum_user['last_post']) >= 0)		$errors[] = sprintf($lang_post['Flood'], $forum_user['g_post_flood']);	// If it's a new topic	if ($fid)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// If the user is logged in we get the username and e-mail from $forum_user	if (!$forum_user['is_guest'])	{		$username = $forum_user['username'];		$email = $forum_user['email'];	}	// Otherwise it should be in $_POST	else	{		$username = forum_trim($_POST['req_username']);		$email = strtolower(forum_trim(($forum_config['p_force_guest_email'] == '1') ? $_POST['req_email'] : $_POST['email']));		// Load the profile.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';		// It's a guest, so we have to validate the username		$errors = array_merge($errors, validate_username($username));		if ($forum_config['p_force_guest_email'] == '1' || $email != '')		{			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			if (!is_valid_email($email))				$errors[] = $lang_post['Invalid e-mail'];			if (is_banned_email($email))				$errors[] = $lang_profile['Banned e-mail'];		}	}	// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid	if ($forum_user['is_admmod'] && (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url())))		$errors[] = $lang_post['CSRF token mismatch'];	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	$subscribe = isset($_POST['subscribe']) ? 1 : 0;	$now = time();	($hook = get_hook('po_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		// If it's a reply		if ($tid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $cur_posting['subject'],				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscr_action'	=> ($forum_config['o_subscriptions'] == '1' && $subscribe && !$is_subscribed) ? 1 : (($forum_config['o_subscriptions'] == '1' && !$subscribe && $is_subscribed) ? 2 : 0),				'topic_id'		=> $tid,				'forum_id'		=> $cur_posting['id'],				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_post')) ? eval($hook) : null;			add_post($post_info, $new_pid);		}		// If it's a new topic		else if ($fid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $subject,				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscribe'		=> ($forum_config['o_subscriptions'] == '1' && (isset($_POST['subscribe']) && $_POST['subscribe'] == '1')),				'forum_id'		=> $fid,				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_topic')) ? eval($hook) : null;			add_topic($post_info, $new_tid, $new_pid);		}		($hook = get_hook('po_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $new_pid), $lang_post['Post redirect']);	}}// Are we quoting someone?if ($tid && isset($_GET['qid'])){	$qid = intval($_GET['qid']);	if ($qid < 1)		message($lang_common['Bad request']);	// Get the quote and quote poster	$query = array(		'SELECT'	=> 'p.poster, p.message',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'id='.$qid.' AND topic_id='.$tid	);	($hook = get_hook('po_qr_get_quote')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$quote_poster_and_message = $forum_db->fetch_row($result);	if (!$quote_poster_and_message)	{		message($lang_common['Bad request']);	}	list($q_poster, $q_message) = $quote_poster_and_message;	($hook = get_hook('po_modify_quote_info')) ? eval($hook) : null;	if ($forum_config['p_message_bbcode'] == '1')	{		// If username contains a square bracket, we add "" or '' around it (so we know when it starts and ends)		if (strpos($q_poster, '[') !== false || strpos($q_poster, ']') !== false)		{			if (strpos($q_poster, '\'') !== false)				$q_poster = '"'.$q_poster.'"';			else				$q_poster = '\''.$q_poster.'\'';		}		else		{			// Get the characters at the start and end of $q_poster			$ends = utf8_substr($q_poster, 0, 1).utf8_substr($q_poster, -1, 1);			// Deal with quoting "Username" or 'Username' (becomes '"Username"' or "'Username'")			if ($ends == '\'\'')				$q_poster = '"'.$q_poster.'"';			else if ($ends == '""')				$q_poster = '\''.$q_poster.'\'';		}		$forum_page['quote'] = '[quote='.$q_poster.']'.$q_message.'[/quote]'."\n";	}	else		$forum_page['quote'] = '> '.$q_poster.' '.$lang_common['wrote'].':'."\n\n".'> '.$q_message."\n";}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = ($tid ? forum_link($forum_url['new_reply'], $tid) : forum_link($forum_url['new_topic'], $fid));$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'form_user'		=> '<input type="hidden" name="form_user" value="'.((!$forum_user['is_guest']) ? forum_htmlencode($forum_user['username']) : 'Guest').'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['text_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));$forum_page['crumbs'][] = array($cur_posting['forum_name'], forum_link($forum_url['forum'], array($cur_posting['id'], sef_friendly($cur_posting['forum_name']))));if ($tid)	$forum_page['crumbs'][] = array($cur_posting['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_posting['subject']))));$forum_page['crumbs'][] = $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'];($hook = get_hook('po_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'post');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('po_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($errors)){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['preview_message'] = parse_message(forum_trim($message), $hide_smilies);	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($tid) ? $lang_post['Reply byline'] : $lang_post['Topic byline']), '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	($hook = get_hook('po_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Preview reply'] : $lang_post['Preview new topic']; ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('po_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($tid) ? $lang_post['Compose your reply'] : $lang_post['Compose your topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('po_pre_post_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_post['Post errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?phpif ($forum_user['is_guest']){	$forum_page['email_form_name'] = ($forum_config['p_force_guest_email'] == '1') ? 'req_email' : 'email';	($hook = get_hook('po_pre_guest_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Guest post legend'] ?></strong></legend><?php ($hook = get_hook('po_pre_guest_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php if (isset($_POST['req_username'])) echo forum_htmlencode($username); ?>" size="35" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text<?php if ($forum_config['p_force_guest_email'] == '1') echo ' required' ?>">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest e-mail'] ?><?php if ($forum_config['p_force_guest_email'] == '1') echo ' <em>'.$lang_common['Required'].'</em>' ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="<?php echo $forum_page['email_form_name'] ?>" value="<?php if (isset($_POST[$forum_page['email_form_name']])) echo forum_htmlencode($email); ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('po_guest_info_fieldset_end')) ? eval($hook) : null;	// Reset counters	$forum_page['group_count'] = $forum_page['item_count'] = 0;}($hook = get_hook('po_pre_req_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?phpif ($fid){	($hook = get_hook('po_pre_req_subject')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required longtext">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" value="<?php if (isset($_POST['req_subject'])) echo forum_htmlencode($subject); ?>" size="70" maxlength="70" required /></span>					</div>				</div><?php}($hook = get_hook('po_pre_post_contents')) ? eval($hook) : null;?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo isset($_POST['req_message']) ? forum_htmlencode($message) : (isset($forum_page['quote']) ? forum_htmlencode($forum_page['quote']) : ''); ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1')	$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1"'.(isset($_POST['hide_smilies']) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';// Check/uncheck the checkbox for subscriptions depending on scenarioif (!$forum_user['is_guest'] && $forum_config['o_subscriptions'] == '1'){	$subscr_checked = false;	// If it's a preview	if (isset($_POST['preview']))		$subscr_checked = isset($_POST['subscribe']) ? true : false;	// If auto subscribed	else if ($forum_user['auto_notify'])		$subscr_checked = true;	// If already subscribed to the topic	else if ($is_subscribed)		$subscr_checked = true;	$forum_page['checkboxes']['subscribe'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="subscribe" value="1"'.($subscr_checked ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.($is_subscribed ? $lang_post['Stay subscribed'] : $lang_post['Subscribe']).'</label></div>';}($hook = get_hook('po_pre_optional_fieldset')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('po_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('po_pre_req_info_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('po_req_info_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($tid) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($tid) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php// Check if the topic review is to be displayedif ($tid && $forum_config['o_topic_review'] != '0'){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Get the amount of posts in the topic	$query = array(		'SELECT'	=> 'count(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid	);	($hook = get_hook('po_topic_review_qr_get_post_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['total_post_count'] = $forum_db->result($result, 0);	// Get posts to display in topic review	$query = array(		'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid,		'ORDER BY'	=> 'id DESC',		'LIMIT'		=> $forum_config['o_topic_review']	);	($hook = get_hook('po_topic_review_qr_get_topic_review_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$posts = array();	while ($cur_post = $forum_db->fetch_assoc($result))	{		$posts[] = $cur_post;	}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_post['Topic review'] ?></span></h2>	</div>	<div id="topic-review" class="main-content main-frm"><?php	$forum_page['item_count'] = 0;	$forum_page['item_total'] = count($posts);	foreach ($posts as $cur_post)	{		++$forum_page['item_count'];		$forum_page['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		// Generate the post heading		$forum_page['post_ident'] = array();		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['total_post_count'] - $forum_page['item_count'] + 1).'</span>';		$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf($lang_post['Post byline'], '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_post['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('po_topic_review_row_pre_display')) ? eval($hook) : null;?>		<div class="post<?php echo ($forum_page['item_count'] == 1) ? ' firstpost' : '' ?><?php echo ($forum_page['item_total'] == $forum_page['item_count']) ? ' lastpost' : '' ?>">			<div class="posthead">				<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_topic_review_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['message']."\n" ?><?php ($hook = get_hook('po_topic_review_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div>		</div><?php	}?>	</div><?php}$forum_id = $cur_posting['id'];($hook = get_hook('po_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Caching functions. * * This file contains all of the functions used to generate the cache files used by the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Safe create or write of cache files// Use LOCKfunction write_cache_file($file, $content){	$tmp_file = tempnam(FORUM_CACHE_DIR, md5($file.time().uniqid()));	if (!$tmp_file)	{		return false;	}	$fh = @/**/fopen($tmp_file, 'wb');	if (!$fh)	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	// Write	fwrite($fh, $content);	fclose($fh);	// Rename TMP to file	if (!@/**/rename($tmp_file, $file))	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	return true;}//// Generate the config cache PHP script//function generate_config_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_config_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the forum config from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'config AS c'	);	($hook = get_hook('ch_fn_generate_config_cache_qr_get_config')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_config_item = $forum_db->fetch_row($result))		$output[$cur_config_item[0]] = $cur_config_item[1];	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_config.php', '<?php'."\n\n".'define(\'FORUM_CONFIG_LOADED\', 1);'."\n\n".'$forum_config = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the bans cache PHP script//function generate_bans_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_bans_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the ban list from the DB	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id'	);	($hook = get_hook('ch_fn_generate_bans_cache_qr_get_bans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_ban = $forum_db->fetch_assoc($result))		$output[] = $cur_ban;	// Output ban list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_bans.php', '<?php'."\n\n".'define(\'FORUM_BANS_LOADED\', 1);'."\n\n".'$forum_bans = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write bans cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the ranks cache PHP script//function generate_ranks_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_ranks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the rank list from the DB	$query = array(		'SELECT'	=> 'r.*',		'FROM'		=> 'ranks AS r',		'ORDER BY'	=> 'r.min_posts'	);	($hook = get_hook('ch_fn_generate_ranks_cache_qr_get_ranks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_rank = $forum_db->fetch_assoc($result))		$output[] = $cur_rank;	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ranks.php', '<?php'."\n\n".'define(\'FORUM_RANKS_LOADED\', 1);'."\n\n".'$forum_ranks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write ranks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the forum stats cache PHP script//function generate_stats_cache(){	global $forum_db;	$stats = array();	$return = ($hook = get_hook('ch_fn_generate_stats_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	// Get last registered user info	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	// Get num topics and posts	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	$stats['cached'] = time();	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_stats.php', '<?php'."\n\n".'if (!defined(\'FORUM_STATS_LOADED\')) define(\'FORUM_STATS_LOADED\', 1);'."\n\n".'$forum_stats = '.var_export($stats, true).';'."\n\n".'?>'))	{		error('Unable to write stats cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}	unset($stats);}//// Generate the censor cache PHP script//function generate_censors_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_censors_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the censor list from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'censoring AS c',		'ORDER BY'	=> 'c.search_for'	);	($hook = get_hook('ch_fn_generate_censors_cache_qr_get_censored_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_censor = $forum_db->fetch_assoc($result))		$output[] = $cur_censor;	// Output censors list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_censors.php', '<?php'."\n\n".'define(\'FORUM_CENSORS_LOADED\', 1);'."\n\n".'$forum_censors = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write censor cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate quickjump cache PHP scripts//function generate_quickjump_cache($group_id = false){	global $forum_db, $lang_common, $forum_url, $forum_config, $forum_user, $base_url;	$return = ($hook = get_hook('ch_fn_generate_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);'."\n".'$forum_id = isset($forum_id) ? $forum_id : 0;'."\n\n".'?>';		$output .= '<form id="qjump" method="get" accept-charset="utf-8" action="'.$base_url.'/viewforum.php">'."\n\t".'<div class="frm-fld frm-select">'."\n\t\t".'<label for="qjump-select"><span><?php echo $lang_common[\'Jump to\'] ?>'.'</span></label><br />'."\n\t\t".'<span class="frm-input"><select id="qjump-select" name="id">'."\n";		// Get the list of categories and forums from the DB		$query = array(			'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',			'FROM'		=> 'categories AS c',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'c.id=f.cat_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$group_id.')'				)			),			'WHERE'		=> 'fp.read_forum IS NULL OR fp.read_forum=1',			'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_cats_and_forums')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forums = array();		while ($cur_forum = $forum_db->fetch_assoc($result))		{			$forums[] = $cur_forum;		}		$cur_category = 0;		$forum_count = 0;		$sef_friendly_names = array();		foreach ($forums as $cur_forum)		{			($hook = get_hook('ch_fn_generate_quickjump_cache_forum_loop_start')) ? eval($hook) : null;			if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?			{				if ($cur_category)					$output .= "\t\t\t".'</optgroup>'."\n";				$output .= "\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";				$cur_category = $cur_forum['cid'];			}			$sef_friendly_names[$cur_forum['fid']] = sef_friendly($cur_forum['forum_name']);			$redirect_tag = ($cur_forum['redirect_url'] != '') ? ' &gt;&gt;&gt;' : '';			$output .= "\t\t\t\t".'<option value="'.$cur_forum['fid'].'"<?php echo ($forum_id == '.$cur_forum['fid'].') ? \' selected="selected"\' : \'\' ?>>'.forum_htmlencode($cur_forum['forum_name']).$redirect_tag.'</option>'."\n";			$forum_count++;		}		$output .= "\t\t\t".'</optgroup>'."\n\t\t".'</select>'."\n\t\t".'<input type="submit" id="qjump-submit" value="<?php echo $lang_common[\'Go\'] ?>" /></span>'."\n\t".'</div>'."\n".'</form>'."\n";		$output .= '<script type="text/javascript">'."\n\t\t".'var forum_quickjump_url = "'.forum_link($forum_url['forum']).'";'."\n\t\t".'var sef_friendly_url_array = new Array('.count($forums).');';		foreach ($sef_friendly_names as $forum_id => $forum_name)			$output .= "\n\t".'sef_friendly_url_array['.$forum_id.'] = "'.forum_htmlencode($forum_name).'";';		$output .= "\n".'</script>'."\n";		if ($forum_count < 2)			$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);';		// Output quickjump as PHP code		if (!write_cache_file(FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php', $output))		{			error('Unable to write quickjump cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);		}	}}//// Clean quickjump cache PHP scripts//function clean_quickjump_cache($group_id = false){	global $forum_db;	$return = ($hook = get_hook('ch_fn_clean_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_clean_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		// Output quickjump as PHP code		$qj_cache_file = FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php';		if (file_exists($qj_cache_file))		{			unlink($qj_cache_file);		}	}}//// Generate the hooks cache PHP script//function generate_hooks_cache(){	global $forum_db, $forum_config, $base_url;	$return = ($hook = get_hook('ch_fn_generate_hooks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the hooks from the DB	$query = array(		'SELECT'	=> 'eh.id, eh.code, eh.extension_id, e.dependencies',		'FROM'		=> 'extension_hooks AS eh',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'extensions AS e',				'ON'			=> 'e.id=eh.extension_id'			)		),		'WHERE'		=> 'e.disabled=0',		'ORDER BY'	=> 'eh.priority, eh.installed'	);	($hook = get_hook('ch_fn_generate_hooks_cache_qr_get_hooks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_hook = $forum_db->fetch_assoc($result))	{		$load_ext_info = '$GLOBALS[\'ext_info_stack\'][] = array('."\n".			'\'id\'				=> \''.$cur_hook['extension_id'].'\','."\n".			'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'dependencies\'	=> array ('."\n";		$dependencies = explode('|', substr($cur_hook['dependencies'], 1, -1));		foreach ($dependencies as $cur_dependency)		{			// This happens if there are no dependencies because explode ends up returning an array with one empty element			if (empty($cur_dependency))				continue;			$load_ext_info .= '\''.$cur_dependency.'\'	=> array('."\n".				'\'id\'				=> \''.$cur_dependency.'\','."\n".				'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_dependency.'\','."\n".				'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_dependency.'\'),'."\n";		}		$load_ext_info .= ')'."\n".');'."\n".'$ext_info = $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$unload_ext_info = 'array_pop($GLOBALS[\'ext_info_stack\']);'."\n".'$ext_info = empty($GLOBALS[\'ext_info_stack\']) ? array() : $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$output[$cur_hook['id']][] = $load_ext_info."\n\n".$cur_hook['code']."\n\n".$unload_ext_info."\n";	}	// Output hooks as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_hooks.php', '<?php'."\n\n".'define(\'FORUM_HOOKS_LOADED\', 1);'."\n\n".'$forum_hooks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write hooks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the updates cache PHP script//function generate_updates_cache(){	global $forum_db, $forum_config;	$return = ($hook = get_hook('ch_fn_generate_updates_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of installed hotfix extensions	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id LIKE \'hotfix_%\''	);	($hook = get_hook('ch_fn_generate_updates_cache_qr_get_hotfixes')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$hotfixes = array();	while ($cur_ext_hotfix_id = $forum_db->fetch_row($result))	{		$hotfixes[] = urlencode($cur_ext_hotfix_id[0]);	}	// Contact the punbb.informer.com updates service	$result = get_remote_file('http://punbb.informer.com/update/?type=xml&version='.urlencode($forum_config['o_cur_version']).'&hotfixes='.implode(',', $hotfixes), 8);	// Make sure we got everything we need	if ($result != null && strpos($result['content'], '</updates>') !== false)	{		if (!defined('FORUM_XML_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/xml.php';		$output = xml_to_array(forum_trim($result['content']));		$output = current($output);		if (!empty($output['hotfix']) && is_array($output['hotfix']) && !is_array(current($output['hotfix'])))			$output['hotfix'] = array($output['hotfix']);		$output['cached'] = time();		$output['fail'] = false;	}	else	// If the update check failed, set the fail flag		$output = array('cached' => time(), 'fail' => true);	// This hook could potentially (and responsibly) be used by an extension to do its own little update check	($hook = get_hook('ch_fn_generate_updates_cache_write')) ? eval($hook) : null;	// Output update status as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_updates.php', '<?php'."\n\n".'if (!defined(\'FORUM_UPDATES_LOADED\')) define(\'FORUM_UPDATES_LOADED\', 1);'."\n\n".'$forum_updates = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write updates cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}function generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension){	$forum_ext_last_versions = array();	$forum_ext_repos = array();	foreach (array_unique(array_merge($repository_urls, $repository_url_by_extension)) as $url)	{		//Get repository timestamp		$remote_file = get_remote_file( $url.'/timestamp', 2);		$repository_timestamp = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);		unset($remote_file);		if (!is_numeric($repository_timestamp))			continue;		if (!isset( $forum_ext_repos[ $url ][ 'timestamp' ] ))			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		if ($forum_ext_repos[ $url ][ 'timestamp' ] <= $repository_timestamp)		{			foreach ($inst_exts as $ext)			{				$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastversion', 2);				$version = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);				unset($remote_file);				if (empty($version) || !preg_match('~^[0-9a-zA-Z\. +-]+$~u', $version))					continue;				$forum_ext_repos[ $url ][ 'extension_versions' ][ $ext['id'] ] = $version;				//If key with current extension exist in array, compare it with version in rep-ry				if (!isset($forum_ext_last_versions[ $ext['id'] ]) || ( version_compare($forum_ext_last_versions[ $ext['id'] ][ 'version' ], $version, '<') ) )				{					$forum_ext_last_versions[ $ext['id'] ] = array('version' => $version, 'repo_url' => $url);					$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastchanges', 2);					$last_changes = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);					unset($remote_file);					if ( !empty($last_changes) )						$forum_ext_last_versions[ $ext['id'] ][ 'changes' ] = $last_changes;				}			}			//Write timestamp to cache			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		}	}	if (array_keys($forum_ext_last_versions) != array_keys($inst_exts))		foreach ($inst_exts as $ext)			if ( !in_array($ext['id'], array_keys($forum_ext_last_versions)) )				$forum_ext_last_versions[$ext['id']] = array('version' => $ext['version'], 'repo_url' => '', 'changes' => '');	($hook = get_hook('ch_generate_ext_versions_cache_check_repository')) ? eval($hook) : null;	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ext_version_notifications.php', '<?php'."\n\n".'if (!defined(\'FORUM_EXT_VERSIONS_LOADED\')) define(\'FORUM_EXT_VERSIONS_LOADED\', 1);'."\n\n".'$forum_ext_repos = '.var_export($forum_ext_repos, true).';'."\n\n".' $forum_ext_last_versions = '.var_export($forum_ext_last_versions, true).";\n\n".'$forum_ext_versions_update_cache = '.time().";\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}define('FORUM_CACHE_FUNCTIONS_LOADED', 1);
<?php/** * Extension and hotfix management page. * * Allows administrators to control the extensions and hotfixes installed in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';if (!defined('FORUM_XML_FUNCTIONS_LOADED'))	require FORUM_ROOT.'include/xml.php';($hook = get_hook('aex_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ext.php';// Make sure we have XML supportif (!function_exists('xml_parser_create'))	message($lang_admin_ext['No XML support']);$section = isset($_GET['section']) ? $_GET['section'] : null;// Install an extensionif (isset($_GET['install']) || isset($_GET['install_hotfix'])){	($hook = get_hook('aex_install_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['install_cancel']))		redirect(forum_link(isset($_GET['install']) ? $forum_url['admin_extensions_manage'] : $forum_url['admin_extensions_hotfixes']), $lang_admin_common['Cancel redirect']);	$id = preg_replace('/[^0-9a-z_]/', '', isset($_GET['install']) ? $_GET['install'] : $_GET['install_hotfix']);	// Load manifest (either locally or from punbb.informer.com updates service)	if (isset($_GET['install']))		$manifest = is_readable(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') ? file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') : false;	else	{		$remote_file = get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16);		if (!empty($remote_file['content']))			$manifest = $remote_file['content'];	}	// Parse manifest.xml into an array and validate it	$ext_data = xml_to_array($manifest);	$errors = validate_manifest($ext_data, $id);	if (!empty($errors))		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_ext['Hotfix download failed']);	// Make sure we have an array of dependencies	if (!isset($ext_data['extension']['dependencies']['dependency']))		$ext_data['extension']['dependencies'] = array();	else if (!is_array(current($ext_data['extension']['dependencies'])))		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);	else		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.disabled=0'	);	($hook = get_hook('aex_install_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$installed_ext = array();	while ($row = $forum_db->fetch_assoc($result))		$installed_ext[] = $row['id'];	foreach ($ext_data['extension']['dependencies'] as $dependency)	{		if (!in_array($dependency, $installed_ext))			message(sprintf($lang_admin_ext['Missing dependency'], $dependency));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Install hotfix'] : $lang_admin_ext['Install extension']	);	if (isset($_POST['install_comply']))	{		($hook = get_hook('aex_install_comply_form_submitted')) ? eval($hook) : null;		// $ext_info contains some information about the extension being installed		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id,			'dependencies'	=> array()		);		foreach ($ext_data['extension']['dependencies'] as $dependency)		{			$ext_info['dependencies'][$dependency] = array(				'id'	=> $dependency,				'path'	=> FORUM_ROOT.'extensions/'.$dependency,				'url'	=> $base_url.'/extensions/'.$dependency,			);		}		// Is there some uninstall code to store in the db?		$uninstall_code = (isset($ext_data['extension']['uninstall']) && forum_trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(forum_trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';		// Is there an uninstall note to store in the db?		$uninstall_note = 'NULL';		foreach ($ext_data['extension']['note'] as $cur_note)		{			if ($cur_note['attributes']['type'] == 'uninstall' && forum_trim($cur_note['content']) != '')				$uninstall_note = '\''.$forum_db->escape(forum_trim($cur_note['content'])).'\'';		}		$notices = array();		// Is this a fresh install or an upgrade?		$query = array(			'SELECT'	=> 'e.version',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_install_comply_qr_get_current_ext_version')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ext_version = $forum_db->result($result);		if (!is_null($ext_version) && $ext_version !== false)		{			// EXT_CUR_VERSION will be available to the extension install routine (to facilitate extension upgrades)			define('EXT_CUR_VERSION', $ext_version);			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Update the existing extension			$query = array(				'UPDATE'	=> 'extensions',				'SET'		=> 'title=\''.$forum_db->escape($ext_data['extension']['title']).'\', version=\''.$forum_db->escape($ext_data['extension']['version']).'\', description=\''.$forum_db->escape($ext_data['extension']['description']).'\', author=\''.$forum_db->escape($ext_data['extension']['author']).'\', uninstall='.$uninstall_code.', uninstall_note='.$uninstall_note.', dependencies=\'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',				'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Delete the old hooks			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext_delete_hooks')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Add the new extension			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',			);			($hook = get_hook('aex_install_comply_qr_add_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Now insert the hooks		if (isset($ext_data['extension']['hooks']['hook']))		{			foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)  			{				$cur_hooks = explode(',', $ext_hook['attributes']['id']);				foreach ($cur_hooks as $cur_hook)				{					$query = array(						'INSERT'	=> 'id, extension_id, code, installed, priority',						'INTO'		=> 'extension_hooks',						'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)					);					($hook = get_hook('aex_install_comply_qr_add_hook')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}  			}  		}		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_install_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			if (strpos($id, 'hotfix_') === 0)				define('FORUM_PAGE', 'admin-extensions-hotfixes');			else				define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_install_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension installed info'] ?></p>			<ul class="data-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_install_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix installed']);			else				$forum_flash->add_info($lang_admin_ext['Extension installed']);			($hook = get_hook('aex_install_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix installed']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension installed']);		}	}	($hook = get_hook('aex_install_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	if (strpos($id, 'hotfix_') === 0)		define('FORUM_PAGE', 'admin-extensions-hotfixes');	else		define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['extension']['title']) ?></span></h3>						<p><?php  echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['extension']['description']) ?></p>					</div>				</div>			</div><?php	// Setup an array of warnings to display in the form	$form_warnings = array();	$forum_page['num_items'] = 0;	foreach ($ext_data['extension']['note'] as $cur_note)	{		if ($cur_note['attributes']['type'] == 'install')			$form_warnings[] = '<li>'.forum_htmlencode($cur_note['content']).'</li>';	}	if (version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext_data['extension']['maxtestedon']), '>'))		$form_warnings[] = '<li>'.$lang_admin_ext['Maxtestedon warning'].'</li>';	if (!empty($form_warnings))	{?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Install note'] ?></strong></p>				<ol class="info-list"><?php		echo implode("\n\t\t\t\t\t", $form_warnings)."\n";?>				</ol>			</div><?php	}?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="install_comply" value="<?php echo ((strpos($id, 'hotfix_') !== 0) ? $lang_admin_ext['Install extension'] : $lang_admin_ext['Install hotfix']) ?>" /></span>				<span class="cancel"><input type="submit" name="install_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aex_install_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Uninstall an extensionelse if (isset($_GET['uninstall'])){	// User pressed the cancel button	if (isset($_POST['uninstall_cancel']))		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('aex_uninstall_selected')) ? eval($hook) : null;	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['uninstall']);	// Fetch info about the extension	$query = array(		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_uninstall_qr_get_extension')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_data = $forum_db->fetch_assoc($result);	if (!$ext_data)	{		message($lang_common['Bad request']);	}	// Check dependancies	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''	);	($hook = get_hook('aex_uninstall_qr_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dependency = $forum_db->fetch_assoc($result);	if (!is_null($dependency) && $dependency !== false)	{		message(sprintf($lang_admin_ext['Uninstall dependency'], $dependency['id']));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Uninstall hotfix'] : $lang_admin_ext['Uninstall extension']	);	// If the user has confirmed the uninstall	if (isset($_POST['uninstall_comply']))	{		($hook = get_hook('aex_uninstall_comply_form_submitted')) ? eval($hook) : null;		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id		);		$notices = array();		// Run uninstall code		eval($ext_data['uninstall']);		// Now delete the extension and its hooks from the db		$query = array(			'DELETE'	=> 'extension_hooks',			'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_uninstall_delete_hooks')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'extensions',			'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_delete_extension')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_uninstall_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_uninstall_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension uninstalled info'] ?></p>			<ul class="info-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_uninstall_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix uninstalled']);			else				$forum_flash->add_info($lang_admin_ext['Extension uninstalled']);			($hook = get_hook('aex_uninstall_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix uninstalled']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension uninstalled']);		}	}	else	// If the user hasn't confirmed the uninstall	{		($hook = get_hook('aex_uninstall_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'extensions');		if (strpos($id, 'hotfix_') === 0)			define('FORUM_PAGE', 'admin-extensions-hotfixes');		else			define('FORUM_PAGE', 'admin-extensions-manage');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('aex_uninstall_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url ?>/admin/extensions.php?section=manage&amp;uninstall=<?php echo $id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['title']) ?></span></h3>						<p><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['description']) ?></p>					</div>				</div>			</div><?php if ($ext_data['uninstall_note'] != ''): ?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Uninstall note'] ?></strong></p>				<p><?php echo forum_htmlencode($ext_data['uninstall_note']) ?></p>			</div><?php endif; ?><?php if (strpos($id, 'hotfix_') !== 0): ?>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_ext['Installed extensions warn'] ?></p>			</div><?php endif; ?>				<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="uninstall_comply" value="<?php echo $lang_admin_ext['Uninstall'] ?>" /></span>				<span class="cancel"><input type="submit" name="uninstall_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('aex_uninstall_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Enable or disable an extensionelse if (isset($_GET['flip'])){	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['flip']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('flip'.$id)))		csrf_confirm_form();	($hook = get_hook('aex_flip_selected')) ? eval($hook) : null;	// Fetch the current status of the extension	$query = array(		'SELECT'	=> 'e.disabled',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_get_disabled_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_status = $forum_db->result($result);	// No rows	if (is_null($ext_status) || $ext_status === false)	{		message($lang_common['Bad request']);	}	// Are we disabling or enabling?	$disable = $ext_status == '0';	// Check dependancies	if ($disable)	{		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''		);		($hook = get_hook('aex_flip_qr_get_disable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependency = $forum_db->fetch_assoc($result);		if (!is_null($dependency) && $dependency !== false)		{			message(sprintf($lang_admin_ext['Disable dependency'], $dependency['id']));		}	}	else	{		$query = array(			'SELECT'	=> 'e.dependencies',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_flip_qr_get_enable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependencies = $forum_db->fetch_assoc($result);		$dependencies = explode('|', substr($dependencies['dependencies'], 1, -1));		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0'		);		($hook = get_hook('aex_flip_qr_check_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$installed_ext = array();		while ($row = $forum_db->fetch_assoc($result))			$installed_ext[] = $row['id'];		foreach ($dependencies as $dependency)		{			if (!empty($dependency) && !in_array($dependency, $installed_ext))				message(sprintf($lang_admin_ext['Disabled dependency'], $dependency));		}	}	$query = array(		'UPDATE'	=> 'extensions',		'SET'		=> 'disabled='.($disable ? '1' : '0'),		'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_update_disabled_status')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the hooks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_hooks_cache();	// Add flash message	if ($section == 'hotfixes')		$forum_flash->add_info(($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		$forum_flash->add_info(($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));	($hook = get_hook('aex_flip_pre_redirect')) ? eval($hook) : null;	if ($section == 'hotfixes')		redirect(forum_link($forum_url['admin_extensions_hotfixes']), ($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		redirect(forum_link($forum_url['admin_extensions_manage']), ($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));}($hook = get_hook('aex_new_action')) ? eval($hook) : null;// Generate an array of installed extensions$inst_exts = array();$query = array(	'SELECT'	=> 'e.*',	'FROM'		=> 'extensions AS e',	'ORDER BY'	=> 'e.title');($hook = get_hook('aex_qr_get_all_extensions')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_ext = $forum_db->fetch_assoc($result))	$inst_exts[$cur_ext['id']] = $cur_ext;// Hotfixes listif ($section == 'hotfixes'){	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage hotfixes'], forum_link($forum_url['admin_extensions_hotfixes']))	);	($hook = get_hook('aex_section_hotfixes_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-hotfixes');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_hotfixes_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Hotfixes available'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	// Loop through any available hotfixes	if (isset($forum_updates['hotfix']))	{		// If there's only one hotfix, add one layer of arrays so we can foreach over it		if (!is_array(current($forum_updates['hotfix'])))			$forum_updates['hotfix'] = array($forum_updates['hotfix']);		foreach ($forum_updates['hotfix'] as $hotfix)		{			if (!array_key_exists($hotfix['attributes']['id'], $inst_exts))			{				$forum_page['ext_item'][] = '<div class="ct-box info-box hotfix available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($hotfix['content']).'</span></h3>'."\n\t\t\t".'<ul>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], 'PunBB').'</span></li>'."\n\t\t\t\t".'<li><span>'.$lang_admin_ext['Hotfix description'].'</span></li>'."\n\t\t\t".'</ul>'."\n\t\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install_hotfix='.urlencode($hotfix['attributes']['id']).'">'.$lang_admin_ext['Install hotfix'].'</a></span></p>'."\n\t\t".'</div>';				++$num_exts;			}		}	}	($hook = get_hook('aex_section_hotfixes_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed hotfixes'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$installed_count = 0;	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') !== 0)				continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=hotfixes&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=hotfixese&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		($hook = get_hook('aex_section_hotfixes_pre_ext_actions')) ? eval($hook) : null;?>		<div class="ct-box info-box hotfix <?php echo $ext['disabled'] == '1' ? 'disabled' : 'enabled' ?>">			<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext['title']) ?><?php if ($ext['disabled'] == '1') echo ' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )' ?></span></h3>			<ul class="data-list">				<li><span><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext['version']) : $lang_admin_ext['Hotfix']) ?></span></li>				<li><span><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])) ?></span></li><?php if ($ext['description'] != ''): ?>				<li><span><?php echo forum_htmlencode($ext['description']) ?></span></li><?php endif; ?>			</ul>			<p class="options"><?php echo implode(' ', $forum_page['ext_actions']) ?></p>		</div><?php		$installed_count++;	}	if ($installed_count == 0)	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Extensions listelse{	if ($forum_config['o_check_for_versions'] == 1)	{		// Check for the new versions of the extensions istalled		$repository_urls = array('http://punbb.informer.com/extensions');		($hook = get_hook('aex_add_extensions_repository')) ? eval($hook) : null;		$repository_url_by_extension = array();		foreach (array_keys($inst_exts) as $id)			($hook = get_hook('aex_add_repository_for_'.$id)) ? eval($hook) : null;		if (is_readable(FORUM_CACHE_DIR.'cache_ext_version_notifications.php'))			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		//Get latest timestamp in cache		if (isset($forum_ext_repos))		{			$min_timestamp = 10000000000;			foreach ( $forum_ext_repos as $rep)				$min_timestamp = min($min_timestamp, $rep['timestamp']);		}		$update_hour = (isset($forum_ext_versions_update_cache) && (time() - $forum_ext_versions_update_cache > 60 * 60));		// Update last versions if there is no cahe or some extension was added/removed or one day has gone since last update		$update_new_versions_cache = !defined('FORUM_EXT_VERSIONS_LOADED') || (isset($forum_ext_last_versions) && array_diff($inst_exts, $forum_ext_last_versions) != array()) || $update_hour  || ( $update_hour && isset($min_timestamp) && (time() - $min_timestamp > 60*60*24));		($hook = get_hook('aex_before_update_checking')) ? eval($hook) : null;		if ($update_new_versions_cache)		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require_once FORUM_ROOT.'include/cache.php';			generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension);			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage extensions'], forum_link($forum_url['admin_extensions_manage']))	);	($hook = get_hook('aex_section_manage_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Extensions available'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	$d = dir(FORUM_ROOT.'extensions');	while (($entry = $d->read()) !== false)	{		if ($entry{0} != '.' && is_dir(FORUM_ROOT.'extensions/'.$entry))		{			if (preg_match('/[^0-9a-z_]/', $entry))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Illegal ID'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			else if (!file_exists(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml'))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Missing manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Parse manifest.xml into an array			$ext_data = is_readable(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml') ? xml_to_array(file_get_contents(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml')) : '';			if (empty($ext_data))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Failed parse manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Validate manifest			$errors = validate_manifest($ext_data, $entry);			if (!empty($errors))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.implode(' ', $errors).'</p>'."\n\t\t\t".'</div>';				++$num_failed;			}			else			{				if (!array_key_exists($entry, $inst_exts) || version_compare($inst_exts[$entry]['version'], $ext_data['extension']['version'], '!='))				{					$forum_page['ext_item'][] = '<div class="ct-box info-box extension available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext_data['extension']['title']).'</span></h3>'."\n\t\t\t".'<ul class="data-list">'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']).'</span></li>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])).'</span></li>'.(($ext_data['extension']['description'] != '') ? "\n\t\t\t\t".'<li><span>'.forum_htmlencode($ext_data['extension']['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install='.urlencode($entry).'">'.(isset($inst_exts[$entry]['version']) ? $lang_admin_ext['Upgrade extension'] : $lang_admin_ext['Install extension']).'</a></span></p>'."\n\t\t".'</div>';					++$num_exts;				}			}		}	}	$d->close();	($hook = get_hook('aex_section_install_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available extensions'] ?></p>		</div><?php	}	// If any of the extensions had errors	if ($num_failed)	{?>		<div class="ct-box data-box">			<p class="important"><?php echo $lang_admin_ext['Invalid extensions'] ?></p>			<?php echo implode("\n\t\t\t", $forum_page['ext_error'])."\n" ?>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed extensions'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$installed_count = 0;	$forum_page['ext_item'] = array();	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') === 0)			continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		if ($forum_config['o_check_for_versions'] == 1 && isset($forum_ext_last_versions[$id]) && version_compare($ext['version'], $forum_ext_last_versions[$id]['version'], '<'))			$forum_page['ext_actions']['latest_ver'] = '<span><a href="'.$forum_ext_last_versions[$id]['repo_url'].'/'.$id.'/'.$id.'.zip">'.$lang_admin_ext['Download latest version'].'</a></span>';		($hook = get_hook('aex_section_manage_pre_ext_actions')) ? eval($hook) : null;		if ($ext['disabled'] == '1')			$forum_page['ext_item'][] = '<div class="ct-box info-box extension disabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		else			$forum_page['ext_item'][] = '<div class="ct-box info-box extension enabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).'</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		$installed_count++;	}	if ($installed_count > 0)	{		echo "\t".implode("\n\t", $forum_page['ext_item'])."\n";	}	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed extensions'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}
<?php/** * Database updating script. * * Updates the database to the latest version. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('UPDATE_TO', '1.4b1');define('UPDATE_TO_DB_REVISION', 5);// The number of items to process per pageview (lower this if the update script times out during UTF-8 conversion)define('PER_PAGE', 300);define('MIN_MYSQL_VERSION', '4.1.2');// Make sure we are running at least PHP 5.0.0if (!function_exists('version_compare') || version_compare(PHP_VERSION, '5.0.0', '<'))	exit('You are running PHP version '.PHP_VERSION.'. '.UPDATE_TO.' requires at least PHP 5.0.0 to run properly. You must upgrade your PHP installation before you can continue.');define('FORUM_ROOT', '../');// Attempt to load the configuration file config.phpif (file_exists(FORUM_ROOT.'config.php'))	include FORUM_ROOT.'config.php';if (defined('PUN'))	define('FORUM', 1);// If FORUM isn't defined, config.php is missing or corrupt or we are outside the root directoryif (!defined('FORUM'))	exit('Cannot find config.php, are you sure it exists?');// Enable debug modeif (!defined('FORUM_DEBUG'))	define('FORUM_DEBUG', 1);// Turn on full PHP error reportingerror_reporting(E_ALL);// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Turn off PHP time limit@set_time_limit(0);// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', FORUM_ROOT.'cache/');// Load the functions scriptrequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If the request_uri is invalid try fix itif (!defined('FORUM_IGNORE_REQUEST_URI'))	forum_fix_request_uri();// Instruct DB abstraction layer that we don't want it to "SET NAMES". If we need to, we'll do it ourselves below.define('FORUM_NO_SET_NAMES', 1);// Load DB abstraction layer and try to connectrequire FORUM_ROOT.'include/dblayer/common_db.php';// Check current version$query = array(	'SELECT'	=> 'conf_value',	'FROM'		=> 'config',	'WHERE'		=> 'conf_name = \'o_cur_version\'');$result = $forum_db->query_build($query);$cur_version = $forum_db->result($result);if (version_compare($cur_version, '1.2', '<'))	error('Version mismatch. The database \''.$db_name.'\' doesn\'t seem to be running a PunBB database schema supported by this update script.', __FILE__, __LINE__);// If we've already done charset conversion in a previous update, we have to do SET NAMES$forum_db->set_names(strpos($cur_version, '1.3') === 0 ? 'utf8' : 'latin1');// If MySQL, make sure it's at least 4.1.2if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$mysql_info = $forum_db->get_version();	if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))		error('You are running MySQL version '.$mysql_version.'. PunBB '.UPDATE_TO.' requires at least MySQL '.MIN_MYSQL_VERSION.' to run properly. You must upgrade your MySQL installation before you can continue.');}// Get the forum config$query = array(	'SELECT'	=> '*',	'FROM'		=> 'config');$result = $forum_db->query_build($query);while ($cur_config_item = $forum_db->fetch_row($result))	$forum_config[$cur_config_item[0]] = $cur_config_item[1];// Check the database revision and the current versionif (isset($forum_config['o_database_revision']) && $forum_config['o_database_revision'] >= UPDATE_TO_DB_REVISION && version_compare($forum_config['o_cur_version'], UPDATE_TO, '>='))	error('Your database is already as up-to-date as this script can make it.');// If $base_url isn't set, use o_base_url from configif (!isset($base_url))	$base_url = $forum_config['o_base_url'];// There's no $forum_user, but we need the style element// We default to Oxygen if the default style is invalid (a 1.2 to 1.3 upgrade most likely)if (file_exists(FORUM_ROOT.'style/'.$forum_config['o_default_style'].'/'.$forum_config['o_default_style'].'.php'))	$forum_user['style'] = $forum_config['o_default_style'];else{	$forum_user['style'] = 'Oxygen';	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'Oxygen\'',		'WHERE'		=> 'conf_name = \'o_default_style\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Make sure the default language exists// We default to English if the default language is invalid (a 1.2 to 1.3 upgrade most likely)if (!file_exists(FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/common.php')){	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'English\'',		'WHERE'		=> 'conf_name = \'o_default_lang\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}//// Determines whether $str is UTF-8 encoded or not//function seems_utf8($str){	$str_len = strlen($str);	for ($i = 0; $i < $str_len; ++$i)	{		if (ord($str[$i]) < 0x80) continue; # 0bbbbbbb		else if ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; # 110bbbbb		else if ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; # 1110bbbb		else if ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; # 11110bbb		else if ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; # 111110bb		else if ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; # 1111110b		else return false; # Does not match any model		for ($j = 0; $j < $n; ++$j) # n bytes matching 10bbbbbb follow ?		{			if ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))				return false;		}	}	return true;}//// Translates the number from an HTML numeric entity into an UTF-8 character//function dcr2utf8($src){	$dest = '';	if ($src < 0)		return false;	else if ($src <= 0x007f)		$dest .= chr($src);	else if ($src <= 0x07ff)	{		$dest .= chr(0xc0 | ($src >> 6));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src == 0xFEFF)	{		// nop -- zap the BOM	}	else if ($src >= 0xD800 && $src <= 0xDFFF)	{		// found a surrogate		return false;	}	else if ($src <= 0xffff)	{		$dest .= chr(0xe0 | ($src >> 12));		$dest .= chr(0x80 | (($src >> 6) & 0x003f));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src <= 0x10ffff)	{		$dest .= chr(0xf0 | ($src >> 18));		$dest .= chr(0x80 | (($src >> 12) & 0x3f));		$dest .= chr(0x80 | (($src >> 6) & 0x3f));		$dest .= chr(0x80 | ($src & 0x3f));	}	else	{		// out of range		return false;	}	return $dest;}//// Attemts to convert $str from $old_charset to UTF-8. Also converts HTML entities (including numeric entities) to UTF-8 characters.//function convert_to_utf8(&$str, $old_charset){	if ($str == '')		return false;	$save = $str;	// Replace literal entities (for non-UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '<') && $old_charset == 'ISO-8859-1' || $old_charset == 'ISO-8859-15')		$str = html_entity_decode($str, ENT_QUOTES, $old_charset);	if (!seems_utf8($str))	{		if ($old_charset == 'ISO-8859-1')			$str = utf8_encode($str);		else if (function_exists('iconv'))			$str = iconv($old_charset, 'UTF-8', $str);		else if (function_exists('mb_convert_encoding'))			$str = mb_convert_encoding($str, 'UTF-8', $old_charset);	}	// Replace literal entities (for UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '>='))		$str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');	// Replace numeric entities	$str = preg_replace_callback('/&#([0-9]+);/', 'utf8_callback_1', $str);	$str = preg_replace_callback('/&#x([a-f0-9]+);/i', 'utf8_callback_2', $str);	return ($save != $str);}function utf8_callback_1($matches){	return dcr2utf8($matches[1]);}function utf8_callback_2($matches){	return dcr2utf8(hexdec($matches[1]));}//// Tries to determine whether post data in the database is UTF-8 encoded or not//function db_seems_utf8(){	global $db_type, $forum_db;	$seems_utf8 = true;	$query = array(		'SELECT'	=> 'MIN(id), MAX(id), COUNT(id)',		'FROM'		=> 'posts'	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($min_id, $max_id, $count_id) = $forum_db->fetch_row($result);	if ($count_id == 0)		return false;	// Get a random soup of data and check if it appears to be UTF-8	for ($i = 0; $i < 100; ++$i)	{		$id = ($i == 0) ? $min_id : (($i == 1) ? $max_id : rand($min_id, $max_id));		$query = array(			'SELECT'	=> 'p.message, p.poster, t.subject, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'		=> 't.id = p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'		=> 'f.id = t.forum_id'				)			),			'WHERE'		=> 'p.id >= '.$id,			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$random_row = $forum_db->fetch_row($result);		if (!seems_utf8($random_row[0].$random_row[1].$random_row[2].$random_row[3]))		{			$seems_utf8 = false;			break;		}	}	return $seems_utf8;}//// Safely converts text type columns into utf8 (MySQL only)// Function based on update_convert_table_utf8() from the Drupal project (http://drupal.org/)//function convert_table_utf8($table){	global $forum_db;	$types = array(		'char' 			=> 'binary',		'varchar'		=> 'varbinary',		'tinytext'		=> 'tinyblob',		'mediumtext'	=> 'mediumblob',		'text'			=> 'blob',		'longtext'		=> 'longblob'	);	// Set table default charset to utf8	$forum_db->query('ALTER TABLE `'.$table.'` CHARACTER SET utf8') or error(__FILE__, __LINE__);	// Find out which columns need converting and build SQL statements	$result = $forum_db->query('SHOW FULL COLUMNS FROM `'.$table.'`') or error(__FILE__, __LINE__);	while ($cur_column = $forum_db->fetch_assoc($result))	{		list($type) = explode('(', $cur_column['Type']);		if (isset($types[$type]) && strpos($cur_column['Collation'], 'utf8') === false)		{			$allow_null = ($cur_column['Null'] == 'YES');			$forum_db->alter_field($table, $cur_column['Field'], preg_replace('/'.$type.'/i', $types[$type], $cur_column['Type']), $allow_null, $cur_column['Default']);			$forum_db->alter_field($table, $cur_column['Field'], $cur_column['Type'].' CHARACTER SET utf8', $allow_null, $cur_column['Default']);		}	}}// Move avatars to DBfunction convert_avatars(){	global $forum_config, $forum_db;	$avatar_dir = FORUM_ROOT.'img/avatars/';	if (!is_dir($avatar_dir))	{		return false;	}	if ($handle = opendir($avatar_dir))	{		while (false !== ($avatar = readdir($handle)))		{			$avatar_file =  $avatar_dir.$avatar;			if (!is_file($avatar_file))			{				continue;			}			//echo $avatar_file;			$avatar = basename($avatar_file);			if (preg_match('/^(\d+)\.(png|gif|jpg)/', $avatar, $matches))			{				$user_id = intval($matches[1], 10);				$avatar_ext = $matches[2];				$avatar_type = FORUM_AVATAR_NONE;				if ($avatar_ext == 'png')				{					$avatar_type = FORUM_AVATAR_PNG;				}				else if ($avatar_ext == 'gif')				{					$avatar_type = FORUM_AVATAR_GIF;				}				else if ($avatar_ext == 'jpg')				{					$avatar_type = FORUM_AVATAR_JPG;				}				// Check user and avatar type				if ($user_id < 2 || $avatar_type == FORUM_AVATAR_NONE)				{					continue;				}				// Now check the width/height				list($width, $height, $type,) = @/**/getimagesize($avatar_file);				if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])				{					@/**/unlink($avatar_file);				}				else				{					// Save to DB					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$height.'\', avatar_width=\''.$width.'\'',						'WHERE'		=> 'id='.$user_id					);					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}			}		}		closedir($handle);	}}header('Content-type: text/html; charset=utf-8');// Empty all output buffers and stop bufferingwhile (@ob_end_clean());$stage = isset($_GET['stage']) ? $_GET['stage'] : '';$old_charset = isset($_GET['req_old_charset']) ? str_replace('ISO8859', 'ISO-8859', strtoupper($_GET['req_old_charset'])) : 'ISO-8859-1';$start_at = isset($_GET['start_at']) ? intval($_GET['start_at']) : 0;$query_str = '';switch ($stage){	// Show form	case '':		$db_seems_utf8 = db_seems_utf8();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update: Perform update of database tables</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<ul class="spaced">				<li class="warn"><span><strong>WARNING!</strong> This script will update your PunBB forum database. The update procedure might take anything from a few seconds to a few minutes (or in extreme cases, hours) depending on the speed of the server, the size of the forum database and the number of changes required.</span></li>				<li><span>Do not forget to make a backup of the database before continuing.</span></li>				<li><span>Did you read the update instructions in the documentation? If not, start there.</span></li><?phpif (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force']))){	if (!function_exists('iconv') && !function_exists('mb_convert_encoding'))	{?>				<li class="important"><strong>IMPORTANT!</strong> PunBB has detected that this PHP environment does not have support for the encoding mechanisms required to do UTF-8 conversion from character sets other than ISO-8859-1. What this means is that if the current character set is not ISO-8859-1, PunBB won't be able to convert your forum database to UTF-8 and you will have to do it manually. Instructions for doing manual charset conversion can be found in the update instructions.</span></li><?php	}}$current_url = get_current_url();if (strpos($cur_version, '1.2') === 0 && $db_seems_utf8 && !isset($_GET['force'])){?>				<li class="important"><span><strong>IMPORTANT!</strong> Based on a random selection of 100 posts, topic subjects, usernames and forum names from the database, it appears as if text in the database is currently UTF-8 encoded. This is a good thing. Based on this, the update process will not attempt to do charset conversion. If you have reason to believe that the charset conversion is required nonetheless, you can <a href="<?php echo $current_url.((substr_count($current_url, '?') == 1) ? '&amp;' : '?').'force=1' ?>">force the conversion to run</a>.</span></li><?php}?>			</ul>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo $current_url ?>">			<div class="hidden">				<input type="hidden" name="stage" value="start" />			</div><?php		if (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force'])))		{?>			<div class="ct-box info-box">				<p class="important"><strong>Enable conversion:</strong> When enabled this update script will, after it has made the required structural changes to the database, convert all text in the database from the current character set to UTF-8. This conversion is required if you're upgrading from PunBB 1.2 and you are not currently using an UTF-8 language pack.</p>				<p class="important"><strong>Current character set:</strong> If the primary language in your forum is English, you can leave this at the default value. However, if your forum is non-English, you should enter the character set of the primary language pack used in the forum.</p>			</div>			<div id="req-msg" class="req-warn ct-box error-box">				<p class="important"><strong>Important!</strong> All fields labelled <em>(Required)</em> must be completed before submitting this form.</p>			</div>			<fieldset class="frm-group group1">				<legend class="group-legend"><span>Charset conversion</span></legend>				<div class="sf-set set1">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld1" name="convert_charset" value="1" checked="checked" /></span>						<label for="fld1"><span>Enable conversion:</span> Perform database charset conversion.</label>					</div>				</div>				<div class="sf-set set2">					<div class="sf-box text required">						<label for="fld2"><span>Current character set: <em>(Required)</em></span> <small>Accept default for English forums otherwise the character set of the primary langauge pack.</small></label><br />						<span class="fld-input"><input type="text" id="fld2" name="req_old_charset" size="12" maxlength="20" value="ISO-8859-1" /></span>					</div>				</div>			</fieldset><?php		}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="start" value="Start update" /></span>			</div>		</form>	</div></div></div></div></body></html><?php		break;	// Start by updating the database structure	case 'start':		// Put back dropped search tables		if (!$forum_db->table_exists('search_cache') && in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'ident'			=> array(						'datatype'		=> 'VARCHAR(200)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'search_data'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					)				),				'PRIMARY KEY'	=> array('id'),				'INDEXES'		=> array(					'ident_idx'	=> array('ident(8)')				)			);			$forum_db->create_table('search_cache', $schema);			$schema = array(				'FIELDS'		=> array(					'post_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'word_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'subject_match'	=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					)				),				'INDEXES'		=> array(					'word_id_idx'	=> array('word_id'),					'post_id_idx'	=> array('post_id')				)			);			$forum_db->create_table('search_matches', $schema);			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'SERIAL',						'allow_null'	=> false					),					'word'			=> array(						'datatype'		=> 'VARCHAR(20)',						'allow_null'	=> false,						'default'		=> '\'\'',						'collation'		=> 'bin'					)				),				'PRIMARY KEY'	=> array('word'),				'INDEXES'		=> array(					'id_idx'	=> array('id')				)			);			$forum_db->create_table('search_words', $schema);		}		// Add the extensions table if it doesn't already exist		if (!$forum_db->table_exists('extensions'))		{			$schema = array(				'FIELDS'		=> array(					'id'				=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'title'				=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'version'			=> array(						'datatype'		=> 'VARCHAR(25)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'description'		=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'author'			=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'uninstall'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'uninstall_note'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'disabled'			=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					),					'dependencies'		=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					)				),				'PRIMARY KEY'	=> array('id')			);			$forum_db->create_table('extensions', $schema);		}		// Make sure the collation on "word" in the search_words table is utf8_bin		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW FULL COLUMNS FROM '.$forum_db->prefix.'search_words') or error(__FILE__, __LINE__);			while ($cur_column = $forum_db->fetch_assoc($result))			{				if ($cur_column['Field'] === 'word')				{					if ($cur_column['Collation'] !== 'utf8_bin')						$forum_db->alter_field('search_words', 'word', 'VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin', false, '');					break;				}			}		}		// Add uninstall_note field to extensions		$forum_db->add_field('extensions', 'uninstall_note', 'TEXT', true, null, 'uninstall');		// Drop uninstall_notes (plural) field		$forum_db->drop_field('extensions', 'uninstall_notes');		// Add disabled field to extensions		$forum_db->add_field('extensions', 'disabled', 'TINYINT(1)', false, 0, 'uninstall_note');		// Add dependencies field to extensions		$forum_db->add_field('extensions', 'dependencies', 'VARCHAR(255)', false, '', 'disabled');		// Add the extension_hooks table		if (!$forum_db->table_exists('extension_hooks'))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'extension_id'	=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'code'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'installed'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'priority'		=> array(						'datatype'		=> 'TINYINT(1) UNSIGNED',						'allow_null'	=> false,						'default'		=> '5'					)				),				'PRIMARY KEY'	=> array('id', 'extension_id')			);			$forum_db->create_table('extension_hooks', $schema);		}		// Add priority field to extension_hooks		$forum_db->add_field('extension_hooks', 'priority', 'TINYINT(1)', false, 5, 'installed');		// Extend id field in extension_hooks to 150		$forum_db->alter_field('extension_hooks', 'id', 'VARCHAR(150)', false, '');		// Make all e-mail fields VARCHAR(80)		$forum_db->alter_field('bans', 'email', 'VARCHAR(80)', true);		$forum_db->alter_field('posts', 'poster_email', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'email', 'VARCHAR(80)', false, '');		$forum_db->alter_field('users', 'jabber', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'msn', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'activate_string', 'VARCHAR(80)', true);		// Add avatars field		$forum_db->add_field('users', 'avatar', 'TINYINT(3) UNSIGNED', false, 0);		$forum_db->add_field('users', 'avatar_width', 'TINYINT(3) UNSIGNED', false, 0, 'avatar');		$forum_db->add_field('users', 'avatar_height', 'TINYINT(3) UNSIGNED', false, 0, 'avatar_width');		// Add new profile fileds		$forum_db->add_field('users', 'facebook', 'VARCHAR(100)', true, null, 'url');		$forum_db->add_field('users', 'twitter', 'VARCHAR(100)', true, null, 'facebook');		$forum_db->add_field('users', 'linkedin', 'VARCHAR(100)', true, null, 'twitter');		$forum_db->add_field('users', 'skype', 'VARCHAR(100)', true, null, 'linkedin');		// Add avatars to DB		convert_avatars();		// Remove NOT NULL from TEXT fields for consistency. See http://dev.punbb.org/changeset/596		$forum_db->alter_field('posts', 'message', 'TEXT', true);		$forum_db->alter_field('reports', 'message', 'TEXT', true);		// Drop fulltext indexes  (should only apply to SVN installs)		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$forum_db->drop_index('topics', 'subject_idx');			$forum_db->drop_index('posts', 'message_idx');		}		// Make all IP fields VARCHAR(39) to support IPv6		$forum_db->alter_field('posts', 'poster_ip', 'VARCHAR(39)', true);		$forum_db->alter_field('users', 'registration_ip', 'VARCHAR(39)', false, '0.0.0.0');		// Add the DST option to the users table		$forum_db->add_field('users', 'dst', 'TINYINT(1)', false, 0, 'timezone');		// Add the salt field to the users table		$forum_db->add_field('users', 'salt', 'VARCHAR(12)', true, null, 'password');		// Add the access_keys field to the users table		$forum_db->add_field('users', 'access_keys', 'TINYINT(1)', false, 0, 'show_sig');		// Add the CSRF token field to the online table		$forum_db->add_field('online', 'csrf_token', 'VARCHAR(40)', false, '', null);		// Add the prev_url field to the online table		$forum_db->add_field('online', 'prev_url', 'VARCHAR(255)', true, null, null);		// Add the last_post field to the online table		$forum_db->add_field('online', 'last_post', 'INT(10) UNSIGNED', true, null, null);		// Add the last_search field to the online table		$forum_db->add_field('online', 'last_search', 'INT(10) UNSIGNED', true, null, null);		// Drop use_avatar column from users table		$forum_db->drop_field('users', 'use_avatar');		// Drop save_pass column from users table		$forum_db->drop_field('users', 'save_pass');		// Drop g_edit_subjects_interval column from groups table		$forum_db->drop_field('groups', 'g_edit_subjects_interval');		$new_config = array();		// Add quote depth option		if (!array_key_exists('o_quote_depth', $forum_config))			$new_config[] = '\'o_quote_depth\', \'3\'';		// Add database revision number		if (!array_key_exists('o_database_revision', $forum_config))			$new_config[] = '\'o_database_revision\', \'0\'';		// Add default email setting option		if (!array_key_exists('o_default_email_setting', $forum_config))			$new_config[] = '\'o_default_email_setting\', \'1\'';		// Make sure we have o_additional_navlinks (was added in 1.2.1)		if (!array_key_exists('o_additional_navlinks', $forum_config))			$new_config[] = '\'o_additional_navlinks\', \'\'';		// Insert new config options o_sef		if (!array_key_exists('o_sef', $forum_config))			$new_config[] = '\'o_sef\', \'Default\'';		// Insert new config option o_topic_views		if (!array_key_exists('o_topic_views', $forum_config))			$new_config[] = '\'o_topic_views\', \'1\'';		// Insert new config option o_signatures		if (!array_key_exists('o_signatures', $forum_config))			$new_config[] = '\'o_signatures\', \'1\'';		// Insert new config option o_smtp_ssl		if (!array_key_exists('o_smtp_ssl', $forum_config))			$new_config[] = '\'o_smtp_ssl\', \'0\'';		// Insert new config option o_check_for_updates		if (!array_key_exists('o_check_for_updates', $forum_config))		{			$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;			$new_config[] = '\'o_check_for_updates\', \''.$check_for_updates.'\'';		}		// Insert new config option o_check_for_version		if (!array_key_exists('o_check_for_versions', $forum_config))		{			$o_check_for_versions = array_key_exists('o_check_for_updates', $forum_config) ? $forum_config['o_check_for_updates'] : $check_for_updates;			$new_config[] = '\'o_check_for_versions\', \''.$o_check_for_versions.'\'';		}		// Insert new config option o_announcement_heading		if (!array_key_exists('o_announcement_heading', $forum_config))			$new_config[] = '\'o_announcement_heading\', \'\'';		// Insert new config option o_default_dst		if (!array_key_exists('o_default_dst', $forum_config))			$new_config[] = '\'o_default_dst\', \'0\'';		// Insert new config option o_show_moderators		if (!array_key_exists('o_show_moderators', $forum_config))			$new_config[] = '\'o_show_moderators\', \'0\'';		if (!empty($new_config))		{			$query = array(				'INSERT'	=> 'conf_name, conf_value',				'INTO'		=> 'config',				'VALUES'	=> $new_config			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		unset($new_config);		// Server timezone is now simply the default timezone		if (!array_key_exists('o_default_timezone', $forum_config))		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_name = \'o_default_timezone\'',				'WHERE'		=> 'conf_name = \'o_server_timezone\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Increase visit timeout to 30 minutes (only if it hasn't been changed from the default)		if ($forum_config['o_timeout_visit'] == '600')		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'1800\'',				'WHERE'		=> 'conf_name = \'o_timeout_visit\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove obsolete g_post_polls permission from groups table		$forum_db->drop_field('groups', 'g_post_polls');		// Make room for multiple moderator groups		if (!$forum_db->field_exists('groups', 'g_moderator'))		{			// Add g_moderator column to groups table			$forum_db->add_field('groups', 'g_moderator', 'TINYINT(1)', false, 0, 'g_user_title');			// Give the moderator group moderator privileges			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_moderator = 1',				'WHERE'		=> 'g_id = 2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Shuffle the group IDs around a bit			$query = array(				'SELECT'	=> 'MAX(g_id) + 1',				'FROM'		=> 'groups'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$temp_id = $forum_db->result($result);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id='.$temp_id,				'WHERE'		=> 'g_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=2',				'WHERE'		=> 'g_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=3',				'WHERE'		=> 'g_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=4',				'WHERE'		=> 'g_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Update the default usergroup if it uses the old ID for the members group			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'3\'',				'WHERE'		=> 'conf_name = \'o_default_user_group\' and conf_value = \'4\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_edit_users config setting with new per-group permission		if (array_key_exists('p_mod_edit_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_edit_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_edit_users', 'TINYINT(1)', false, 0, 'g_moderator');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_edit_users = '.$forum_config['p_mod_edit_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_rename_users config setting with new per-group permission		if (array_key_exists('p_mod_rename_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_rename_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_rename_users', 'TINYINT(1)', false, 0, 'g_mod_edit_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_rename_users = '.$forum_config['p_mod_rename_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_change_passwords config setting with new per-group permission		if (array_key_exists('p_mod_change_passwords', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_change_passwords\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_change_passwords', 'TINYINT(1)', false, 0, 'g_mod_rename_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_change_passwords = '.$forum_config['p_mod_change_passwords'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_ban_users config setting with new per-group permission		if (array_key_exists('p_mod_ban_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_ban_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_ban_users', 'TINYINT(1)', false, 0, 'g_mod_change_passwords');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_ban_users = '.$forum_config['p_mod_ban_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// We need to add a unique index to avoid users having multiple rows in the online table		if (!$forum_db->index_exists('online', 'user_id_ident_idx'))		{			$query = array(				'DELETE'	=> 'online'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			switch ($db_type)			{				case 'mysql':				case 'mysql_innodb':				case 'mysqli':				case 'mysqli_innodb':					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident(25)'), true);					break;				default:					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident'), true);					break;			}		}		// Remove the redundant user_id_idx on the online table		$forum_db->drop_index('online', 'user_id_idx');		// Add an index to ident on the online table		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$forum_db->add_index('online', 'ident_idx', array('ident(25)'));				break;			default:				$forum_db->add_index('online', 'ident_idx', array('ident'));				break;		}		// Add an index to logged on the online table		$forum_db->add_index('online', 'logged_idx', array('logged'));		// Add an index on last_post in the topics table		$forum_db->add_index('topics', 'last_post_idx', array('last_post'));		// Remove any remnants of the now defunct post approval system		$forum_db->drop_field('forums', 'approval');		$forum_db->drop_field('groups', 'g_posts_approved');		$forum_db->drop_field('posts', 'approved');		// Add g_view_users field to groups table		$forum_db->add_field('groups', 'g_view_users', 'TINYINT(1)', false, 1, 'g_read_board');		// Add the time/date format settings to the user table		$forum_db->add_field('users', 'time_format', 'INT(10)', false, 0, 'dst');		$forum_db->add_field('users', 'date_format', 'INT(10)', false, 0, 'dst');		// Add the last_search column to the users table		$forum_db->add_field('users', 'last_search', 'INT(10)', true, null, 'last_post');		// Add the last_email_sent column to the users table and the g_send_email and		// g_email_flood columns to the groups table		$forum_db->add_field('users', 'last_email_sent', 'INT(10)', true, null, 'last_search');		$forum_db->add_field('groups', 'g_send_email', 'TINYINT(1)', false, 1, 'g_search_users');		$forum_db->add_field('groups', 'g_email_flood', 'INT(10)', false, 60, 'g_search_flood');		// Set non-default g_send_email and g_flood_email values properly		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_send_email = 0',			'WHERE'		=> 'g_id = 2'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_email_flood = 0',			'WHERE'		=> 'g_id IN (1,2,4)'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the auto notify/subscription option to the users table		$forum_db->add_field('users', 'auto_notify', 'TINYINT(1)', false, 0, 'notify_with_post');		// Add the first_post_id column to the topics table		if (!$forum_db->field_exists('topics', 'first_post_id'))		{			$forum_db->add_field('topics', 'first_post_id', 'INT(10) UNSIGNED', false, 0, 'posted');			$forum_db->add_index('topics', 'first_post_id_idx', array('first_post_id'));			// Now that we've added the column and indexed it, we need to give it correct data			$query = array(				'SELECT'	=> 'MIN(id) AS first_post, topic_id',				'FROM'		=> 'posts',				'GROUP BY'	=> 'topic_id'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_post = $forum_db->fetch_assoc($result))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'first_post_id = '.$cur_post['first_post'],					'WHERE'		=> 'id = '.$cur_post['topic_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Add the index for the post time		if (!$forum_db->index_exists('posts', 'posted_idx'))			$forum_db->add_index('posts', 'posted_idx', array('posted'));		// Move any users with the old unverified status to their new group		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id=0',			'WHERE'		=> 'group_id=32000'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the ban_creator column to the bans table		$forum_db->add_field('bans', 'ban_creator', 'INT(10) UNSIGNED', false, 0);		// Remove any hotfix extensions this update supersedes		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'extensions',			'WHERE'		=> 'id LIKE \'hotfix_%\' AND version != \''.UPDATE_TO.'\''		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_ext = $forum_db->fetch_assoc($result))		{			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'DELETE'	=> 'extensions',				'WHERE'		=> 'id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Should we do charset conversion or not?		if (strpos($cur_version, '1.3') === 0)			$query_str = '?stage=finish';		elseif (strpos($cur_version, '1.2') === 0 && isset($_GET['convert_charset']))			$query_str = '?stage=conv_misc&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_tables';		break;	// Convert config, categories, forums, groups, ranks and censor words	case 'conv_misc':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Convert config		echo 'Converting configuration'."<br />\n";		foreach ($forum_config as $conf_name => $conf_value)		{			if (convert_to_utf8($conf_value, $old_charset))			{				$query = array(					'UPDATE'	=> 'config',					'SET'		=> 'conf_value = \''.$forum_db->escape($conf_value).'\'',					'WHERE'		=> 'conf_name = \''.$conf_name.'\''				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert categories		echo 'Converting categories'."<br />\n";		$query = array(			'SELECT'	=> 'id, cat_name',			'FROM'		=> 'categories',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['cat_name'], $old_charset))			{				$query = array(					'UPDATE'	=> 'categories',					'SET'		=> 'cat_name = \''.$forum_db->escape($cur_item['cat_name']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert forums		echo 'Converting forums'."<br />\n";		$query = array(			'SELECT'	=> 'id, forum_name, forum_desc, moderators',			'FROM'		=> 'forums',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			$moderators = ($cur_item['moderators'] != '') ? unserialize($cur_item['moderators']) : array();			$moderators_utf8 = array();			foreach ($moderators as $mod_username => $mod_user_id)			{				convert_to_utf8($mod_username, $old_charset);				$moderators_utf8[$mod_username] = $mod_user_id;			}			if (convert_to_utf8($cur_item['forum_name'], $old_charset) | convert_to_utf8($cur_item['forum_desc'], $old_charset) || $moderators !== $moderators_utf8)			{				$cur_item['forum_desc'] = $cur_item['forum_desc'] != '' ? '\''.$forum_db->escape($cur_item['forum_desc']).'\'' : 'NULL';				$cur_item['moderators'] = !empty($moderators_utf8) ? '\''.$forum_db->escape(serialize($moderators_utf8)).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'forum_name = \''.$forum_db->escape($cur_item['forum_name']).'\', forum_desc = '.$cur_item['forum_desc'].', moderators = '.$cur_item['moderators'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert groups		echo 'Converting groups'."<br />\n";		$query = array(			'SELECT'	=> 'g_id, g_title, g_user_title',			'FROM'		=> 'groups',			'ORDER BY'	=> 'g_id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['g_title'], $old_charset) | convert_to_utf8($cur_item['g_user_title'], $old_charset))			{				$cur_item['g_user_title'] = $cur_item['g_user_title'] != '' ? '\''.$forum_db->escape($cur_item['g_user_title']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'groups',					'SET'		=> 'g_title = \''.$forum_db->escape($cur_item['g_title']).'\', g_user_title = '.$cur_item['g_user_title'].'',					'WHERE'		=> 'g_id = '.$cur_item['g_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert ranks		echo 'Converting ranks'."<br />\n";		$query = array(			'SELECT'	=> 'id, rank',			'FROM'		=> 'ranks',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['rank'], $old_charset))			{				$query = array(					'UPDATE'	=> 'ranks',					'SET'		=> 'rank = \''.$forum_db->escape($cur_item['rank']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert censor words		echo 'Converting censor words'."<br />\n";		$query = array(			'SELECT'	=> 'id, search_for, replace_with',			'FROM'		=> 'censoring',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['search_for'], $old_charset) | convert_to_utf8($cur_item['replace_with'], $old_charset))			{				$query = array(					'UPDATE'	=> 'censoring',					'SET'		=> 'search_for = \''.$forum_db->escape($cur_item['search_for']).'\', replace_with = \''.$forum_db->escape($cur_item['replace_with']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		break;	// Convert reports	case 'conv_reports':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first report ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'reports',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch reports to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting report '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['message'], $old_charset))			{				$query = array(					'UPDATE'	=> 'reports',					'SET'		=> 'message = \''.$forum_db->escape($cur_item['message']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert search words	case 'conv_search_words':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first search word ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'search_words',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch words to process this cycle		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting search word '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['word'], $old_charset))			{				$query = array(					'UPDATE'	=> 'search_words',					'SET'		=> 'word = \''.$forum_db->escape($cur_item['word']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert users	case 'conv_users':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)			$start_at = 2;		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, username, title, realname, location, signature, admin_note',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting user '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['username'], $old_charset) | convert_to_utf8($cur_item['title'], $old_charset) | convert_to_utf8($cur_item['realname'], $old_charset) | convert_to_utf8($cur_item['location'], $old_charset) | convert_to_utf8($cur_item['signature'], $old_charset) | convert_to_utf8($cur_item['admin_note'], $old_charset))			{				$cur_item['title'] = $cur_item['title'] != '' ? '\''.$forum_db->escape($cur_item['title']).'\'' : 'NULL';				$cur_item['realname'] = $cur_item['realname'] != '' ? '\''.$forum_db->escape($cur_item['realname']).'\'' : 'NULL';				$cur_item['location'] = $cur_item['location'] != '' ? '\''.$forum_db->escape($cur_item['location']).'\'' : 'NULL';				$cur_item['signature'] = $cur_item['signature'] != '' ? '\''.$forum_db->escape($cur_item['signature']).'\'' : 'NULL';				$cur_item['admin_note'] = $cur_item['admin_note'] != '' ? '\''.$forum_db->escape($cur_item['admin_note']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'username = \''.$forum_db->escape($cur_item['username']).'\', title = '.$cur_item['title'].', realname = '.$cur_item['realname'].', location = '.$cur_item['location'].', signature = '.$cur_item['signature'].', admin_note = '.$cur_item['admin_note'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert topics	case 'conv_topics':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first topic ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'topics',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch topics to process this cycle		$query = array(			'SELECT'	=> 'id, poster, subject, last_poster',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting topic '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['subject'], $old_charset) | convert_to_utf8($cur_item['last_poster'], $old_charset))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', subject = \''.$forum_db->escape($cur_item['subject']).'\', last_poster = \''.$forum_db->escape($cur_item['last_poster']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert posts	case 'conv_posts':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, poster, message, edited_by',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting post '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['message'], $old_charset) | convert_to_utf8($cur_item['edited_by'], $old_charset))			{				$cur_item['edited_by'] = $cur_item['edited_by'] != '' ? '\''.$forum_db->escape($cur_item['edited_by']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'posts',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', message = \''.$forum_db->escape($cur_item['message']).'\', edited_by = '.$cur_item['edited_by'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_tables';		else			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert table columns to utf8 (MySQL only)	case 'conv_tables':		// Do the cumbersome charset conversion of MySQL tables/columns		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			echo 'Converting table '.$forum_db->prefix.'bans<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'bans');			echo 'Converting table '.$forum_db->prefix.'categories<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'categories');			echo 'Converting table '.$forum_db->prefix.'censoring<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'censoring');			echo 'Converting table '.$forum_db->prefix.'config<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'config');			echo 'Converting table '.$forum_db->prefix.'extension_hooks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extension_hooks');			echo 'Converting table '.$forum_db->prefix.'extensions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extensions');			echo 'Converting table '.$forum_db->prefix.'forum_perms<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forum_perms');			echo 'Converting table '.$forum_db->prefix.'forums<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forums');			echo 'Converting table '.$forum_db->prefix.'groups<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'groups');			echo 'Converting table '.$forum_db->prefix.'online<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'online');			echo 'Converting table '.$forum_db->prefix.'posts<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'posts');			echo 'Converting table '.$forum_db->prefix.'ranks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'ranks');			echo 'Converting table '.$forum_db->prefix.'reports<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'reports');			echo 'Converting table '.$forum_db->prefix.'search_cache<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_cache');			echo 'Converting table '.$forum_db->prefix.'search_matches<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_matches');			echo 'Converting table '.$forum_db->prefix.'search_words<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_words');			echo 'Converting table '.$forum_db->prefix.'subscriptions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'subscriptions');			echo 'Converting table '.$forum_db->prefix.'topics<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'topics');			echo 'Converting table '.$forum_db->prefix.'users<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'users');		}		$query_str = '?stage=preparse_posts';		break;	case 'preparse_posts':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing post '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'message = \''.$forum_db->escape(preparse_bbcode($cur_item['message'], $preparse_errors)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=preparse_sigs';		else			$query_str = '?stage=preparse_posts&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	case 'preparse_sigs':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			$start_at = 1;		}		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, signature',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing signature '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'signature = \''.$forum_db->escape(preparse_bbcode($cur_item['signature'], $preparse_errors, true)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=finish';		else			$query_str = '?stage=preparse_sigs&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Show results page	case 'finish':		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// We update the version number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO.'\'',			'WHERE'		=> 'conf_name = \'o_cur_version\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// And the database revision number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO_DB_REVISION.'\'',			'WHERE'		=> 'conf_name = \'o_database_revision\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// This feels like a good time to synchronize the forums		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'forums'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			sync_forum($row[0]);		// We'll empty the search cache table as well (using DELETE FROM since SQLite does not support TRUNCATE TABLE)		$query = array(			'DELETE'	=> 'search_cache'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the online table too (we did not convert strings there)		$query = array(			'DELETE'	=> 'online'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Drop Base URL row from database config		if (array_key_exists('o_base_url', $forum_config))		{			// Generate new config file			$new_config = "<?php\n\n\$db_type = '$db_type';\n\$db_host = '$db_host';\n\$db_name = '".addslashes($db_name)."';\n\$db_username = '".addslashes($db_username)."';\n\$db_password = '".addslashes($db_password)."';\n\$db_prefix = '".addslashes($db_prefix)."';\n\$p_connect = ".($p_connect ? 'true' : 'false').";\n\n\$base_url = '$base_url';\n\n\$cookie_name = '$cookie_name';\n\$cookie_domain = '$cookie_domain';\n\$cookie_path = '$cookie_path';\n\$cookie_secure = $cookie_secure;\n\ndefine('FORUM', 1);";			// Attempt to write config.php and display it if writing fails			$written = false;			if (is_writable(FORUM_ROOT))			{				// We rename the old config.php file just in case				if (rename(FORUM_ROOT.'config.php', FORUM_ROOT.'config.old.'.time().'.php'))				{					$fh = @fopen(FORUM_ROOT.'config.php', 'wb');					if ($fh)					{						fwrite($fh, $new_config);						fclose($fh);						$written = true;					}				}			}			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'o_base_url\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update completed!</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<p>Your forum database was updated successfully.</p><?php if (isset($new_config) && !$written): ?>			<p>In order to complete the process, you must now update your config.php script. <strong>Copy and paste the text in the text box below into the file called config.php in the root directory of your PunBB installation</strong>. The file already exists, so you must edit/overwrite the contents of the old file. You may then <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> once config.php has been updated.</p><?php else: ?>			<p>You may <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> now.</p><?php endif; ?>		</div><?php if (isset($new_config) && !$written): ?>		<form class="frm-form" action="foo">			<fieldset class="frm-group group1">				<legend class="group-legend"><span>New config.php contents</span></legend>				<div class="txt-set set1">					<div class="txt-box textarea">						<label for="fld1"><span>Copy contents:</span></label>						<div class="txt-input"><span class="frm-input"><textarea id="fld1" readonly="readonly" cols="80" rows="20"><?php echo forum_htmlencode($new_config) ?></textarea></span></div>					</div>				</div>			</fieldset>		</form><?php endif; ?>	</div></div></div></div></body></html><?php		break;}$forum_db->end_transaction();$forum_db->close();if ($query_str != '')	exit('<script type="text/javascript">window.location="db_update.php'.$query_str.'"</script><br />JavaScript seems to be disabled. <a href="db_update.php'.$query_str.'">Click here to continue</a>.');
<?php/** * Loads various functions used to parse posts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Load the IDNA class for international url handlingrequire FORUM_ROOT.'include/idna/idna_convert.class.php';// Here you can add additional smilies if you like (please note that you must escape singlequote and backslash)$smilies = array(':)' => 'smile.png', '=)' => 'smile.png', ':|' => 'neutral.png', '=|' => 'neutral.png', ':(' => 'sad.png', '=(' => 'sad.png', ':D' => 'big_smile.png', '=D' => 'big_smile.png', ':o' => 'yikes.png', ':O' => 'yikes.png', ';)' => 'wink.png', ':/' => 'hmm.png', ':P' => 'tongue.png', ':p' => 'tongue.png', ':lol:' => 'lol.png', ':mad:' => 'mad.png', ':rolleyes:' => 'roll.png', ':cool:' => 'cool.png');($hook = get_hook('ps_start')) ? eval($hook) : null;//// Make sure all BBCodes are lower case and do a little cleanup//function preparse_bbcode($text, &$errors, $is_signature = false){	global $forum_config;	$return = ($hook = get_hook('ps_preparse_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($is_signature)	{		global $lang_profile;		if (preg_match('#\[quote(=(&quot;|"|\'|)(.*)\\1)?\]|\[/quote\]|\[code\]|\[/code\]|\[list(=([1a\*]))?\]|\[/list\]#i', $text))			$errors[] = $lang_profile['Signature quote/code/list'];	}	if ($forum_config['p_sig_bbcode'] == '1' && $is_signature || $forum_config['p_message_bbcode'] == '1' && !$is_signature)	{		// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)		if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)		{			list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);			$text = implode("\xc1", $outside);		}		// Tidy up lists		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$text = preg_replace($pattern, $replace, $text);		$text = str_replace('*'."\0".']', '*]', $text);		if ($forum_config['o_make_links'] == '1')		{			// Check Unicode support			$unicode = defined('FORUM_SUPPORT_PCRE_UNICODE');			$text = do_clickable($text, $unicode);		}		// If we split up the message before we have to concatenate it together again (code tags)		if (isset($inside))		{			$outside = explode("\xc1", $text);			$text = '';			$num_tokens = count($outside);			for ($i = 0; $i < $num_tokens; ++$i)			{				$text .= $outside[$i];				if (isset($inside[$i]))					$text .= '[code]'.$inside[$i].'[/code]';			}		}		$temp_text = false;		if (empty($errors))			$temp_text = preparse_tags($text, $errors, $is_signature);		if ($temp_text !== false)			$text = $temp_text;		// Remove empty tags		while ($new_text = preg_replace('/\[(b|u|i|h|colou?r|quote|code|img|url|email|list)(?:\=[^\]]*)?\]\[\/\1\]/', '', $text))		{			if ($new_text != $text)				$text = $new_text;			else				break;		}	}	$return = ($hook = get_hook('ps_preparse_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return forum_trim($text);}//// Check the structure of bbcode tags and fix simple mistakes where possible//function preparse_tags($text, &$errors, $is_signature = false){	global $lang_common, $forum_config;	// Start off by making some arrays of bbcode tags and what we need to do with each one	// List of all the tags	$tags = array('quote', 'code', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'img', 'list', '*', 'h');	// List of tags that we need to check are open (You could not put b,i,u in here then illegal nesting like [b][i][/b][/i] would be allowed)	$tags_opened = $tags;	// and tags we need to check are closed (the same as above, added it just in case)	$tags_closed = $tags;	// Tags we can nest and the depth they can be nested to (only quotes )	$tags_nested = array('quote' => $forum_config['o_quote_depth'], 'list' => 5, '*' => 5);	// Tags to ignore the contents of completely (just code)	$tags_ignore = array('code');	// Block tags, block tags can only go within another block tag, they cannot be in a normal tag	$tags_block = array('quote', 'code', 'list', 'h', '*');	// Inline tags, we do not allow new lines in these	$tags_inline = array('b', 'i', 'u', 'color', 'colour', 'h');	// Tags we trim interior space	$tags_trim = array('img');	// Tags we remove quotes from the argument	$tags_quotes = array('url', 'email', 'img');	// Tags we limit bbcode in	$tags_limit_bbcode = array(		'*' 	=> array('b', 'i', 'u', 'color', 'colour', 'url', 'email', 'list', 'img'),		'list' 	=> array('*'),		'url' 	=> array('b', 'i', 'u', 'color', 'colour', 'img'),		'email' => array('b', 'i', 'u', 'color', 'colour', 'img'),		'img' 	=> array()	);	// Tags we can automatically fix bad nesting	$tags_fix = array('quote', 'b', 'i', 'u', 'color', 'colour', 'url', 'email', 'h');	$return = ($hook = get_hook('ps_preparse_tags_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$split_text = preg_split("/(\[[\*a-zA-Z0-9-\/]*?(?:=.*?)?\])/", $text, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);	$open_tags = array('post');	$open_args = array('');	$opened_tag = 0;	$new_text = '';	$current_ignore = '';	$current_nest = '';	$current_depth = array();	$limit_bbcode = $tags;	foreach ($split_text as $current)	{		if ($current == '')			continue;		// Are we dealing with a tag?		if (substr($current, 0, 1) != '[' || substr($current, -1, 1) != ']')		{			// Its not a bbcode tag so we put it on the end and continue			// If we are nested too deeply don't add to the end			if ($current_nest)				continue;			$current = str_replace("\r\n", "\n", $current);			$current = str_replace("\r", "\n", $current);			if (in_array($open_tags[$opened_tag], $tags_inline) && strpos($current, "\n") !== false)			{				// Deal with new lines				$split_current = preg_split("/(\n\n+)/", $current, -1, PREG_SPLIT_DELIM_CAPTURE|PREG_SPLIT_NO_EMPTY);				$current = '';				if (!forum_trim($split_current[0], "\n")) // the first part is a linebreak so we need to handle any open tags first					array_unshift($split_current, '');				for ($i = 1; $i < count($split_current); $i += 2)				{					$temp_opened = array();					$temp_opened_arg = array();					$temp = $split_current[$i - 1];					while (!empty($open_tags))					{						$temp_tag = array_pop($open_tags);						$temp_arg = array_pop($open_args);						if (in_array($temp_tag , $tags_inline))						{							array_push($temp_opened, $temp_tag);							array_push($temp_opened_arg, $temp_arg);							$temp .= '[/'.$temp_tag.']';						}						else						{							array_push($open_tags, $temp_tag);							array_push($open_args, $temp_arg);							break;						}					}					$current .= $temp.$split_current[$i];					$temp = '';					while (!empty($temp_opened))					{						$temp_tag = array_pop($temp_opened);						$temp_arg = array_pop($temp_opened_arg);						if (empty($temp_arg))							$temp .= '['.$temp_tag.']';						else							$temp .= '['.$temp_tag.'='.$temp_arg.']';						array_push($open_tags, $temp_tag);						array_push($open_args, $temp_arg);					}					$current .= $temp;				}				if (array_key_exists($i - 1, $split_current))					$current .= $split_current[$i - 1];			}			if (in_array($open_tags[$opened_tag], $tags_trim))				$new_text .= forum_trim($current);			else				$new_text .= $current;			continue;		}		// Get the name of the tag		$current_arg = '';		if (strpos($current, '/') === 1)		{			$current_tag = substr($current, 2, -1);		}		else if (strpos($current, '=') === false)		{			$current_tag = substr($current, 1, -1);		}		else		{			$current_tag = substr($current, 1, strpos($current, '=')-1);			$current_arg = substr($current, strpos($current, '=')+1, -1);		}		$current_tag = strtolower($current_tag);		// Is the tag defined?		if (!in_array($current_tag, $tags))		{			// Its not a bbcode tag so we put it on the end and continue			if (!$current_nest)				$new_text .= $current;			continue;		}		// We definitely have a bbcode tag.		// Make the tag string lower case		if ($equalpos = strpos($current,'='))		{			// We have an argument for the tag which we don't want to make lowercase			if (strlen(substr($current, $equalpos)) == 2)			{				// Empty tag argument				$errors[] = sprintf($lang_common['BBCode error 6'], $current_tag);				return false;			}			$current = strtolower(substr($current, 0, $equalpos)).substr($current, $equalpos);		}		else			$current = strtolower($current);		//This is if we are currently in a tag which escapes other bbcode such as code		if ($current_ignore)		{			if ('[/'.$current_ignore.']' == $current)			{				// We've finished the ignored section				$current = '[/'.$current_tag.']';				$current_ignore = '';			}			$new_text .= $current;			continue;		}		if ($current_nest)		{			// We are currently too deeply nested so lets see if we are closing the tag or not.			if ($current_tag != $current_nest)				continue;			if (substr($current, 1, 1) == '/')				$current_depth[$current_nest]--;			else				$current_depth[$current_nest]++;			if ($current_depth[$current_nest] <= $tags_nested[$current_nest])				$current_nest = '';			continue;		}		// Check the current tag is allowed here		if (!in_array($current_tag, $limit_bbcode) && $current_tag != $open_tags[$opened_tag])		{			$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);			return false;		}		if (substr($current, 1, 1) == '/')		{			//This is if we are closing a tag			if ($opened_tag == 0 || !in_array($current_tag, $open_tags))			{				//We tried to close a tag which is not open				if (in_array($current_tag, $tags_opened))				{					$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);					return false;				}			}			else			{				// Check nesting				while (true)				{					// Nesting is ok					if ($open_tags[$opened_tag] == $current_tag)					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;						break;					}					// Nesting isn't ok, try to fix it					if (in_array($open_tags[$opened_tag], $tags_closed) && in_array($current_tag, $tags_closed))					{						if (in_array($current_tag, $open_tags))						{							$temp_opened = array();							$temp_opened_arg = array();							$temp = '';							while (!empty($open_tags))							{								$temp_tag = array_pop($open_tags);								$temp_arg = array_pop($open_args);								if (!in_array($temp_tag, $tags_fix))								{									// We couldn't fix nesting									$errors[] = sprintf($lang_common['BBCode error 5'], array_pop($temp_opened));									return false;								}								array_push($temp_opened, $temp_tag);								array_push($temp_opened_arg, $temp_arg);								if ($temp_tag == $current_tag)									break;								else									$temp .= '[/'.$temp_tag.']';							}							$current = $temp.$current;							$temp = '';							array_pop($temp_opened);							array_pop($temp_opened_arg);							while (!empty($temp_opened))							{								$temp_tag = array_pop($temp_opened);								$temp_arg = array_pop($temp_opened_arg);								if (empty($temp_arg))									$temp .= '['.$temp_tag.']';								else									$temp .= '['.$temp_tag.'='.$temp_arg.']';								array_push($open_tags, $temp_tag);								array_push($open_args, $temp_arg);							}							$current .= $temp;							$opened_tag--;							break;						}						else						{							// We couldn't fix nesting							$errors[] = sprintf($lang_common['BBCode error 1'], $current_tag);							return false;						}					}					else if (in_array($open_tags[$opened_tag], $tags_closed))						break;					else					{						array_pop($open_tags);						array_pop($open_args);						$opened_tag--;					}				}			}			if (in_array($current_tag, array_keys($tags_nested)))			{				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]--;			}			if (in_array($open_tags[$opened_tag], array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$open_tags[$opened_tag]];			else				$limit_bbcode = $tags;			$new_text .= $current;			continue;		}		else		{			// We are opening a tag			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			else				$limit_bbcode = $tags;			if (in_array($current_tag, $tags_block) && !in_array($open_tags[$opened_tag], $tags_block) && $opened_tag != 0)			{				// We tried to open a block tag within a non-block tag				$errors[] = sprintf($lang_common['BBCode error 3'], $current_tag, $open_tags[$opened_tag]);				return false;			}			if (in_array($current_tag, $tags_ignore))			{				// Its an ignore tag so we don't need to worry about whats inside it,				$current_ignore = $current_tag;				$new_text .= $current;				continue;			}			// Deal with nested tags			if (in_array($current_tag, $open_tags) && !in_array($current_tag, array_keys($tags_nested)))			{				// We nested a tag we shouldn't				$errors[] = sprintf($lang_common['BBCode error 4'], $current_tag);				return false;			}			else if (in_array($current_tag, array_keys($tags_nested)))			{				// We are allowed to nest this tag				if (isset($current_depth[$current_tag]))					$current_depth[$current_tag]++;				else					$current_depth[$current_tag] = 1;				// See if we are nested too deep				if ($current_depth[$current_tag] > $tags_nested[$current_tag])				{					$current_nest = $current_tag;					continue;				}			}			// Remove quotes from arguments for certain tags			if (strpos($current, '=') !== false && in_array($current_tag, $tags_quotes))			{				$current = preg_replace('#\['.$current_tag.'=("|\'|)(.*?)\\1\]\s*#i', '['.$current_tag.'=$2]', $current);			}			if (in_array($current_tag, array_keys($tags_limit_bbcode)))				$limit_bbcode = $tags_limit_bbcode[$current_tag];			$open_tags[] = $current_tag;			$open_args[] = $current_arg;			$opened_tag++;			$new_text .= $current;			continue;		}	}	// Check we closed all the tags we needed to	foreach ($tags_closed as $check)	{		if (in_array($check, $open_tags))		{			// We left an important tag open			$errors[] = sprintf($lang_common['BBCode error 5'], $check);			return false;		}	}	if ($current_ignore)	{		// We left an ignore tag open		$errors[] = sprintf($lang_common['BBCode error 5'], $current_ignore);		return false;	}	$return = ($hook = get_hook('ps_preparse_tags_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $new_text;}//// Preparse the contents of [list] bbcode//function preparse_list_tag($content, $type = '*', &$errors){	global $lang_common;	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('preparse_list_tag(\'$2\', \'$1\', $errors)');		$content = preg_replace($pattern, $replace, $content);	}	$items = explode('[*]', str_replace('\"', '"', $content));	$content = '';	foreach ($items as $item)	{		if (forum_trim($item) != '')			$content .= '[*'."\0".']'.str_replace('[/*]', '', forum_trim($item)).'[/*'."\0".']'."\n";	}	return '[list='.$type.']'."\n".$content.'[/list]';}//// Split text into chunks ($inside contains all text inside $start and $end, and $outside contains all text outside)//function split_text($text, $start, $end, &$errors, $retab = true){	global $forum_config, $lang_common;	$tokens = explode($start, $text);	$outside[] = $tokens[0];	$num_tokens = count($tokens);	for ($i = 1; $i < $num_tokens; ++$i)	{		$temp = explode($end, $tokens[$i]);		if (count($temp) != 2)		{			$errors[] = $lang_common['BBCode code problem'];			return array(null, array($text));		}		$inside[] = $temp[0];		$outside[] = $temp[1];	}	if ($forum_config['o_indent_num_spaces'] != 8 && $retab)	{		$spaces = str_repeat(' ', $forum_config['o_indent_num_spaces']);		$inside = str_replace("\t", $spaces, $inside);	}	return array($inside, $outside);}//// Truncate URL if longer than 55 characters (add http:// or ftp:// if missing)//function handle_url_tag($url, $link = '', $bbcode = false){	$return = ($hook = get_hook('ps_handle_url_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$full_url = str_replace(array(' ', '\'', '`', '"'), array('%20', '', '', ''), $url);	if (strpos($url, 'www.') === 0)			// If it starts with www, we add http://		$full_url = 'http://'.$full_url;	else if (strpos($url, 'ftp.') === 0)	// Else if it starts with ftp, we add ftp://		$full_url = 'ftp://'.$full_url;	else if (!preg_match('#^([a-z0-9]{3,6})://#', $url)) 	// Else if it doesn't start with abcdef://, we add http://		$full_url = 'http://'.$full_url;	if (defined('FORUM_SUPPORT_PCRE_UNICODE'))	{		$idn = new idna_convert();		$idn->set_parameter('encoding', 'utf8');		$idn->set_parameter('strict', false);		$full_url = $idn->encode($full_url);	}	// Ok, not very pretty :-)	if (!$bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$link_name = ($link == '' || $link == $url) ? $url : $link;			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link_name))			{				$link = $idn->decode($link_name);			}		}		$link = ($link == '' || $link == $url) ? ((utf8_strlen($url) > 55) ? utf8_substr($url, 0 , 39).'  '.utf8_substr($url, -10) : $url) : stripslashes($link);	}	$return = ($hook = get_hook('ps_handle_url_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($bbcode)	{		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $link))			{				$link = $idn->decode($link);			}		}		if ($full_url == $link)			return '[url]'.$link.'[/url]';		else			return '[url='.$full_url.']'.$link.'[/url]';	}	else		return '<a href="'.$full_url.'">'.$link.'</a>';}//// Turns an URL from the [img] tag into an <img> tag or a <a href...> tag//function handle_img_tag($url, $is_signature = false, $alt = null){	global $lang_common, $forum_user;	$return = ($hook = get_hook('ps_handle_img_tag_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($alt == null)		$alt = $url;	$img_tag = '<a href="'.$url.'">&lt;'.$lang_common['Image link'].'&gt;</a>';	if ($is_signature && $forum_user['show_img_sig'] != '0')		$img_tag = '<img class="sigimage" src="'.$url.'" alt="'.forum_htmlencode($alt).'" />';	else if (!$is_signature && $forum_user['show_img'] != '0')		$img_tag = '<span class="postimg"><img src="'.$url.'" alt="'.forum_htmlencode($alt).'" /></span>';	$return = ($hook = get_hook('ps_handle_img_tag_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $img_tag;}//// Parse the contents of [list] bbcode//function handle_list_tag($content, $type = '*'){	if (strlen($type) != 1)		$type = '*';	if (strpos($content,'[list') !== false)	{		$pattern = array('%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise');		$replace = array('handle_list_tag(\'$2\', \'$1\')');		$content = preg_replace($pattern, $replace, $content);	}	$content = preg_replace('#\s*\[\*\](.*?)\[/\*\]\s*#s', '<li><p>$1</p></li>', forum_trim($content));	if ($type == '*')		$content = '<ul>'.$content.'</ul>';	else		if ($type == 'a')			$content = '<ol class="alpha">'.$content.'</ol>';		else			$content = '<ol class="decimal">'.$content.'</ol>';	return '</p>'.$content.'<p>';}//// Convert BBCodes to their HTML equivalent//function do_bbcode($text, $is_signature = false){	global $lang_common, $forum_user, $forum_config;	$return = ($hook = get_hook('ps_do_bbcode_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strpos($text, '[quote') !== false)	{		$text = preg_replace('#\[quote=(&\#039;|&quot;|"|\'|)(.*?)\\1\]#e', '"</p><div class=\"quotebox\"><cite>".str_replace(array(\'[\', \'\\"\'), array(\'&#91;\', \'"\'), \'$2\')." ".$lang_common[\'wrote\'].":</cite><blockquote><p>"', $text);		$text = preg_replace('#\[quote\]\s*#', '</p><div class="quotebox"><blockquote><p>', $text);		$text = preg_replace('#\s*\[\/quote\]#S', '</p></blockquote></div><p>', $text);	}	if (!$is_signature)	{		$pattern[] = '%\[list(?:=([1a*]))?+\]((?:(?>.*?(?=\[list(?:=[1a*])?+\]|\[/list\]))|(?R))*)\[/list\]%ise';		$replace[] = 'handle_list_tag(\'$2\', \'$1\')';	}	$pattern[] = '#\[b\](.*?)\[/b\]#ms';	$pattern[] = '#\[i\](.*?)\[/i\]#ms';	$pattern[] = '#\[u\](.*?)\[/u\]#ms';	$pattern[] = '#\[colou?r=([a-zA-Z]{3,20}|\#[0-9a-fA-F]{6}|\#[0-9a-fA-F]{3})](.*?)\[/colou?r\]#ms';	$pattern[] = '#\[h\](.*?)\[/h\]#ms';	$replace[] = '<strong>$1</strong>';	$replace[] = '<em>$1</em>';	$replace[] = '<span class="bbu">$1</span>';	$replace[] = '<span style="color: $1">$2</span>';	$replace[] = '</p><h5>$1</h5><p>';	if (($is_signature && $forum_config['p_sig_img_tag'] == '1') || (!$is_signature && $forum_config['p_message_img_tag'] == '1'))	{		$pattern[] = '#\[img\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		$pattern[] = '#\[img=([^\[]*?)\]((ht|f)tps?://)([^\s<"]*?)\[/img\]#e';		if ($is_signature)		{			$replace[] = 'handle_img_tag(\'$1$3\', true)';			$replace[] = 'handle_img_tag(\'$2$4\', true, \'$1\')';		}		else		{			$replace[] = 'handle_img_tag(\'$1$3\', false)';			$replace[] = 'handle_img_tag(\'$2$4\', false, \'$1\')';		}	}	$pattern[] = '#\[url\]([^\[]*?)\[/url\]#e';	$pattern[] = '#\[url=([^\[]+?)\](.*?)\[/url\]#e';	$pattern[] = '#\[email\]([^\[]*?)\[/email\]#';	$pattern[] = '#\[email=([^\[]+?)\](.*?)\[/email\]#';	$replace[] = 'handle_url_tag(\'$1\')';	$replace[] = 'handle_url_tag(\'$1\', \'$2\')';	$replace[] = '<a href="mailto:$1">$1</a>';	$replace[] = '<a href="mailto:$1">$2</a>';	$return = ($hook = get_hook('ps_do_bbcode_replace')) ? eval($hook) : null;	if ($return != null)		return $return;	// This thing takes a while! :)	$text = preg_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_do_bbcode_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Make hyperlinks clickable//function do_clickable($text, $unicode = FALSE){	$text = ' '.$text;	if ($unicode)	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\p{Nd}\p{L}\-]+\.([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\p{Nd}\p{L}\-]+\.)*[\p{Nd}\p{L}\-]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ieu', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	else	{		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(https?|ftp|news){1}://([\w\-]+\.([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-]?)?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5://$6\', \'$5://$6\', true).stripslashes(\'$4$10$11$12\')', $text);		$text = preg_replace('#(?<=[\s\]\)])(<)?(\[)?(\()?([\'"]?)(www|ftp)\.(([\w\-]+\.)*[\w]+(:[0-9]+)?(/[^\s\[]*[^\s.,?!\[;:-])?)\4(?(3)(\)))(?(2)(\]))(?(1)(>))(?![^\s]*\[/(?:url|img)\])#ie', 'stripslashes(\'$1$2$3$4\').handle_url_tag(\'$5.$6\', \'$5.$6\', true).stripslashes(\'$4$10$11$12\')', $text);	}	return substr($text, 1);}//// Convert a series of smilies to images//function do_smilies($text){	global $forum_config, $base_url, $smilies;	$return = ($hook = get_hook('ps_do_smilies_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$text = ' '.$text.' ';	foreach ($smilies as $smiley_text => $smiley_img)	{		if (strpos($text, $smiley_text) !== false)			$text = preg_replace("#(?<=[>\s])".preg_quote($smiley_text, '#')."(?=\W)#m", '<img src="'.$base_url.'/img/smilies/'.$smiley_img.'" width="15" height="15" alt="'.substr($smiley_img, 0, strrpos($smiley_img, '.')).'" />', $text);	}	$return = ($hook = get_hook('ps_do_smilies_end')) ? eval($hook) : null;	return substr($text, 1, -1);}//// Parse message text//function parse_message($text, $hide_smilies){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_message_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_message_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_message_pre_split')) ? eval($hook) : null;	if ($return != null)		return $return;	// If the message contains a code tag we have to split it up (text within [code][/code] shouldn't be touched)	if (strpos($text, '[code]') !== false && strpos($text, '[/code]') !== false)	{		list($inside, $outside) = split_text($text, '[code]', '[/code]', $errors);		$text = implode("\xc1", $outside);	}	$return = ($hook = get_hook('ps_parse_message_post_split')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_message_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text);	if ($forum_config['o_smilies'] == '1' && $forum_user['show_smilies'] == '1' && $hide_smilies == '0')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_message_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_message_pre_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// If we split up the message before we have to concatenate it together again (code tags)	if (isset($inside))	{		$outside = explode("\xc1", $text);		$text = '';		$num_tokens = count($outside);		for ($i = 0; $i < $num_tokens; ++$i)		{			$text .= $outside[$i];			if (isset($inside[$i]))				$text .= '</p><div class="codebox"><pre><code>'.forum_trim($inside[$i], "\n\r").'</code></pre></div><p>';		}	}	$return = ($hook = get_hook('ps_parse_message_post_merge')) ? eval($hook) : null;	if ($return != null)		return $return;	// Add paragraph tag around post, but make sure there are no empty paragraphs	$text = preg_replace('#<br />\s*?<br />((\s*<br />)*)#i', "</p>$1<p>", $text);	$text = str_replace('<p><br />', '<p>', $text);	$text = str_replace('<p></p>', '', '<p>'.$text.'</p>');	$return = ($hook = get_hook('ps_parse_message_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}//// Parse signature text//function parse_signature($text){	global $forum_config, $lang_common, $forum_user;	$return = ($hook = get_hook('ps_parse_signature_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['o_censoring'] == '1')		$text = censor_words($text);	$return = ($hook = get_hook('ps_parse_signature_post_censor')) ? eval($hook) : null;	if ($return != null)		return $return;	// Convert applicable characters to HTML entities	$text = forum_htmlencode($text);	$return = ($hook = get_hook('ps_parse_signature_pre_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($forum_config['p_sig_bbcode'] == '1' && strpos($text, '[') !== false && strpos($text, ']') !== false)		$text = do_bbcode($text, true);	if ($forum_config['o_smilies_sig'] == '1' && $forum_user['show_smilies'] == '1')		$text = do_smilies($text);	$return = ($hook = get_hook('ps_parse_signature_post_bbcode')) ? eval($hook) : null;	if ($return != null)		return $return;	// Deal with newlines, tabs and multiple spaces	$pattern = array("\n", "\t", '  ', '  ');	$replace = array('<br />', '&nbsp; &nbsp; ', '&nbsp; ', ' &nbsp;');	$text = str_replace($pattern, $replace, $text);	$return = ($hook = get_hook('ps_parse_signature_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $text;}define('FORUM_PARSER_LOADED', 1);
