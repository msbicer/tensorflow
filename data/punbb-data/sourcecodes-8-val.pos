<?php/*** @version $Id: str_ireplace.php,v 1.2 2007/08/12 01:20:46 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to str_ireplace* Case-insensitive version of str_replace* Note: requires utf8_strtolower* Note: it's not fast and gets slower if $search / $replace is array* Notes: it's based on the assumption that the lower and uppercase* versions of a UTF-8 character will have the same length in bytes* which is currently true given the hash table to strtolower* @param string* @return string* @see http://www.php.net/str_ireplace* @see utf8_strtolower* @package utf8* @subpackage strings*/function utf8_ireplace($search, $replace, $str, $count = NULL){    if ( !is_array($search) ) {        $slen = strlen($search);        if ( $slen == 0 ) {            return $str;        }        $lendif = strlen($replace) - strlen($search);        $search = utf8_strtolower($search);        $search = preg_quote($search);        $lstr = utf8_strtolower($str);        $i = 0;        $matched = 0;        while ( preg_match('/(.*)'.$search.'/Us',$lstr, $matches) ) {            if ( $i === $count ) {                break;            }            $mlen = strlen($matches[0]);            $lstr = substr($lstr, $mlen);            $str = substr_replace($str, $replace, $matched+strlen($matches[1]), $slen);            $matched += $mlen + $lendif;            $i++;        }        return $str;    } else {        foreach ( array_keys($search) as $k ) {            if ( is_array($replace) ) {                if ( array_key_exists($k,$replace) ) {                    $str = utf8_ireplace($search[$k], $replace[$k], $str, $count);                } else {                    $str = utf8_ireplace($search[$k], '', $str, $count);                }            } else {                $str = utf8_ireplace($search[$k], $replace, $str, $count);            }        }        return $str;    }}
<?php/** * Loads the regular expressions used to match SEF URL requests to their proper URLs. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_rewrite_rules = array(	'/^topic[\/_-]?([0-9]+).*(new|last)[\/_-]?(posts?)(\.html?|\/)?$/i'														=>	'viewtopic.php?id=$1&action=$2',	'/^post[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'viewtopic.php?pid=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'view$1.php?id=$2&p=$4',	'/^feed[\/_-]?(rss|atom)[\/_-]?(f|t)(orum|opic)[\/_-]?([0-9]+)[\/_-]?(\.xml?|\/)?$/i'									=>	'extern.php?action=feed&$2id=$4&type=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*(\.html?|\/)?$/i'																		=>	'view$1.php?id=$2',	'/^new[\/_-]?reply[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?tid=$1',	'/^new[\/_-]?reply[\/_-]?([0-9]+)[\/_-]?quote[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'post.php?tid=$1&qid=$2',	'/^new[\/_-]?topic[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?fid=$1',	'/^(delete|edit)[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'$1.php?id=$2',	'/^(login|search|register)(\.html?|\/)?$/i'																				=>	'$1.php',	'/^logout[\/_-]?([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'																=>	'login.php?action=out&id=$1&csrf_token=$2',	'/^request[\/_-]?password(\.html?|\/)?$/i'																				=>	'login.php?action=forget',	'/^user[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'profile.php?id=$1',	'/^user[\/_-]?([0-9]+)[\/_-]?([a-z]+)(\.html?|\/)?$/i'																	=>	'profile.php?section=$2&id=$1',	'/^(delete)[\/_-]?(avatar|user)?[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'										=>	'profile.php?action=$1_$2&id=$3&csrf_token=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)[\/_-]([a-zA-Z0-9]+)(\.html?|\/)?$/i'									=>	'profile.php?action=change_$1&id=$3&key=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'														=>	'profile.php?action=change_$1&id=$3',	'/^search[\/_-]?advanced(\.html?|\/)?$/i'																				=>	'search.php?advanced=1',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_new&forum=$2',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_new&forum=$2&p=$4',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_recent&value=$2',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_recent&value=$2&p=$4',	'/^search[\/_-]?(new|recent|unanswered)(\.html?|\/)?$/i'																=>	'search.php?action=show_$1',	'/^search[\/_-]?(new|recent|unanswered)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'search.php?action=show_$1&p=$3',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)(\.html?|\/)?$/i'															=>	'search.php?action=show_subscriptions&user_id=$1',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'								=>	'search.php?action=show_subscriptions&user_id=$1&p=$3',	'/^search[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'search.php?search_id=$1',	'/^search[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'													=>	'search.php?search_id=$1&p=$3',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'search.php?action=show_user_$1&user_id=$2',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'					=>	'search.php?action=show_user_$1&user_id=$2&p=$4',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/?$/i'					=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/page\/([0-9]+)\/?$/i'	=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7&p=$8',	'/^search-k(.*)-([0-9-]+)-a(.*)-(message|subject|all)-([0-9]+)-(ASC|DESC)-(posts|topics).html?$/i'						=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search-k(.*)-(message|subject|all)-a(.*)-([0-9]+)-(ASC|DESC)-([0-9-]+)-(posts|topics)-p([0-9]+).html?$/i'			=>	'search.php?action=search&keywords=$1&author=$3&forum=$6&search_in=$2&sort_by=$4&sort_dir=$5&show_as=$7&p=$8',	'/^users(\.html?|\/)?$/i'																								=>	'userlist.php',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'						=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4&p=$6',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)(\.html?|\/)?$/i'													=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4',	'/^(email|report|subscribe|unsubscribe)[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'								=>	'misc.php?$1=$2&csrf_token=$3',	'/^(mark|rules)[\/_-]?(read)?[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'														=>	'misc.php?action=$1$2&csrf_token=$3',	'/^mark[\/_-](forum)[\/_-]?([0-9]+)[\/_-](read)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'										=>	'misc.php?action=markforumread&fid=$2&csrf_token=$4',	'/^help[\/_-]([a-z]+)(\.html?|\/)?$/i'																					=>	'help.php?section=$1',	'/^moderate[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'moderate.php?fid=$1',	'/^move_topics[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'															=>	'moderate.php?fid=$1&move_topics=$2',	'/^(open|close|stick|unstick)[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'							=>	'moderate.php?fid=$2&$1=$3&csrf_token=$4',	'/^moderate[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'moderate.php?fid=$1&p=$3',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'																=>	'moderate.php?fid=$1&tid=$2',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'moderate.php?fid=$1&tid=$2&p=$4',	'/^get_host[\/_-]?([0-9]+|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(\.html?|\/)?$/i'								=>	'moderate.php?get_host=$1',	'/^feed[\/_-]?(rss|atom)(\.xml?|\/)?$/i'																				=>	'extern.php?action=feed&type=$1');
<?php/*** @version $Id: substr_replace.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware substr_replace.* Note: requires utf8_substr to be loaded* @see http://www.php.net/substr_replace* @see utf8_strlen* @see utf8_substr*/function utf8_substr_replace($str, $repl, $start , $length = NULL ) {    preg_match_all('/./us', $str, $ar);    preg_match_all('/./us', $repl, $rar);    if( $length === NULL ) {        $length = utf8_strlen($str);    }    array_splice( $ar[0], $start, $length, $rar[0] );    return join('',$ar[0]);}
<?php/** * SEF URLs that use a file-like layout. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// These are the simple file based SEF URLs$forum_url = array(	'insertion_find'				=>  '.html',	'insertion_replace'				=>  '-$1.html',	'change_email'					=>	'change-email$1.html',	'change_email_key'				=>	'change-email$1-$2.html',	'change_password'				=>	'change-password$1.html',	'change_password_key'			=>	'change-password$1-$2.html',	'delete_user'					=>	'delete-user$1.html',	'delete'						=>	'delete$1.html',	'delete_avatar'					=>	'delete-avatar$1-$2.html',	'edit'							=>	'edit$1.html',	'email'							=>	'email$1.html',	'forum'							=>	'forum$1.html',	'forum_rss'						=>	'feed-rss-forum$1.xml',	'forum_atom'					=>	'feed-atom-forum$1.xml',	'help'							=>	'help-$1.html',	'index'							=>	'',	'index_rss'						=>	'feed-rss.xml',	'index_atom'					=>	'feed-atom.xml',	'login'							=>	'login.html',	'logout'						=>	'logout$1-$2.html',	'mark_read'						=>	'mark-read-$1.html',	'mark_forum_read'				=>	'mark-forum$1-read-$2.html',	'new_topic'						=>	'new-topic$1.html',	'new_reply'						=>	'new-reply$1.html',	'post'							=>	'post$1.html#p$1',	'profile_about'					=>	'user$1-about.html',	'profile_identity'				=>	'user$1-identity.html',	'profile_settings'				=>	'user$1-settings.html',	'profile_avatar'				=>	'user$1-avatar.html',	'profile_signature'				=>	'user$1-signature.html',	'profile_admin'					=>	'user$1-admin.html',	'quote'							=>	'new-reply$1quote$2.html',	'register'						=>	'register.html',	'report'						=>	'report$1.html',	'request_password'				=>	'request-password.html',	'rules'							=>	'rules.html',	'search'						=>	'search.html',	'search_advanced'				=>	'search-advanced.html',	'search_resultft'				=>	'search-k$1-$4-a$3-$5-$6-$2-$7.html',	'search_results'				=>	'search$1.html',	'search_new'					=>	'search-new.html',	'search_new_results'			=>	'search-new-$1.html',	'search_recent'					=>	'search-recent.html',	'search_recent_results'			=>	'search-recent-$1.html',	'search_unanswered'				=>	'search-unanswered.html',	'search_subscriptions'			=>	'search-subscriptions$1.html',	'search_user_posts'				=>	'search-posts-user$1.html',	'search_user_topics'			=>	'search-topics-user$1.html',	'subscribe'						=>	'subscribe$1-$2.html',	'topic'							=>	'topic$1.html',	'topic_rss'						=>	'feed-rss-topic$1.xml',	'topic_atom'					=>	'feed-atom-topic$1.xml',	'topic_new_posts'				=>	'topic$1new-posts.html',	'topic_last_post'				=>	'topic$1last-post.html',	'unsubscribe'					=>	'unsubscribe$1-$2.html',	'user'							=>	'user$1.html',	'users'							=>	'users.html',	'users_browse'					=>	'users/$4/$1$2-$3.html',	'page'							=>	'p$1',	'moderate_forum'				=>	'moderate$1.html',	'get_host'						=>	'get_host$1.html',	'move'							=>	'move_topics$1-$2.html',	'open'							=>	'open$1-$2-$3.html',	'close'							=>	'close$1-$2-$3.html',	'stick'							=>	'stick$1-$2-$3.html',	'unstick'						=>	'unstick$1-$2-$3.html',	'moderate_topic'				=>	'moderate$1-$2.html',	'admin_index'					=>	'admin/index.php',	'admin_bans'					=>	'admin/bans.php?sort_by=1',	'admin_categories'				=>	'admin/categories.php',	'admin_censoring'				=>	'admin/censoring.php',	'admin_extensions_manage'		=>	'admin/extensions.php?section=manage',	'admin_extensions_hotfixes'		=>	'admin/extensions.php?section=hotfixes',	'admin_forums'					=>	'admin/forums.php',	'admin_groups'					=>	'admin/groups.php',	'admin_loader'					=>	'admin/loader.php',	'admin_reindex'					=>	'admin/reindex.php',	'admin_settings_setup'			=>	'admin/settings.php?section=setup',	'admin_settings_features'		=>	'admin/settings.php?section=features',	'admin_settings_content'		=>	'admin/settings.php?section=content',	'admin_settings_email'			=>	'admin/settings.php?section=email',	'admin_settings_announcements'	=>	'admin/settings.php?section=announcements',	'admin_settings_registration'	=>	'admin/settings.php?section=registration',	'admin_settings_communications'	=>	'admin/settings.php?section=communications',	'admin_settings_maintenance'	=>	'admin/settings.php?section=maintenance',	'admin_prune'					=>	'admin/prune.php',	'admin_ranks'					=>	'admin/ranks.php',	'admin_reports'					=>	'admin/reports.php',	'admin_users'					=>	'admin/users.php');
<?php/** * Rank management page. * * Allows administrators to control the tags given to posters based on their post count. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('ark_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ranks.php';// Add a rankif (isset($_POST['add_rank'])){	$rank = forum_trim($_POST['new_rank']);	$min_posts = intval($_POST['new_min_posts']);	if ($rank == '')		message($lang_admin_ranks['Title message']);	if ($min_posts < 0)		message($lang_admin_ranks['Min posts message']);	($hook = get_hook('ark_add_rank_form_submitted')) ? eval($hook) : null;	// Make sure there isn't already a rank with the same min_posts value	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'ranks AS r',		'WHERE'		=> 'min_posts='.$min_posts	);	($hook = get_hook('ark_add_rank_qr_check_rank_collision')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$rank_num_min_posts = $forum_db->result($result);	if ($rank_num_min_posts !== false && $rank_num_min_posts > 0)		message(sprintf($lang_admin_ranks['Min posts occupied message'], $min_posts));	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$forum_db->escape($rank).'\', '.$min_posts	);	($hook = get_hook('ark_add_rank_qr_add_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank added']);	($hook = get_hook('ark_add_rank_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank added']);}// Update a rankelse if (isset($_POST['update'])){	$id = intval(key($_POST['update']));	$rank = forum_trim($_POST['rank'][$id]);	$min_posts = intval($_POST['min_posts'][$id]);	if ($rank == '')		message($lang_admin_ranks['Title message']);	if ($min_posts < 0)		message($lang_admin_ranks['Min posts message']);	($hook = get_hook('ark_update_form_submitted')) ? eval($hook) : null;	// Make sure there isn't already a rank with the same min_posts value	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'ranks AS r',		'WHERE'		=> 'id!='.$id.' AND min_posts='.$min_posts	);	($hook = get_hook('ark_update_qr_check_rank_collision')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$rank_num_min_posts = $forum_db->result($result);	if ($rank_num_min_posts !== false && $rank_num_min_posts > 0)		message(sprintf($lang_admin_ranks['Min posts occupied message'], $min_posts));	$query = array(		'UPDATE'	=> 'ranks',		'SET'		=> 'rank=\''.$forum_db->escape($rank).'\', min_posts='.$min_posts,		'WHERE'		=> 'id='.$id	);	($hook = get_hook('ark_update_qr_update_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank updated']);	($hook = get_hook('ark_update_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank updated']);}// Remove a rankelse if (isset($_POST['remove'])){	$id = intval(key($_POST['remove']));	($hook = get_hook('ark_remove_form_submitted')) ? eval($hook) : null;	$query = array(		'DELETE'	=> 'ranks',		'WHERE'		=> 'id='.$id	);	($hook = get_hook('ark_remove_qr_delete_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank removed']);	($hook = get_hook('ark_remove_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank removed']);}// Load the cached ranksif (file_exists(FORUM_CACHE_DIR.'cache_ranks.php'))	include FORUM_CACHE_DIR.'cache_ranks.php';if (!defined('FORUM_RANKS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	require FORUM_CACHE_DIR.'cache_ranks.php';}// Setup the form$forum_page['fld_count'] = $forum_page['item_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Ranks'], forum_link($forum_url['admin_ranks'])));($hook = get_hook('ark_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-ranks');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ark_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ranks['Rank head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_ranks']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_ranks']).'?action=foo') ?>" />			</div>			<div class="ct-box" id="info-ranks-intro">				<p><?php printf($lang_admin_ranks['Add rank intro'], '<strong><a href="'.forum_link($forum_url['admin_settings_features']).'">'.$lang_admin_common['Settings'].' - '.$lang_admin_common['Features'].'</a></strong>') ?></p>			</div>			<fieldset class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_ranks['Add rank legend'] ?></strong></legend><?php ($hook = get_hook('ark_pre_add_rank_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php echo $lang_admin_ranks['New rank'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('ark_pre_add_rank_title')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Rank title label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_rank" size="24" maxlength="50" required /></span>						</div><?php ($hook = get_hook('ark_pre_add_rank_min_posts')) ? eval($hook) : null; ?>						<div class="mf-field text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Min posts label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_min_posts" size="7" maxlength="7" required /></span>						</div><?php ($hook = get_hook('ark_pre_add_rank_submit')) ? eval($hook) : null; ?>						<div class="mf-field text">							<span class="submit"><input type="submit" name="add_rank" value="<?php echo $lang_admin_ranks['Add rank'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('ark_pre_add_rank_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('ark_add_rank_fieldset_end')) ? eval($hook) : null; ?>			</fieldset>		</form><?phpif (!empty($forum_ranks)){	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_ranks']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_ranks']).'?action=foo') ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_ranks['Existing ranks legend'] ?></span></legend><?php	foreach ($forum_ranks as $rank_key => $cur_rank)	{	?><?php ($hook = get_hook('ark_pre_edit_cur_rank_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set mf-extra set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_ranks['Existing rank'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('ark_pre_edit_cur_rank_title')) ? eval($hook) : null; ?>						<div class="mf-field text mf-field1">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_ranks['Rank title label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="rank[<?php echo $cur_rank['id'] ?>]" value="<?php echo forum_htmlencode($cur_rank['rank']) ?>" size="24" maxlength="50" required /></span>						</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_min_posts')) ? eval($hook) : null; ?>						<div class="mf-field text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Min posts label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="min_posts[<?php echo $cur_rank['id'] ?>]" value="<?php echo $cur_rank['min_posts'] ?>" size="7" maxlength="7" required /></span>						</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_submit')) ? eval($hook) : null; ?>						<div class="mf-field text">							<span class="submit"><input type="submit" name="update[<?php echo $cur_rank['id'] ?>]" value="<?php echo $lang_admin_ranks['Update'] ?>" /> <input type="submit" name="remove[<?php echo $cur_rank['id'] ?>]" value="<?php echo $lang_admin_ranks['Remove'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('ark_edit_cur_rank_fieldset_end')) ? eval($hook) : null;	}?>			</fieldset>		</form>	</div><?php}else{?>		<div class="frm-form">			<div class="ct-box">				<p><?php echo $lang_admin_ranks['No ranks'] ?></p>			</div>		</div>	</div><?php}($hook = get_hook('ark_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/*** @version $Id: stristr.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to stristr* Find first occurrence of a string using case insensitive comparison* Note: requires utf8_strtolower* @param string* @param string* @return int* @see http://www.php.net/strcasecmp* @see utf8_strtolower* @package utf8* @subpackage strings*/function utf8_stristr($str, $search) {    if ( strlen($search) == 0 ) {        return $str;    }    $lstr = utf8_strtolower($str);    $lsearch = utf8_strtolower($search);    preg_match('/^(.*)'.preg_quote($lsearch).'/Us',$lstr, $matches);    if ( count($matches) == 2 ) {        return substr($str, strlen($matches[1]));    }    return FALSE;}
<?php/** * Ban management page. * * Allows administrators and moderators to create, modify, and delete bans. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('aba_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0'))	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_bans.php';// Add/edit a ban (stage 1)if (isset($_REQUEST['add_ban']) || isset($_GET['edit_ban'])){	if (isset($_GET['add_ban']) || isset($_POST['add_ban']))	{		// If the id of the user to ban was provided through GET (a link from profile.php)		if (isset($_GET['add_ban']))		{			$add_ban = intval($_GET['add_ban']);			if ($add_ban < 2)				message($lang_common['Bad request']);			$user_id = $add_ban;			($hook = get_hook('aba_add_ban_selected')) ? eval($hook) : null;			$query = array(				'SELECT'	=> 'u.group_id, u.username, u.email, u.registration_ip',				'FROM'		=> 'users AS u',				'WHERE'		=> 'u.id='.$user_id			);			($hook = get_hook('aba_add_ban_qr_get_user_by_id')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$banned_user_info = $forum_db->fetch_row($result);			if (!$banned_user_info)			{				message($lang_admin_bans['No user id message']);			}			list($group_id, $ban_user, $ban_email, $ban_ip) = $banned_user_info;		}		else	// Otherwise the username is in POST		{			$ban_user = forum_trim($_POST['new_ban_user']);			($hook = get_hook('aba_add_ban_form_submitted')) ? eval($hook) : null;			if ($ban_user != '')			{				$query = array(					'SELECT'	=> 'u.id, u.group_id, u.username, u.email, u.registration_ip',					'FROM'		=> 'users AS u',					'WHERE'		=> 'u.username=\''.$forum_db->escape($ban_user).'\' AND u.id>1'				);				($hook = get_hook('aba_add_ban_qr_get_user_by_username')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$banned_user_info = $forum_db->fetch_row($result);				if (!$banned_user_info)				{					message($lang_admin_bans['No user username message']);				}				list($user_id, $group_id, $ban_user, $ban_email, $ban_ip) = $banned_user_info;			}		}		// Make sure we're not banning an admin		if (isset($group_id) && $group_id == FORUM_ADMIN)			message($lang_admin_bans['User is admin message']);		// If we have a $user_id, we can try to find the last known IP of that user		if (isset($user_id))		{			$query = array(				'SELECT'	=> 'p.poster_ip',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.poster_id='.$user_id,				'ORDER BY'	=> 'p.posted DESC',				'LIMIT'		=> '1'			);			($hook = get_hook('aba_add_ban_qr_get_last_known_ip')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$ban_ip_from_db = $forum_db->result($result);			if ($ban_ip_from_db)			{				$ban_ip = $ban_ip_from_db;			}		}		$mode = 'add';	}	else	// We are editing a ban	{		$ban_id = intval($_GET['edit_ban']);		if ($ban_id < 1)			message($lang_common['Bad request']);		($hook = get_hook('aba_edit_ban_selected')) ? eval($hook) : null;		$query = array(			'SELECT'	=> 'b.username, b.ip, b.email, b.message, b.expire',			'FROM'		=> 'bans AS b',			'WHERE'		=> 'b.id='.$ban_id		);		($hook = get_hook('aba_edit_ban_qr_get_ban_data')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$banned_user_info = $forum_db->fetch_row($result);		if (!$banned_user_info)		{			message($lang_common['Bad request']);		}		list($ban_user, $ban_ip, $ban_email, $ban_message, $ban_expire) = $banned_user_info;		// We just use GMT for expire dates, as its a date rather than a day I don't think its worth worrying about		$ban_expire = ($ban_expire != '') ? gmdate('Y-m-d', $ban_expire) : '';		$mode = 'edit';	}	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index']))	);	if ($forum_user['g_id'] == FORUM_ADMIN)		$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));	$forum_page['crumbs'][] = array($lang_admin_common['Bans'], forum_link($forum_url['admin_bans']));	$forum_page['crumbs'][] = $lang_admin_bans['Ban advanced'];	($hook = get_hook('aba_add_edit_ban_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-bans');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aba_add_edit_ban_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_bans['Ban advanced heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<p class="warn"><?php echo $lang_admin_bans['Ban IP warning'] ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_bans']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_bans'])) ?>" />				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="ban_id" value="<?php echo $ban_id ?>" /><?php endif; ?>			</div><?php ($hook = get_hook('aba_add_edit_ban_pre_criteria_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_bans['Ban criteria legend'] ?></span></legend><?php ($hook = get_hook('aba_add_edit_ban_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Username to ban label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_user" size="40" maxlength="25" value="<?php if (isset($ban_user)) echo forum_htmlencode($ban_user); ?>" /></span>					</div>				</div><?php ($hook = get_hook('aba_add_edit_ban_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['E-mail/domain to ban label'] ?></span> <small><?php echo $lang_admin_bans['E-mail/domain help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_email" size="40" maxlength="80" value="<?php if (isset($ban_email)) echo forum_htmlencode(strtolower($ban_email)); ?>" /></span>					</div>				</div><?php ($hook = get_hook('aba_add_edit_ban_pre_ip')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['IP-addresses to ban label'] ?></span> <small><?php echo $lang_admin_bans['IP-addresses help']; if ($ban_user != '' && isset($user_id)) echo ' '.$lang_admin_bans['IP-addresses help stats'].'<a href="'.forum_link($forum_url['admin_users']).'?ip_stats='.$user_id.'">'.$lang_admin_bans['IP-addresses help link'].'</a>' ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_ip" size="40" maxlength="255" value="<?php if (isset($ban_ip)) echo $ban_ip; ?>" /></span>					</div>				</div><?php ($hook = get_hook('aba_add_edit_ban_pre_message')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Ban message label'] ?></span> <small><?php echo $lang_admin_bans['Ban message help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_message" size="40" maxlength="255" value="<?php if (isset($ban_message)) echo forum_htmlencode($ban_message); ?>" /></span>					</div>				</div><?php ($hook = get_hook('aba_add_edit_ban_pre_expire')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Expire date label'] ?></span> <small><?php echo $lang_admin_bans['Expire date help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="ban_expire" size="20" maxlength="10" value="<?php if (isset($ban_expire)) echo $ban_expire; ?>" /></span>					</div>				</div><?php ($hook = get_hook('aba_add_edit_ban_criteria_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('aba_add_edit_ban_criteria_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_edit_ban" value=" <?php echo $lang_admin_bans['Save ban'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aba_add_edit_ban_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Add/edit a ban (stage 2)else if (isset($_POST['add_edit_ban'])){	$ban_user = forum_trim($_POST['ban_user']);	$ban_ip = forum_trim($_POST['ban_ip']);	$ban_email = strtolower(forum_trim($_POST['ban_email']));	$ban_message = forum_trim($_POST['ban_message']);	$ban_expire = forum_trim($_POST['ban_expire']);	if ($ban_user == '' && $ban_ip == '' && $ban_email == '')		message($lang_admin_bans['Must enter message']);	else if (strtolower($ban_user) == 'guest')		message($lang_admin_bans['Can\'t ban guest user']);	($hook = get_hook('aba_add_edit_ban_form_submitted')) ? eval($hook) : null;	// Validate IP/IP range (it's overkill, I know)	if ($ban_ip != '')	{		$ban_ip = preg_replace('/[\s]{2,}/', ' ', $ban_ip);		$addresses = explode(' ', $ban_ip);		$addresses = array_map('trim', $addresses);		for ($i = 0; $i < count($addresses); ++$i)		{			if (strpos($addresses[$i], ':') !== false)			{				$octets = explode(':', $addresses[$i]);				for ($c = 0; $c < count($octets); ++$c)				{					$octets[$c] = ltrim($octets[$c], "0");					if ($c > 7 || (!empty($octets[$c]) && !ctype_xdigit($octets[$c])) || intval($octets[$c], 16) > 65535)						message($lang_admin_bans['Invalid IP message']);				}				$cur_address = implode(':', $octets);				$addresses[$i] = $cur_address;			}			else			{				$octets = explode('.', $addresses[$i]);				for ($c = 0; $c < count($octets); ++$c)				{					$octets[$c] = (strlen($octets[$c]) > 1) ? ltrim($octets[$c], "0") : $octets[$c];					if ($c > 3 || !ctype_digit($octets[$c]) || intval($octets[$c]) > 255)						message($lang_admin_bans['Invalid IP message']);				}				$cur_address = implode('.', $octets);				$addresses[$i] = $cur_address;			}		}		$ban_ip = implode(' ', $addresses);	}	if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/email.php';	if ($ban_email != '' && !is_valid_email($ban_email))	{		if (!preg_match('/^[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/', $ban_email))			message($lang_admin_bans['Invalid e-mail message']);	}	if ($ban_expire != '' && $ban_expire != 'Never')	{		$ban_expire = strtotime($ban_expire);		if ($ban_expire == -1 || $ban_expire <= time())			message($lang_admin_bans['Invalid expire message']);	}	else		$ban_expire = 'NULL';	$ban_user = ($ban_user != '') ? '\''.$forum_db->escape($ban_user).'\'' : 'NULL';	$ban_ip = ($ban_ip != '') ? '\''.$forum_db->escape($ban_ip).'\'' : 'NULL';	$ban_email = ($ban_email != '') ? '\''.$forum_db->escape($ban_email).'\'' : 'NULL';	$ban_message = ($ban_message != '') ? '\''.$forum_db->escape($ban_message).'\'' : 'NULL';	if ($_POST['mode'] == 'add')	{		$query = array(			'INSERT'	=> 'username, ip, email, message, expire, ban_creator',			'INTO'		=> 'bans',			'VALUES'	=> $ban_user.', '.$ban_ip.', '.$ban_email.', '.$ban_message.', '.$ban_expire.', '.$forum_user['id']		);		($hook = get_hook('aba_add_edit_ban_qr_add_ban')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	else	{		$query = array(			'UPDATE'	=> 'bans',			'SET'		=> 'username='.$ban_user.', ip='.$ban_ip.', email='.$ban_email.', message='.$ban_message.', expire='.$ban_expire,			'WHERE'		=> 'id='.intval($_POST['ban_id'])		);		($hook = get_hook('aba_qr_update_ban')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Regenerate the bans cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	($hook = get_hook('aba_add_edit_ban_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_bans']), (($_POST['mode'] == 'edit') ? $lang_admin_bans['Ban edited'] : $lang_admin_bans['Ban added']));}// Remove a banelse if (isset($_GET['del_ban'])){	$ban_id = intval($_GET['del_ban']);	if ($ban_id < 1)		message($lang_common['Bad request']);	// Validate the CSRF token	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('del_ban'.$ban_id)))		csrf_confirm_form();	($hook = get_hook('aba_del_ban_form_submitted')) ? eval($hook) : null;	$query = array(		'DELETE'	=> 'bans',		'WHERE'		=> 'id='.$ban_id	);	($hook = get_hook('aba_del_ban_qr_delete_ban')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the bans cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	($hook = get_hook('aba_del_ban_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_bans']), $lang_admin_bans['Ban removed'].' '. $lang_admin_common['Redirect']);}// Setup the form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['admin_bans']).'&amp;action=more';$forum_page['hidden_fields'] = array(	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])));if ($forum_user['g_id'] == FORUM_ADMIN)	$forum_page['crumbs'][] = array($lang_admin_common['Users'], forum_link($forum_url['admin_users']));$forum_page['crumbs'][] = array($lang_admin_common['Bans'], forum_link($forum_url['admin_bans']));// Fetch user count$query = array(	'SELECT'	=>	'COUNT(id)',	'FROM'		=>	'bans');$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['num_bans'] = $forum_db->result($result);$forum_page['num_pages'] = ceil($forum_page['num_bans'] / $forum_user['disp_topics']);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($forum_page['num_bans']));// Generate paging$forum_page['page_post']['paging']='<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['admin_bans'], $lang_common['Paging separator'], null, true).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['admin_bans'], $forum_url['page'], $forum_page['num_pages']).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['admin_bans'], $forum_url['page'], ($forum_page['page'] + 1)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['admin_bans'], $forum_url['page'], ($forum_page['page'] - 1)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['admin_bans']).'" title="'.$lang_common['Page'].' 1" />';}($hook = get_hook('aba_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-bans');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('aba_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_bans['New ban heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_bans['Advanced ban info'] ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_bans['New ban legend'] ?></strong></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_bans['Username to ban label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_ban_user" size="25" maxlength="25" /></span>					</div>				</div>			</fieldset>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_ban" value=" <?php echo $lang_admin_bans['Add ban'] ?> " /></span>			</div>		</form>	</div><?php// Reset counters$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_bans['Existing bans heading'] ?></span></h2>	</div>	<div class="main-content main-frm"><?phpif ($forum_page['num_bans'] > 0){?>		<div class="ct-group"><?php	// Grab the bans	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id',		'LIMIT'		=> $forum_page['start_from'].', '.$forum_page['finish_at']	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['item_num'] = 0;	while ($cur_ban = $forum_db->fetch_assoc($result))	{		$forum_page['ban_info'] = array();		$forum_page['ban_creator'] = ($cur_ban['ban_creator_username'] != '') ? '<a href="'.forum_link($forum_url['user'], $cur_ban['ban_creator']).'">'.forum_htmlencode($cur_ban['ban_creator_username']).'</a>' : $lang_admin_common['Unknown'];		if ($cur_ban['username'] != '')			$forum_page['ban_info']['username'] = '<li><span>'.$lang_admin_bans['Username'].'</span> <strong>'.forum_htmlencode($cur_ban['username']).'</strong></li>';		if ($cur_ban['email'] != '')			$forum_page['ban_info']['email'] = '<li><span>'.$lang_admin_bans['E-mail'].'</span> <strong>'.forum_htmlencode($cur_ban['email']).'</strong></li>';		if ($cur_ban['ip'] != '')			$forum_page['ban_info']['ip'] = '<li><span>'.$lang_admin_bans['IP-ranges'].'</span> <strong>'.$cur_ban['ip'].'</strong></li>';		if ($cur_ban['expire'] != '')			$forum_page['ban_info']['expire'] = '<li><span>'.$lang_admin_bans['Expires'].'</span> <strong>'.format_time($cur_ban['expire'], 1).'</strong></li>';		if ($cur_ban['message'] != '')			$forum_page['ban_info']['message'] ='<li><span>'.$lang_admin_bans['Message'].'</span> <strong>'.forum_htmlencode($cur_ban['message']).'</strong></li>';		($hook = get_hook('aba_view_ban_pre_display')) ? eval($hook) : null;?>			<div class="ct-set set<?php echo ++$forum_page['item_num'] ?>">				<div class="ct-box">					<div class="ct-legend">						<h3 class=""><span><?php printf($lang_admin_bans['Current ban head'], $forum_page['ban_creator']) ?></span></h3>						<p><?php printf($lang_admin_bans['Edit or remove'], '<a href="'.forum_link($forum_url['admin_bans']).'&amp;edit_ban='.$cur_ban['id'].'">'.$lang_admin_bans['Edit ban'].'</a>', '<a href="'.forum_link($forum_url['admin_bans']).'&amp;del_ban='.$cur_ban['id'].'&amp;csrf_token='.generate_form_token('del_ban'.$cur_ban['id']).'">'.$lang_admin_bans['Remove ban'].'</a>') ?></p>					</div><?php if (!empty($forum_page['ban_info'])): ?>				<ul>					<?php echo implode("\n", $forum_page['ban_info'])."\n" ?>					</ul><?php endif; ?>				</div>			</div><?php	}?>		</div><?php}else{?>		<div class="ct-box">			<p><?php echo $lang_admin_bans['No bans'] ?></p>		</div><?php}?>	</div><?php($hook = get_hook('aba_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * A database layer class that relies on the SQLite PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for SQLiteif (!function_exists('sqlite_open'))	exit('This PHP environment doesn\'t have SQLite support built in. SQLite support is required if you want to use a SQLite database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $error_no = false;	var $error_msg = 'Unknown';	var $datatype_transformations = array(		'/^SERIAL$/'															=>	'INTEGER',		'/^(TINY|SMALL|MEDIUM|BIG)?INT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'	=>	'INTEGER',		'/^(TINY|MEDIUM|LONG)?TEXT$/i'											=>	'TEXT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		// Prepend $db_name with the path to the forum root directory		$db_name = FORUM_ROOT.$db_name;		$this->prefix = $db_prefix;		if (!file_exists($db_name))		{			@touch($db_name);			@chmod($db_name, 0666);			if (!file_exists($db_name))				error('Unable to create new database \''.$db_name.'\'. Permission denied.', __FILE__, __LINE__);		}		if (!is_readable($db_name))			error('Unable to open database \''.$db_name.'\' for reading. Permission denied.', __FILE__, __LINE__);		if (!is_writable($db_name))			error('Unable to open database \''.$db_name.'\' for writing. Permission denied.', __FILE__, __LINE__);		if ($p_connect)			$this->link_id = @sqlite_popen($db_name, 0666, $sqlite_error);		else			$this->link_id = @sqlite_open($db_name, 0666, $sqlite_error);		if (!$this->link_id)			error('Unable to open database \''.$db_name.'\'. SQLite reported: '.$sqlite_error, __FILE__, __LINE__);		else			return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return (@sqlite_query($this->link_id, 'BEGIN')) ? true : false;	}	function end_transaction()	{		--$this->in_transaction;		if (@sqlite_query($this->link_id, 'COMMIT'))			return true;		else		{			@sqlite_query($this->link_id, 'ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		if ($unbuffered)			$this->query_result = @sqlite_unbuffered_query($this->link_id, $sql);		else			$this->query_result = @sqlite_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			$this->error_no = @sqlite_last_error($this->link_id);			$this->error_msg = @sqlite_error_string($this->error_no);			if ($this->in_transaction)				@sqlite_query($this->link_id, 'ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))			{				$new_query = $query;				if ($return_query_string)				{					$query_set = array();					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$query_set[] = $this->query_build($new_query, true, $unbuffered);					}					$sql = implode('; ', $query_set);				}				else				{					$result_set = null;					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$result_set = $this->query_build($new_query, false, $unbuffered);					}					return $result_set;				}			}			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row != 0)				@sqlite_seek($query_id, $row);			$cur_row = @sqlite_current($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		if ($query_id)		{			$cur_row = @sqlite_fetch_array($query_id, SQLITE_ASSOC);			if ($cur_row)			{				// Horrible hack to get rid of table names and table aliases from the array keys				foreach ($cur_row as $key => $value)				{					$dot_spot = strpos($key, '.');					if ($dot_spot !== false)					{						unset($cur_row[$key]);						$key = substr($key, $dot_spot+1);						$cur_row[$key] = $value;					}				}			}			return $cur_row;		}		else			return false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @sqlite_fetch_array($query_id, SQLITE_NUM) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @sqlite_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->query_result) ? @sqlite_changes($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @sqlite_last_insert_rowid($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return true;	}	function escape($str)	{		return is_array($str) ? '' : sqlite_escape_string($str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = $this->error_no;		$result['error_msg'] = $this->error_msg;		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->in_transaction)			{				if (defined('FORUM_SHOW_QUERIES'))					$this->saved_queries[] = array('COMMIT', 0);				@sqlite_query($this->link_id, 'COMMIT');			}			return @sqlite_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return;	}	function get_version()	{		return array(			'name'		=> 'SQLite',			'version'	=> sqlite_libversion()		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SELECT sql FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		if (!$this->num_rows($result))			return false;		return preg_match('/[\r\n]'.preg_quote($field_name).' /', $this->result($result));	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_'.$this->escape($index_name).'\' AND type=\'index\'');		return $this->num_rows($result) > 0;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE ('.implode(',', $key_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".')';		$this->query($query) or error(__FILE__, __LINE__);		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$this->add_index($table_name, $index_name, $index_fields, false, $no_prefix);		}	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function get_table_info($table_name, $no_prefix = false)	{		// Grab table info		$result = $this->query('SELECT sql FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' ORDER BY type DESC') or error(__FILE__, __LINE__);		$num_rows = $this->num_rows($result);		if ($num_rows == 0)			return;		$table = array();		$table['indices'] = array();		while ($cur_index = $this->fetch_assoc($result))		{			if (!isset($table['sql']))				$table['sql'] = $cur_index['sql'];			else				$table['indices'][] = $cur_index['sql'];		}		// Work out the columns in the table currently		$table_lines = explode("\n", $table['sql']);		$table['columns'] = array();		foreach ($table_lines as $table_line)		{			$table_line = forum_trim($table_line);			if (substr($table_line, 0, 12) == 'CREATE TABLE')				continue;			else if (substr($table_line, 0, 11) == 'PRIMARY KEY')				$table['primary_key'] = $table_line;			else if (substr($table_line, 0, 6) == 'UNIQUE')				$table['unique'] = $table_line;			else if (substr($table_line, 0, strpos($table_line, ' ')) != '')				$table['columns'][substr($table_line, 0, strpos($table_line, ' '))] = forum_trim(substr($table_line, strpos($table_line, ' ')));		}		return $table;	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Create new table sql		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		$query = $field_type;		if (!$allow_null)			$query .= ' NOT NULL';		if ($default_value === null || $default_value === '')			$default_value = '\'\'';		$query .= ' DEFAULT '.$default_value;		$old_columns = array_keys($table['columns']);		array_insert($table['columns'], $after_field, $query.',', $field_name);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' ('.implode(', ', $old_columns).') SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		return;	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Work out the columns we need to keep and the sql for the new table		unset($table['columns'][$field_name]);		$new_columns = array_keys($table['columns']);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				if (!preg_match('#\(.*'.$field_name.'.*\)#', $cur_index))					$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' SELECT '.implode(', ', $new_columns).' FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('CREATE '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ON '.($no_prefix ? '' : $this->prefix).$table_name.'('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/*** @version $Id: ucfirst.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to ucfirst* Make a string's first character uppercase* Note: requires utf8_strtoupper* @param string* @return string with first character as upper case (if applicable)* @see http://www.php.net/ucfirst* @see utf8_strtoupper* @package utf8* @subpackage strings*/function utf8_ucfirst($str){    switch ( utf8_strlen($str) ) {        case 0:            return '';        break;        case 1:            return utf8_strtoupper($str);        break;        default:            preg_match('/^(.{1})(.*)$/us', $str, $matches);            return utf8_strtoupper($matches[1]).$matches[2];        break;    }}
<?php// Language definitions used in all admin files$lang_admin_ext = array('Install extension'				=>	'Install extension','Upgrade extension'				=>	'Upgrade extension','Extensions available'			=>	'Extensions available for install','Hotfixes available'			=>	'Hotfixes available for install','Installed extensions'			=>	'Installed extensions','Version'						=>	'Version %s','Hotfix'						=>	'Hotfix','Installed hotfixes'			=>	'Installed hotfixes','Installed extensions warn'		=>	'<strong>WARNING!</strong> If you uninstall an extension, any data associated with that extension will be permanently deleted from the database and cannot be restored by re-installing the extension. If you wish to retain the data then you should disable the extension instead.','Uninstall extension'			=>	'Uninstall extension','Uninstall hotfix'				=>	'Uninstall hotfix','Uninstall'						=>	'Uninstall','Uninstall extension confirm'	=>	'Are you sure you want to uninstall the extension "%s"?','Enable'						=>	'Enable','Disable'						=>	'Disable','Extension error'				=>	'Error','Extension loading error'		=>	'Loading of extension "%s" failed.','Illegal ID'					=>	'The ID must contain only lowercase alphanumeric characters (a-z and 0-9) and the underscore character (_).','Maxtestedon warning'			=>	'This extension has not been explicitly tested on your PunBB version and might therefore not be compatible with your current setup.','Missing manifest'				=>	'Missing manifest.xml.','Failed parse manifest'			=>	'Unable to parse manifest.xml.','extension root error'			=>	'Root element extension is malformed or missing.','extension/engine error'		=>	'Root element engine attribute is malformed or missing.','extension/engine error2'		=>	'Extension format version is unsupported.','extension/id error'			=>	'Element extension/id is malformed or missing.','extension/id error2'			=>	'Element extension/id does not match the extension folder name.','extension/title error'			=>	'Element extension/title is malformed or missing.','extension/version error'		=>	'Element extension/version is malformed or missing.','extension/description error'	=>	'Element extension/description is malformed or missing.','extension/author error'		=>	'Element extension/author is malformed or missing.','extension/minversion error'	=>	'Element extension/minversion is malformed or missing.','extension/minversion error2'	=>	'This extension requires PunBB %s or later.','extension/maxtestedon error'	=>	'Element extension/maxtestedon is malformed or missing.','extension/note error'			=>	'Element extension/note is malformed.','extension/note error2'			=>	'Element extension/note has malformed or missing attribute "type".','extension/hooks/hook error'	=>	'Element extension/hooks/hook is malformed or missing.','extension/hooks/hook error2'	=>	'Element extension/hooks/hook is missing attribute "id".','extension/hooks/hook error3'	=>	'Element extension/hooks/hook has an out of bounds value in attribute "priority".','extension/hooks/hook error4'	=>	'Element extension/hooks/hook has content which does not end in PHP mode.','No XML support'				=>	'This PHP environment doesn\'t have XML support built in. XML support is required if you want to use PunBB extensions. Consult the PHP documentation for further assistance.','No installed extensions'		=>	'There are no installed extensions.','No installed hotfixes'			=>	'There are no installed hotfixes.','No available extensions'		=>	'There are no extensions available for install or upgrade.','No available hotfixes'			=>	'There are no hotfixes available for install.','Invalid extensions'			=>	'<strong>IMPORTANT!</strong> The extensions listed below were found in the extensions folder but are not available for install or upgrade because the errors displayed below were detected.','Extension installed'			=>	'Extension installed.','Hotfix installed'				=>	'Hotfix installed.','Extension installed info'		=>	'The extension was successfully installed, but reported the following notices.','Extension uninstalled'			=>	'Extension uninstalled.','Hotfix uninstalled'			=>	'Hotfix uninstalled.','Extension uninstalled info'	=>	'The extension was successfully uninstalled, but reported the following notices.','Install note'					=>	'Please read before installing','Uninstall note'				=>	'Please read before uninstalling','Hotfix download failed'		=>	'Download and install of a hotfix extension failed. Please wait a while and try again.','Extension disabled'			=>	'Extension disabled.','Extension enabled'				=>	'Extension enabled.','Hotfix disabled'				=>	'Hotfix disabled.','Hotfix enabled'				=>	'Hotfix enabled.','Extension by'					=>	'Created by %s','Hotfix description'			=>	'This hotfix for your PunBB installation was detected by automatic update.','Install hotfix'				=>	'Install hotfix','Missing dependency'			=>	'This extension cannot be installed unless "%s" is installed and enabled','Uninstall dependency'			=>	'This extension cannot be uninstall while "%s" is installed.','Disable dependency'			=>	'This extension cannot be disabled while "%s" is enabled.','Disabled dependency'			=>	'This extension cannot be enabled while "%s" is disabled.','Download latest version'		=>	'Download latest version',);
<?php/*** @version $Id: strcasecmp.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to strcasecmp* A case insensivite string comparison* Note: requires utf8_strtolower* @param string* @param string* @return int* @see http://www.php.net/strcasecmp* @see utf8_strtolower* @package utf8* @subpackage strings*/function utf8_strcasecmp($strX, $strY) {    $strX = utf8_strtolower($strX);    $strY = utf8_strtolower($strY);    return strcmp($strX, $strY);}
<?php/*** @version $Id: str_pad.php,v 1.1 2006/09/03 09:25:13 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** Replacement for str_pad. $padStr may contain multi-byte characters.** @author Oliver Saunders <oliver (a) osinternetservices.com>* @param string $input* @param int $length* @param string $padStr* @param int $type ( same constants as str_pad )* @return string* @see http://www.php.net/str_pad* @see utf8_substr* @package utf8* @subpackage strings*/function utf8_str_pad($input, $length, $padStr = ' ', $type = STR_PAD_RIGHT) {    $inputLen = utf8_strlen($input);    if ($length <= $inputLen) {        return $input;    }    $padStrLen = utf8_strlen($padStr);    $padLen = $length - $inputLen;    if ($type == STR_PAD_RIGHT) {        $repeatTimes = ceil($padLen / $padStrLen);        return utf8_substr($input . str_repeat($padStr, $repeatTimes), 0, $length);    }    if ($type == STR_PAD_LEFT) {        $repeatTimes = ceil($padLen / $padStrLen);        return utf8_substr(str_repeat($padStr, $repeatTimes), 0, floor($padLen)) . $input;    }    if ($type == STR_PAD_BOTH) {        $padLen/= 2;        $padAmountLeft = floor($padLen);        $padAmountRight = ceil($padLen);        $repeatTimesLeft = ceil($padAmountLeft / $padStrLen);        $repeatTimesRight = ceil($padAmountRight / $padStrLen);        $paddingLeft = utf8_substr(str_repeat($padStr, $repeatTimesLeft), 0, $padAmountLeft);        $paddingRight = utf8_substr(str_repeat($padStr, $repeatTimesRight), 0, $padAmountLeft);        return $paddingLeft . $input . $paddingRight;    }    trigger_error('utf8_str_pad: Unknown padding type (' . $type . ')',E_USER_ERROR);}
<?php/*** This is the dynamic loader for the library. It checks whether you have* the mbstring extension available and includes relevant files* on that basis, falling back to the native (as in written in PHP) version* if mbstring is unavailabe.** It's probably easiest to use this, if you don't want to understand* the dependencies involved, in conjunction with PHP versions etc. At* the same time, you might get better performance by managing loading* yourself. The smartest way to do this, bearing in mind performance,* is probably to "load on demand" - i.e. just before you use these* functions in your code, load the version you need.** It makes sure the the following functions are available;* utf8_strlen, utf8_strpos, utf8_strrpos, utf8_substr,* utf8_strtolower, utf8_strtoupper* Other functions in the ./native directory depend on these* six functions being available* * @license http://www.gnu.org/copyleft/lesser.html LGPL* @see http://sourceforge.net/projects/phputf8* @package utf8*//*** Put the current directory in this constant*/if ( !defined('UTF8') ) {    define('UTF8',dirname(__FILE__));}/*** If string overloading is active, it will break many of the* native implementations. mbstring.func_overload must be set* to 0, 1 or 4 in php.ini (string overloading disabled).* Also need to check we have the correct internal mbstring* encoding*/if ( extension_loaded('mbstring')) {    if ( ini_get('mbstring.func_overload') & MB_OVERLOAD_STRING ) {        trigger_error('String functions are overloaded by mbstring',E_USER_ERROR);    }    mb_internal_encoding('UTF-8');}/*** Check whether PCRE has been compiled with UTF-8 support*/$UTF8_ar = array();if ( preg_match('/^.{1}$/u',"",$UTF8_ar) != 1 ) {    trigger_error('PCRE is not compiled with UTF-8 support',E_USER_ERROR);}unset($UTF8_ar);/*** Load the smartest implementations of utf8_strpos, utf8_strrpos* and utf8_substr*/if ( !defined('UTF8_CORE') ) {    if ( function_exists('mb_substr') ) {        require_once UTF8 . '/mbstring/core.php';    } else {        require_once UTF8 . '/utils/unicode.php';        require_once UTF8 . '/native/core.php';    }}/*** Load the native implementation of utf8_substr_replace*/require_once UTF8 . '/substr_replace.php';/*** You should now be able to use all the other utf_* string functions*/
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
<?php// Language definitions used in all admin files$lang_admin_groups = array(// admin_groups'Group settings heading'		=>	'Group\'s default permission that apply when no forum specific permissions are set','Group title label'				=>	'Group title','User title label'				=>	'User title','Group title head'				=>	'Group and user title','Group title legend'			=>	'Set titles','Group perms head'				=>	'Group permissions','Group flood head'				=>	'Group flood protection settings','User title help'				=>	'This title will override any rank users in this group have attained. Leave blank to use default title or rank.','Remove group legend'			=>	'Remove group','Permissions'					=>	'Permissions','Moderation'					=>	'Moderation','Allow moderate label'			=>	'Allow users moderator privileges.','Allow mod edit profiles label'	=>	'Allow moderators to edit user profiles.','Allow mod edit username label'	=>	'Allow moderators to rename users.','Allow mod change pass label'	=>	'Allow moderators to change user passwords.','Allow mod bans label'			=>	'Allow moderators to ban users.','Allow read board label'		=>	'Allow users to view the board.','Allow read board help'			=>	'This setting applies to every aspect of the board and can, if disabled, not be overridden by forum specific read permissions. If this is disabled, users in this group will only be able to login/logout and register.','Allow view users label'		=>	'Allow users to view the user list and user profiles.','Allow post replies label'		=>	'Allow users to post replies in topics.','Allow post topics label'		=>	'Allow users to post new topics.','Allow edit posts label'		=>	'Allow users to edit their own posts.','Allow delete posts label'		=>	'Allow users to delete their own posts.','Allow delete topics label'		=>	'Allow users to delete their own topics (including any replies).','Allow set user title label'	=>	'Allow users to set their own user titles.','Allow use search label'		=>	'Allow users to use the search feature.','Allow search users label'		=>	'Allow users to freetext search for users in the user list.','Allow send email label'		=>	'Allow users to send emails to other users.','Restrictions'					=>	'Restrictions','Mod permissions'				=>	'Moderator permissions','User permissions'				=>	'User permissions','Flood interval label'			=>	'Post flood interval','Flood interval help'			=>	'Number of seconds that users in this group have to wait between posts. Set to 0 to disable.','Search interval label'			=>	'Search flood interval','Search interval help'			=>	'Number of seconds that users in this group have to wait between searches. Set to 0 to disable.','Email flood interval label'	=>	'Email flood interval','Email flood interval help'		=>	'Number of seconds that users in this group have to wait between emails. Set to 0 to disable.','Allow moderate help'			=>	'In order for a user in this group to have moderator abilities, he/she must be assigned to moderate one or more forums. This is done via the user administration page of the user\'s profile.','Remove group'					=>	'Remove this group','Edit group'					=>	'Edit this group','default'						=>	'(default)','Cannot remove group'			=>	'This group cannot be removed.','Cannot remove default'			=>	'To remove this group you must assign a new default group.','Remove group head'				=>	'Remove "%s" group which contains %s members','Remove group help'				=>	'(Transfer current members to this group)','Move users to'					=>	'Move users to','Cannot remove default group'	=>	'The default group cannot be removed. In order to delete this group, you must first setup a different group as the default.','Add group heading'				=>	'Add new group (will inherit the permissions of the group it is based on)','Add group legend'				=>	'Add new group','Edit group heading'			=>	'Edit existing group','Base new group label'			=>	'Base new group on','Add group'						=>	'Add new group','Default group heading'			=>	'Default group for new users (administrator/moderator groups not available for security reasons)','Default group legend'			=>	'Set default group for new users','Default group label'			=>	'Default group','Set default'					=>	'Set default group','Existing groups heading'		=>	'Existing groups','Existing groups intro'			=>	'The pre-defined groups Guests and Administrators cannot be removed. They can however be edited. Please note though, that in some groups, certain options are unavailable (e.g. the "edit posts" permission for guests). Administrators always have full permissions.','Group removed'					=>	'Group removed.','Default group set'				=>	'Default group set.','Group added'					=>	'Group added.','Group edited'					=>	'Group edited.','Update group'					=>	'Update group','Must enter group message'		=>	'You must enter a group title.','Already a group message'		=>	'There is already a group with the title <strong>"%s"</strong>.','Moderator default group'		=>	'This is the default group for new users and therefore cannot be assigned moderator privileges.',);
<?php/*** @version $Id: ord.php,v 1.4 2006/09/11 15:22:54 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to ord* Returns the unicode ordinal for a character* @param string UTF-8 encoded character* @return int unicode ordinal for the character* @see http://www.php.net/ord* @see http://www.php.net/manual/en/function.ord.php#46267*/function utf8_ord($chr) {    $ord0 = ord($chr);    if ( $ord0 >= 0 && $ord0 <= 127 ) {        return $ord0;    }    if ( !isset($chr{1}) ) {        trigger_error('Short sequence - at least 2 bytes expected, only 1 seen');        return FALSE;    }    $ord1 = ord($chr{1});    if ( $ord0 >= 192 && $ord0 <= 223 ) {        return ( $ord0 - 192 ) * 64             + ( $ord1 - 128 );    }    if ( !isset($chr{2}) ) {        trigger_error('Short sequence - at least 3 bytes expected, only 2 seen');        return FALSE;    }    $ord2 = ord($chr{2});    if ( $ord0 >= 224 && $ord0 <= 239 ) {        return ($ord0-224)*4096             + ($ord1-128)*64                 + ($ord2-128);    }    if ( !isset($chr{3}) ) {        trigger_error('Short sequence - at least 4 bytes expected, only 3 seen');        return FALSE;    }    $ord3 = ord($chr{3});    if ($ord0>=240 && $ord0<=247) {        return ($ord0-240)*262144             + ($ord1-128)*4096                 + ($ord2-128)*64                     + ($ord3-128);    }    if ( !isset($chr{4}) ) {        trigger_error('Short sequence - at least 5 bytes expected, only 4 seen');        return FALSE;    }    $ord4 = ord($chr{4});    if ($ord0>=248 && $ord0<=251) {        return ($ord0-248)*16777216             + ($ord1-128)*262144                 + ($ord2-128)*4096                     + ($ord3-128)*64                         + ($ord4-128);    }    if ( !isset($chr{5}) ) {        trigger_error('Short sequence - at least 6 bytes expected, only 5 seen');        return FALSE;    }    if ($ord0>=252 && $ord0<=253) {        return ($ord0-252) * 1073741824             + ($ord1-128)*16777216                 + ($ord2-128)*262144                     + ($ord3-128)*4096                         + ($ord4-128)*64                             + (ord($c{5})-128);    }    if ( $ord0 >= 254 && $ord0 <= 255 ) {         trigger_error('Invalid UTF-8 with surrogate ordinal '.$ord0);        return FALSE;    }}
<?php// Language definitions used in all admin files$lang_admin_ranks = array('Rank head'						=>	'Add, edit or remove ranks','Rank'							=>	'Rank','Rank added'					=>	'Rank added.','Title message'					=>	'You must enter a rank title.','Min posts message'				=>	'Minimum posts must be a positive integer value.','Min posts occupied message'	=>	'There is already a rank with a minimum posts value of %s.','Rank updated'					=>	'Rank updated.','Rank removed'					=>	'Rank removed.','Add rank intro'				=>	'Enter a rank and the minimum number of posts that a user has to have to acquire the rank. Different ranks cannot have the same value for minimum posts. If a title is set for a user, the title will be displayed instead of any rank. For this to have any effect "<strong>User ranks</strong>" must be enabled in %s.','Add rank'						=>	'Add rank','Add rank legend'				=>	'New rank details','Rank title label'				=>	'Rank title','Min posts label'				=>	'Minimum posts','Existing ranks legend'			=>	'Edit or remove existing user ranks','No ranks'						=>	'No ranks in list.','Update'						=>	'Update','Remove'						=>	'Remove','New rank'						=>	'Add new rank','Existing rank'					=>	'Existing rank',);
<?php/*** @version $Id: strrev.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to strrev* Reverse a string* @param string UTF-8 encoded* @return string characters in string reverses* @see http://www.php.net/strrev* @package utf8* @subpackage strings*/function utf8_strrev($str){    preg_match_all('/./us', $str, $ar);    return join('',array_reverse($ar[0]));}
<?php/** * Loader class for inject CSS and JS files. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// JS groupsdefine('FORUM_JS_GROUP_SYSTEM', -100);define('FORUM_JS_GROUP_DEFAULT', 0);define('FORUM_JS_GROUP_COUNTER', 100);// CSS groupsdefine('FORUM_CSS_GROUP_SYSTEM', -100);define('FORUM_CSS_GROUP_DEFAULT', 0);class Loader{	private $libs;	// Class instance    private static $instance;	// Start of life	private function __construct() {		$this->libs = array();		$this->libs['js'] = array();		$this->libs['css'] = array();	}	// The end	public function __destruct() {		unset($this->libs);	}	// Singleton    public static function singleton() {        if (!isset(self::$instance)) {            $c = __CLASS__;            self::$instance = new $c;        }        return self::$instance;    }    // Clone forbiden    public function __clone() {        trigger_error('Clone is forbiden.', E_USER_ERROR);    }	// Add JS url or file to load	public function add_js($data = NULL, $options = NULL)	{		$return = ($hook = get_hook('ld_fn_add_js_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (is_null($options) || !is_array($options))		{			$options = array();		}		// Default options		$default_options = array(			// external, inline, file			'type'		=> array(				'default'	=> 'external',			),			//			'async'			=> array(				'default'	=> false,			),			//			'weight'		=> array(				'default'	=> 100,			),			//			'group'			=> array(				'default'	=> FORUM_JS_GROUP_DEFAULT,			),			//			'every_page'	=> array(				'default'	=> false,			),			//			'defer'			=> array(				'default'	=> false,			),			//			'preprocess'	=> array(				'default'	=> true,			)		);		$length = count($default_options);		$keys = array_keys($default_options);		for ($i = 0; $i < $length; $i++)		{			$key = $keys[$i];			if (!isset($options[$key]))			{				$default_options[$keys[$i]] = $default_options[$keys[$i]]['default'];				continue;			}			$default_options[$keys[$i]] = $options[$key];		}		// Check data  url or inline code		$default_options['data'] = forum_trim($data);		if (empty($default_options['data']) || utf8_strlen($default_options['data']) < 1)		{			return FALSE;		}		// Check type		if ($default_options['type'] == 'file')		{			$default_options['data'] = $this->create_url_from_file(forum_trim($data));		}		// Tweak weight		$default_options['weight'] += count($this->libs['js']) / 1000;		($hook = get_hook('ld_fn_add_js_pre_merge')) ? eval($hook) : null;		// Add to libs		if ($default_options['type'] != 'inline')		{			$this->libs['js'][$default_options['data']] = $default_options;		}		else		{			$this->libs['js'][] = $default_options;		}		($hook = get_hook('ld_fn_add_js_end')) ? eval($hook) : null;		return $this->libs['js'];	}	//	public function render_js()	{		$output = '';		$return = ($hook = get_hook('ld_fn_render_js_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (empty($this->libs['js']))			return $output;		// Sorts the scripts into correct order		uasort($this->libs['js'], array('Loader', 'sort_libs'));		return $this->render_js_labjs();	}	// Add CSS url or file to load	public function add_css($data = NULL, $options = NULL)	{		$return = ($hook = get_hook('ld_fn_add_css_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (is_null($options) || !is_array($options))		{			$options = array();		}		// Default options		$default_options = array(			//			'type'		=> array(				'default'	=> 'external',			),			//			'weight'		=> array(				'default'	=> 100,			),			//			'group'			=> array(				'default'	=> FORUM_CSS_GROUP_DEFAULT,			),			// screen, all, print			'media'			=> array(				'default'	=> 'all',			),			//			'every_page'	=> array(				'default'	=> false,			),			//			'preprocess'	=> array(				'default'	=> true,			),			'browsers'		=> array(				'default'	=> array(),			),		);		$length = count($default_options);		$keys = array_keys($default_options);		for ($i = 0; $i < $length; $i++)		{			$key = $keys[$i];			if (!isset($options[$key]))			{				$default_options[$keys[$i]] = $default_options[$keys[$i]]['default'];				continue;			}			$default_options[$keys[$i]] = $options[$key];		}		// Check data  url or inline code		$default_options['data'] = forum_trim($data);		if (empty($default_options['data']) || utf8_strlen($default_options['data']) < 1)		{			return FALSE;		}		// Check type		if ($default_options['type'] == 'file')		{			$default_options['data'] = $this->create_url_from_file(forum_trim($data));		}		// Tweak weight		$default_options['weight'] += count($this->libs['css']) / 1000;		($hook = get_hook('ld_fn_add_css_pre_merge')) ? eval($hook) : null;		// Add to libs		if ($default_options['type'] != 'inline')		{			$this->libs['css'][$default_options['data']] = $default_options;		}		else		{			$this->libs['css'][] = $default_options;		}		($hook = get_hook('ld_fn_add_css_end')) ? eval($hook) : null;		return $this->libs['css'];	}	// Render CSS libs	public function render_css()	{		$output = '';		$return = ($hook = get_hook('ld_fn_render_css_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (empty($this->libs['css']))			return $output;		// Sorts the scripts into correct order		uasort($this->libs['css'], array('Loader', 'sort_libs'));		return $this->render_css_simple();	}	// Render for CSS  use link tags method	private function render_css_simple()	{		$output = '';		$libs = $this->libs['css'];		$return = ($hook = get_hook('ld_fn_render_css_simple_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['type'] == 'inline')			{				$output .= forum_trim($this->check_conditional_comments($lib, '<style>'.$lib['data'].'</style>'))."\n";				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				$output .= forum_trim($this->check_conditional_comments($lib, '<link rel="stylesheet" type="text/css" media="'.$lib['media'].'" href="'.$lib['data'].'" />'))."\n";				unset($libs[$key]);				continue;			}		}		($hook = get_hook('ld_fn_render_css_simple_end')) ? eval($hook) : null;		return $output;	}	// Render for JS  use default script tags method	private function render_js_simple()	{		$output = '';		$libs = $this->libs['js'];		$return = ($hook = get_hook('ld_fn_render_js_simple_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['type'] == 'inline')			{				$output .= '<script>'.$lib['data'].'</script>'."\n";				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				$output .= '<script'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").' src="'.$lib['data'].'"></script>'."\n";				unset($libs[$key]);				continue;			}		}		($hook = get_hook('ld_fn_render_js_simple_end')) ? eval($hook) : null;		return $output;	}	// Render for JS  use LABjs method	private function render_js_labjs()	{		$output_system = $output_counter = $output_default = '';		$libs = $this->libs['js'];		$return = ($hook = get_hook('ld_fn_render_js_labjs_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['data'] === FALSE)			{				continue;			}			if ($lib['type'] == 'inline')			{				if ($lib['group'] == FORUM_JS_GROUP_SYSTEM)				{					$output_system .= '<script>'.$lib['data'].'</script>'."\n";				}				else if ($lib['group'] == FORUM_JS_GROUP_COUNTER)				{					$output_counter .= '<script>'.$lib['data'].'</script>'."\n";				}				else				{					$output_default .= "\n\t".'.wait(function () { '.$lib['data'].' })';				}				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				if ($lib['group'] == FORUM_JS_GROUP_SYSTEM)				{					$output_system .= '<script src="'.$lib['data'].'"'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").'></script>'."\n";				}				else if ($lib['group'] == FORUM_JS_GROUP_COUNTER)				{					$output_counter .= '<script src="'.$lib['data'].'"'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").'></script>'."\n";				}				else				{					$output_default .= "\n\t".'.script("'.$lib['data'].'")';				}				unset($libs[$key]);				continue;			}		}		// Wrap default to LABjs parameters		if ($output_default != '')		{			$output_default = '<script>'."\n\t".'$LAB.setOptions({AlwaysPreserveOrder:true})'.$output_default.';'."\n".'</script>';		}		($hook = get_hook('ld_fn_render_js_labjs_end')) ? eval($hook) : null;		return $output_system.$output_default.$output_counter;	}	// Sort libs	private static function sort_libs($a, $b)	{		$return = ($hook = get_hook('ld_fn_sort_libs_start')) ? eval($hook) : null;		if ($return != null)			return $return;		// 1. Sort by group  system first		if ($a['group'] < $b['group'])		{			return -1;		}		elseif ($a['group'] > $b['group'])		{			return 1;		}		// 2. Within a group, order all infrequently needed, page-specific files after		// common files needed throughout the website. Separating this way allows for		// the aggregate file generated for all of the common files to be reused		// across a site visit without being cut by a page using a less common file.		elseif ($a['every_page'] && !$b['every_page'])		{			return -1;		}		elseif (!$a['every_page'] && $b['every_page'])		{			return 1;		}		// 3. Sort by weight		elseif ($a['weight'] < $b['weight'])		{			return -1;		}		elseif ($a['weight'] > $b['weight'])		{		    return 1;		}		else		{			return 0;		}	}	// Try a get uri scheme (based on Drupal)	private function get_file_uri_scheme($uri)	{		$position = strpos($uri, '://');		return $position ? substr($uri, 0, $position) : FALSE;	}	//	private function encode_path($path)	{		return str_replace('%2F', '/', rawurlencode($path));	}	// Creates a web-accessible URL for local file. (based on Drupal)	private function create_url_from_file($uri)	{		global $base_url;		$scheme = $this->get_file_uri_scheme($uri);		if (!$scheme)		{		    // Allow for:		    // - root-relative URIs (e.g. /foo.jpg in http://example.com/foo.jpg)		    // - protocol-relative URIs (e.g. //bar.jpg, which is expanded to		    //   http://example.com/bar.jpg by the browser when viewing a page over		    //   HTTP and to https://example.com/bar.jpg when viewing a HTTPS page)		    // Both types of relative URIs are characterized by a leading slash, hence		    // we can use a single check.		    if (utf8_substr($uri, 0, 1) == '/')		    {				return $uri;		    }		    else		    {				// If this is not a properly formatted stream, then it is a shipped file.				// Therefore, return the urlencoded URI with the base URL prepended.				return $base_url.'/'.$this->encode_path($uri);		    }		}		else if ($scheme == 'http' || $scheme == 'https')		{			// Check for http so that we don't have to implement getExternalUrl() for			// the http wrapper.			return $uri;		}		else		{			return FALSE;		}	}	// Helper func for render_*  wrap lib in IE-conditional comments	private function check_conditional_comments($element, $data)	{		$return = ($hook = get_hook('ld_fn_check_conditional_comments_start')) ? eval($hook) : null;		if ($return != null)			return $return;		$browsers = (isset($element['browsers']) && is_array($element['browsers'])) ? $element['browsers'] : array();		$browsers += array('IE' => TRUE, '!IE' => TRUE);		// If rendering in all browsers, no need for conditional comments.		if ($browsers['IE'] === true && $browsers['!IE'])		{			return $data;		}		// Determine the conditional comment expression for Internet Explorer to evaluate.		if ($browsers['IE'] === TRUE)		{			$expression = 'IE';		}		elseif ($browsers['IE'] === FALSE)		{			$expression = '!IE';		}		else		{			$expression = $browsers['IE'];		}		if (!$browsers['!IE'])		{			// "downlevel-hidden".			$data = "\n<!--[if $expression]>".$data."<![endif]-->";		}		else		{		    // "downlevel-revealed".		    $data = "\n<!--[if $expression]><!-->".$data."<!--<![endif]-->";		}		return $data;	}}// Create the loader adapter object$forum_loader = Loader::singleton();?>
<?php// Language definitions used in delete.php$lang_delete = array('Delete post'			=>	'Delete post','Delete topic'			=>	'Delete topic','Delete post label'		=>	'Delete post by %1$s posted %2$s','Delete topic label'	=>	'Delete topic by %1$s (including replies) created %2$s','Delete topic info'		=>	'Created by %1$s %2$s.','Topic byline'			=>	'<span>Topic by </span>%s','Reply byline'			=>	'<span>Reply by </span>%s','Delete post info'		=>	'Post by %1$s %2$s','Topic'					=>	'Topic','Forum'					=>	'Forum','Topic title'			=>	'Topic: %s','Reply title'			=>	'Reply to: %s','Please confirm'		=>	'Please confirm:','Post del redirect'		=>	'Post deleted.','Topic del redirect'	=>	'Topic deleted.',);
<?php/** * Rewrites SEF URLs to their actual files. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_ROOT', './');require FORUM_ROOT.'include/essentials.php';// Bring in all the rewrite rulesif (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/rewrite_rules.php'))	require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/rewrite_rules.php';else	require FORUM_ROOT.'include/url/Default/rewrite_rules.php';// Allow extensions to create their own rewrite rules/modify existing rules($hook = get_hook('re_rewrite_rules')) ? eval($hook) : null;// If query string is not set properly, create one and set $_GET// E.g. lighttpd's 404 handler does not pass query stringif ((!isset($_SERVER['QUERY_STRING']) || empty($_SERVER['QUERY_STRING'])) && strpos($_SERVER['REQUEST_URI'], '?') !== false){	$_SERVER['QUERY_STRING'] = parse_url('http://'.$_SERVER['SERVER_NAME'].$_SERVER['REQUEST_URI']);	$_SERVER['QUERY_STRING'] = isset($_SERVER['QUERY_STRING']['query']) ? $_SERVER['QUERY_STRING']['query'] : '';	parse_str($_SERVER['QUERY_STRING'], $_GET);}// We determine the path to the script, since we need to separate the path from the data to be rewritten$path_to_script = str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME']));if (substr($path_to_script, -1) != '/')	$path_to_script  = $path_to_script.'/';// We create our own request URI with the path removed and only the parts to rewrite included$request_uri = substr(urldecode($_SERVER['REQUEST_URI']), strlen($path_to_script));if (strpos($request_uri, '?') !== false)	$request_uri = substr($request_uri, 0, strpos($request_uri, '?'));$rewritten_url = '';$url_parts = array();// We go through every rewrite ruleforeach ($forum_rewrite_rules as $rule => $rewrite_to){	// We have a match!	if (preg_match($rule, $request_uri))	{		$rewritten_url = preg_replace($rule, $rewrite_to, $request_uri);		$url_parts = explode('?', $rewritten_url);		// If there is a query string		if (isset($url_parts[1]))		{			$query_string = explode('&', $url_parts[1]);			// Set $_GET properly for all of the variables			// We also set $_REQUEST if it's not already set			foreach ($query_string as $cur_param)			{				$param_data = explode('=', $cur_param);				// Sometimes, parameters don't set a value (eg: script.php?foo), so we set them to null				$param_data[1] = isset($param_data[1]) ? $param_data[1] : null;				// We don't want to be overwriting values in $_REQUEST that were set in POST or COOKIE				if (!isset($_POST[$param_data[0]]) && !isset($_COOKIE[$param_data[0]]))					$_REQUEST[$param_data[0]] = urldecode($param_data[1]);				$_GET[$param_data[0]] = urldecode($param_data[1]);			}		}		break;	}}// If we don't know what to rewrite to, we show a bad request messsageif (empty($rewritten_url)){	define('FORUM_HTTP_RESPONSE_CODE_SET', 1);	header('HTTP/1.1 404 Not Found');	// Allow an extension to override the "Bad request" message with a custom 404 page	($hook = get_hook('re_page_not_found')) ? eval($hook) : null;	error('Page Not found (Error 404): The requested page <em>'.forum_htmlencode($request_uri).'</em> could not be found.');}// We change $_SERVER['PHP_SELF'] so that it reflects the file we're actually loading$_SERVER['PHP_SELF'] = str_replace('rewrite.php', $url_parts[0], $_SERVER['PHP_SELF']);require FORUM_ROOT.$url_parts[0];
<?php// Language definitions used in help.php$lang_help = array('Help'					=>	'Help','Help with'				=>	'Help with %s','produces'				=>	'produces','BBCode info'			=>	'Administrators have the ability to enable or disable BBCode. If BBCode is enabled a link to BBCode help will appear when you compose/edit a post or your signature. BBCode is a collection of formatting tags that are used to change the look of text in this forum. BBCode is based on the same principal as, and is very similar to, HTML. Below is a list of all the available BBCodes and instructions on how to use them.','Image info'			=>	'Administrators have the ability to enable or disable the display of images in posts and/or signatures. If image display is enabled a link to Image help will appear when you compose/edit a post or your signature. Images are inserted using the BBCode [img] tag. The text appearing after the "=" sign in the opening tag is used for the alt attribute and should be included whenever possible.','Text style'			=>	'Text appearance can be changed with the following tags which can be nested.','Bold text'				=>	'Bold text','Underlined text'		=>	'Underlined text','Italic text'			=>	'Italic text','Red text'				=>	'Red text','Blue text'				=>	'Blue text','Heading text'			=>	'Heading text','Links info'			=>	'You can create links to other documents or to email addresses using the following tags:','My e-mail address'		=>	'My email address','Quotes info'			=>	'To quote someone use the quote tag. You can use the quote tag without specifying a name.','Quote text'			=>	'This is the text I want to quote.','produces named'		=>	'produces a quote box citing the person being quoted.','produces unnamed'		=>	'produces a bare quote box.','Code info'				=>	'When displaying source code you should make sure that you use the code tag. Text displayed with the code tag will use a monospaced font and will not be affected by other tags. Long items of code will cause the text to scroll.','Code text'				=>	'This is some code.','Code text long'		=>	'This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code.','produces code box'		=>	'produces a code box.','produces scroll box'	=>	'produces a scrolling code box.','List info'				=>	'To create a list you can use the list tag. You can create 3 types of lists using the list tag.','List text 1'			=>	'Example list item 1.','List text 2'			=>	'Example list item 2.','List text 3'			=>	'Example list item 3.','produces list'			=>	'produces a bulleted list.','produces decimal list'	=>	'produces a numbered list.','produces alpha list'	=>	'produces an alphabetically labelled list.','Bold, underlined text'	=>	'Bold, underlined text','Smilies info'			=>	'If you like (and if it is enabled), the forum can convert a selection of smilies to image representations of those smilies. This forum recognizes the smilies listed below and replaces them with images.');
<?php/*** Locate a byte index given a UTF-8 character index* @version $Id: position.php,v 1.1 2006/10/01 00:01:31 harryf Exp $* @package utf8* @subpackage position*///--------------------------------------------------------------------/*** Given a string and a character index in the string, in* terms of the UTF-8 character position, returns the byte* index of that character. Can be useful when you want to* PHP's native string functions but we warned, locating* the byte can be expensive* Takes variable number of parameters - first must be* the search string then 1 to n UTF-8 character positions* to obtain byte indexes for - it is more efficient to search* the string for multiple characters at once, than make* repeated calls to this function** @author Chris Smith<chris@jalakai.co.uk>* @param string string to locate index in* @param int (n times)* @return mixed - int if only one input int, array if more* @return boolean TRUE if it's all ASCII* @package utf8* @subpackage position*/function utf8_byte_position() {    $args = func_get_args();    $str =& array_shift($args);    if (!is_string($str)) return false;    $result = array();    // trivial byte index, character offset pair    $prev = array(0,0);    // use a short piece of str to estimate bytes per character    // $i (& $j) -> byte indexes into $str    $i = utf8_locate_next_chr($str, 300);    // $c -> character offset into $str    $c = strlen(utf8_decode(substr($str,0,$i)));    // deal with arguments from lowest to highest    sort($args);    foreach ($args as $offset) {        // sanity checks FIXME        // 0 is an easy check        if ($offset == 0) { $result[] = 0; continue; }        // ensure no endless looping        $safety_valve = 50;        do {            if ( ($c - $prev[1]) == 0 ) {                // Hack: gone past end of string                $error = 0;                $i = strlen($str);                break;            }            $j = $i + (int)(($offset-$c) * ($i - $prev[0]) / ($c - $prev[1]));            // correct to utf8 character boundary            $j = utf8_locate_next_chr($str, $j);            // save the index, offset for use next iteration            $prev = array($i,$c);            if ($j > $i) {                // determine new character offset                $c += strlen(utf8_decode(substr($str,$i,$j-$i)));            } else {                // ditto                $c -= strlen(utf8_decode(substr($str,$j,$i-$j)));            }            $error = abs($c-$offset);            // ready for next time around            $i = $j;        // from 7 it is faster to iterate over the string        } while ( ($error > 7) && --$safety_valve) ;        if ($error && $error <= 7) {            if ($c < $offset) {                // move up                while ($error--) { $i = utf8_locate_next_chr($str,++$i); }            } else {                // move down                while ($error--) { $i = utf8_locate_current_chr($str,--$i); }            }            // ready for next arg            $c = $offset;        }        $result[] = $i;    }    if ( count($result) == 1 ) {        return $result[0];    }    return $result;}//--------------------------------------------------------------------/*** Given a string and any byte index, returns the byte index* of the start of the current UTF-8 character, relative to supplied* position. If the current character begins at the same place as the* supplied byte index, that byte index will be returned. Otherwise* this function will step backwards, looking for the index where* curent UTF-8 character begins* @author Chris Smith<chris@jalakai.co.uk>* @param string* @param int byte index in the string* @return int byte index of start of next UTF-8 character* @package utf8* @subpackage position*/function utf8_locate_current_chr( &$str, $idx ) {    if ($idx <= 0) return 0;    $limit = strlen($str);    if ($idx >= $limit) return $limit;    // Binary value for any byte after the first in a multi-byte UTF-8 character    // will be like 10xxxxxx so & 0xC0 can be used to detect this kind    // of byte - assuming well formed UTF-8    while ($idx && ((ord($str[$idx]) & 0xC0) == 0x80)) $idx--;    return $idx;}//--------------------------------------------------------------------/*** Given a string and any byte index, returns the byte index* of the start of the next UTF-8 character, relative to supplied* position. If the next character begins at the same place as the* supplied byte index, that byte index will be returned.* @author Chris Smith<chris@jalakai.co.uk>* @param string* @param int byte index in the string* @return int byte index of start of next UTF-8 character* @package utf8* @subpackage position*/function utf8_locate_next_chr( &$str, $idx ) {    if ($idx <= 0) return 0;    $limit = strlen($str);    if ($idx >= $limit) return $limit;    // Binary value for any byte after the first in a multi-byte UTF-8 character    // will be like 10xxxxxx so & 0xC0 can be used to detect this kind    // of byte - assuming well formed UTF-8    while (($idx < $limit) && ((ord($str[$idx]) & 0xC0) == 0x80)) $idx++;    return $idx;}
<?php// Language definitions used in viewtopic.php$lang_topic = array('Topic byline'			=>	'<span>Topic by </span>%s','Reply byline'			=>	'<span>Reply by </span>%s','Search replies'		=>	'(%s replies, posted in %s)','Post reply'			=>	'Post reply','Topic closed'			=>	'[ Closed ]','Topic closed info'		=>	'This topic is closed','No permission'			=>	'Sorry! no permission to post a reply','Topic title'			=>	'Topic: %s','Reply title'			=>	'Re: %s','Login to post'			=>	'You must %1$s or %2$s to post a reply','From'					=>	'From:', // User location'Registered'			=>	'Registered:','Note'					=>	'Note:', // Admin note'IP'					=>	'IP:','Posts'					=>	'Posts','Posts info'			=>	'Posts:','User possessive'		=>	'%s\'s', // As in "Author's Website"'Visit website'			=>	'%s Website','E-mail'				=>	'Email','Online'				=>	'Online','Offline'				=>	'Offline','Last edited'			=>	'Last edited by %1$s (%2$s)','Report'				=>	'Report','Delete'				=>	'Delete','Delete topic'			=>	'Delete topic','Edit'					=>	'Edit','Quote'					=>	'Quote','Unsubscribe'			=>	'Unsubscribe','Subscribe'				=>	'Subscribe','Subscribe info'		=>	'Receive email notification of new posts.','RSS topic feed'		=>	'RSS topic feed','Quick post'			=>	'Quick reply to this topic','Post'					=>	'Post','Permalink post'		=>	'Permanent link to this post','Permalink topic'		=>	'Permanent link to this topic','Go to profile'			=>	'Go to %s\'s profile','Move'					=>	'Move topic','Topic options'			=>	'Topic options','Open'					=>	'Open topic','Close'					=>	'Close topic','Unstick'				=>	'Unstick topic','Stick'					=>	'Stick topic','Moderate topic'		=>	'Moderate topic','Required warn'			=>	'You cannot submit or preview an empty message.',);
<?php// The contents of this file are very much inspired by the file i18n-ascii.txt// from the CMS software Textpattern (http://textpattern.com/). // Replacements done by sef_friendly function$lang_url_replace = array('' => 'A','' => 'A','' => 'A','' => 'A','' => 'Ae','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'C','' => 'C','' => 'C','' => 'C','' => 'C','' => 'D','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'G','' => 'G','' => 'G','' => 'G','' => 'H','' => 'H','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'IJ','' => 'J','' => 'K','' => 'K','' => 'K','' => 'K','' => 'K','' => 'L','' => 'N','' => 'N','' => 'N','' => 'N','' => 'N','' => 'O','' => 'O','' => 'O','' => 'O','' => 'Oe','' => 'O','' => 'O','' => 'O','' => 'O','' => 'OE','' => 'R','' => 'R','' => 'R','' => 'S','' => 'S','' => 'S','' => 'S','' => 'S','' => 'T','' => 'T','' => 'T','' => 'T','' => 'U','' => 'U','' => 'U','' => 'Ue','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'W','' => 'Y','' => 'Y','' => 'Y','' => 'Z','' => 'Z','' => 'Z','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'c','' => 'c','' => 'c','' => 'c','' => 'c','' => 'd','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'f','' => 'g','' => 'g','' => 'g','' => 'g','' => 'h','' => 'h','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'ij','' => 'j','' => 'k','' => 'k','' => 'l','' => 'l','' => 'l','' => 'l','' => 'l','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'u','' => 'u','' => 'u','' => 'ue','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'w','' => 'y','' => 'y','' => 'y','' => 'z','' => 'z','' => 'z','' => 'ss','' => 'ss','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'B','' => 'G','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'Z','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'TH','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'KS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'P','' => 'R','' => 'R','' => 'S','' => 'T','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'F','' => 'X','' => 'PS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'b','' => 'g','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'z','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'th','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'k','' => 'l','' => 'm','' => 'n','' => 'ks','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'p','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'f','' => 'x','' => 'ps','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => '','' => '','' => '','' => '','' => 'YE','' => 'YE','' => 'YI','' => 'YI','' => 'KG','' => 'KG','' => 'd','' => 'D','' => 'th','' => 'TH',);
<?php/** * SEF URLs that use a folder-like layout and include topic name and forum name * where applicable. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// These are the "fancy" folder based SEF URLs$forum_url = array(	'change_email'					=>	'change/email/$1/',	'change_email_key'				=>	'change/email/$1/$2/',	'change_password'				=>	'change/password/$1/',	'change_password_key'			=>	'change/password/$1/$2/',	'delete'						=>	'delete/$1/',	'delete_avatar'					=>	'delete/avatar/$1/$2/',	'delete_user'					=>	'delete/user/$1/',	'edit'							=>	'edit/$1/',	'email'							=>	'email/$1/',	'forum'							=>	'forum/$1/$2/',	'forum_rss'						=>	'feed/rss/forum/$1/',	'forum_atom'					=>	'feed/atom/forum/$1/',	'help'							=>	'help/$1/',	'index'							=>	'',	'index_rss'						=>	'feed/rss/',	'index_atom'					=>	'feed/atom/',	'login'							=>	'login/',	'logout'						=>	'logout/$1/$2/',	'mark_read'						=>	'mark/read/$1/',	'mark_forum_read'				=>	'mark/forum/$1/read/$2/',	'new_topic'						=>	'new/topic/$1/',	'new_reply'						=>	'new/reply/$1/',	'post'							=>	'post/$1/#p$1',	'profile_about'					=>	'user/$1/about/',	'profile_identity'				=>	'user/$1/identity/',	'profile_settings'				=>	'user/$1/settings/',	'profile_avatar'				=>	'user/$1/avatar/',	'profile_signature'				=>	'user/$1/signature/',	'profile_admin'					=>	'user/$1/admin/',	'quote'							=>	'new/reply/$1/quote/$2/',	'register'						=>	'register/',	'report'						=>	'report/$1/',	'request_password'				=>	'request/password/',	'rules'							=>	'rules/',	'search'						=>	'search/',	'search_advanced'				=>	'search/advanced/',	'search_resultft'				=>	'search/k$1/$2/a$3/$4/$5/$6/$7/',	'search_results'				=>	'search/$1/',	'search_new'					=>	'search/new/',	'search_new_results'			=>	'search/new/$1/',	'search_recent'					=>	'search/recent/',	'search_recent_results'			=>	'search/recent/$1/',	'search_unanswered'				=>	'search/unanswered/',	'search_subscriptions'			=>	'search/subscriptions/$1/',	'search_user_posts'				=>	'search/posts/user/$1/',	'search_user_topics'			=>	'search/topics/user/$1/',	'subscribe'						=>	'subscribe/$1/$2/',	'topic'							=>	'topic/$1/$2/',	'topic_rss'						=>	'feed/rss/topic/$1/',	'topic_atom'					=>	'feed/atom/topic/$1/',	'topic_new_posts'				=>	'topic/$1/$2/new/posts/',	'topic_last_post'				=>	'topic/$1/last/post/',	'unsubscribe'					=>	'unsubscribe/$1/$2/',	'user'							=>	'user/$1/',	'users'							=>	'users/',	'users_browse'					=>	'users/$4/$1/$2/$3/',	'page'							=>	'page/$1/',	'moderate_forum'				=>	'moderate/$1/',	'get_host'						=>	'get_host/$1/',	'move'							=>	'move_topics/$1/$2/',	'open'							=>	'open/$1/$2/$3/',	'close'							=>	'close/$1/$2/$3/',	'stick'							=>	'stick/$1/$2/$3/',	'unstick'						=>	'unstick/$1/$2/$3/',	'moderate_topic'				=>	'moderate/$1/$2/',	'admin_index'					=>	'admin/index.php',	'admin_bans'					=>	'admin/bans.php?sort_by=1',	'admin_categories'				=>	'admin/categories.php',	'admin_censoring'				=>	'admin/censoring.php',	'admin_extensions_manage'		=>	'admin/extensions.php?section=manage',	'admin_extensions_hotfixes'		=>	'admin/extensions.php?section=hotfixes',	'admin_forums'					=>	'admin/forums.php',	'admin_groups'					=>	'admin/groups.php',	'admin_loader'					=>	'admin/loader.php',	'admin_reindex'					=>	'admin/reindex.php',	'admin_settings_setup'			=>	'admin/settings.php?section=setup',	'admin_settings_features'		=>	'admin/settings.php?section=features',	'admin_settings_content'		=>	'admin/settings.php?section=content',	'admin_settings_email'			=>	'admin/settings.php?section=email',	'admin_settings_announcements'	=>	'admin/settings.php?section=announcements',	'admin_settings_registration'	=>	'admin/settings.php?section=registration',	'admin_settings_communications'	=>	'admin/settings.php?section=communications',	'admin_settings_maintenance'	=>	'admin/settings.php?section=maintenance',	'admin_prune'					=>	'admin/prune.php',	'admin_ranks'					=>	'admin/ranks.php',	'admin_reports'					=>	'admin/reports.php',	'admin_users'					=>	'admin/users.php');
<?php/** * A database layer class that relies on the PostgreSQL PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for PostgreSQLif (!function_exists('pg_connect'))	exit('This PHP environment doesn\'t have PostgreSQL support built in. PostgreSQL support is required if you want to use a PostgreSQL database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $last_query_text = array();	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $error_no = false;	var $error_msg = 'Unknown';	var $datatype_transformations = array(		'/^(TINY|SMALL)INT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'			=>	'SMALLINT',		'/^(MEDIUM)?INT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'				=>	'INTEGER',		'/^BIGINT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'						=>	'BIGINT',		'/^(TINY|MEDIUM|LONG)?TEXT$/i'										=>	'TEXT',		'/^DOUBLE( )?(\\([0-9,]+\\))?( )?(UNSIGNED)?$/i'					=>	'DOUBLE PRECISION',		'/^FLOAT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'						=>	'REAL'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		$this->prefix = $db_prefix;		if ($db_host)		{			if (strpos($db_host, ':') !== false)			{				list($db_host, $dbport) = explode(':', $db_host);				$connect_str[] = 'host='.$db_host.' port='.$dbport;			}			else				$connect_str[] = 'host='.$db_host;		}		if ($db_name)			$connect_str[] = 'dbname='.$db_name;		if ($db_username)			$connect_str[] = 'user='.$db_username;		if ($db_password)			$connect_str[] = 'password='.$db_password;		if ($p_connect)			$this->link_id = @pg_pconnect(implode(' ', $connect_str));		else			$this->link_id = @pg_connect(implode(' ', $connect_str));		if (!$this->link_id)			error('Unable to connect to PostgreSQL server.', __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return (@pg_query($this->link_id, 'BEGIN')) ? true : false;	}	function end_transaction()	{		--$this->in_transaction;		if (@pg_query($this->link_id, 'COMMIT'))			return true;		else		{			@pg_query($this->link_id, 'ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	// $unbuffered is ignored since there is no pgsql_unbuffered_query()	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (strrpos($sql, 'LIMIT') !== false)			$sql = preg_replace('#LIMIT ([0-9]+),([ 0-9]+)#', 'LIMIT \\2 OFFSET \\1', $sql);		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		@pg_send_query($this->link_id, $sql);		$this->query_result = @pg_get_result($this->link_id);		if (pg_result_status($this->query_result) != PGSQL_FATAL_ERROR)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			$this->last_query_text[$this->query_result] = $sql;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			$this->error_msg = @pg_result_error($this->query_result);			if ($this->in_transaction)				@pg_query($this->link_id, 'ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))			{				$new_query = $query;				if ($return_query_string)				{					$query_set = array();					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$query_set[] = $this->query_build($new_query, true, $unbuffered);					}					$sql = implode('; ', $query_set);				}				else				{					$result_set = null;					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$result_set = $this->query_build($new_query, false, $unbuffered);					}					return $result_set;				}			}			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' SELECT '.$query['VALUES'].' WHERE NOT EXISTS (SELECT 1 FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'].' WHERE '.$query['UNIQUE'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		return ($query_id) ? @pg_fetch_result($query_id, $row, $col) : false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @pg_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @pg_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @pg_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->query_result) ? @pg_affected_rows($this->query_result) : false;	}	function insert_id()	{		$query_id = $this->query_result;		if ($query_id && $this->last_query_text[$query_id] != '')		{			if (preg_match('/^INSERT INTO ([a-z0-9\_\-]+)/is', $this->last_query_text[$query_id], $table_name))			{				// Hack (don't ask)				if (substr($table_name[1], -6) == 'groups')					$table_name[1] .= '_g';				$temp_q_id = @pg_query($this->link_id, 'SELECT currval(\''.$table_name[1].'_id_seq\')');				return ($temp_q_id) ? intval(@pg_fetch_result($temp_q_id, 0)) : false;			}		}		return false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		if (!$query_id)			$query_id = $this->query_result;		return ($query_id) ? @pg_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : pg_escape_string($str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = false;		$result['error_msg'] = $this->error_msg;		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->in_transaction)			{				if (defined('FORUM_SHOW_QUERIES'))					$this->saved_queries[] = array('COMMIT', 0);				@pg_query($this->link_id, 'COMMIT');			}			if ($this->query_result)				@pg_free_result($this->query_result);			return @pg_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'PostgreSQL',			'version'	=> preg_replace('/^[^0-9]+([^\s,-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM pg_class WHERE relname = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM pg_class c INNER JOIN pg_attribute a ON a.attrelid = c.oid WHERE c.relname = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND a.attname = \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM pg_index i INNER JOIN pg_class c1 ON c1.oid = i.indrelid INNER JOIN pg_class c2 ON c2.oid = i.indexrelid WHERE c1.relname = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND c2.relname = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_'.$this->escape($index_name).'\'');		return $this->num_rows($result) > 0;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			// The SERIAL datatype is a special case where we don't need to say not null			if (!$field_data['allow_null'] && $field_data['datatype'] != 'SERIAL')				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE ('.implode(',', $key_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".')';		$this->query($query) or error(__FILE__, __LINE__);		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$this->add_index($table_name, $index_name, $index_fields, false, $no_prefix);		}	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type) or error(__FILE__, __LINE__);		if ($default_value !== null)		{			if (!is_int($default_value) && !is_float($default_value))				$default_value = '\''.$this->escape($default_value).'\'';			$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ALTER '.$field_name.' SET DEFAULT '.$default_value) or error(__FILE__, __LINE__);			$this->query('UPDATE '.($no_prefix ? '' : $this->prefix).$table_name.' SET '.$field_name.'='.$default_value) or error(__FILE__, __LINE__);		}		if (!$allow_null)			$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ALTER '.$field_name.' SET NOT NULL') or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		$this->add_field($table_name, 'tmp_'.$field_name, $field_type, $allow_null, $default_value, $after_field, $no_prefix);		$this->query('UPDATE '.($no_prefix ? '' : $this->prefix).$table_name.' SET tmp_'.$field_name.' = '.$field_name) or error(__FILE__, __LINE__);		$this->drop_field($table_name, $field_name, $no_prefix);		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' RENAME COLUMN tmp_'.$field_name.' TO '.$field_name) or error(__FILE__, __LINE__);		// Set the default value		if ($default_value === null)			$default_value = 'NULL';		else if (!is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ALTER '.$field_name.' SET DEFAULT '.$default_value) or error(__FILE__, __LINE__);		if (!$allow_null)			$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ALTER '.$field_name.' SET NOT NULL') or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('CREATE '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ON '.($no_prefix ? '' : $this->prefix).$table_name.'('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
