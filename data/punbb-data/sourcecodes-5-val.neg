<?php/** * Edit post page. * * Modifies the contents of the specified post. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ed_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request']);// Fetch some info about the post, the topic and the forum$query = array(	'SELECT'	=> 'f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies',	'FROM'		=> 'posts AS p',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'topics AS t',			'ON'			=> 't.id=p.topic_id'		),		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'f.id=t.forum_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id);($hook = get_hook('ed_qr_get_post_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_post = $forum_db->fetch_assoc($result);if (!$cur_post)	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('ed_pre_permission_check')) ? eval($hook) : null;// Do we have permission to edit this post?if (($forum_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $forum_user['id'] ||	$cur_post['closed'] == '1') &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);$can_edit_subject = $id == $cur_post['first_post_id'];($hook = get_hook('ed_post_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	($hook = get_hook('ed_form_submitted')) ? eval($hook) : null;	// If it is a topic it must contain a subject	if ($can_edit_subject)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$subject = utf8_ucwords(utf8_strtolower($subject));	}	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$message = utf8_ucwords(utf8_strtolower($message));	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	($hook = get_hook('ed_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		($hook = get_hook('ed_pre_post_edited')) ? eval($hook) : null;		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'subject=\''.$forum_db->escape($subject).'\'',				'WHERE'		=> 'id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']			);			($hook = get_hook('ed_qr_update_subject')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'message=\''.$forum_db->escape($message).'\', hide_smilies=\''.$hide_smilies.'\'',			'WHERE'		=> 'id='.$id		);		if (!isset($_POST['silent']) || !$forum_page['is_admmod'])			$query['SET'] .= ', edited='.time().', edited_by=\''.$forum_db->escape($forum_user['username']).'\'';		($hook = get_hook('ed_qr_update_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		($hook = get_hook('ed_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $id), $lang_post['Edit redirect']);	}}// Setup error messagesif (!empty($errors)){	$forum_page['errors'] = array();	foreach ($errors as $cur_error)		$forum_page['errors'][] = '<li><span>'.$cur_error.'</span></li>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['edit'], $id);$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['main_head_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_post['forum_name'], forum_link($forum_url['forum'], array($cur_post['fid'], sef_friendly($cur_post['forum_name'])))),	array($cur_post['subject'], forum_link($forum_url['topic'], array($cur_post['tid'], sef_friendly($cur_post['subject'])))),	(($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply']));($hook = get_hook('ed_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'postedit');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ed_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo ($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($forum_page['errors'])){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($id == $cur_post['first_post_id']) ? $lang_post['Topic byline'] : $lang_post['Reply byline']), '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	$forum_page['preview_message'] = parse_message($message, $hide_smilies);	($hook = get_hook('ed_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $id == $cur_post['first_post_id'] ? $lang_post['Preview edited topic'] : $lang_post['Preview edited reply'] ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('ed_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('ed_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Compose edited reply'] : $lang_post['Compose edited topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";// If there were any errors, show themif (isset($forum_page['errors'])){?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_post['Post errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('ed_pre_main_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Edit post legend'] ?></strong></legend><?php ($hook = get_hook('ed_pre_subject')) ? eval($hook) : null; ?><?php if ($can_edit_subject): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" size="70" maxlength="70" value="<?php echo forum_htmlencode(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('ed_pre_message_box')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo forum_htmlencode(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';	else		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';}if ($forum_page['is_admmod']){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';	else		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';}($hook = get_hook('ed_pre_checkbox_display')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('ed_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('ed_pre_main_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('ed_main_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php$forum_id = $cur_post['fid'];($hook = get_hook('ed_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads various functions that are used for searching the forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_SEARCH_MIN_WORD'))	define('FORUM_SEARCH_MIN_WORD', 3);if (!defined('FORUM_SEARCH_MAX_WORD'))	define('FORUM_SEARCH_MAX_WORD', 20);//// Cache the results of a search and redirect the user to the results page//function create_search_cache($keywords, $author, $search_in = false, $forum = array(-1), $show_as = 'topics', $sort_by = null, $sort_dir = 'DESC'){	global $forum_db, $forum_user, $forum_config, $forum_url, $lang_search, $lang_common, $db_type;	$return = ($hook = get_hook('sf_fn_create_search_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	if (utf8_strlen(str_replace(array('*', '%'), '', $author)) < 2)		$author = '';	if (utf8_strlen(str_replace(array('*', '%'), '', $keywords)) < FORUM_SEARCH_MIN_WORD)		$keywords = '';	if (!$keywords && !$author)		message($lang_search['No terms']);	$keywords = utf8_strtolower($keywords);	$author = utf8_strtolower($author);	// Flood protection	if ($forum_user['last_search'] && (time() - $forum_user['last_search']) < $forum_user['g_search_flood'] && (time() - $forum_user['last_search']) >= 0)		message(sprintf($lang_search['Search flood'], $forum_user['g_search_flood']));	if ($forum_user['is_guest'])	{		$query = array(			'UPDATE'	=> 'online',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);	}	else	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'id='.$forum_user['id'],		);	}	($hook = get_hook('sf_fn_create_search_cache_qr_update_last_search_time')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// We need to grab results, insert them into the cache and reload with a search id before showing them	$keyword_results = $author_results = array();	// If it's a search for keywords	if ($keywords)	{		// Remove any apostrophes which aren't part of words		$keywords = substr(preg_replace('((?<=\W)\'|\'(?=\W))', '', ' '.$keywords.' '), 1, -1);		// Remove symbols and multiple whitespace		$keywords = preg_replace('/[\^\$&\(\)<>`"\|,@_\?%~\+\[\]{}:=\/#\\\\;!\.\s]+/', ' ', $keywords);		// Fill an array with all the words		$keywords_array = array_unique(explode(' ', $keywords));		// Remove any words that are not indexed		$keywords_array = array_filter($keywords_array, 'validate_search_word');  		if (empty($keywords_array))			no_search_results();		$word_count = 0;		$match_type = 'and';		$result_list = array();		foreach ($keywords_array as $cur_word)		{			switch ($cur_word)			{				case 'and':				case 'or':				case 'not':					$match_type = $cur_word;					break;				default:				{					$query = array(						'SELECT'	=> 'm.post_id',						'FROM'		=> 'search_words AS w',						'JOINS'		=> array(							array(								'INNER JOIN'	=> 'search_matches AS m',								'ON'			=> 'm.word_id=w.id'							)						),						'WHERE'		=> 'w.word LIKE \''.$forum_db->escape(str_replace('*', '%', $cur_word)).'\''					);					// Search in what?					if ($search_in)						$query['WHERE'] .= ($search_in > 0 ? ' AND m.subject_match=0' : ' AND m.subject_match=1');					($hook = get_hook('sf_fn_create_search_cache_qr_get_keyword_hits')) ? eval($hook) : null;					$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);					$row = array();					while (list($post_id) = $forum_db->fetch_row($result))					{						$row[$post_id] = 1;						if (!$word_count)							$result_list[$post_id] = 1;						else if ($match_type == 'or')							$result_list[$post_id] = 1;						else if ($match_type == 'not')							$result_list[$post_id] = 0;					}					if ($match_type == 'and' && $word_count)					{						foreach (array_keys($result_list) as $post_id)						{							if (!isset($row[$post_id]))								$result_list[$post_id] = 0;						}					}					++$word_count;					$forum_db->free_result($result);					break;				}			}		}		foreach ($result_list as $post_id => $matches)		{			if ($matches)				$keyword_results[] = $post_id;		}		unset($result_list);	}	// If it's a search for author name (and that author name isn't Guest)	if ($author && $author != 'guest' && $author != utf8_strtolower($lang_common['Guest']))	{		$query = array(			'SELECT'	=> 'u.id',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.username '.($db_type == 'pgsql' ? 'ILIKE' : 'LIKE').' \''.$forum_db->escape(str_replace('*', '%', $author)).'\''		);		($hook = get_hook('sf_fn_create_search_cache_qr_get_author')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$user_ids = array();		while ($row = $forum_db->fetch_row($result))		{			$user_ids[] = $row[0];		}		if (!empty($user_ids))		{			$query = array(				'SELECT'	=> 'p.id',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.poster_id IN('.implode(',', $user_ids).')'			);			($hook = get_hook('sf_fn_create_search_cache_qr_get_author_hits')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$search_ids = array();			while ($row = $forum_db->fetch_row($result))				$author_results[] = $row[0];			$forum_db->free_result($result);		}	}	if ($author && $keywords)	{		// If we searched for both keywords and author name we want the intersection between the results		$search_ids = array_intersect($keyword_results, $author_results);		unset($keyword_results, $author_results);	}	else if ($keywords)		$search_ids = $keyword_results;	else		$search_ids = $author_results;	if (count($search_ids) == 0)		no_search_results();	// Setup the default show_as topics search	$query = array(		'SELECT'	=> 't.id',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'topics AS t',				'ON'			=> 't.id=p.topic_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id IN('.implode(',', $search_ids).')',		'GROUP BY'	=> 't.id'	);	// Search a specific forum?	if (!in_array(-1, $forum) || ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod']))		$query['WHERE'] .= ' AND t.forum_id IN('.implode(',', $forum).')';	// Adjust the query if show_as posts	if ($show_as == 'posts')	{		$query['SELECT'] = 'p.id';		unset($query['GROUP BY']);	}	($hook = get_hook('sf_fn_create_search_cache_qr_get_hits')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_ids = array();	while ($row = $forum_db->fetch_row($result))		$search_ids[] = $row[0];	// Prune "old" search results	$query = array(		'SELECT'	=> 'o.ident',		'FROM'		=> 'online AS o'	);	($hook = get_hook('sf_fn_create_search_cache_qr_get_online_idents')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$online_idents = array();	while ($row = $forum_db->fetch_row($result))	{		$online_idents[] = '\''.$forum_db->escape($row[0]).'\'';	}	if (!empty($online_idents))	{		$query = array(			'DELETE'	=> 'search_cache',			'WHERE'		=> 'ident NOT IN('.implode(',', $online_idents).')'		);		($hook = get_hook('sf_fn_create_search_cache_qr_delete_old_cached_searches')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Final search results	$search_results = implode(',', $search_ids);	// Fill an array with our results and search properties	$search_data = serialize(compact('search_results', 'sort_by', 'sort_dir', 'show_as'));	$search_id = mt_rand(1, 2147483647);	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'INSERT'	=> 'id, ident, search_data',		'INTO'		=> 'search_cache',		'VALUES'	=> $search_id.', \''.$forum_db->escape($ident).'\', \''.$forum_db->escape($search_data).'\''	);	($hook = get_hook('sf_fn_create_search_cache_qr_cache_search')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$return = ($hook = get_hook('sf_fn_create_search_cache_end')) ? eval($hook) : null;	if ($return != null)		return;	$forum_db->end_transaction();	$forum_db->close();	// Redirect the user to the cached result page	header('Location: '.str_replace('&amp;', '&', forum_link($forum_url['search_results'], $search_id)));	exit;}//// Generate query to grab the results for a cached search//function generate_cached_search_query($search_id, &$show_as){	global $forum_db, $db_type, $forum_user, $forum_config;	$return = ($hook = get_hook('sf_fn_generate_cached_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'SELECT'	=> 'sc.search_data',		'FROM'		=> 'search_cache AS sc',		'WHERE'		=> 'sc.id='.$search_id.' AND sc.ident=\''.$forum_db->escape($ident).'\''	);	($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_search_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($row = $forum_db->fetch_assoc($result))	{		$search_data = unserialize($row['search_data']);		$search_results = $search_data['search_results'];		$sort_by = $search_data['sort_by'];		$sort_dir = $search_data['sort_dir'];		$show_as = $search_data['show_as'];		unset($search_data);	}	else		return false;	// If there are no posts, we don't need to execute the query	if (empty($search_results))		return false;	switch ($sort_by)	{		case 1:			$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';			break;		case 2:			$sort_by_sql = 't.subject';			break;		case 3:			$sort_by_sql = 't.forum_id';			break;		default:			$sort_by_sql = ($show_as == 'topics') ? 't.posted' : 'p.posted';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_cached_sort_by')) ? eval($hook) : null;			break;	}	if ($show_as == 'posts')	{		$query = array(			'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'			=> 't.id=p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 'p.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_posts')) ? eval($hook) : null;	}	else	{		$query = array(			'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 't.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		// With "has posted" indication		if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')		{			$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';			$query['JOINS'][]	= array(				'LEFT JOIN'		=> 'posts AS p',				'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'			);			// Must have same columns as in prev SELECT			$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_has_posted')) ? eval($hook) : null;		}		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_topics')) ? eval($hook) : null;	}	($hook = get_hook('sf_fn_generate_cached_search_query_end')) ? eval($hook) : null;	return $query;}//// Generate query to grab the results for an action search (i.e. quicksearch)//function generate_action_search_query($action, $value, &$search_id, &$url_type, &$show_as){	global $forum_db, $forum_user, $forum_config, $lang_common, $forum_url, $db_type;	$return = ($hook = get_hook('sf_fn_generate_action_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	switch ($action)	{		case 'show_new':			if ($forum_user['is_guest'])				message($lang_common['No permission']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.$forum_user['last_visit'].' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			if ($value != -1)				$query['WHERE'] .= ' AND f.id='.$value;			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_new_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new')) ? eval($hook) : null;			break;		case 'show_recent':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.(time() - $value).' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_recent_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent')) ? eval($hook) : null;			break;		case 'show_user_posts':			$query = array(				'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',				'FROM'		=> 'posts AS p',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'topics AS t',						'ON'			=> 't.id=p.topic_id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 'pposted DESC'			);			$url_type = $forum_url['search_user_posts'];			$search_id = $value;			$show_as = 'posts';			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_posts')) ? eval($hook) : null;			break;		case 'show_user_topics':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'posts AS p',						'ON'			=> 't.first_post_id=p.id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_user_topics'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics')) ? eval($hook) : null;			break;		case 'show_subscriptions':			if ($forum_user['is_guest'])				message($lang_common['Bad request']);			// Check we're allowed to see the subscriptions we're trying to look at			if ($forum_user['g_id'] != FORUM_ADMIN && $forum_user['id'] != $value)				message($lang_common['Bad request']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'subscriptions AS s',						'ON'			=> '(t.id=s.topic_id AND s.user_id='.$value.')'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1)',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_subscriptions'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions')) ? eval($hook) : null;			break;		case 'show_unanswered':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.num_replies=0 AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_unanswered'];			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered')) ? eval($hook) : null;			break;	}	($hook = get_hook('sf_fn_generate_action_search_query_end')) ? eval($hook) : null;	return $query;}//// Get search results for a specified query, returns number of results//function get_search_results($query, &$search_set){	global $forum_db, $forum_user, $forum_page, $lang_common;	$return = ($hook = get_hook('sf_fn_get_search_results_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_results = array();	while ($row = $forum_db->fetch_assoc($result))	{		$search_results[] = $row;	}	// Make sure we actually have some results	$num_hits = count($search_results);	if ($num_hits == 0)		return 0;	// Work out the settings for pagination	$forum_page['num_pages'] = ceil($num_hits / $forum_page['per_page']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];	// Determine the topic or post offset (based on $forum_page['page'])	$forum_page['start_from'] = $forum_page['per_page'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_page['per_page']), $num_hits);	// Fill $search_set with out search hits	$search_set = array();	$row_num = 0;	foreach ($search_results as $row)	{		if ($forum_page['start_from'] <= $row_num && $forum_page['finish_at'] > $row_num)			$search_set[] = $row;		++$row_num;	}	$forum_db->free_result($result);	$return = ($hook = get_hook('sf_fn_get_search_results_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $num_hits;}//// Output a message if there are no results//function no_search_results($action = 'search'){	global $forum_page, $lang_search, $forum_url;	$forum_page['search_again'] = '<a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a>';	$return = ($hook = get_hook('sf_fn_no_search_results_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			message($lang_search['No new posts'], $forum_page['search_again'], $lang_search['Topics with new']);			break;		case 'show_recent':			message($lang_search['No recent posts'], $forum_page['search_again'], $lang_search['Recently active topics']);			break;		case 'show_user_posts':			message($lang_search['No user posts'], $forum_page['search_again'], $lang_search['Posts by user']);			break;		case 'show_user_topics':			message($lang_search['No user topics'], $forum_page['search_again'], $lang_search['Topics by user']);			break;		case 'show_subscriptions':			message($lang_search['No subscriptions'], $forum_page['search_again'], $lang_search['Subscriptions']);			break;		case 'show_unanswered':			message($lang_search['No unanswered'], $forum_page['search_again'], $lang_search['Unanswered topics']);			break;		default:			message($lang_search['No hits'], $forum_page['search_again'], $lang_search['Search results']);			break;	}}//// Generate search breadcrumbs//function generate_search_crumbs($action = null){	global $forum_page, $lang_common, $lang_search, $forum_url, $forum_user, $num_hits, $search_set, $search_id, $show_as;	$return = ($hook = get_hook('sf_fn_generate_search_crumbs_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			$forum_page['crumbs'][] = $lang_search['Topics with new'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			$forum_page['main_foot_options']['mark_all'] = '<span'.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['mark_read'], generate_form_token('markread'.$forum_user['id'])).'">'.$lang_common['Mark all as read'].'</a></span>';			// Add link for show all topics, not only new (updated)			$forum_page['main_head_options']['show_all'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['forum'], $search_set[0]['forum_id']).'">'.$lang_search['All Topics'].'</a></span>';			break;		case 'show_recent':			$forum_page['crumbs'][] = $lang_search['Recently active topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_unanswered':			$forum_page['crumbs'][] = $lang_search['Unanswered topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_posts':			$forum_page['crumbs'][] = sprintf($lang_search['Posts by'], $search_set[0]['pposter'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['items_info'] = generate_items_info($lang_search['Posts found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_topics'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_topics'], $search_id).'">'.sprintf($lang_search['Topics by'], forum_htmlencode($search_set[0]['pposter'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_topics':			$forum_page['crumbs'][] = sprintf($lang_search['Topics by'], $search_set[0]['poster']);			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_posts'] =  '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_posts'], $search_id).'">'.sprintf($lang_search['Posts by'], forum_htmlencode($search_set[0]['poster'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_subscriptions':			$forum_page['crumbs'][] = $lang_search['Subscriptions'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		default:			$forum_page['crumbs'][] = $lang_search['Search results'];			$forum_page['items_info'] = generate_items_info((($show_as == 'topics') ? $lang_search['Topics found'] : $lang_search['Posts found']), ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['new_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a></span>';			break;	}}//// Checks to see if an action is valid//function validate_search_action($action){	// A list of valid actions (extensions can add their own actions to the array)	$valid_actions = array('search', 'show_new', 'show_recent', 'show_user_posts', 'show_user_topics', 'show_subscriptions', 'show_unanswered');	$return = ($hook = get_hook('sf_fn_validate_actions_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return in_array($action, $valid_actions);}
<?php/** * Group management page. * * Allows administrators to control group permissions. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('agr_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_groups.php';// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		($hook = get_hook('agr_add_group_form_submitted')) ? eval($hook) : null;		$base_group = intval($_POST['base_group']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$base_group		);		($hook = get_hook('agr_add_group_qr_get_base_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		$mode = 'add';	}	else	// We are editing a group	{		($hook = get_hook('agr_edit_group_form_submitted')) ? eval($hook) : null;		$group_id = intval($_GET['edit_group']);		if ($group_id < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$group_id		);		($hook = get_hook('agr_edit_group_qr_get_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		if (!$group)			message($lang_common['Bad request']);		$mode = 'edit';	}	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$mode == 'edit' ? $lang_admin_groups['Edit group heading'] : $lang_admin_groups['Add group heading']	);	($hook = get_hook('agr_add_edit_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_add_edit_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Group settings heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_admin_common['Required warn'], '<em>'.$lang_admin_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups'])) ?>" />				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; if ($mode == 'add'): ?>				<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group title head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Group title legend'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_group_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Group title label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo forum_htmlencode($group['g_title']); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_user_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['User title label'] ?></span> <small><?php echo $lang_admin_groups['User title help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="user_title" size="25" maxlength="50" value="<?php echo forum_htmlencode($group['g_user_title']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('agr_add_edit_group_basic_details_fieldset_end')) ? eval($hook) : null;	// The rest of the form is for non-admin groups only	if ($group['g_id'] != FORUM_ADMIN)	{		// Reset fieldset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group perms head'] ?></span></h3>			</div><?php if ($mode == 'edit' && $forum_config['o_default_user_group'] == $group['g_id']): ?>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_groups['Moderator default group'] ?></p>				</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_permissions_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_groups['Permissions'] ?></strong></legend><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): if ($mode != 'edit' || $forum_config['o_default_user_group'] != $group['g_id']): ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['Mod permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_moderate_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow moderate label'] ?> <?php echo $lang_admin_groups['Allow moderate help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_profiles_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit profiles label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_userbane_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit username label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_change_pass_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod change pass label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_ban_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod bans label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_mod_permissions_fieldset_end')) ? eval($hook) : null; endif; endif; ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['User permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_read_board_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow read board label'] ?> <?php echo $lang_admin_groups['Allow read board help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_view_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow view users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_replies_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post replies label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_edit_posts_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow edit posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_posts_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_set_user_title_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow set user title label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_allow_search_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow use search label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_search_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow search users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_send_email_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow send email label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_user_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_user_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		// Reset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group flood head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_flood_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Restrictions'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_post_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_search_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Search interval label'] ?></span> <small><?php echo $lang_admin_groups['Search interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" /></span>					</div>				</div><?php		($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null;		// The rest of the form is for non-guest groups only		if ($group['g_id'] != FORUM_GUEST)		{?>				<?php ($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Email flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Email flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" /></span>					</div>				</div><?php		}		($hook = get_hook('agr_add_edit_group_pre_flood_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php		($hook = get_hook('agr_add_edit_group_flood_fieldset_end')) ? eval($hook) : null;	}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_edit_group" value=" <?php echo $lang_admin_groups['Update group'] ?> " /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_add_edit_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == FORUM_ADMIN) ? true : false;	$title = forum_trim($_POST['req_title']);	$user_title = forum_trim($_POST['user_title']);	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = (isset($_POST['read_board']) && $_POST['read_board'] == '1') || $is_admin_group ? '1' : '0';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = (isset($_POST['post_replies']) && $_POST['post_replies'] == '1') || $is_admin_group ? '1' : '0';	$post_topics = (isset($_POST['post_topics']) && $_POST['post_topics'] == '1') || $is_admin_group ? '1' : '0';	$edit_posts = (isset($_POST['edit_posts']) && $_POST['edit_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_posts = (isset($_POST['delete_posts']) && $_POST['delete_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_topics = (isset($_POST['delete_topics']) && $_POST['delete_topics'] == '1') || $is_admin_group ? '1' : '0';	$set_title = (isset($_POST['set_title']) && $_POST['set_title'] == '1') || $is_admin_group ? '1' : '0';	$search = (isset($_POST['search']) && $_POST['search'] == '1') || $is_admin_group ? '1' : '0';	$search_users = (isset($_POST['search_users']) && $_POST['search_users'] == '1') || $is_admin_group ? '1' : '0';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = isset($_POST['post_flood']) ? intval($_POST['post_flood']) : '0';	$search_flood = isset($_POST['search_flood']) ? intval($_POST['search_flood']) : '0';	$email_flood = isset($_POST['email_flood']) ? intval($_POST['email_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter group message']);	$user_title = ($user_title != '') ? '\''.$forum_db->escape($user_title).'\'' : 'NULL';	($hook = get_hook('agr_add_edit_end_validation')) ? eval($hook) : null;	if ($_POST['mode'] == 'add')	{		($hook = get_hook('agr_add_add_group')) ? eval($hook) : null;		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\''		);		($hook = get_hook('agr_add_end_qr_check_add_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Insert the new group		$query = array(			'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',			'INTO'		=> 'groups',			'VALUES'	=> '\''.$forum_db->escape($title).'\', '.$user_title.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood		);		($hook = get_hook('agr_add_end_qr_add_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$new_group_id = $forum_db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$query = array(			'SELECT'	=> 'fp.forum_id, fp.read_forum, fp.post_replies, fp.post_topics',			'FROM'		=> 'forum_perms AS fp',			'WHERE'		=> 'group_id='.intval($_POST['base_group'])		);		($hook = get_hook('agr_add_end_qr_get_group_forum_perms')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_forum_perm = $forum_db->fetch_assoc($result))		{			$query = array(				'INSERT'	=> 'group_id, forum_id, read_forum, post_replies, post_topics',				'INTO'		=> 'forum_perms',				'VALUES'	=> $new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics']			);			($hook = get_hook('agr_add_end_qr_add_group_forum_perms')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	else	{		$group_id = intval($_POST['group_id']);		($hook = get_hook('agr_edit_end_edit_group')) ? eval($hook) : null;		// Make sure admins and guests don't get moderator privileges		if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)			$moderator = '0';		// Make sure the default group isn't assigned moderator privileges		if ($moderator == '1' && $forum_config['o_default_user_group'] == $group_id)			message($lang_admin_groups['Moderator default group']);		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\' AND g_id!='.$group_id		);		($hook = get_hook('agr_edit_end_qr_check_edit_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Save changes		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_title=\''.$forum_db->escape($title).'\', g_user_title='.$user_title.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood,			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_edit_end_qr_update_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If the group doesn't have moderator privileges (it might have had before), remove its users from the moderator list in all forums		if (!$moderator)			clean_forum_moderators();	}	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info((($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));	($hook = get_hook('agr_add_edit_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), (($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));}// Set default groupelse if (isset($_POST['set_default_group'])){	$group_id = intval($_POST['default_group']);	($hook = get_hook('agr_set_default_group_form_submitted')) ? eval($hook) : null;	// Make sure it's not the admin or guest groups	if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	$query = array(		'SELECT'	=> 'COUNT(g.g_id)',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$group_id.' AND g.g_moderator=0',		'LIMIT'		=> '1'	);	($hook = get_hook('agr_set_default_group_qr_get_group_moderation_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value='.$group_id,		'WHERE'		=> 'conf_name=\'o_default_user_group\''	);	($hook = get_hook('agr_set_default_group_qr_set_default_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_config_cache();	// Add flash message	$forum_flash->add_info($lang_admin_groups['Default group set']);	($hook = get_hook('agr_set_default_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Default group set']);}// Remove a groupelse if (isset($_GET['del_group'])){	$group_id = intval($_GET['del_group']);	if ($group_id <= FORUM_GUEST)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_group_cancel']))		redirect(forum_link($forum_url['admin_groups']), $lang_admin_common['Cancel redirect']);	// Make sure we don't remove the default group	if ($group_id == $forum_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default group']);	($hook = get_hook('agr_del_group_selected')) ? eval($hook) : null;	// Check if this group has any members	$query = array(		'SELECT'	=> 'g.g_title, COUNT(u.id)',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'g.g_id='.$group_id,		'GROUP BY'	=> 'g.g_id, g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_group_member_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$group_info = $forum_db->fetch_row($result);	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$group_info || isset($_POST['del_group']))	{		($hook = get_hook('agr_del_group_form_submitted')) ? eval($hook) : null;		if (isset($_POST['del_group']))	// Move users		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.intval($_POST['move_to_group']),				'WHERE'		=> 'group_id='.$group_id			);			($hook = get_hook('agr_del_group_qr_move_users')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Delete the group and any forum specific permissions		$query = array(			'DELETE'	=> 'groups',			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'group_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		clean_forum_moderators();		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_groups['Group removed']);		($hook = get_hook('agr_del_group_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Group removed']);	}	list($group_title, $num_members) = $group_info;	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$lang_admin_groups['Remove group']	);	($hook = get_hook('agr_del_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_del_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_groups['Remove group head'], forum_htmlencode($group_title), $num_members) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?del_group=<?php echo $group_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?del_group='.$group_id) ?>" />			</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group set<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Remove group legend'] ?></span></legend><?php ($hook = get_hook('agr_del_group_pre_move_to_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Move users to'] ?></span> <small><?php echo $lang_admin_groups['Remove group help'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_group"><?php	$query = array(		'SELECT'	=> 'g.g_id, g.g_title',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id!='.FORUM_GUEST.' AND g.g_id!='.$group_id,		'ORDER BY'	=> 'g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_groups')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_group = $forum_db->fetch_assoc($result))	{		if ($cur_group['g_id'] == $forum_config['o_default_user_group'])	// Pre-select the default Members group			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_del_group_del_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Remove group'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_group_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_del_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['item_count'] = $forum_page['fld_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])));($hook = get_hook('agr_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-groups');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('agr_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Add group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_add_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Add group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_add_base_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Base new group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="base_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST,	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_allowed_base_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result))	echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].($cur_group['g_id'] == $forum_config['o_default_user_group'] ? '" selected="selected">' : '">').forum_htmlencode($cur_group['g_title']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_add_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_add_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_group" value="<?php echo $lang_admin_groups['Add group'] ?> " /></span>			</div>		</form>	</div><?php	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Default group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_default_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Default group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_default_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Default group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="default_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST.' AND g_moderator=0',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result)){	if ($cur_group['g_id'] == $forum_config['o_default_user_group'])		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	else		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_default_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_default_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="set_default_group" value="<?php echo $lang_admin_groups['Set default'] ?>" /></span>			</div>		</form>	</div><?php	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Existing groups heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_groups['Existing groups intro'] ?></p>		</div>		<div class="ct-group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_group_list')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['item_num'] = 0;while ($cur_group = $forum_db->fetch_assoc($result)){	$forum_page['group_options'] = array(		'edit' => '<span class="first-item"><a href="'.forum_link($forum_url['admin_groups']).'?edit_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Edit group'].'</a></span>'	);	if ($cur_group['g_id'] > FORUM_GUEST)	{		if ($cur_group['g_id'] != $forum_config['o_default_user_group'])			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['admin_groups']).'?del_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Remove group'].'</a></span>';		else			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove default'].'</span>';	}	else		$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove group'].'</span>';	($hook = get_hook('agr_edit_group_row_pre_output')) ? eval($hook) : null;?>			<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($cur_group['g_title']) ?> <?php echo ($cur_group['g_id'] == $forum_config['o_default_user_group']) ? $lang_admin_groups['default'] : '' ?></span></h3>					<p class="options"><?php echo implode(' ', $forum_page['group_options']) ?></p>				</div>			</div><?php	($hook = get_hook('agr_edit_group_row_post_output')) ? eval($hook) : null;}?>		</div>	</div><?php($hook = get_hook('agr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php// Language definitions used in login.php$lang_login = array(// Miscellaneous'Login'								=>	'Login','Login info'						=>	'Login to %s','Username'							=>	'Username','Password'							=>	'Password','Remember me'						=>	'Remember me','E-mail address'					=>	'Email address','E-mail address help'				=>	'Enter the email address set in your profile.','Login errors'						=>	'<strong>Warning!</strong> The following errors must be corrected before you can login:','Wrong user/pass'					=>	'Incorrect username and/or password.','Login redirect'					=>	'Logged in successfully.','Logout redirect'					=>	'Logged out.','No e-mail match'					=>	'There is no user registered with the email address %s.','Invalid e-mail'					=>	'The email address you entered is invalid.','Login options'						=>	'Do you need to %1$s or obtain a %2$s before you login?','Obtain pass'						=>	'new password','register'							=>	'register','Submit password request'			=>	'Submit request','Email flood'						=>	'This account has already requested a new password in the past %s seconds. Please wait a while before requesting a new password again.','New password request'				=>	'New password request','New password errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before a new password can be sent:','New password info'					=>	'<strong>Important!</strong> An email will be sent to the specified address with instructions on how to change your password.','New password cancel redirect'		=>	'New password request cancelled.','Forget mail'						=>	'An email has been sent to the specified address with instructions on how to change your password. If it does not arrive you can contact the forum administrator at %s.','Persistent login'					=>	'Log me in automatically each time I visit.');
<?php// Language definitions used in search.php$lang_search = array(// The search form'No search permission'		=>	'You do not have permission to use the search feature.','Search heading'			=>	'Search forums using your criteria','Search flood'				=>	'At least %s seconds have to pass between searches. Please wait a while and try searching again.','Search legend'				=>	'Search criteria','Results legend'			=>	'Search results','Keywords info'				=>	'You may search for a single keyword or for multiple keywords separated by spaces.','Refine info'				=>	'You may use <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> to refine your searches by keyword.','Wildcard info'				=>	'Use the wildcard character <strong>*</strong> for partial keyword or username matches.','Forum default info'		=>	'By default all forums are searched. You may narrow your search by selecting one or more forums to search.','Forum require info'		=>	'You may choose to search one or more forums. You <strong>must</strong> select at least one forum to search.','Keyword search'			=>	'Keyword or words','Author search'				=>	'Author\'s username','Forum search'				=>	'Select forums to search','Forum search default'		=>	'If no forums are selected then all forums will be searched.','Forum search require'		=>	'You must select at least one forum to search.','Sort by'					=>	'Sort results by','Sort order'				=>	'Results sort order','Sort by post time'			=>	'Post time','Sort by author'			=>	'Author','Sort by subject'			=>	'Subject','Sort by forum'				=>	'Forum','Ascending'					=>	'Ascending','Descending'				=>	'Descending','Display results'			=>	'Display results','Show as topics'			=>	'As topics','Show as posts'				=>	'As posts','Submit search'				=>	'Submit','User defined search'		=>	'User defined search','Advanced search'			=>	'Advanced search','Search in'					=>	'Search in','Message and subject'		=>	'Message text and topic subject','Message only'				=>	'Message text only','Topic only'				=>	'Topic subject only',// Results'Search results'			=>	'Search results','Topics with new'			=>	'Topics with new posts','All Topics'				=>	'Show all topics','Recently active topics'	=>	'Recently active topics','Unanswered topics'			=>	'Unanswered topics','Subscriptions'				=>	'Subscriptions','Topics found'				=>	'Topics found','Posts found'				=>	'Posts found','Topics by'					=>	'Topics by %s','Posts by'					=>	'Posts by %s','Topics by user'			=>	'Topics by this user','Posts by user'				=>	'Posts by this user','Perform new search'		=>	'Perform new search','Search options'			=>	'Search options','Posted in'					=>	'Posted in ','No terms'					=>	'You have to enter at least one keyword and/or an author to search for.','No hits'					=>	'Your search returned no hits.','No user posts'				=>	'There are no posts by this user in this forum.','No user topics'			=>	'There are no topics by this user in this forum.','No subscriptions'			=>	'There are no topics which have been subscribed to.','No new posts'				=>	'There are no topics with new posts since your last visit.','No recent posts'			=>	'No posts have been made recently.','No unanswered'				=>	'There are no unanswered posts in this forum.','Go to post'				=>	'Go to post','Go to forum'				=>	'Go to forum','Go to topic'				=>	'Go to topic','Go to profile'				=>	'Go to %s\'s profile');
<?php/** * Adds a new post to the specified topic or a new topic to the specified forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_SKIP_CSRF_CONFIRM', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('po_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$tid = isset($_GET['tid']) ? intval($_GET['tid']) : 0;$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($tid < 1 && $fid < 1 || $tid > 0 && $fid > 0)	message($lang_common['Bad request']);// Fetch some info about the topic and/or the forumif ($tid){	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, s.user_id AS is_subscribed',		'FROM'		=> 'topics AS t',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'f.id=t.forum_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			),			array(				'LEFT JOIN'		=> 'subscriptions AS s',				'ON'			=> '(t.id=s.topic_id AND s.user_id='.$forum_user['id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$tid	);	($hook = get_hook('po_qr_get_topic_forum_info')) ? eval($hook) : null;}else{	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics',		'FROM'		=> 'forums AS f',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid	);	($hook = get_hook('po_qr_get_forum_info')) ? eval($hook) : null;}$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_posting = $forum_db->fetch_assoc($result);if (!$cur_posting)	message($lang_common['Bad request']);$is_subscribed = $tid && $cur_posting['is_subscribed'];// Is someone trying to post into a redirect forum?if ($cur_posting['redirect_url'] != '')	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_posting['moderators'] != '') ? unserialize($cur_posting['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('po_pre_permission_check')) ? eval($hook) : null;// Do we have permission to post?if ((($tid && (($cur_posting['post_replies'] == '' && $forum_user['g_post_replies'] == '0') || $cur_posting['post_replies'] == '0')) ||	($fid && (($cur_posting['post_topics'] == '' && $forum_user['g_post_topics'] == '0') || $cur_posting['post_topics'] == '0')) ||	(isset($cur_posting['closed']) && $cur_posting['closed'] == '1')) &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);($hook = get_hook('po_posting_location_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();// Did someone just hit "Submit" or "Preview"?if (isset($_POST['form_sent'])){	($hook = get_hook('po_form_submitted')) ? eval($hook) : null;	// Make sure form_user is correct	if (($forum_user['is_guest'] && $_POST['form_user'] != 'Guest') || (!$forum_user['is_guest'] && $_POST['form_user'] != $forum_user['username']))		message($lang_common['Bad request']);	// Flood protection	if (!isset($_POST['preview']) && $forum_user['last_post'] != '' && (time() - $forum_user['last_post']) < $forum_user['g_post_flood'] && (time() - $forum_user['last_post']) >= 0)		$errors[] = sprintf($lang_post['Flood'], $forum_user['g_post_flood']);	// If it's a new topic	if ($fid)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// If the user is logged in we get the username and e-mail from $forum_user	if (!$forum_user['is_guest'])	{		$username = $forum_user['username'];		$email = $forum_user['email'];	}	// Otherwise it should be in $_POST	else	{		$username = forum_trim($_POST['req_username']);		$email = strtolower(forum_trim(($forum_config['p_force_guest_email'] == '1') ? $_POST['req_email'] : $_POST['email']));		// Load the profile.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';		// It's a guest, so we have to validate the username		$errors = array_merge($errors, validate_username($username));		if ($forum_config['p_force_guest_email'] == '1' || $email != '')		{			if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/email.php';			if (!is_valid_email($email))				$errors[] = $lang_post['Invalid e-mail'];			if (is_banned_email($email))				$errors[] = $lang_profile['Banned e-mail'];		}	}	// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid	if ($forum_user['is_admmod'] && (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url())))		$errors[] = $lang_post['CSRF token mismatch'];	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	$subscribe = isset($_POST['subscribe']) ? 1 : 0;	$now = time();	($hook = get_hook('po_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		// If it's a reply		if ($tid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $cur_posting['subject'],				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscr_action'	=> ($forum_config['o_subscriptions'] == '1' && $subscribe && !$is_subscribed) ? 1 : (($forum_config['o_subscriptions'] == '1' && !$subscribe && $is_subscribed) ? 2 : 0),				'topic_id'		=> $tid,				'forum_id'		=> $cur_posting['id'],				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_post')) ? eval($hook) : null;			add_post($post_info, $new_pid);		}		// If it's a new topic		else if ($fid)		{			$post_info = array(				'is_guest'		=> $forum_user['is_guest'],				'poster'		=> $username,				'poster_id'		=> $forum_user['id'],	// Always 1 for guest posts				'poster_email'	=> ($forum_user['is_guest'] && $email != '') ? $email : null,	// Always null for non-guest posts				'subject'		=> $subject,				'message'		=> $message,				'hide_smilies'	=> $hide_smilies,				'posted'		=> $now,				'subscribe'		=> ($forum_config['o_subscriptions'] == '1' && (isset($_POST['subscribe']) && $_POST['subscribe'] == '1')),				'forum_id'		=> $fid,				'update_user'	=> true,				'update_unread'	=> true			);			($hook = get_hook('po_pre_add_topic')) ? eval($hook) : null;			add_topic($post_info, $new_tid, $new_pid);		}		($hook = get_hook('po_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $new_pid), $lang_post['Post redirect']);	}}// Are we quoting someone?if ($tid && isset($_GET['qid'])){	$qid = intval($_GET['qid']);	if ($qid < 1)		message($lang_common['Bad request']);	// Get the quote and quote poster	$query = array(		'SELECT'	=> 'p.poster, p.message',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'id='.$qid.' AND topic_id='.$tid	);	($hook = get_hook('po_qr_get_quote')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$quote_poster_and_message = $forum_db->fetch_row($result);	if (!$quote_poster_and_message)	{		message($lang_common['Bad request']);	}	list($q_poster, $q_message) = $quote_poster_and_message;	($hook = get_hook('po_modify_quote_info')) ? eval($hook) : null;	if ($forum_config['p_message_bbcode'] == '1')	{		// If username contains a square bracket, we add "" or '' around it (so we know when it starts and ends)		if (strpos($q_poster, '[') !== false || strpos($q_poster, ']') !== false)		{			if (strpos($q_poster, '\'') !== false)				$q_poster = '"'.$q_poster.'"';			else				$q_poster = '\''.$q_poster.'\'';		}		else		{			// Get the characters at the start and end of $q_poster			$ends = utf8_substr($q_poster, 0, 1).utf8_substr($q_poster, -1, 1);			// Deal with quoting "Username" or 'Username' (becomes '"Username"' or "'Username'")			if ($ends == '\'\'')				$q_poster = '"'.$q_poster.'"';			else if ($ends == '""')				$q_poster = '\''.$q_poster.'\'';		}		$forum_page['quote'] = '[quote='.$q_poster.']'.$q_message.'[/quote]'."\n";	}	else		$forum_page['quote'] = '> '.$q_poster.' '.$lang_common['wrote'].':'."\n\n".'> '.$q_message."\n";}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = ($tid ? forum_link($forum_url['new_reply'], $tid) : forum_link($forum_url['new_topic'], $fid));$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'form_user'		=> '<input type="hidden" name="form_user" value="'.((!$forum_user['is_guest']) ? forum_htmlencode($forum_user['username']) : 'Guest').'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['text_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));$forum_page['crumbs'][] = array($cur_posting['forum_name'], forum_link($forum_url['forum'], array($cur_posting['id'], sef_friendly($cur_posting['forum_name']))));if ($tid)	$forum_page['crumbs'][] = array($cur_posting['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_posting['subject']))));$forum_page['crumbs'][] = $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'];($hook = get_hook('po_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'post');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('po_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Post reply'] : $lang_post['Post new topic'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($errors)){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['preview_message'] = parse_message(forum_trim($message), $hide_smilies);	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($tid) ? $lang_post['Reply byline'] : $lang_post['Topic byline']), '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	($hook = get_hook('po_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $tid ? $lang_post['Preview reply'] : $lang_post['Preview new topic']; ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('po_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($tid) ? $lang_post['Compose your reply'] : $lang_post['Compose your topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('po_pre_post_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_post['Post errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?phpif ($forum_user['is_guest']){	$forum_page['email_form_name'] = ($forum_config['p_force_guest_email'] == '1') ? 'req_email' : 'email';	($hook = get_hook('po_pre_guest_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Guest post legend'] ?></strong></legend><?php ($hook = get_hook('po_pre_guest_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php if (isset($_POST['req_username'])) echo forum_htmlencode($username); ?>" size="35" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text<?php if ($forum_config['p_force_guest_email'] == '1') echo ' required' ?>">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Guest e-mail'] ?><?php if ($forum_config['p_force_guest_email'] == '1') echo ' <em>'.$lang_common['Required'].'</em>' ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="<?php echo $forum_page['email_form_name'] ?>" value="<?php if (isset($_POST[$forum_page['email_form_name']])) echo forum_htmlencode($email); ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('po_pre_guest_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('po_guest_info_fieldset_end')) ? eval($hook) : null;	// Reset counters	$forum_page['group_count'] = $forum_page['item_count'] = 0;}($hook = get_hook('po_pre_req_info_fieldset')) ? eval($hook) : null;?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?phpif ($fid){	($hook = get_hook('po_pre_req_subject')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required longtext">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" value="<?php if (isset($_POST['req_subject'])) echo forum_htmlencode($subject); ?>" size="70" maxlength="70" required /></span>					</div>				</div><?php}($hook = get_hook('po_pre_post_contents')) ? eval($hook) : null;?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo isset($_POST['req_message']) ? forum_htmlencode($message) : (isset($forum_page['quote']) ? forum_htmlencode($forum_page['quote']) : ''); ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1')	$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1"'.(isset($_POST['hide_smilies']) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';// Check/uncheck the checkbox for subscriptions depending on scenarioif (!$forum_user['is_guest'] && $forum_config['o_subscriptions'] == '1'){	$subscr_checked = false;	// If it's a preview	if (isset($_POST['preview']))		$subscr_checked = isset($_POST['subscribe']) ? true : false;	// If auto subscribed	else if ($forum_user['auto_notify'])		$subscr_checked = true;	// If already subscribed to the topic	else if ($is_subscribed)		$subscr_checked = true;	$forum_page['checkboxes']['subscribe'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="subscribe" value="1"'.($subscr_checked ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.($is_subscribed ? $lang_post['Stay subscribed'] : $lang_post['Subscribe']).'</label></div>';}($hook = get_hook('po_pre_optional_fieldset')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('po_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('po_pre_req_info_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('po_req_info_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($tid) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($tid) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php// Check if the topic review is to be displayedif ($tid && $forum_config['o_topic_review'] != '0'){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Get the amount of posts in the topic	$query = array(		'SELECT'	=> 'count(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid	);	($hook = get_hook('po_topic_review_qr_get_post_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_page['total_post_count'] = $forum_db->result($result, 0);	// Get posts to display in topic review	$query = array(		'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'topic_id='.$tid,		'ORDER BY'	=> 'id DESC',		'LIMIT'		=> $forum_config['o_topic_review']	);	($hook = get_hook('po_topic_review_qr_get_topic_review_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$posts = array();	while ($cur_post = $forum_db->fetch_assoc($result))	{		$posts[] = $cur_post;	}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_post['Topic review'] ?></span></h2>	</div>	<div id="topic-review" class="main-content main-frm"><?php	$forum_page['item_count'] = 0;	$forum_page['item_total'] = count($posts);	foreach ($posts as $cur_post)	{		++$forum_page['item_count'];		$forum_page['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		// Generate the post heading		$forum_page['post_ident'] = array();		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['total_post_count'] - $forum_page['item_count'] + 1).'</span>';		$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf($lang_post['Post byline'], '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_post['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('po_topic_review_row_pre_display')) ? eval($hook) : null;?>		<div class="post<?php echo ($forum_page['item_count'] == 1) ? ' firstpost' : '' ?><?php echo ($forum_page['item_total'] == $forum_page['item_count']) ? ' lastpost' : '' ?>">			<div class="posthead">				<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('po_topic_review_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['message']."\n" ?><?php ($hook = get_hook('po_topic_review_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div>		</div><?php	}?>	</div><?php}$forum_id = $cur_posting['id'];($hook = get_hook('po_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Extension and hotfix management page. * * Allows administrators to control the extensions and hotfixes installed in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';if (!defined('FORUM_XML_FUNCTIONS_LOADED'))	require FORUM_ROOT.'include/xml.php';($hook = get_hook('aex_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ext.php';// Make sure we have XML supportif (!function_exists('xml_parser_create'))	message($lang_admin_ext['No XML support']);$section = isset($_GET['section']) ? $_GET['section'] : null;// Install an extensionif (isset($_GET['install']) || isset($_GET['install_hotfix'])){	($hook = get_hook('aex_install_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['install_cancel']))		redirect(forum_link(isset($_GET['install']) ? $forum_url['admin_extensions_manage'] : $forum_url['admin_extensions_hotfixes']), $lang_admin_common['Cancel redirect']);	$id = preg_replace('/[^0-9a-z_]/', '', isset($_GET['install']) ? $_GET['install'] : $_GET['install_hotfix']);	// Load manifest (either locally or from punbb.informer.com updates service)	if (isset($_GET['install']))		$manifest = is_readable(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') ? file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') : false;	else	{		$remote_file = get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16);		if (!empty($remote_file['content']))			$manifest = $remote_file['content'];	}	// Parse manifest.xml into an array and validate it	$ext_data = xml_to_array($manifest);	$errors = validate_manifest($ext_data, $id);	if (!empty($errors))		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_ext['Hotfix download failed']);	// Make sure we have an array of dependencies	if (!isset($ext_data['extension']['dependencies']['dependency']))		$ext_data['extension']['dependencies'] = array();	else if (!is_array(current($ext_data['extension']['dependencies'])))		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);	else		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.disabled=0'	);	($hook = get_hook('aex_install_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$installed_ext = array();	while ($row = $forum_db->fetch_assoc($result))		$installed_ext[] = $row['id'];	foreach ($ext_data['extension']['dependencies'] as $dependency)	{		if (!in_array($dependency, $installed_ext))			message(sprintf($lang_admin_ext['Missing dependency'], $dependency));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Install hotfix'] : $lang_admin_ext['Install extension']	);	if (isset($_POST['install_comply']))	{		($hook = get_hook('aex_install_comply_form_submitted')) ? eval($hook) : null;		// $ext_info contains some information about the extension being installed		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id,			'dependencies'	=> array()		);		foreach ($ext_data['extension']['dependencies'] as $dependency)		{			$ext_info['dependencies'][$dependency] = array(				'id'	=> $dependency,				'path'	=> FORUM_ROOT.'extensions/'.$dependency,				'url'	=> $base_url.'/extensions/'.$dependency,			);		}		// Is there some uninstall code to store in the db?		$uninstall_code = (isset($ext_data['extension']['uninstall']) && forum_trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(forum_trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';		// Is there an uninstall note to store in the db?		$uninstall_note = 'NULL';		foreach ($ext_data['extension']['note'] as $cur_note)		{			if ($cur_note['attributes']['type'] == 'uninstall' && forum_trim($cur_note['content']) != '')				$uninstall_note = '\''.$forum_db->escape(forum_trim($cur_note['content'])).'\'';		}		$notices = array();		// Is this a fresh install or an upgrade?		$query = array(			'SELECT'	=> 'e.version',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_install_comply_qr_get_current_ext_version')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ext_version = $forum_db->result($result);		if (!is_null($ext_version) && $ext_version !== false)		{			// EXT_CUR_VERSION will be available to the extension install routine (to facilitate extension upgrades)			define('EXT_CUR_VERSION', $ext_version);			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Update the existing extension			$query = array(				'UPDATE'	=> 'extensions',				'SET'		=> 'title=\''.$forum_db->escape($ext_data['extension']['title']).'\', version=\''.$forum_db->escape($ext_data['extension']['version']).'\', description=\''.$forum_db->escape($ext_data['extension']['description']).'\', author=\''.$forum_db->escape($ext_data['extension']['author']).'\', uninstall='.$uninstall_code.', uninstall_note='.$uninstall_note.', dependencies=\'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',				'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Delete the old hooks			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext_delete_hooks')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Add the new extension			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',			);			($hook = get_hook('aex_install_comply_qr_add_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Now insert the hooks		if (isset($ext_data['extension']['hooks']['hook']))		{			foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)  			{				$cur_hooks = explode(',', $ext_hook['attributes']['id']);				foreach ($cur_hooks as $cur_hook)				{					$query = array(						'INSERT'	=> 'id, extension_id, code, installed, priority',						'INTO'		=> 'extension_hooks',						'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)					);					($hook = get_hook('aex_install_comply_qr_add_hook')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}  			}  		}		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_install_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			if (strpos($id, 'hotfix_') === 0)				define('FORUM_PAGE', 'admin-extensions-hotfixes');			else				define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_install_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension installed info'] ?></p>			<ul class="data-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_install_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix installed']);			else				$forum_flash->add_info($lang_admin_ext['Extension installed']);			($hook = get_hook('aex_install_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix installed']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension installed']);		}	}	($hook = get_hook('aex_install_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	if (strpos($id, 'hotfix_') === 0)		define('FORUM_PAGE', 'admin-extensions-hotfixes');	else		define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['extension']['title']) ?></span></h3>						<p><?php  echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['extension']['description']) ?></p>					</div>				</div>			</div><?php	// Setup an array of warnings to display in the form	$form_warnings = array();	$forum_page['num_items'] = 0;	foreach ($ext_data['extension']['note'] as $cur_note)	{		if ($cur_note['attributes']['type'] == 'install')			$form_warnings[] = '<li>'.forum_htmlencode($cur_note['content']).'</li>';	}	if (version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext_data['extension']['maxtestedon']), '>'))		$form_warnings[] = '<li>'.$lang_admin_ext['Maxtestedon warning'].'</li>';	if (!empty($form_warnings))	{?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Install note'] ?></strong></p>				<ol class="info-list"><?php		echo implode("\n\t\t\t\t\t", $form_warnings)."\n";?>				</ol>			</div><?php	}?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="install_comply" value="<?php echo ((strpos($id, 'hotfix_') !== 0) ? $lang_admin_ext['Install extension'] : $lang_admin_ext['Install hotfix']) ?>" /></span>				<span class="cancel"><input type="submit" name="install_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aex_install_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Uninstall an extensionelse if (isset($_GET['uninstall'])){	// User pressed the cancel button	if (isset($_POST['uninstall_cancel']))		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('aex_uninstall_selected')) ? eval($hook) : null;	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['uninstall']);	// Fetch info about the extension	$query = array(		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_uninstall_qr_get_extension')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_data = $forum_db->fetch_assoc($result);	if (!$ext_data)	{		message($lang_common['Bad request']);	}	// Check dependancies	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''	);	($hook = get_hook('aex_uninstall_qr_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dependency = $forum_db->fetch_assoc($result);	if (!is_null($dependency) && $dependency !== false)	{		message(sprintf($lang_admin_ext['Uninstall dependency'], $dependency['id']));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Uninstall hotfix'] : $lang_admin_ext['Uninstall extension']	);	// If the user has confirmed the uninstall	if (isset($_POST['uninstall_comply']))	{		($hook = get_hook('aex_uninstall_comply_form_submitted')) ? eval($hook) : null;		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id		);		$notices = array();		// Run uninstall code		eval($ext_data['uninstall']);		// Now delete the extension and its hooks from the db		$query = array(			'DELETE'	=> 'extension_hooks',			'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_uninstall_delete_hooks')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'extensions',			'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_delete_extension')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_uninstall_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_uninstall_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension uninstalled info'] ?></p>			<ul class="info-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_uninstall_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix uninstalled']);			else				$forum_flash->add_info($lang_admin_ext['Extension uninstalled']);			($hook = get_hook('aex_uninstall_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix uninstalled']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension uninstalled']);		}	}	else	// If the user hasn't confirmed the uninstall	{		($hook = get_hook('aex_uninstall_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'extensions');		if (strpos($id, 'hotfix_') === 0)			define('FORUM_PAGE', 'admin-extensions-hotfixes');		else			define('FORUM_PAGE', 'admin-extensions-manage');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('aex_uninstall_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url ?>/admin/extensions.php?section=manage&amp;uninstall=<?php echo $id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['title']) ?></span></h3>						<p><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['description']) ?></p>					</div>				</div>			</div><?php if ($ext_data['uninstall_note'] != ''): ?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Uninstall note'] ?></strong></p>				<p><?php echo forum_htmlencode($ext_data['uninstall_note']) ?></p>			</div><?php endif; ?><?php if (strpos($id, 'hotfix_') !== 0): ?>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_ext['Installed extensions warn'] ?></p>			</div><?php endif; ?>				<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="uninstall_comply" value="<?php echo $lang_admin_ext['Uninstall'] ?>" /></span>				<span class="cancel"><input type="submit" name="uninstall_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('aex_uninstall_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Enable or disable an extensionelse if (isset($_GET['flip'])){	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['flip']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('flip'.$id)))		csrf_confirm_form();	($hook = get_hook('aex_flip_selected')) ? eval($hook) : null;	// Fetch the current status of the extension	$query = array(		'SELECT'	=> 'e.disabled',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_get_disabled_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_status = $forum_db->result($result);	// No rows	if (is_null($ext_status) || $ext_status === false)	{		message($lang_common['Bad request']);	}	// Are we disabling or enabling?	$disable = $ext_status == '0';	// Check dependancies	if ($disable)	{		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''		);		($hook = get_hook('aex_flip_qr_get_disable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependency = $forum_db->fetch_assoc($result);		if (!is_null($dependency) && $dependency !== false)		{			message(sprintf($lang_admin_ext['Disable dependency'], $dependency['id']));		}	}	else	{		$query = array(			'SELECT'	=> 'e.dependencies',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_flip_qr_get_enable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependencies = $forum_db->fetch_assoc($result);		$dependencies = explode('|', substr($dependencies['dependencies'], 1, -1));		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0'		);		($hook = get_hook('aex_flip_qr_check_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$installed_ext = array();		while ($row = $forum_db->fetch_assoc($result))			$installed_ext[] = $row['id'];		foreach ($dependencies as $dependency)		{			if (!empty($dependency) && !in_array($dependency, $installed_ext))				message(sprintf($lang_admin_ext['Disabled dependency'], $dependency));		}	}	$query = array(		'UPDATE'	=> 'extensions',		'SET'		=> 'disabled='.($disable ? '1' : '0'),		'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_update_disabled_status')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the hooks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_hooks_cache();	// Add flash message	if ($section == 'hotfixes')		$forum_flash->add_info(($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		$forum_flash->add_info(($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));	($hook = get_hook('aex_flip_pre_redirect')) ? eval($hook) : null;	if ($section == 'hotfixes')		redirect(forum_link($forum_url['admin_extensions_hotfixes']), ($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		redirect(forum_link($forum_url['admin_extensions_manage']), ($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));}($hook = get_hook('aex_new_action')) ? eval($hook) : null;// Generate an array of installed extensions$inst_exts = array();$query = array(	'SELECT'	=> 'e.*',	'FROM'		=> 'extensions AS e',	'ORDER BY'	=> 'e.title');($hook = get_hook('aex_qr_get_all_extensions')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_ext = $forum_db->fetch_assoc($result))	$inst_exts[$cur_ext['id']] = $cur_ext;// Hotfixes listif ($section == 'hotfixes'){	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage hotfixes'], forum_link($forum_url['admin_extensions_hotfixes']))	);	($hook = get_hook('aex_section_hotfixes_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-hotfixes');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_hotfixes_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Hotfixes available'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	// Loop through any available hotfixes	if (isset($forum_updates['hotfix']))	{		// If there's only one hotfix, add one layer of arrays so we can foreach over it		if (!is_array(current($forum_updates['hotfix'])))			$forum_updates['hotfix'] = array($forum_updates['hotfix']);		foreach ($forum_updates['hotfix'] as $hotfix)		{			if (!array_key_exists($hotfix['attributes']['id'], $inst_exts))			{				$forum_page['ext_item'][] = '<div class="ct-box info-box hotfix available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($hotfix['content']).'</span></h3>'."\n\t\t\t".'<ul>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], 'PunBB').'</span></li>'."\n\t\t\t\t".'<li><span>'.$lang_admin_ext['Hotfix description'].'</span></li>'."\n\t\t\t".'</ul>'."\n\t\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install_hotfix='.urlencode($hotfix['attributes']['id']).'">'.$lang_admin_ext['Install hotfix'].'</a></span></p>'."\n\t\t".'</div>';				++$num_exts;			}		}	}	($hook = get_hook('aex_section_hotfixes_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed hotfixes'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$installed_count = 0;	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') !== 0)				continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=hotfixes&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=hotfixese&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		($hook = get_hook('aex_section_hotfixes_pre_ext_actions')) ? eval($hook) : null;?>		<div class="ct-box info-box hotfix <?php echo $ext['disabled'] == '1' ? 'disabled' : 'enabled' ?>">			<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext['title']) ?><?php if ($ext['disabled'] == '1') echo ' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )' ?></span></h3>			<ul class="data-list">				<li><span><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext['version']) : $lang_admin_ext['Hotfix']) ?></span></li>				<li><span><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])) ?></span></li><?php if ($ext['description'] != ''): ?>				<li><span><?php echo forum_htmlencode($ext['description']) ?></span></li><?php endif; ?>			</ul>			<p class="options"><?php echo implode(' ', $forum_page['ext_actions']) ?></p>		</div><?php		$installed_count++;	}	if ($installed_count == 0)	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Extensions listelse{	if ($forum_config['o_check_for_versions'] == 1)	{		// Check for the new versions of the extensions istalled		$repository_urls = array('http://punbb.informer.com/extensions');		($hook = get_hook('aex_add_extensions_repository')) ? eval($hook) : null;		$repository_url_by_extension = array();		foreach (array_keys($inst_exts) as $id)			($hook = get_hook('aex_add_repository_for_'.$id)) ? eval($hook) : null;		if (is_readable(FORUM_CACHE_DIR.'cache_ext_version_notifications.php'))			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		//Get latest timestamp in cache		if (isset($forum_ext_repos))		{			$min_timestamp = 10000000000;			foreach ( $forum_ext_repos as $rep)				$min_timestamp = min($min_timestamp, $rep['timestamp']);		}		$update_hour = (isset($forum_ext_versions_update_cache) && (time() - $forum_ext_versions_update_cache > 60 * 60));		// Update last versions if there is no cahe or some extension was added/removed or one day has gone since last update		$update_new_versions_cache = !defined('FORUM_EXT_VERSIONS_LOADED') || (isset($forum_ext_last_versions) && array_diff($inst_exts, $forum_ext_last_versions) != array()) || $update_hour  || ( $update_hour && isset($min_timestamp) && (time() - $min_timestamp > 60*60*24));		($hook = get_hook('aex_before_update_checking')) ? eval($hook) : null;		if ($update_new_versions_cache)		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require_once FORUM_ROOT.'include/cache.php';			generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension);			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage extensions'], forum_link($forum_url['admin_extensions_manage']))	);	($hook = get_hook('aex_section_manage_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Extensions available'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	$d = dir(FORUM_ROOT.'extensions');	while (($entry = $d->read()) !== false)	{		if ($entry{0} != '.' && is_dir(FORUM_ROOT.'extensions/'.$entry))		{			if (preg_match('/[^0-9a-z_]/', $entry))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Illegal ID'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			else if (!file_exists(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml'))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Missing manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Parse manifest.xml into an array			$ext_data = is_readable(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml') ? xml_to_array(file_get_contents(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml')) : '';			if (empty($ext_data))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Failed parse manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Validate manifest			$errors = validate_manifest($ext_data, $entry);			if (!empty($errors))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.implode(' ', $errors).'</p>'."\n\t\t\t".'</div>';				++$num_failed;			}			else			{				if (!array_key_exists($entry, $inst_exts) || version_compare($inst_exts[$entry]['version'], $ext_data['extension']['version'], '!='))				{					$forum_page['ext_item'][] = '<div class="ct-box info-box extension available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext_data['extension']['title']).'</span></h3>'."\n\t\t\t".'<ul class="data-list">'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']).'</span></li>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])).'</span></li>'.(($ext_data['extension']['description'] != '') ? "\n\t\t\t\t".'<li><span>'.forum_htmlencode($ext_data['extension']['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install='.urlencode($entry).'">'.(isset($inst_exts[$entry]['version']) ? $lang_admin_ext['Upgrade extension'] : $lang_admin_ext['Install extension']).'</a></span></p>'."\n\t\t".'</div>';					++$num_exts;				}			}		}	}	$d->close();	($hook = get_hook('aex_section_install_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available extensions'] ?></p>		</div><?php	}	// If any of the extensions had errors	if ($num_failed)	{?>		<div class="ct-box data-box">			<p class="important"><?php echo $lang_admin_ext['Invalid extensions'] ?></p>			<?php echo implode("\n\t\t\t", $forum_page['ext_error'])."\n" ?>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed extensions'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$installed_count = 0;	$forum_page['ext_item'] = array();	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') === 0)			continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		if ($forum_config['o_check_for_versions'] == 1 && isset($forum_ext_last_versions[$id]) && version_compare($ext['version'], $forum_ext_last_versions[$id]['version'], '<'))			$forum_page['ext_actions']['latest_ver'] = '<span><a href="'.$forum_ext_last_versions[$id]['repo_url'].'/'.$id.'/'.$id.'.zip">'.$lang_admin_ext['Download latest version'].'</a></span>';		($hook = get_hook('aex_section_manage_pre_ext_actions')) ? eval($hook) : null;		if ($ext['disabled'] == '1')			$forum_page['ext_item'][] = '<div class="ct-box info-box extension disabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		else			$forum_page['ext_item'][] = '<div class="ct-box info-box extension enabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).'</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		$installed_count++;	}	if ($installed_count > 0)	{		echo "\t".implode("\n\t", $forum_page['ext_item'])."\n";	}	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed extensions'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}
<?php/** * Allows users to search the forum based on various criteria. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('se_start')) ? eval($hook) : null;// Load the search.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/search.php';// Load the necessary search functionsrequire FORUM_ROOT.'include/search_functions.php';if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);else if ($forum_user['g_search'] == '0')	message($lang_search['No search permission']);// If a search_id was suppliedif (isset($_GET['search_id'])){	$search_id = intval($_GET['search_id']);	if ($search_id < 1)		message($lang_common['Bad request']);	// Generate the query to grab the cached results	$query = generate_cached_search_query($search_id, $show_as);	$url_type = $forum_url['search_results'];}// We aren't just grabbing a cached searchelse if (isset($_GET['action'])){	$action = $_GET['action'];	// Validate action	if (!validate_search_action($action))		message($lang_common['Bad request']);	// If it's a regular search (keywords and/or author)	if ($action == 'search')	{		$keywords = (isset($_GET['keywords'])) ? forum_trim($_GET['keywords']) : null;		$author = (isset($_GET['author'])) ? forum_trim($_GET['author']) : null;		$sort_dir = (isset($_GET['sort_dir'])) ? (($_GET['sort_dir'] == 'DESC') ? 'DESC' : 'ASC') : 'DESC';		$show_as = (isset($_GET['show_as'])) ? $_GET['show_as'] : 'posts';		$sort_by = (isset($_GET['sort_by'])) ? intval($_GET['sort_by']) : null;		$search_in = (!isset($_GET['search_in']) || $_GET['search_in'] == 'all') ? 0 : (($_GET['search_in'] == 'message') ? 1 : -1);		$forum = (isset($_GET['forum']) && is_array($_GET['forum'])) ? array_map('intval', $_GET['forum']) : array(-1);		if (preg_match('#^[\*%]+$#', $keywords))			$keywords = '';		if (preg_match('#^[\*%]+$#', $author))			$author = '';		if (!$keywords && !$author)			message($lang_search['No terms']);		// Create a cache of the results and redirect the user to the results		create_search_cache($keywords, $author, $search_in, $forum, $show_as, $sort_by, $sort_dir);	}	// Its not a regular search, so its a quicksearch	else	{		$value = null;		// Get any additional variables for quicksearches		if ($action == 'show_user_posts' || $action == 'show_user_topics' || $action == 'show_subscriptions')		{			$value = isset($_GET['user_id']) ? intval($_GET['user_id']) : 0;			if ($value < 2)				message($lang_common['Bad request']);		}		else if ($action == 'show_recent')			$value = (isset($_GET['value'])) ? intval($_GET['value']) : 86400;		else if ($action == 'show_new')			$value = (isset($_GET['forum'])) ? intval($_GET['forum']) : -1;		($hook = get_hook('se_additional_quicksearch_variables')) ? eval($hook) : null;		$search_id = '';		$show_as = 'topics';		// Generate the query for the search		$query = generate_action_search_query($action, $value, $search_id, $url_type, $show_as);	}}($hook = get_hook('se_pre_search_query')) ? eval($hook) : null;// We have the query to get the results, lets get them!if (isset($query)){	// No results?	if (!$query)		no_search_results();	// Work out the settings for pagination	$forum_page['per_page'] = ($show_as == 'posts') ? $forum_user['disp_posts'] : $forum_user['disp_topics'];	// We now have a query that will give us our results in $query, lets get the data!	$num_hits = get_search_results($query, $search_set);	($hook = get_hook('se_post_results_fetched')) ? eval($hook) : null;	// No search results?	if ($num_hits == 0)		no_search_results($action);	//	// Output the search results	//	// Setup breadcrumbs and results header and footer	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$action = (isset($action)) ? $action : null;	generate_search_crumbs($action);	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $url_type, $lang_common['Paging separator'], $search_id).'</p>';	// Get topic/forum tracking data	if (!$forum_user['is_guest'])		$tracked_topics = get_tracked_topics();	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($url_type, $forum_url['page'], $forum_page['num_pages'], $search_id).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] + 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($url_type, $forum_url['page'], ($forum_page['page'] - 1), $search_id).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($url_type, $search_id).'" title="'.$lang_common['Page'].' 1" />';	}	// Setup main heading	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	// Setup main options header	$forum_page['main_title'] = $lang_search['Search options'];	($hook = get_hook('se_results_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', $show_as == 'topics' ? 'searchtopics' : 'searchposts');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('se_results_output_start')) ? eval($hook) : null;	if ($show_as == 'topics')	{		// Load the forum.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';		$forum_page['item_header'] = array();		$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';		$forum_page['item_header']['info']['forum'] = '<strong class="info-forum">'.$lang_forum['Forum'].'</strong>';		$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';		$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';		($hook = get_hook('se_results_topics_pre_item_header_output')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-subhead">		<p class="item-summary forum-noview"><span><?php printf($lang_forum['Search subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div class="main-content main-forum forum-forums"><?php	}	else	{		// Load the topic.php language file		require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-content main-topic"><?php	}	$forum_page['item_count'] = 0;	if ($show_as == 'posts')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';	}	// Finally, lets loop through the results and output them	foreach ($search_set as $cur_set)	{		($hook = get_hook('se_results_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		if ($forum_config['o_censoring'] == '1')			$cur_set['subject'] = censor_words($cur_set['subject']);		if ($show_as == 'posts')		{			// Generate the result heading			$forum_page['post_ident'] = array();			$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_set['pposter']).'</strong>').'</span>';			$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.format_time($cur_set['pposted']).'</a></span>';			($hook = get_hook('se_results_posts_row_pre_item_ident_merge')) ? eval($hook) : null;			// Generate the topic title			$forum_page['item_subject'] = '<a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.sprintf((($cur_set['pid'] == $cur_set['first_post_id']) ? $lang_topic['Topic title'] : $lang_topic['Reply title']), forum_htmlencode($cur_set['subject'])).'</a> <small>'.sprintf($lang_topic['Search replies'], forum_number_format($cur_set['num_replies']), '<a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.forum_htmlencode($cur_set['forum_name']).'</a>').'</small>';			// Generate author identification			$forum_page['user_ident'] = ($cur_set['poster_id'] > 1 && $forum_user['g_view_users'] == '1') ? '<strong class="username"><a title="'.sprintf($lang_search['Go to profile'], forum_htmlencode($cur_set['pposter'])).'" href="'.forum_link($forum_url['user'], $cur_set['poster_id']).'">'.forum_htmlencode($cur_set['pposter']).'</a></strong>' : '<strong class="username">'.forum_htmlencode($cur_set['pposter']).'</strong>';			// Generate the post actions links			$forum_page['post_actions'] = array();			$forum_page['post_actions']['forum'] = '<span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$lang_search['Go to forum'].'<span>: '.forum_htmlencode($cur_set['forum_name']).'</span></a></span>';			if ($cur_set['pid'] != $cur_set['first_post_id'])				$forum_page['post_actions']['topic'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink topic'].'" href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.$lang_search['Go to topic'].'<span>: '.forum_htmlencode($cur_set['subject']).'</span></a></span>';			$forum_page['post_actions']['post'] = '<span><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_set['pid']).'">'.$lang_search['Go to post'].'<span> '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span></a></span>';			$forum_page['message'] = parse_message($cur_set['message'], $cur_set['hide_smilies']);			// Give the post some class			$forum_page['item_status'] = array(				'post',				(($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even' )			);			if ($forum_page['item_count'] == 1)				$forum_page['item_status']['firstpost'] = 'firstpost';			if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])				$forum_page['item_status']['lastpost'] = 'lastpost';			if ($cur_set['pid'] == $cur_set['first_post_id'])				$forum_page['item_status']['topicpost'] = 'topicpost';			($hook = get_hook('se_results_posts_row_pre_display')) ? eval($hook) : null;?>	<div class="<?php echo implode(' ', $forum_page['item_status']) ?> resultpost">		<div class="posthead">			<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3>			<h4 class="hn post-title"><span><?php echo $forum_page['item_subject'] ?></span></h4>		</div>		<div class="postbody">			<div class="post-entry">				<div class="entry-content">					<?php echo $forum_page['message'] ?>				</div><?php ($hook = get_hook('se_results_posts_row_new_post_entry_data')) ? eval($hook) : null; ?>			</div>		</div>		<div class="postfoot">			<div class="post-options">				<p class="post-actions"><?php echo implode(' ', $forum_page['post_actions']) ?></p>			</div>		</div>	</div><?php		}		else		{			// Start from scratch			$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();			// Assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_set['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_set['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_set['closed'] != '0')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('se_results_topics_row_pre_item_subject_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<a href="'.forum_link($forum_url['topic'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'">'.forum_htmlencode($cur_set['subject']).'</a>';			($hook = get_hook('se_results_topics_row_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			$forum_page['item_pages'] = ceil(($cur_set['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_set['tid'], sef_friendly($cur_set['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_set['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_set['tid']]) || $tracked_topics['topics'][$cur_set['tid']] < $cur_set['last_post']) && (!isset($tracked_topics['forums'][$cur_set['forum_id']]) || $tracked_topics['forums'][$cur_set['forum_id']] < $cur_set['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_set['tid'], sef_friendly($cur_set['subject']))).'" title="'.$lang_forum['New posts info'].'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('se_results_topics_row_pre_item_nav_merge')) ? eval($hook) : null;			$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_set['poster'])).'</span>';			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			($hook = get_hook('se_results_topics_row_pre_item_subject_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			($hook = get_hook('se_results_topics_pre_item_status_merge')) ? eval($hook) : null;			$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');			$forum_page['item_body']['info']['forum'] = '<li class="info-forum"><span class="label">'.$lang_search['Posted in'].'</span><a href="'.forum_link($forum_url['forum'], array($cur_set['forum_id'], sef_friendly($cur_set['forum_name']))).'">'.$cur_set['forum_name'].'</a></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_set['num_replies']).'</strong> <span class="label">'.(($cur_set['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_set['last_post_id']).'">'.format_time($cur_set['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_set['last_poster'])).'</cite></li>';			($hook = get_hook('se_results_topics_row_pre_display')) ? eval($hook) : null;?>		<div class="main-item<?php echo $forum_page['item_style'] ?>">			<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>			<div class="item-subject">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>			</div>			<ul class="item-info">				<?php echo implode("\n\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>			</ul>		</div><?php		}	}?>	</div>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	($hook = get_hook('se_results_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}//// Display the search form//// Setup form information$forum_page['frm-info'] = array(	'keywords'	=> '<li><span>'.$lang_search['Keywords info'].'</span></li>',	'refine'	=> '<li><span>'.$lang_search['Refine info'].'</span></li>',	'wildcard'	=> '<li><span>'.$lang_search['Wildcard info'].'</span></li>');if ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod'])	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum default info'].'</span></li>';else	$forum_page['frm-info']['forums'] = '<li><span>'.$lang_search['Forum require info'].'</span></li>';// Setup sort by options$forum_page['frm-sort'] = array(	'post_time'		=> '<option value="0">'.$lang_search['Sort by post time'].'</option>',	'author'		=> '<option value="1">'.$lang_search['Sort by author'].'</option>',	'subject'		=> '<option value="2">'.$lang_search['Sort by subject'].'</option>',	'forum_name'	=> '<option value="3">'.$lang_search['Sort by forum'].'</option>');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_common['Search'], forum_link($forum_url['search'])));$advanced_search = isset($_GET['advanced']) ? true : false;// Show link for advanced formif (!$advanced_search){	$forum_page['main_head_options']['advanced_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_advanced']).'">'.$lang_search['Advanced search'].'</a></span>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;($hook = get_hook('se_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'search');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('se_main_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $lang_search['Search heading'] ?></span></h2>	</div>	<div class="main-content main-frm"><?php if ($advanced_search): ?>		<div class="ct-box info-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm-info'])."\n" ?>			</ul>		</div><?php endif; ?>		<form id="afocus" class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['search']) ?>">			<div class="hidden">				<input type="hidden" name="action" value="search" />			</div><?php ($hook = get_hook('se_pre_criteria_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Search legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_keywords')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Keyword search'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="keywords" size="40" maxlength="100" <?php echo ($advanced_search) ? '' : 'required'  ?> /></span>					</div>				</div><?php ($hook = get_hook('se_pre_author')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Author search'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="author" size="40" maxlength="25" /></span>					</div>				</div><?php ($hook = get_hook('se_pre_search_in')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Search in'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="search_in">							<option value="all"><?php echo $lang_search['Message and subject'] ?></option>							<option value="message"><?php echo $lang_search['Message only'] ?></option>							<option value="topic"><?php echo $lang_search['Topic only'] ?></option>						</select></span>					</div>				</div><?php endif; if ((!$advanced_search && ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod'])) || $advanced_search): ?><?php ($hook = get_hook('se_pre_forum_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Forum search'] ?> <em><?php echo ($forum_config['o_search_all_forums'] == '1' || $forum_user['is_admmod']) ? $lang_search['Forum search default'] : $lang_search['Forum search require'] ?></em></span></legend><?php ($hook = get_hook('se_pre_forum_checklist')) ? eval($hook) : null; ?>					<div class="mf-box">						<div class="checklist"><?php// Get the list of categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL',	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('se_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	$cur_category = 0;	foreach ($forums as $cur_forum)	{		($hook = get_hook('se_forum_loop_start')) ? eval($hook) : null;		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";			echo "\t\t\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t\t\t".'<legend><span>'.forum_htmlencode($cur_forum['cat_name']).':</span></legend>'."\n";			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'"  name="forum[]" value="'.$cur_forum['fid'].'" /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";	}	echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";}?>						</div>					</div><?php ($hook = get_hook('se_pre_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php endif; ?><?php ($hook = get_hook('se_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('se_criteria_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('se_pre_results_fieldset')) ? eval($hook) : null; ?><?php if ($advanced_search): ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_search['Results legend'] ?></strong></legend><?php ($hook = get_hook('se_pre_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_search['Sort by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['frm-sort'])."\n" ?>						</select></span>					</div>				</div><?php ($hook = get_hook('se_pre_sort_order_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Sort order'] ?></span></legend><?php ($hook = get_hook('se_pre_sort_order')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="ASC" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Ascending'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="DESC" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Descending'] ?></label>						</div>					</div><?php ($hook = get_hook('se_pre_sort_order_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_display_choices_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_search['Display results'] ?></span></legend><?php ($hook = get_hook('se_pre_display_choices')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="topics" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as topics'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="show_as" value="posts" checked="checked" /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_search['Show as posts'] ?></label>						</div><?php ($hook = get_hook('se_new_display_choices')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('se_pre_display_choices_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('se_pre_results_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php endif; ($hook = get_hook('se_results_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="search" value="<?php echo $lang_search['Submit search'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('se_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
