<?php/** * Extension and hotfix management page. * * Allows administrators to control the extensions and hotfixes installed in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';if (!defined('FORUM_XML_FUNCTIONS_LOADED'))	require FORUM_ROOT.'include/xml.php';($hook = get_hook('aex_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ext.php';// Make sure we have XML supportif (!function_exists('xml_parser_create'))	message($lang_admin_ext['No XML support']);$section = isset($_GET['section']) ? $_GET['section'] : null;// Install an extensionif (isset($_GET['install']) || isset($_GET['install_hotfix'])){	($hook = get_hook('aex_install_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['install_cancel']))		redirect(forum_link(isset($_GET['install']) ? $forum_url['admin_extensions_manage'] : $forum_url['admin_extensions_hotfixes']), $lang_admin_common['Cancel redirect']);	$id = preg_replace('/[^0-9a-z_]/', '', isset($_GET['install']) ? $_GET['install'] : $_GET['install_hotfix']);	// Load manifest (either locally or from punbb.informer.com updates service)	if (isset($_GET['install']))		$manifest = is_readable(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') ? file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') : false;	else	{		$remote_file = get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16);		if (!empty($remote_file['content']))			$manifest = $remote_file['content'];	}	// Parse manifest.xml into an array and validate it	$ext_data = xml_to_array($manifest);	$errors = validate_manifest($ext_data, $id);	if (!empty($errors))		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_ext['Hotfix download failed']);	// Make sure we have an array of dependencies	if (!isset($ext_data['extension']['dependencies']['dependency']))		$ext_data['extension']['dependencies'] = array();	else if (!is_array(current($ext_data['extension']['dependencies'])))		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);	else		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.disabled=0'	);	($hook = get_hook('aex_install_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$installed_ext = array();	while ($row = $forum_db->fetch_assoc($result))		$installed_ext[] = $row['id'];	foreach ($ext_data['extension']['dependencies'] as $dependency)	{		if (!in_array($dependency, $installed_ext))			message(sprintf($lang_admin_ext['Missing dependency'], $dependency));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Install hotfix'] : $lang_admin_ext['Install extension']	);	if (isset($_POST['install_comply']))	{		($hook = get_hook('aex_install_comply_form_submitted')) ? eval($hook) : null;		// $ext_info contains some information about the extension being installed		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id,			'dependencies'	=> array()		);		foreach ($ext_data['extension']['dependencies'] as $dependency)		{			$ext_info['dependencies'][$dependency] = array(				'id'	=> $dependency,				'path'	=> FORUM_ROOT.'extensions/'.$dependency,				'url'	=> $base_url.'/extensions/'.$dependency,			);		}		// Is there some uninstall code to store in the db?		$uninstall_code = (isset($ext_data['extension']['uninstall']) && forum_trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(forum_trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';		// Is there an uninstall note to store in the db?		$uninstall_note = 'NULL';		foreach ($ext_data['extension']['note'] as $cur_note)		{			if ($cur_note['attributes']['type'] == 'uninstall' && forum_trim($cur_note['content']) != '')				$uninstall_note = '\''.$forum_db->escape(forum_trim($cur_note['content'])).'\'';		}		$notices = array();		// Is this a fresh install or an upgrade?		$query = array(			'SELECT'	=> 'e.version',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_install_comply_qr_get_current_ext_version')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ext_version = $forum_db->result($result);		if (!is_null($ext_version) && $ext_version !== false)		{			// EXT_CUR_VERSION will be available to the extension install routine (to facilitate extension upgrades)			define('EXT_CUR_VERSION', $ext_version);			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Update the existing extension			$query = array(				'UPDATE'	=> 'extensions',				'SET'		=> 'title=\''.$forum_db->escape($ext_data['extension']['title']).'\', version=\''.$forum_db->escape($ext_data['extension']['version']).'\', description=\''.$forum_db->escape($ext_data['extension']['description']).'\', author=\''.$forum_db->escape($ext_data['extension']['author']).'\', uninstall='.$uninstall_code.', uninstall_note='.$uninstall_note.', dependencies=\'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',				'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Delete the old hooks			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext_delete_hooks')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Add the new extension			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',			);			($hook = get_hook('aex_install_comply_qr_add_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Now insert the hooks		if (isset($ext_data['extension']['hooks']['hook']))		{			foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)  			{				$cur_hooks = explode(',', $ext_hook['attributes']['id']);				foreach ($cur_hooks as $cur_hook)				{					$query = array(						'INSERT'	=> 'id, extension_id, code, installed, priority',						'INTO'		=> 'extension_hooks',						'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)					);					($hook = get_hook('aex_install_comply_qr_add_hook')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}  			}  		}		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_install_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			if (strpos($id, 'hotfix_') === 0)				define('FORUM_PAGE', 'admin-extensions-hotfixes');			else				define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_install_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension installed info'] ?></p>			<ul class="data-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_install_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix installed']);			else				$forum_flash->add_info($lang_admin_ext['Extension installed']);			($hook = get_hook('aex_install_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix installed']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension installed']);		}	}	($hook = get_hook('aex_install_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	if (strpos($id, 'hotfix_') === 0)		define('FORUM_PAGE', 'admin-extensions-hotfixes');	else		define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['extension']['title']) ?></span></h3>						<p><?php  echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['extension']['description']) ?></p>					</div>				</div>			</div><?php	// Setup an array of warnings to display in the form	$form_warnings = array();	$forum_page['num_items'] = 0;	foreach ($ext_data['extension']['note'] as $cur_note)	{		if ($cur_note['attributes']['type'] == 'install')			$form_warnings[] = '<li>'.forum_htmlencode($cur_note['content']).'</li>';	}	if (version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext_data['extension']['maxtestedon']), '>'))		$form_warnings[] = '<li>'.$lang_admin_ext['Maxtestedon warning'].'</li>';	if (!empty($form_warnings))	{?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Install note'] ?></strong></p>				<ol class="info-list"><?php		echo implode("\n\t\t\t\t\t", $form_warnings)."\n";?>				</ol>			</div><?php	}?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="install_comply" value="<?php echo ((strpos($id, 'hotfix_') !== 0) ? $lang_admin_ext['Install extension'] : $lang_admin_ext['Install hotfix']) ?>" /></span>				<span class="cancel"><input type="submit" name="install_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aex_install_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Uninstall an extensionelse if (isset($_GET['uninstall'])){	// User pressed the cancel button	if (isset($_POST['uninstall_cancel']))		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('aex_uninstall_selected')) ? eval($hook) : null;	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['uninstall']);	// Fetch info about the extension	$query = array(		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_uninstall_qr_get_extension')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_data = $forum_db->fetch_assoc($result);	if (!$ext_data)	{		message($lang_common['Bad request']);	}	// Check dependancies	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''	);	($hook = get_hook('aex_uninstall_qr_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dependency = $forum_db->fetch_assoc($result);	if (!is_null($dependency) && $dependency !== false)	{		message(sprintf($lang_admin_ext['Uninstall dependency'], $dependency['id']));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Uninstall hotfix'] : $lang_admin_ext['Uninstall extension']	);	// If the user has confirmed the uninstall	if (isset($_POST['uninstall_comply']))	{		($hook = get_hook('aex_uninstall_comply_form_submitted')) ? eval($hook) : null;		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id		);		$notices = array();		// Run uninstall code		eval($ext_data['uninstall']);		// Now delete the extension and its hooks from the db		$query = array(			'DELETE'	=> 'extension_hooks',			'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_uninstall_delete_hooks')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'extensions',			'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_delete_extension')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_uninstall_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_uninstall_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension uninstalled info'] ?></p>			<ul class="info-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_uninstall_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix uninstalled']);			else				$forum_flash->add_info($lang_admin_ext['Extension uninstalled']);			($hook = get_hook('aex_uninstall_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix uninstalled']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension uninstalled']);		}	}	else	// If the user hasn't confirmed the uninstall	{		($hook = get_hook('aex_uninstall_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'extensions');		if (strpos($id, 'hotfix_') === 0)			define('FORUM_PAGE', 'admin-extensions-hotfixes');		else			define('FORUM_PAGE', 'admin-extensions-manage');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('aex_uninstall_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url ?>/admin/extensions.php?section=manage&amp;uninstall=<?php echo $id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['title']) ?></span></h3>						<p><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['description']) ?></p>					</div>				</div>			</div><?php if ($ext_data['uninstall_note'] != ''): ?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Uninstall note'] ?></strong></p>				<p><?php echo forum_htmlencode($ext_data['uninstall_note']) ?></p>			</div><?php endif; ?><?php if (strpos($id, 'hotfix_') !== 0): ?>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_ext['Installed extensions warn'] ?></p>			</div><?php endif; ?>				<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="uninstall_comply" value="<?php echo $lang_admin_ext['Uninstall'] ?>" /></span>				<span class="cancel"><input type="submit" name="uninstall_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('aex_uninstall_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Enable or disable an extensionelse if (isset($_GET['flip'])){	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['flip']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('flip'.$id)))		csrf_confirm_form();	($hook = get_hook('aex_flip_selected')) ? eval($hook) : null;	// Fetch the current status of the extension	$query = array(		'SELECT'	=> 'e.disabled',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_get_disabled_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_status = $forum_db->result($result);	// No rows	if (is_null($ext_status) || $ext_status === false)	{		message($lang_common['Bad request']);	}	// Are we disabling or enabling?	$disable = $ext_status == '0';	// Check dependancies	if ($disable)	{		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''		);		($hook = get_hook('aex_flip_qr_get_disable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependency = $forum_db->fetch_assoc($result);		if (!is_null($dependency) && $dependency !== false)		{			message(sprintf($lang_admin_ext['Disable dependency'], $dependency['id']));		}	}	else	{		$query = array(			'SELECT'	=> 'e.dependencies',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_flip_qr_get_enable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependencies = $forum_db->fetch_assoc($result);		$dependencies = explode('|', substr($dependencies['dependencies'], 1, -1));		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0'		);		($hook = get_hook('aex_flip_qr_check_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$installed_ext = array();		while ($row = $forum_db->fetch_assoc($result))			$installed_ext[] = $row['id'];		foreach ($dependencies as $dependency)		{			if (!empty($dependency) && !in_array($dependency, $installed_ext))				message(sprintf($lang_admin_ext['Disabled dependency'], $dependency));		}	}	$query = array(		'UPDATE'	=> 'extensions',		'SET'		=> 'disabled='.($disable ? '1' : '0'),		'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_update_disabled_status')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the hooks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_hooks_cache();	// Add flash message	if ($section == 'hotfixes')		$forum_flash->add_info(($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		$forum_flash->add_info(($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));	($hook = get_hook('aex_flip_pre_redirect')) ? eval($hook) : null;	if ($section == 'hotfixes')		redirect(forum_link($forum_url['admin_extensions_hotfixes']), ($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		redirect(forum_link($forum_url['admin_extensions_manage']), ($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));}($hook = get_hook('aex_new_action')) ? eval($hook) : null;// Generate an array of installed extensions$inst_exts = array();$query = array(	'SELECT'	=> 'e.*',	'FROM'		=> 'extensions AS e',	'ORDER BY'	=> 'e.title');($hook = get_hook('aex_qr_get_all_extensions')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_ext = $forum_db->fetch_assoc($result))	$inst_exts[$cur_ext['id']] = $cur_ext;// Hotfixes listif ($section == 'hotfixes'){	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage hotfixes'], forum_link($forum_url['admin_extensions_hotfixes']))	);	($hook = get_hook('aex_section_hotfixes_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-hotfixes');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_hotfixes_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Hotfixes available'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	// Loop through any available hotfixes	if (isset($forum_updates['hotfix']))	{		// If there's only one hotfix, add one layer of arrays so we can foreach over it		if (!is_array(current($forum_updates['hotfix'])))			$forum_updates['hotfix'] = array($forum_updates['hotfix']);		foreach ($forum_updates['hotfix'] as $hotfix)		{			if (!array_key_exists($hotfix['attributes']['id'], $inst_exts))			{				$forum_page['ext_item'][] = '<div class="ct-box info-box hotfix available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($hotfix['content']).'</span></h3>'."\n\t\t\t".'<ul>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], 'PunBB').'</span></li>'."\n\t\t\t\t".'<li><span>'.$lang_admin_ext['Hotfix description'].'</span></li>'."\n\t\t\t".'</ul>'."\n\t\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install_hotfix='.urlencode($hotfix['attributes']['id']).'">'.$lang_admin_ext['Install hotfix'].'</a></span></p>'."\n\t\t".'</div>';				++$num_exts;			}		}	}	($hook = get_hook('aex_section_hotfixes_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed hotfixes'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$installed_count = 0;	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') !== 0)				continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=hotfixes&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=hotfixese&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		($hook = get_hook('aex_section_hotfixes_pre_ext_actions')) ? eval($hook) : null;?>		<div class="ct-box info-box hotfix <?php echo $ext['disabled'] == '1' ? 'disabled' : 'enabled' ?>">			<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext['title']) ?><?php if ($ext['disabled'] == '1') echo ' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )' ?></span></h3>			<ul class="data-list">				<li><span><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext['version']) : $lang_admin_ext['Hotfix']) ?></span></li>				<li><span><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])) ?></span></li><?php if ($ext['description'] != ''): ?>				<li><span><?php echo forum_htmlencode($ext['description']) ?></span></li><?php endif; ?>			</ul>			<p class="options"><?php echo implode(' ', $forum_page['ext_actions']) ?></p>		</div><?php		$installed_count++;	}	if ($installed_count == 0)	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Extensions listelse{	if ($forum_config['o_check_for_versions'] == 1)	{		// Check for the new versions of the extensions istalled		$repository_urls = array('http://punbb.informer.com/extensions');		($hook = get_hook('aex_add_extensions_repository')) ? eval($hook) : null;		$repository_url_by_extension = array();		foreach (array_keys($inst_exts) as $id)			($hook = get_hook('aex_add_repository_for_'.$id)) ? eval($hook) : null;		if (is_readable(FORUM_CACHE_DIR.'cache_ext_version_notifications.php'))			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		//Get latest timestamp in cache		if (isset($forum_ext_repos))		{			$min_timestamp = 10000000000;			foreach ( $forum_ext_repos as $rep)				$min_timestamp = min($min_timestamp, $rep['timestamp']);		}		$update_hour = (isset($forum_ext_versions_update_cache) && (time() - $forum_ext_versions_update_cache > 60 * 60));		// Update last versions if there is no cahe or some extension was added/removed or one day has gone since last update		$update_new_versions_cache = !defined('FORUM_EXT_VERSIONS_LOADED') || (isset($forum_ext_last_versions) && array_diff($inst_exts, $forum_ext_last_versions) != array()) || $update_hour  || ( $update_hour && isset($min_timestamp) && (time() - $min_timestamp > 60*60*24));		($hook = get_hook('aex_before_update_checking')) ? eval($hook) : null;		if ($update_new_versions_cache)		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require_once FORUM_ROOT.'include/cache.php';			generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension);			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage extensions'], forum_link($forum_url['admin_extensions_manage']))	);	($hook = get_hook('aex_section_manage_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Extensions available'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	$d = dir(FORUM_ROOT.'extensions');	while (($entry = $d->read()) !== false)	{		if ($entry{0} != '.' && is_dir(FORUM_ROOT.'extensions/'.$entry))		{			if (preg_match('/[^0-9a-z_]/', $entry))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Illegal ID'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			else if (!file_exists(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml'))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Missing manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Parse manifest.xml into an array			$ext_data = is_readable(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml') ? xml_to_array(file_get_contents(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml')) : '';			if (empty($ext_data))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Failed parse manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Validate manifest			$errors = validate_manifest($ext_data, $entry);			if (!empty($errors))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.implode(' ', $errors).'</p>'."\n\t\t\t".'</div>';				++$num_failed;			}			else			{				if (!array_key_exists($entry, $inst_exts) || version_compare($inst_exts[$entry]['version'], $ext_data['extension']['version'], '!='))				{					$forum_page['ext_item'][] = '<div class="ct-box info-box extension available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext_data['extension']['title']).'</span></h3>'."\n\t\t\t".'<ul class="data-list">'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']).'</span></li>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])).'</span></li>'.(($ext_data['extension']['description'] != '') ? "\n\t\t\t\t".'<li><span>'.forum_htmlencode($ext_data['extension']['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install='.urlencode($entry).'">'.(isset($inst_exts[$entry]['version']) ? $lang_admin_ext['Upgrade extension'] : $lang_admin_ext['Install extension']).'</a></span></p>'."\n\t\t".'</div>';					++$num_exts;				}			}		}	}	$d->close();	($hook = get_hook('aex_section_install_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available extensions'] ?></p>		</div><?php	}	// If any of the extensions had errors	if ($num_failed)	{?>		<div class="ct-box data-box">			<p class="important"><?php echo $lang_admin_ext['Invalid extensions'] ?></p>			<?php echo implode("\n\t\t\t", $forum_page['ext_error'])."\n" ?>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed extensions'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$installed_count = 0;	$forum_page['ext_item'] = array();	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') === 0)			continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		if ($forum_config['o_check_for_versions'] == 1 && isset($forum_ext_last_versions[$id]) && version_compare($ext['version'], $forum_ext_last_versions[$id]['version'], '<'))			$forum_page['ext_actions']['latest_ver'] = '<span><a href="'.$forum_ext_last_versions[$id]['repo_url'].'/'.$id.'/'.$id.'.zip">'.$lang_admin_ext['Download latest version'].'</a></span>';		($hook = get_hook('aex_section_manage_pre_ext_actions')) ? eval($hook) : null;		if ($ext['disabled'] == '1')			$forum_page['ext_item'][] = '<div class="ct-box info-box extension disabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		else			$forum_page['ext_item'][] = '<div class="ct-box info-box extension enabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).'</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		$installed_count++;	}	if ($installed_count > 0)	{		echo "\t".implode("\n\t", $forum_page['ext_item'])."\n";	}	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed extensions'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}
<?php/** * Installation script. * * Used to actually install PunBB. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('FORUM_VERSION', '1.4b1');define('FORUM_DB_REVISION', 5);define('MIN_PHP_VERSION', '5.0.0');define('MIN_MYSQL_VERSION', '4.1.2');define('FORUM_ROOT', '../');define('FORUM', 1);define('FORUM_DEBUG', 1);define('FORUM_SEARCH_MIN_WORD', 3);define('FORUM_SEARCH_MAX_WORD', 20);if (file_exists(FORUM_ROOT.'config.php'))	exit('The file \'config.php\' already exists which would mean that PunBB is already installed. You should go <a href="'.FORUM_ROOT.'index.php">here</a> instead.');// Make sure we are running at least MIN_PHP_VERSIONif (!function_exists('version_compare') || version_compare(PHP_VERSION, MIN_PHP_VERSION, '<'))	exit('You are running PHP version '.PHP_VERSION.'. PunBB requires at least PHP '.MIN_PHP_VERSION.' to run properly. You must upgrade your PHP installation before you can continue.');// Disable error reporting for uninitialized variableserror_reporting(E_ALL);// Turn off PHP time limit@set_time_limit(0);// We need some stuff from functions.phprequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();//// Generate output to be used for config.php//function generate_config_file(){	global $db_type, $db_host, $db_name, $db_username, $db_password, $db_prefix, $base_url, $cookie_name;	$config_body = '<?php'."\n\n".'$db_type = \''.$db_type."';\n".'$db_host = \''.$db_host."';\n".'$db_name = \''.addslashes($db_name)."';\n".'$db_username = \''.addslashes($db_username)."';\n".'$db_password = \''.addslashes($db_password)."';\n".'$db_prefix = \''.addslashes($db_prefix)."';\n".'$p_connect = false;'."\n\n".'$base_url = \''.$base_url.'\';'."\n\n".'$cookie_name = '."'".$cookie_name."';\n".'$cookie_domain = '."'';\n".'$cookie_path = '."'/';\n".'$cookie_secure = 0;'."\n\ndefine('FORUM', 1);";	// Add forum options	$config_body .= "\n\n// Enable DEBUG mode by removing // from the following line\n//define('FORUM_DEBUG', 1);";	$config_body .= "\n\n// Enable show DB Queries mode by removing // from the following line\n//define('FORUM_SHOW_QUERIES', 1);";	$config_body .= "\n\n// Disable forum CSRF checking by removing // from the following line\n//define('FORUM_DISABLE_CSRF_CONFIRM', 1);";	$config_body .= "\n\n// Disable forum hooks (extensions) by removing // from the following line\n//define('FORUM_DISABLE_HOOKS', 1);";	$config_body .= "\n\n// Disable forum output buffering by removing // from the following line\n//define('FORUM_DISABLE_BUFFERING', 1);";	return $config_body;}$language = isset($_GET['lang']) ? $_GET['lang'] : (isset($_POST['req_language']) ? forum_trim($_POST['req_language']) : 'English');$language = preg_replace('#[\.\\\/]#', '', $language);if (!file_exists(FORUM_ROOT.'lang/'.$language.'/install.php'))	exit('The language pack you have chosen doesn\'t seem to exist or is corrupt. Please recheck and try again.');// Load the language filesrequire FORUM_ROOT.'lang/'.$language.'/install.php';require FORUM_ROOT.'lang/'.$language.'/admin_settings.php';if (isset($_POST['generate_config'])){	header('Content-Type: text/x-delimtext; name="config.php"');	header('Content-disposition: attachment; filename=config.php');	$db_type = $_POST['db_type'];	$db_host = $_POST['db_host'];	$db_name = $_POST['db_name'];	$db_username = $_POST['db_username'];	$db_password = $_POST['db_password'];	$db_prefix = $_POST['db_prefix'];	$base_url = $_POST['base_url'];	$cookie_name = $_POST['cookie_name'];	echo generate_config_file();	exit;}header('Content-Type: text/html; charset=utf-8');header('Cache-Control: cache-control: no-store', false);if (!isset($_POST['form_sent'])){	// Determine available database extensions	$db_extensions = array();	if (function_exists('mysqli_connect'))	{		$db_extensions[] = array('mysqli', 'MySQL Improved');		$db_extensions[] = array('mysqli_innodb', 'MySQL Improved (InnoDB)');	}	if (function_exists('mysql_connect'))	{		$db_extensions[] = array('mysql', 'MySQL Standard');		$db_extensions[] = array('mysql_innodb', 'MySQL Standard (InnoDB)');	}	if (function_exists('sqlite_open'))		$db_extensions[] = array('sqlite', 'SQLite');	/* Disabled in 1.4.0 becouse a many non-compability extensions	if (class_exists('SQLite3'))		$db_extensions[] = array('sqlite3', 'SQLite3');	*/	if (function_exists('pg_connect'))		$db_extensions[] = array('pgsql', 'PostgreSQL');	if (empty($db_extensions))		error($lang_install['No database support']);	// Make an educated guess regarding base_url	$base_url_guess = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://').preg_replace('/:80$/', '', $_SERVER['HTTP_HOST']).substr(str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME'])), 0, -6);	if (substr($base_url_guess, -1) == '/')		$base_url_guess = substr($base_url_guess, 0, -1);	// Check for available language packs	$languages = get_language_packs();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php echo $lang_install['Install intro'] ?></p></div><div id="brd-main" class="main">	<div class="main-head">		<h1 class="hn"><span><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></span></h1>	</div><?php	if (count($languages) > 1)	{?>	<form class="frm-form" method="get" accept-charset="utf-8" action="install.php">	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Choose language'] ?></span></h2>	</div>	<div class="main-content main-frm">		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Choose language legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld0"><span><?php echo $lang_install['Installer language'] ?></span> <small><?php echo $lang_install['Choose language help'] ?></small></label><br />					<span class="fld-input"><select id="fld0" name="lang"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div>		</fieldset>		<div class="frm-buttons">			<span class="submit"><input type="submit" name="changelang" value="<?php echo $lang_install['Choose language'] ?>" /></span>		</div>	</div>	</form><?php	}?>	<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">	<div class="hidden">		<input type="hidden" name="form_sent" value="1" />	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part1'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part1 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Database type'] ?></strong> <?php echo $lang_install['Database type info']; if (count($db_extensions) > 1) echo ' '.$lang_install['Mysql type info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database server'] ?></strong> <?php echo $lang_install['Database server info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database name'] ?></strong> <?php echo $lang_install['Database name info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Database user pass'] ?></strong> <?php echo $lang_install['Database username info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Table prefix'] ?></strong> <?php echo $lang_install['Table prefix info'] ?></span></li>			</ul>		</div>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_install['Required warn'], '<em>'.$lang_install['Required'].'</em>') ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part1 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box select required">					<label for="req_db_type"><span><?php echo $lang_install['Database type'] ?></span> <small><?php echo $lang_install['Database type help'] ?></small></label><br />					<span class="fld-input"><select id="req_db_type" name="req_db_type"><?php	foreach ($db_extensions as $db_type)		echo "\t\t\t\t\t".'<option value="'.$db_type[0].'">'.$db_type[1].'</option>'."\n";?>					</select></span>				</div>			</div>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld2"><span><?php echo $lang_install['Database server'] ?></span> <small><?php echo $lang_install['Database server help'] ?></small></label><br />					<span class="fld-input"><input id="fld2" type="text" name="req_db_host" value="localhost" size="35" maxlength="100" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld3"><span><?php echo $lang_install['Database name'] ?></span> <small><?php echo $lang_install['Database name help'] ?></small></label><br />					<span class="fld-input"><input id="fld3" type="text" name="req_db_name" size="35" maxlength="50" required /></span>				</div>			</div>			<div class="sf-set set3" id="db_username_block">				<div class="sf-box text">					<label for="fld4"><span><?php echo $lang_install['Database username'] ?></span> <small><?php echo $lang_install['Database username help'] ?></small></label><br />					<span class="fld-input"><input id="fld4" type="text" name="db_username" size="35" maxlength="50" /></span>				</div>			</div>			<div class="sf-set set4" id="db_password_block">				<div class="sf-box text">					<label for="fld5"><span><?php echo $lang_install['Database password'] ?></span> <small><?php echo $lang_install['Database password help'] ?></small></label><br />					<span class="fld-input"><input id="fld5" type="password" name="db_password" size="35" /></span>				</div>			</div>			<div class="sf-set set5">				<div class="sf-box text">					<label for="fld6"><span><?php echo $lang_install['Table prefix'] ?></span> <small><?php echo $lang_install['Table prefix help'] ?></small></label><br />					<span class="fld-input"><input id="fld6" type="text" name="db_prefix" size="35" maxlength="30" /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part2'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part2 intro'] ?></p>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part2 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text required">					<label for="fld7"><span><?php echo $lang_install['Admin username'] ?></span> <small><?php echo $lang_install['Username help'] ?></small></label><br />					<span class="fld-input"><input id="fld7" type="text" name="req_username" size="35" maxlength="25" required /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text required">					<label for="fld8"><span><?php echo $lang_install['Admin password'] ?></span> <small><?php echo $lang_install['Password help'] ?></small></label><br />					<span class="fld-input"><input id="fld8" type="password" name="req_password1" size="35" required /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld9"><span><?php echo $lang_install['Admin confirm password'] ?></span> <small><?php echo $lang_install['Confirm password help'] ?></small></label><br />					<span class="fld-input"><input id="fld9" type="password" name="req_password2" size="35" required /></span>				</div>			</div>			<div class="sf-set set4">				<div class="sf-box text required">					<label for="fld10"><span><?php echo $lang_install['Admin e-mail'] ?></span> <small><?php echo $lang_install['E-mail address help'] ?></small></label><br />					<span class="fld-input"><input id="fld10" type="email" name="req_email" size="35" maxlength="80" required /></span>				</div>			</div>		</fieldset>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_install['Part3'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_install['Part3 intro'] ?></p>			<ul class="spaced list-clean">				<li><span><strong><?php echo $lang_install['Board title and desc'] ?></strong> <?php echo $lang_install['Board title info'] ?></span></li>				<li><span><strong><?php echo $lang_install['Base URL'] ?></strong> <?php echo $lang_install['Base URL info'] ?></span></li>			</ul>		</div>		<fieldset class="frm-group group1">			<legend class="group-legend"><strong><?php echo $lang_install['Part3 legend'] ?></strong></legend>			<div class="sf-set set1">				<div class="sf-box text">					<label for="fld11"><span><?php echo $lang_install['Board title'] ?></span></label><br />					<span class="fld-input"><input id="fld11" type="text" name="board_title" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set2">				<div class="sf-box text">					<label for="fld12"><span><?php echo $lang_install['Board description'] ?></span></label><br />					<span class="fld-input"><input id="fld12" type="text" name="board_descrip" size="35" maxlength="255" /></span>				</div>			</div>			<div class="sf-set set3">				<div class="sf-box text required">					<label for="fld13"><span><?php echo $lang_install['Base URL'] ?></span> <small><?php echo $lang_install['Base URL help'] ?></small></label><br />					<span class="fld-input"><input id="fld13" type="url" name="req_base_url" value="<?php echo $base_url_guess ?>" size="35" maxlength="100" required /></span>				</div>			</div><?php	if (count($languages) > 1)	{?>			<div class="sf-set set4">				<div class="sf-box text">					<label for="fld14"><span><?php echo $lang_install['Default language'] ?></span> <small><?php echo $lang_install['Default language help'] ?></small></label><br />					<span class="fld-input"><select id="fld14" name="req_language"><?php		foreach ($languages as $lang)			echo "\t\t\t\t\t".'<option value="'.$lang.'"'.($language == $lang ? ' selected="selected"' : '').'>'.$lang.'</option>'."\n";?>					</select></span>				</div>			</div><?php	}	else	{?>			<div class="hidden">				<input type="hidden" name="req_language" value="<?php echo $languages[0]; ?>" />			</div><?php	}	if (file_exists(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{?>			<div class="sf-set set5">				<div class="sf-box checkbox">					<span class="fld-input"><input id="fld15" type="checkbox" name="install_pun_repository" value="1" checked="checked" /></span>					<label for="fld15"><span><?php echo $lang_install['Pun repository'] ?></span> <?php echo $lang_install['Pun repository help'] ?></label><br />				</div>			</div><?php	}?>		</fieldset>		<div class="frm-buttons">			<span class="submit primary"><input type="submit" name="start" value="<?php echo $lang_install['Start install'] ?>" /></span>		</div>	</div>	</form></div></div></div>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.common.js"></script>	<script src="<?php echo FORUM_ROOT ?>include/js/punbb.install.js"></script></body></html><?php}else{	//	// Strip slashes only if magic_quotes_gpc is on.	//	function unescape($str)	{		return (get_magic_quotes_gpc() == 1) ? stripslashes($str) : $str;	}	$db_type = $_POST['req_db_type'];	$db_host = forum_trim($_POST['req_db_host']);	$db_name = forum_trim($_POST['req_db_name']);	$db_username = unescape(forum_trim($_POST['db_username']));	$db_password = unescape(forum_trim($_POST['db_password']));	$db_prefix = forum_trim($_POST['db_prefix']);	$username = unescape(forum_trim($_POST['req_username']));	$email = unescape(strtolower(forum_trim($_POST['req_email'])));	$password1 = unescape(forum_trim($_POST['req_password1']));	$password2 = unescape(forum_trim($_POST['req_password2']));	$board_title = unescape(forum_trim($_POST['board_title']));	$board_descrip = unescape(forum_trim($_POST['board_descrip']));	$default_lang = preg_replace('#[\.\\\/]#', '', unescape(forum_trim($_POST['req_language'])));	$install_pun_repository = !empty($_POST['install_pun_repository']);	// Make sure base_url doesn't end with a slash	if (substr($_POST['req_base_url'], -1) == '/')		$base_url = substr($_POST['req_base_url'], 0, -1);	else		$base_url = $_POST['req_base_url'];	// Validate form	if (utf8_strlen($db_name) == 0)		error($lang_install['Missing database name']);	if (utf8_strlen($username) < 2)		error($lang_install['Username too short']);	if (utf8_strlen($username) > 25)		error($lang_install['Username too long']);	if (utf8_strlen($password1) < 8)		error($lang_install['Pass too short']);	if ($password1 != $password2)		error($lang_install['Pass not match']);	if (strtolower($username) == 'guest')		error($lang_install['Username guest']);	if (preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $username) || preg_match('/((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))/', $username))		error($lang_install['Username IP']);	if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)		error($lang_install['Username reserved chars']);	if (preg_match('/(?:\[\/?(?:b|u|i|h|colou?r|quote|code|img|url|email|list)\]|\[(?:code|quote|list)=)/i', $username))		error($lang_install['Username BBCode']);	// Validate email	if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/email.php';	if (!is_valid_email($email))		error($lang_install['Invalid email']);	// Make sure board title and description aren't left blank	if ($board_title == '')		$board_title = 'My PunBB forum';	if ($board_descrip == '')		$board_descrip = 'Unfortunately no one can be told what PunBB is  you have to see it for yourself';	if (utf8_strlen($base_url) == 0)		error($lang_install['Missing base url']);	if (!file_exists(FORUM_ROOT.'lang/'.$default_lang.'/common.php'))		error($lang_install['Invalid language']);	// Load the appropriate DB layer class	switch ($db_type)	{		case 'mysql':			require FORUM_ROOT.'include/dblayer/mysql.php';			break;		case 'mysql_innodb':			require FORUM_ROOT.'include/dblayer/mysql_innodb.php';			break;		case 'mysqli':			require FORUM_ROOT.'include/dblayer/mysqli.php';			break;		case 'mysqli_innodb':			require FORUM_ROOT.'include/dblayer/mysqli_innodb.php';			break;		case 'pgsql':			require FORUM_ROOT.'include/dblayer/pgsql.php';			break;		case 'sqlite':			require FORUM_ROOT.'include/dblayer/sqlite.php';			break;		case 'sqlite3':			require FORUM_ROOT.'include/dblayer/sqlite3.php';			break;		default:			error(sprintf($lang_install['No such database type'], forum_htmlencode($db_type)));	}	// Create the database object (and connect/select db)	$forum_db = new DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, false);	// If MySQL, make sure it's at least 4.1.2	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$mysql_info = $forum_db->get_version();		if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))			error(sprintf($lang_install['Invalid MySQL version'], forum_htmlencode($mysql_info['version']), MIN_MYSQL_VERSION));		// Check InnoDB support in DB		if (in_array($db_type, array('mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW VARIABLES LIKE \'have_innodb\'');			$row = $forum_db->fetch_assoc($result);			if (!$row || !isset($row['Value']) || strtolower($row['Value']) != 'yes')			{				error($lang_install['MySQL InnoDB Not Supported']);			}		}	}	// Validate prefix	if (strlen($db_prefix) > 0 && (!preg_match('/^[a-zA-Z_][a-zA-Z0-9_]*$/', $db_prefix) || strlen($db_prefix) > 40))		error(sprintf($lang_install['Invalid table prefix'], $db_prefix));	// Check SQLite prefix collision	if (in_array($db_type, array('sqlite', 'sqlite3')) && strtolower($db_prefix) == 'sqlite_')		error($lang_install['SQLite prefix collision']);	// Make sure PunBB isn't already installed	if ($forum_db->table_exists('users'))	{		$query = array(			'SELECT'	=> 'COUNT(id)',			'FROM'		=> 'users',			'WHERE'		=> 'id=1'		);		$result = $forum_db->query_build($query);		if ($forum_db->result($result))			error(sprintf($lang_install['PunBB already installed'], $db_prefix, $db_name));	}	// Start a transaction	$forum_db->start_transaction();	// Create all tables	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'username'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'ip'			=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'email'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'expire'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'ban_creator'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('bans', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'cat_name'		=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New Category\''			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('categories', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'search_for'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'replace_with'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('censoring', $schema);	$schema = array(		'FIELDS'		=> array(			'conf_name'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'conf_value'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('conf_name')	);	$forum_db->create_table('config', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'version'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'description'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'author'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'uninstall'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'uninstall_note'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disabled'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'dependencies'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('extensions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'VARCHAR(150)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'extension_id'	=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'code'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'installed'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'priority'		=> array(				'datatype'		=> 'TINYINT(1) UNSIGNED',				'allow_null'	=> false,				'default'		=> '5'			)		),		'PRIMARY KEY'	=> array('id', 'extension_id')	);	$forum_db->create_table('extension_hooks', $schema);	$schema = array(		'FIELDS'		=> array(			'group_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'read_forum'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_replies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_topics'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			)		),		'PRIMARY KEY'	=> array('group_id', 'forum_id')	);	$forum_db->create_table('forum_perms', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'forum_name'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New forum\''			),			'forum_desc'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'redirect_url'	=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'moderators'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'num_topics'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'sort_by'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=>	'0'			),			'cat_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=>	'0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('forums', $schema);	$schema = array(		'FIELDS'		=> array(			'g_id'						=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'g_title'					=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'g_user_title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'g_moderator'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_edit_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_rename_users'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_change_passwords'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_ban_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_read_board'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_view_users'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_replies'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_topics'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_edit_posts'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_posts'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_topics'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_set_title'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search'					=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_send_email'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_search_flood'			=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_email_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '60'			)		),		'PRIMARY KEY'	=> array('g_id')	);	$forum_db->create_table('groups', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'logged'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'idle'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'csrf_token'	=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'prev_url'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),		),		'UNIQUE KEYS'	=> array(			'user_id_ident_idx'	=> array('user_id', 'ident')		),		'INDEXES'		=> array(			'ident_idx'		=> array('ident'),			'logged_idx'	=> array('logged')		),		'ENGINE'		=> 'HEAP'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))	{		$schema['UNIQUE KEYS']['user_id_ident_idx'] = array('user_id', 'ident(25)');		$schema['INDEXES']['ident_idx'] = array('ident(25)');	}	$forum_db->create_table('online', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'poster_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'poster_ip'		=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> true			),			'poster_email'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'hide_smilies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'edited'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'edited_by'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'topic_id_idx'	=> array('topic_id'),			'multi_idx'		=> array('poster_id', 'topic_id'),			'posted_idx'	=> array('posted')		)	);	$forum_db->create_table('posts', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'rank'			=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'min_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$forum_db->create_table('ranks', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'reported_by'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'created'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'zapped'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'zapped_by'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'zapped_idx'	=> array('zapped')		)	);	$forum_db->create_table('reports', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'search_data'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'ident_idx'	=> array('ident')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['ident_idx'] = array('ident(8)');	$forum_db->create_table('search_cache', $schema);	$schema = array(		'FIELDS'		=> array(			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'word_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'subject_match'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'INDEXES'		=> array(			'word_id_idx'	=> array('word_id'),			'post_id_idx'	=> array('post_id')		)	);	$forum_db->create_table('search_matches', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'word'			=> array(				'datatype'		=> 'VARCHAR(20)',				'allow_null'	=> false,				'default'		=> '\'\'',				'collation'		=> 'bin'			)		),		'PRIMARY KEY'	=> array('word'),		'INDEXES'		=> array(			'id_idx'	=> array('id')		)	);	if ($db_type == 'sqlite' || $db_type == 'sqlite3')	{		$schema['PRIMARY KEY'] = array('id');		$schema['UNIQUE KEYS'] = array('word_idx'	=> array('word'));	}	$forum_db->create_table('search_words', $schema);	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('user_id', 'topic_id')	);	$forum_db->create_table('subscriptions', $schema);	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'subject'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'first_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'num_views'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_replies'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'closed'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'sticky'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'moved_to'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'forum_id_idx'		=> array('forum_id'),			'moved_to_idx'		=> array('moved_to'),			'last_post_idx'		=> array('last_post'),			'first_post_id_idx'	=> array('first_post_id')		)	);	$forum_db->create_table('topics', $schema);	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'group_id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '3'			),			'username'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'password'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'salt'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'email'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'realname'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> true			),			'url'				=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'facebook'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'twitter'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'linkedin'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'skype'			=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'jabber'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'icq'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'msn'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'aim'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'yahoo'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'location'			=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'signature'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disp_topics'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'disp_posts'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'email_setting'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'notify_with_post'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'auto_notify'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'show_smilies'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img_sig'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_avatars'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_sig'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'access_keys'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'timezone'			=> array(				'datatype'		=> 'FLOAT',				'allow_null'	=> false,				'default'		=> '0'			),			'dst'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'time_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'date_format'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'language'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'English\''			),			'style'				=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\'Oxygen\''			),			'num_posts'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_email_sent'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'registered'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'registration_ip'	=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> false,				'default'		=> '\'0.0.0.0\''			),			'last_visit'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'admin_note'		=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'activate_string'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'activate_key'		=> array(				'datatype'		=> 'VARCHAR(8)',				'allow_null'	=> true			),			'avatar'			=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_width'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),			'avatar_height'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> false,				'default'		=> 0,			),		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'registered_idx'	=> array('registered'),			'username_idx'		=> array('username')		)	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$schema['INDEXES']['username_idx'] = array('username(8)');	$forum_db->create_table('users', $schema);	$now = time();	// Insert the four preset groups	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Administrators\', \'Administrator\', 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Guest\', NULL, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 60, 30, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 2';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Members\', NULL, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 60, 30, 60'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 3';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',		'INTO'		=> 'groups',		'VALUES'	=> '\'Moderators\', \'Moderator\', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0'	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', g_id';		$query['VALUES'] .= ', 4';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Insert guest and first admin user	$query = array(		'INSERT'	=> 'group_id, username, password, email',		'INTO'		=> 'users',		'VALUES'	=> '2, \'Guest\', \'Guest\', \'Guest\''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$salt = random_key(12);	$query = array(		'INSERT'	=> 'group_id, username, password, email, language, num_posts, last_post, registered, registration_ip, last_visit, salt',		'INTO'		=> 'users',		'VALUES'	=> '1, \''.$forum_db->escape($username).'\', \''.forum_hash($password1, $salt).'\', \''.$forum_db->escape($email).'\', \''.$forum_db->escape($default_lang).'\', 1, '.$now.', '.$now.', \'127.0.0.1\', '.$now.', \''.$forum_db->escape($salt).'\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_uid = $forum_db->insert_id();	// Enable/disable avatars depending on file_uploads setting in PHP configuration	$avatars = in_array(strtolower(@ini_get('file_uploads')), array('on', 'true', '1')) ? 1 : 0;	// Enable/disable automatic check for updates depending on PHP environment (require cURL, fsockopen or allow_url_fopen)	$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;	// Insert config data	$config = array(		'o_cur_version'				=> "'".FORUM_VERSION."'",		'o_database_revision'		=> "'".FORUM_DB_REVISION."'",		'o_board_title'				=> "'".$forum_db->escape($board_title)."'",		'o_board_desc'				=> "'".$forum_db->escape($board_descrip)."'",		'o_default_timezone'		=> "'0'",		'o_time_format'				=> "'H:i:s'",		'o_date_format'				=> "'Y-m-d'",		'o_check_for_updates'		=> "'$check_for_updates'",		'o_check_for_versions'		=> "'$check_for_updates'",		'o_timeout_visit'			=> "'5400'",		'o_timeout_online'			=> "'300'",		'o_redirect_delay'			=> "'0'",		'o_show_version'			=> "'0'",		'o_show_user_info'			=> "'1'",		'o_show_post_count'			=> "'1'",		'o_signatures'				=> "'1'",		'o_smilies'					=> "'1'",		'o_smilies_sig'				=> "'1'",		'o_make_links'				=> "'1'",		'o_default_lang'			=> "'".$forum_db->escape($default_lang)."'",		'o_default_style'			=> "'Oxygen'",		'o_default_user_group'		=> "'3'",		'o_topic_review'			=> "'15'",		'o_disp_topics_default'		=> "'30'",		'o_disp_posts_default'		=> "'25'",		'o_indent_num_spaces'		=> "'4'",		'o_quote_depth'				=> "'3'",		'o_quickpost'				=> "'1'",		'o_users_online'			=> "'1'",		'o_censoring'				=> "'0'",		'o_ranks'					=> "'1'",		'o_show_dot'				=> "'0'",		'o_topic_views'				=> "'1'",		'o_quickjump'				=> "'1'",		'o_gzip'					=> "'0'",		'o_additional_navlinks'		=> "''",		'o_report_method'			=> "'0'",		'o_regs_report'				=> "'0'",		'o_default_email_setting'	=> "'1'",		'o_mailing_list'			=> "'".$forum_db->escape($email)."'",		'o_avatars'					=> "'$avatars'",		'o_avatars_dir'				=> "'img/avatars'",		'o_avatars_width'			=> "'60'",		'o_avatars_height'			=> "'60'",		'o_avatars_size'			=> "'15360'",		'o_search_all_forums'		=> "'1'",		'o_sef'						=> "'Default'",		'o_admin_email'				=> "'".$forum_db->escape($email)."'",		'o_webmaster_email'			=> "'".$forum_db->escape($email)."'",		'o_subscriptions'			=> "'1'",		'o_smtp_host'				=> "NULL",		'o_smtp_user'				=> "NULL",		'o_smtp_pass'				=> "NULL",		'o_smtp_ssl'				=> "'0'",		'o_regs_allow'				=> "'1'",		'o_regs_verify'				=> "'0'",		'o_announcement'			=> "'0'",		'o_announcement_heading'	=> "'".$lang_install['Default announce heading']."'",		'o_announcement_message'	=> "'".$lang_install['Default announce message']."'",		'o_rules'					=> "'0'",		'o_rules_message'			=> "'".$lang_install['Default rules']."'",		'o_maintenance'				=> "'0'",		'o_maintenance_message'		=> "'".$lang_admin_settings['Maintenance message default']."'",		'o_default_dst'				=> "'0'",		'p_message_bbcode'			=> "'1'",		'p_message_img_tag'			=> "'1'",		'p_message_all_caps'		=> "'1'",		'p_subject_all_caps'		=> "'1'",		'p_sig_all_caps'			=> "'1'",		'p_sig_bbcode'				=> "'1'",		'p_sig_img_tag'				=> "'0'",		'p_sig_length'				=> "'400'",		'p_sig_lines'				=> "'4'",		'p_allow_banned_email'		=> "'1'",		'p_allow_dupe_email'		=> "'0'",		'p_force_guest_email'		=> "'1'",		'o_show_moderators'			=> "'0'"	);	foreach ($config as $conf_name => $conf_value)	{		$query = array(			'INSERT'	=> 'conf_name, conf_value',			'INTO'		=> 'config',			'VALUES'	=> '\''.$conf_name.'\', '.$conf_value.''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Insert some other default data	$query = array(		'INSERT'	=> 'cat_name, disp_position',		'INTO'		=> 'categories',		'VALUES'	=> '\''.$lang_install['Default category name'].'\', 1'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'forum_name, forum_desc, num_topics, num_posts, last_post, last_post_id, last_poster, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$lang_install['Default forum name'].'\', \''.$lang_install['Default forum descrip'].'\', 1, 1, '.$now.', 1, \''.$forum_db->escape($username).'\', 1, '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, subject, posted, first_post_id, last_post, last_post_id, last_poster, forum_id',		'INTO'		=> 'topics',		'VALUES'	=> '\''.$forum_db->escape($username).'\', \''.$lang_install['Default topic subject'].'\', '.$now.', 1, '.$now.', 1, \''.$forum_db->escape($username).'\', '.$forum_db->insert_id().''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'poster, poster_id, poster_ip, message, posted, topic_id',		'INTO'		=> 'posts',		'VALUES'	=> '\''.$forum_db->escape($username).'\', '.$new_uid.', \'127.0.0.1\', \''.$lang_install['Default post contents'].'\', '.$now.', '.$forum_db->insert_id().''	);	if ($db_type != 'pgsql')	{		$query['INSERT'] .= ', id';		$query['VALUES'] .= ', 1';	}	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Add new post to search table	require FORUM_ROOT.'include/search_idx.php';	update_search_index('post', $forum_db->insert_id(), $lang_install['Default post contents'], $lang_install['Default topic subject']);	// Insert the default ranks	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 1'].'\', 0'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$lang_install['Default rank 2'].'\', 10'	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_db->end_transaction();	$alerts = array();	// Check if the cache directory is writable	if (!is_writable(FORUM_ROOT.'cache/'))		$alerts[] = '<li><span>'.$lang_install['No cache write'].'</span></li>';	// Check if default avatar directory is writable	if (!is_writable(FORUM_ROOT.'img/avatars/'))		$alerts[] = '<li><span>'.$lang_install['No avatar write'].'</span></li>';	// Check if we disabled uploading avatars because file_uploads was disabled	if ($avatars == '0')		$alerts[] = '<li><span>'.$lang_install['File upload alert'].'</span></li>';	// Add some random bytes at the end of the cookie name to prevent collisions	$cookie_name = 'forum_cookie_'.random_key(6, false, true);	/// Generate the config.php file data	$config = generate_config_file();	// Attempt to write config.php and serve it up for download if writing fails	$written = false;	if (is_writable(FORUM_ROOT))	{		$fh = @fopen(FORUM_ROOT.'config.php', 'wb');		if ($fh)		{			fwrite($fh, $config);			fclose($fh);			$written = true;		}	}	if ($install_pun_repository && is_readable(FORUM_ROOT.'extensions/pun_repository/manifest.xml'))	{		require FORUM_ROOT.'include/xml.php';		$ext_data = xml_to_array(file_get_contents(FORUM_ROOT.'extensions/pun_repository/manifest.xml'));		if (!empty($ext_data))		{			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\'pun_repository\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', NULL, NULL, \'||\'',			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (isset($ext_data['extension']['hooks']['hook']))			{				foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)				{					$cur_hooks = explode(',', $ext_hook['attributes']['id']);					foreach ($cur_hooks as $cur_hook)					{						$query = array(							'INSERT'	=> 'id, extension_id, code, installed, priority',							'INTO'		=> 'extension_hooks',							'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \'pun_repository\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)						);						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}			}		}	}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Installation</title><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo FORUM_ROOT ?>style/Oxygen/Oxygen_ie7.css" /><![endif]--></head><body><div id="brd-install" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong><?php printf($lang_install['Install PunBB'], FORUM_VERSION) ?></strong></p>	<p id="brd-desc"><?php printf($lang_install['Success description'], FORUM_VERSION) ?></p></div><div id="brd-visit" class="gen-content">	<p><?php echo $lang_install['Success welcome'] ?></p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span><?php echo $lang_install['Final instructions'] ?></span></h1>	</div>	<div class="main-content main-frm"><?php if (!empty($alerts)): ?>		<div class="ct-box error-box">			<p class="warn"><strong><?php echo $lang_install['Warning'] ?></strong></p>			<ul>				<?php echo implode("\n\t\t\t\t", $alerts)."\n" ?>			</ul>		</div><?php endif;if (!$written){?>		<div class="ct-box info-box">			<p class="warn"><?php echo $lang_install['No write info 1'] ?></p>			<p class="warn"><?php printf($lang_install['No write info 2'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="install.php">			<div class="hidden">			<input type="hidden" name="generate_config" value="1" />			<input type="hidden" name="db_type" value="<?php echo $db_type; ?>" />			<input type="hidden" name="db_host" value="<?php echo $db_host; ?>" />			<input type="hidden" name="db_name" value="<?php echo forum_htmlencode($db_name); ?>" />			<input type="hidden" name="db_username" value="<?php echo forum_htmlencode($db_username); ?>" />			<input type="hidden" name="db_password" value="<?php echo forum_htmlencode($db_password); ?>" />			<input type="hidden" name="db_prefix" value="<?php echo forum_htmlencode($db_prefix); ?>" />			<input type="hidden" name="base_url" value="<?php echo forum_htmlencode($base_url); ?>" />			<input type="hidden" name="cookie_name" value="<?php echo forum_htmlencode($cookie_name); ?>" />			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" value="<?php echo $lang_install['Download config'] ?>" /></span>			</div>		</form><?php}else{?>		<div class="ct-box info-box">			<p class="warn"><?php printf($lang_install['Write info'], '<a href="'.FORUM_ROOT.'index.php">'.$lang_install['Go to index'].'</a>') ?></p>		</div><?php}?>	</div></div></div></div></body></html><?php}
<?php// Language definitions used in login.php$lang_login = array(// Miscellaneous'Login'								=>	'Login','Login info'						=>	'Login to %s','Username'							=>	'Username','Password'							=>	'Password','Remember me'						=>	'Remember me','E-mail address'					=>	'Email address','E-mail address help'				=>	'Enter the email address set in your profile.','Login errors'						=>	'<strong>Warning!</strong> The following errors must be corrected before you can login:','Wrong user/pass'					=>	'Incorrect username and/or password.','Login redirect'					=>	'Logged in successfully.','Logout redirect'					=>	'Logged out.','No e-mail match'					=>	'There is no user registered with the email address %s.','Invalid e-mail'					=>	'The email address you entered is invalid.','Login options'						=>	'Do you need to %1$s or obtain a %2$s before you login?','Obtain pass'						=>	'new password','register'							=>	'register','Submit password request'			=>	'Submit request','Email flood'						=>	'This account has already requested a new password in the past %s seconds. Please wait a while before requesting a new password again.','New password request'				=>	'New password request','New password errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before a new password can be sent:','New password info'					=>	'<strong>Important!</strong> An email will be sent to the specified address with instructions on how to change your password.','New password cancel redirect'		=>	'New password request cancelled.','Forget mail'						=>	'An email has been sent to the specified address with instructions on how to change your password. If it does not arrive you can contact the forum administrator at %s.','Persistent login'					=>	'Log me in automatically each time I visit.');
<?php/** * Allows users to view and edit their details. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('pf_start')) ? eval($hook) : null;$action = isset($_GET['action']) ? $_GET['action'] : null;$section = isset($_GET['section']) ? $_GET['section'] : 'about';	// Default to section "about"$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 2)	message($lang_common['Bad request']);$errors = array();if ($action != 'change_pass' || !isset($_GET['key'])){	if ($forum_user['g_read_board'] == '0')		message($lang_common['No view']);	else if ($forum_user['g_view_users'] == '0' && ($forum_user['is_guest'] || $forum_user['id'] != $id))		message($lang_common['No permission']);}// Load the profile.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';// Fetch info about the user whose profile we're viewing$query = array(	'SELECT'	=> 'u.*, g.g_id, g.g_user_title, g.g_moderator',	'FROM'		=> 'users AS u',	'JOINS'		=> array(		array(			'LEFT JOIN'	=> 'groups AS g',			'ON'		=> 'g.g_id=u.group_id'		)	),	'WHERE'		=> 'u.id='.$id);($hook = get_hook('pf_qr_get_user_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$user = $forum_db->fetch_assoc($result);if (!$user)	message($lang_common['Bad request']);if ($action == 'change_pass'){	($hook = get_hook('pf_change_pass_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		// If the user is already logged in we shouldn't be here :)		if (!$forum_user['is_guest'])			message($lang_profile['Pass logout']);		($hook = get_hook('pf_change_pass_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['Pass key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			if (isset($_POST['form_sent']))			{				($hook = get_hook('pf_change_pass_key_form_submitted')) ? eval($hook) : null;				$new_password1 = forum_trim($_POST['req_new_password1']);				$new_password2 = forum_trim($_POST['req_new_password2']);				if (utf8_strlen($new_password1) < 4)					$errors[] = $lang_profile['Pass too short'];				else if ($new_password1 != $new_password2)					$errors[] = $lang_profile['Pass not match'];				// Did everything go according to plan?				if (empty($errors))				{					$new_password_hash = forum_hash($new_password1, $user['salt']);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'password=\''.$new_password_hash.'\', activate_key=NULL',						'WHERE'		=> 'id='.$id					);					($hook = get_hook('pf_change_pass_key_qr_update_password')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Add flash message					$forum_flash->add_info($lang_profile['Pass updated']);					($hook = get_hook('pf_change_pass_key_pre_redirect')) ? eval($hook) : null;					redirect(forum_link($forum_url['index']), $lang_profile['Pass updated']);				}			}			// Is this users own profile			$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;			// Setup form			$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;			$forum_page['form_action'] = forum_link($forum_url['change_password_key'], array($id, $key));			// Setup breadcrumbs			$forum_page['crumbs'] = array(				array($forum_config['o_board_title'], forum_link($forum_url['index'])),				array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),				($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password']), $id)			);			($hook = get_hook('pf_change_pass_key_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE', 'profile-changepass');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('pf_change_pass_key_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php			// If there were any errors, show them			if (!empty($errors))			{				$forum_page['errors'] = array();				foreach ($errors as $cur_error)					$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';				($hook = get_hook('pf_change_pass_key_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php			}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" autocomplete="off">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_key_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_key_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_key_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php			($hook = get_hook('pf_change_pass_key_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}	}	// Make sure we are allowed to change this user's password	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $forum_user['g_mod_change_passwords'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_pass_normal_form_submitted')) ? eval($hook) : null;		$old_password = isset($_POST['req_old_password']) ? forum_trim($_POST['req_old_password']) : '';		$new_password1 = forum_trim($_POST['req_new_password1']);		$new_password2 = forum_trim($_POST['req_new_password2']);		if (utf8_strlen($new_password1) < 4)			$errors[] = $lang_profile['Pass too short'];		else if ($new_password1 != $new_password2)			$errors[] = $lang_profile['Pass not match'];		$authorized = false;		if (!empty($user['password']))		{			$old_password_hash = forum_hash($old_password, $user['salt']);			if (($user['password'] == $old_password_hash) || $forum_user['is_admmod'])				$authorized = true;		}		if (!$authorized)			$errors[] = $lang_profile['Wrong old password'];		// Did everything go according to plan?		if (empty($errors))		{			$new_password_hash = forum_hash($new_password1, $user['salt']);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$new_password_hash.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_pass_normal_qr_update_password')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_user['id'] == $id)			{				$cookie_data = @explode('|', base64_decode($_COOKIE[$cookie_name]));				$expire = ($cookie_data[2] > time() + $forum_config['o_timeout_visit']) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];				forum_setcookie($cookie_name, base64_encode($forum_user['id'].'|'.$new_password_hash.'|'.$expire.'|'.sha1($user['salt'].$new_password_hash.forum_hash($expire, $user['salt']))), $expire);			}			// Add flash message			$forum_flash->add_info($lang_profile['Pass updated redirect']);			($hook = get_hook('pf_change_pass_normal_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['Pass updated redirect']);		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_password'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your password'], forum_link($forum_url['change_password'], $id)) : array(sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])),forum_link($forum_url['change_password'], $id))	);	($hook = get_hook('pf_change_pass_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changepass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_pass_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $forum_page['own_profile'] ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_pass_normal_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change pass errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>" autocomplete="off">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_pass_normal_pre_old_password')) ? eval($hook) : null; ?><?php if (!$forum_user['is_admmod'] || $forum_user['id'] == $id): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Old password'] ?></span> <small><?php echo $lang_profile['Old password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_old_password" size="35" value="<?php echo(isset($_POST['req_old_password']) ? forum_htmlencode($_POST['req_old_password']) : ''); ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_pass_normal_pre_new_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password1" size="35" value="<?php echo(isset($_POST['req_new_password1']) ? forum_htmlencode($_POST['req_new_password1']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_new_password_confirm')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm new password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_password2" size="35" value="<?php echo(isset($_POST['req_new_password2']) ? forum_htmlencode($_POST['req_new_password2']) : ''); ?>" required /></span><br />					</div>				</div><?php ($hook = get_hook('pf_change_pass_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_pass_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_pass_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'change_email'){	// Make sure we are allowed to change this user's e-mail	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_email_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_about'], $id), $lang_common['Cancel redirect']);	if (isset($_GET['key']))	{		$key = $_GET['key'];		($hook = get_hook('pf_change_email_key_supplied')) ? eval($hook) : null;		if ($key == '' || $key != $user['activate_key'])			message(sprintf($lang_profile['E-mail key bad'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		else		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'email=activate_string, activate_string=NULL, activate_key=NULL',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			message($lang_profile['E-mail updated']);		}	}	else if (isset($_POST['form_sent']))	{		($hook = get_hook('pf_change_email_normal_form_submitted')) ? eval($hook) : null;		if (forum_hash($_POST['req_password'], $forum_user['salt']) !== $forum_user['password'])			$errors[] = $lang_profile['Wrong password'];		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$new_email = strtolower(forum_trim($_POST['req_new_email']));		if (!is_valid_email($new_email))			$errors[] = $lang_common['Invalid e-mail'];		// Check if it's a banned e-mail address		if (is_banned_email($new_email))		{			($hook = get_hook('pf_change_email_normal_banned_email')) ? eval($hook) : null;			if ($forum_config['p_allow_banned_email'] == '0')				$errors[] = $lang_profile['Banned e-mail'];			else if ($forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Banned e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to banned e-mail address: '.$new_email."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Check if someone else already has registered with that e-mail address		$query = array(			'SELECT'	=> 'u.id, u.username',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.email=\''.$forum_db->escape($new_email).'\''		);		($hook = get_hook('pf_change_email_normal_qr_check_email_dupe')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dupe_list = array();		while ($cur_dupe = $forum_db->fetch_assoc($result))		{			$dupe_list[] = $cur_dupe['username'];		}		if (!empty($dupe_list))		{			($hook = get_hook('pf_change_email_normal_dupe_email')) ? eval($hook) : null;			if ($forum_config['p_allow_dupe_email'] == '0')				$errors[] = $lang_profile['Dupe e-mail'];			else if (($forum_config['o_mailing_list'] != '') && empty($errors))			{				$mail_subject = 'Alert - Duplicate e-mail detected';				$mail_message = 'User \''.$forum_user['username'].'\' changed to an e-mail address that also belongs to: '.implode(', ', $dupe_list)."\n\n".'User profile: '.forum_link($forum_url['user'], $id)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Did everything go according to plan?		if (empty($errors))		{			if ($forum_config['o_regs_verify'] != '1')			{				// We have no confirmed e-mail so we change e-mail right now				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'email=\''.$forum_db->escape($new_email).'\'',					'WHERE'		=> 'id='.$id				);				($hook = get_hook('pf_change_email_key_qr_update_email')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);				redirect(forum_link($forum_url['profile_about'], $id), $lang_profile['E-mail updated redirect']);			}			// We have a confirmed e-mail so we going to send an activation link			$new_email_key = random_key(8, true);			// Save new e-mail and activation key			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'activate_string=\''.$forum_db->escape($new_email).'\', activate_key=\''.$new_email_key.'\'',				'WHERE'		=> 'id='.$id			);			($hook = get_hook('pf_change_email_normal_qr_update_email_activation')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Load the "activate e-mail" template			$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_email.tpl'));			// The first row contains the subject			$first_crlf = strpos($mail_tpl, "\n");			$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));			$mail_message = forum_trim(substr($mail_tpl, $first_crlf));			$mail_message = str_replace('<username>', $forum_user['username'], $mail_message);			$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);			$mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_email_key'], array($id, $new_email_key))), $mail_message);			$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);			($hook = get_hook('pf_change_email_normal_pre_activation_email_sent')) ? eval($hook) : null;			forum_mail($new_email, $mail_subject, $mail_message);			message(sprintf($lang_profile['Activate e-mail sent'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));		}	}	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['change_email'], $id);	$forum_page['hidden_fields'] = array(		'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'	);	// Setup form information	$forum_page['frm_info'] = '<p class="important"><span>'.$lang_profile['E-mail info'].'</span></p>';	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		($forum_page['own_profile']) ? array($lang_profile['Change your e-mail'], forum_link($forum_url['change_email'], $id)) : array(sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username'])), forum_link($forum_url['change_email'], $id))	);	($hook = get_hook('pf_change_email_normal_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'profile-changemail');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_change_email_normal_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<?php echo $forum_page['frm_info']."\n" ?>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_email_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Change e-mail errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_email_normal_pre_new_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['New e-mail'] ?></span></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_new_email" size="50" maxlength="80" value="<?php echo(isset($_POST['req_new_email']) ? forum_htmlencode($_POST['req_new_email']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Password'] ?> </span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" size="25" value="<?php echo(isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : ''); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('pf_change_email_normal_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_email_normal_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_change_email_normal_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_user' || isset($_POST['delete_user_comply']) || isset($_POST['cancel'])){	// User pressed the cancel button	if (isset($_POST['cancel']))		redirect(forum_link($forum_url['profile_admin'], $id), $lang_common['Cancel redirect']);	($hook = get_hook('pf_delete_user_selected')) ? eval($hook) : null;	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	if ($user['g_id'] == FORUM_ADMIN)		message($lang_profile['Cannot delete admin']);	if (isset($_POST['delete_user_comply']))	{		($hook = get_hook('pf_delete_user_form_submitted')) ? eval($hook) : null;		delete_user($id, isset($_POST['delete_posts']));		($hook = get_hook('pf_delete_user_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['index']), $lang_profile['User delete redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['delete_user'], $id);	// Setup form information	$forum_page['frm_info'] = array(		'<li class="warn"><span>'.$lang_profile['Delete warning'].'</span></li>',		'<li class="warn"><span>'.$lang_profile['Delete posts info'].'</span></li>'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username'], $lang_profile['Section admin']), forum_link($forum_url['profile_admin'], $id)),		array($lang_profile['Delete user'], forum_link($forum_url['delete_user'], $id))	);	($hook = get_hook('pf_delete_user_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_delete_user_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box warn-box">			<ul class="info-list">				<?php echo implode("\n\t\t\t\t", $forum_page['frm_info'])."\n" ?>			</ul>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_delete_user_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Delete posts'] ?></span> <?php printf($lang_profile['Delete posts label'], forum_htmlencode($user['username'])) ?></label>					</div>				</div><?php ($hook = get_hook('pf_delete_user_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_delete_user_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_user_comply" value="<?php echo $lang_common['Submit'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('pf_delete_user_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if ($action == 'delete_avatar'){	// Make sure we are allowed to delete this user's avatar	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('delete_avatar'.$id.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('pf_delete_avatar_selected')) ? eval($hook) : null;	delete_avatar($id);	// Add flash message	$forum_flash->add_info($lang_profile['Avatar deleted redirect']);	($hook = get_hook('pf_delete_avatar_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_avatar'], $id), $lang_profile['Avatar deleted redirect']);}else if (isset($_POST['update_group_membership'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_change_group_form_submitted')) ? eval($hook) : null;	$new_group_id = intval($_POST['group_id']);	$query = array(		'UPDATE'	=> 'users',		'SET'		=> 'group_id='.$new_group_id,		'WHERE'		=> 'id='.$id	);	($hook = get_hook('pf_change_group_qr_update_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$query = array(		'SELECT'	=> 'g.g_moderator',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$new_group_id	);	($hook = get_hook('pf_change_group_qr_check_new_group_mod')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$new_group_mod = $forum_db->result($result);	// If the user was a moderator or an administrator (and no longer is), we remove him/her from the moderator list in all forums	if (($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1') && $new_group_id != FORUM_ADMIN && $new_group_mod != '1')		clean_forum_moderators();	// Add flash message	$forum_flash->add_info($lang_profile['Group membership redirect']);	($hook = get_hook('pf_change_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Group membership redirect']);}else if (isset($_POST['update_forums'])){	if ($forum_user['g_id'] != FORUM_ADMIN)		message($lang_common['No permission']);	($hook = get_hook('pf_forum_moderators_form_submitted')) ? eval($hook) : null;	$moderator_in = (isset($_POST['moderator_in'])) ? array_keys($_POST['moderator_in']) : array();	// Loop through all forums	$query = array(		'SELECT'	=> 'f.id, f.moderators',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('pf_forum_moderators_qr_get_all_forum_mods')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();		// If the user should have moderator access (and he/she doesn't already have it)		if (in_array($cur_forum['id'], $moderator_in) && !in_array($id, $cur_moderators))		{			$cur_moderators[$user['username']] = $id;			ksort($cur_moderators);		}		// If the user shouldn't have moderator access (and he/she already has it)		else if (!in_array($cur_forum['id'], $moderator_in) && in_array($id, $cur_moderators))			unset($cur_moderators[$user['username']]);		$cur_moderators = (!empty($cur_moderators)) ? '\''.$forum_db->escape(serialize($cur_moderators)).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'moderators='.$cur_moderators,			'WHERE'		=> 'id='.$cur_forum['id']		);		($hook = get_hook('pf_forum_moderators_qr_update_forum_moderators')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Add flash message	$forum_flash->add_info($lang_profile['Moderate forums redirect']);	($hook = get_hook('pf_forum_moderators_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['profile_admin'], $id), $lang_profile['Moderate forums redirect']);}else if (isset($_POST['ban'])){	if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission']);	($hook = get_hook('pf_ban_user_selected')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id, $lang_profile['Ban redirect']);}else if (isset($_POST['form_sent'])){	// Make sure we are allowed to edit this user's profile	if ($forum_user['id'] != $id &&		$forum_user['g_id'] != FORUM_ADMIN &&		($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		message($lang_common['No permission']);	($hook = get_hook('pf_change_details_form_submitted')) ? eval($hook) : null;	// Extract allowed elements from $_POST['form']	function extract_elements($allowed_elements)	{		$form = array();		foreach ($_POST['form'] as $key => $value)		{			if (in_array($key, $allowed_elements))				$form[$key] = $value;		}		return $form;	}	$username_updated = false;	// Validate input depending on section	switch ($section)	{		case 'identity':		{			$form = extract_elements(array('realname', 'url', 'location', 'jabber', 'icq', 'msn', 'aim', 'yahoo', 'facebook', 'twitter', 'linkedin', 'skype'));			($hook = get_hook('pf_change_details_identity_validation')) ? eval($hook) : null;			if ($forum_user['is_admmod'])			{				// Are we allowed to change usernames?				if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_rename_users'] == '1'))				{					$form['username'] = forum_trim($_POST['req_username']);					$old_username = forum_trim($_POST['old_username']);					// Validate the new username					$errors = array_merge($errors, validate_username($form['username'], $id));					if ($form['username'] != $old_username)						$username_updated = true;				}				// We only allow administrators to update the post count				if ($forum_user['g_id'] == FORUM_ADMIN)					$form['num_posts'] = intval($_POST['num_posts']);			}			if ($forum_user['is_admmod'])			{				if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/email.php';				// Validate the email-address				$form['email'] = strtolower(forum_trim($_POST['req_email']));				if (!is_valid_email($form['email']))					$errors[] = $lang_common['Invalid e-mail'];			}			if ($forum_user['is_admmod'])				$form['admin_note'] = forum_trim($_POST['admin_note']);			if ($forum_user['g_id'] == FORUM_ADMIN)				$form['title'] = forum_trim($_POST['title']);			else if ($forum_user['g_set_title'] == '1')			{				$form['title'] = forum_trim($_POST['title']);				if ($form['title'] != '')				{					// A list of words that the title may not contain					// If the language is English, there will be some duplicates, but it's not the end of the world					$forbidden = array('Member', 'Moderator', 'Administrator', 'Banned', 'Guest', $lang_common['Member'], $lang_common['Moderator'], $lang_common['Administrator'], $lang_common['Banned'], $lang_common['Guest']);					if (in_array($form['title'], $forbidden))						$errors[] = $lang_profile['Forbidden title'];				}			}			// Add http:// if the URL doesn't contain it or https:// already			if ($form['url'] != '' && strpos(strtolower($form['url']), 'http://') !== 0  && strpos(strtolower($form['url']), 'https://') !== 0)				$form['url'] = 'http://'.$form['url'];			// If the ICQ UIN contains anything other than digits it's invalid			if ($form['icq'] != '' && !ctype_digit($form['icq']))				$errors[] = $lang_profile['Bad ICQ'];			break;		}		case 'settings':		{			$form = extract_elements(array('dst', 'timezone', 'language', 'email_setting', 'notify_with_post', 'auto_notify', 'time_format', 'date_format', 'disp_topics', 'disp_posts', 'show_smilies', 'show_img', 'show_img_sig', 'show_avatars', 'show_sig', 'style'));			($hook = get_hook('pf_change_details_settings_validation')) ? eval($hook) : null;			$form['dst'] = (isset($form['dst'])) ? 1 : 0;			$form['time_format'] = (isset($form['time_format'])) ? intval($form['time_format']) : 0;			$form['date_format'] = (isset($form['date_format'])) ? intval($form['date_format']) : 0;			$form['timezone'] = (isset($form['timezone'])) ? floatval($form['timezone']) : $forum_config['o_default_timezone'];			// Validate timezone			if (($form['timezone'] > 14.0) || ($form['timezone'] < -12.0)) {				message($lang_common['Bad request']);			}			$form['email_setting'] = intval($form['email_setting']);			if ($form['email_setting'] < 0 || $form['email_setting'] > 2) $form['email_setting'] = 1;			if ($forum_config['o_subscriptions'] == '1')			{				if (!isset($form['notify_with_post']) || $form['notify_with_post'] != '1') $form['notify_with_post'] = '0';				if (!isset($form['auto_notify']) || $form['auto_notify'] != '1') $form['auto_notify'] = '0';			}			// Make sure we got a valid language string			if (isset($form['language']))			{				$form['language'] = preg_replace('#[\.\\\/]#', '', $form['language']);				if (!file_exists(FORUM_ROOT.'lang/'.$form['language'].'/common.php'))					message($lang_common['Bad request']);			}			if ($form['disp_topics'] != '' && intval($form['disp_topics']) < 3) $form['disp_topics'] = 3;			if ($form['disp_topics'] != '' && intval($form['disp_topics']) > 75) $form['disp_topics'] = 75;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) < 3) $form['disp_posts'] = 3;			if ($form['disp_posts'] != '' && intval($form['disp_posts']) > 75) $form['disp_posts'] = 75;			if (!isset($form['show_smilies']) || $form['show_smilies'] != '1') $form['show_smilies'] = '0';			if (!isset($form['show_img']) || $form['show_img'] != '1') $form['show_img'] = '0';			if (!isset($form['show_img_sig']) || $form['show_img_sig'] != '1') $form['show_img_sig'] = '0';			if (!isset($form['show_avatars']) || $form['show_avatars'] != '1') $form['show_avatars'] = '0';			if (!isset($form['show_sig']) || $form['show_sig'] != '1') $form['show_sig'] = '0';			// Make sure we got a valid style string			if (isset($form['style']))			{				$form['style'] = preg_replace('#[\.\\\/]#', '', $form['style']);				if (!file_exists(FORUM_ROOT.'style/'.$form['style'].'/'.$form['style'].'.php'))					message($lang_common['Bad request']);			}			break;		}		case 'signature':		{			if ($forum_config['o_signatures'] == '0')				message($lang_profile['Signatures disabled']);			($hook = get_hook('pf_change_details_signature_validation')) ? eval($hook) : null;			// Clean up signature from POST			$form['signature'] = forum_linebreaks(forum_trim($_POST['signature']));			// Validate signature			if (utf8_strlen($form['signature']) > $forum_config['p_sig_length'])				$errors[] = sprintf($lang_profile['Sig too long'], forum_number_format($forum_config['p_sig_length']), forum_number_format(utf8_strlen($form['signature']) - $forum_config['p_sig_length']));			if (substr_count($form['signature'], "\n") > ($forum_config['p_sig_lines'] - 1))				$errors[] = sprintf($lang_profile['Sig too many lines'], forum_number_format($forum_config['p_sig_lines']));			if ($form['signature'] != '' && $forum_config['p_sig_all_caps'] == '0' && check_is_all_caps($form['signature']) && !$forum_user['is_admmod'])				$form['signature'] = utf8_ucwords(utf8_strtolower($form['signature']));			// Validate BBCode syntax			if ($forum_config['p_sig_bbcode'] == '1' || $forum_config['o_make_links'] == '1')			{				if (!defined('FORUM_PARSER_LOADED'))					require FORUM_ROOT.'include/parser.php';				$form['signature'] = preparse_bbcode($form['signature'], $errors, true);			}			break;		}		case 'avatar':		{			if ($forum_config['o_avatars'] == '0')				message($lang_profile['Avatars disabled']);			($hook = get_hook('pf_change_details_avatar_validation')) ? eval($hook) : null;			if (!isset($_FILES['req_file']))			{				$errors[] = $lang_profile['No file'];				break;			}			else				$uploaded_file = $_FILES['req_file'];			// Make sure the upload went smooth			if (isset($uploaded_file['error']) && empty($errors))			{				switch ($uploaded_file['error'])				{					case 1:	// UPLOAD_ERR_INI_SIZE					case 2:	// UPLOAD_ERR_FORM_SIZE						$errors[] = $lang_profile['Too large ini'];						break;					case 3:	// UPLOAD_ERR_PARTIAL						$errors[] = $lang_profile['Partial upload'];						break;					case 4:	// UPLOAD_ERR_NO_FILE						$errors[] = $lang_profile['No file'];						break;					case 6:	// UPLOAD_ERR_NO_TMP_DIR						$errors[] = $lang_profile['No tmp directory'];						break;					default:						// No error occured, but was something actually uploaded?						if ($uploaded_file['size'] == 0)							$errors[] = $lang_profile['No file'];						break;				}			}			if (is_uploaded_file($uploaded_file['tmp_name']) && empty($errors))			{				$allowed_types = array(IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_GIF);				($hook = get_hook('pf_change_details_avatar_allowed_types')) ? eval($hook) : null;				list($width, $height, $type,) = @/**/getimagesize($uploaded_file['tmp_name']);				if (!in_array($type, $allowed_types))					$errors[] = $lang_profile['Bad type'];				else				{					// Make sure the file isn't too big					if ($uploaded_file['size'] > $forum_config['o_avatars_size'])						$errors[] = sprintf($lang_profile['Too large'], forum_number_format($forum_config['o_avatars_size']));				}				if (empty($errors))				{					// Determine type					$extension = null;					$avatar_type = FORUM_AVATAR_NONE;					if ($type == IMAGETYPE_GIF)					{						$extension = '.gif';						$avatar_type = FORUM_AVATAR_GIF;					}					else if ($type == IMAGETYPE_JPEG)					{						$extension = '.jpg';						$avatar_type = FORUM_AVATAR_JPG;					}					else if ($type == IMAGETYPE_PNG)					{						$extension = '.png';						$avatar_type = FORUM_AVATAR_PNG;					}					($hook = get_hook('pf_change_details_avatar_determine_extension')) ? eval($hook) : null;					// Move the file to the avatar directory. We do this before checking the width/height to circumvent open_basedir restrictions.					if (!@move_uploaded_file($uploaded_file['tmp_name'], $forum_config['o_avatars_dir'].'/'.$id.'.tmp'))						$errors[] = sprintf($lang_profile['Move failed'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>');					if (empty($errors))					{						($hook = get_hook('pf_change_details_avatar_modify_size')) ? eval($hook) : null;						// Now check the width/height						if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = sprintf($lang_profile['Too wide or high'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height']);						}						else if ($type == 1 && $uploaded_file['type'] != 'image/gif')	// Prevent dodgy uploads						{							@unlink($forum_config['o_avatars_dir'].'/'.$id.'.tmp');							$errors[] = $lang_profile['Bad type'];						}						($hook = get_hook('pf_change_details_avatar_validate_file')) ? eval($hook) : null;						if (empty($errors))						{							// Delete any old avatars							delete_avatar($id);							// Put the new avatar in its place							@rename($forum_config['o_avatars_dir'].'/'.$id.'.tmp', $forum_config['o_avatars_dir'].'/'.$id.$extension);							@chmod($forum_config['o_avatars_dir'].'/'.$id.$extension, 0644);							// Avatar							$avatar_width = (intval($width) > 0) ? intval($width) : 0;							$avatar_height = (intval($height) > 0) ? intval($height) : 0;							// Save to DB							$query = array(								'UPDATE'	=> 'users',								'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$avatar_height.'\', avatar_width=\''.$avatar_width.'\'',								'WHERE'		=> 'id='.$id							);							($hook = get_hook('pf_change_details_avatar_qr_update_avatar')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);							// Update avatar info							$user['avatar'] = $avatar_type;							$user['avatar_width'] = $width;							$user['avatar_height'] = $height;						}					}				}			}			else if (empty($errors))				$errors[] = $lang_profile['Unknown failure'];			break;		}		default:		{			($hook = get_hook('pf_change_details_new_section_validation')) ? eval($hook) : null;			break;		}	}	$skip_db_update_sections = array('avatar');	($hook = get_hook('pf_change_details_pre_database_validation')) ? eval($hook) : null;	// All sections apart from avatar potentially affect the database	if (!in_array($section, $skip_db_update_sections) && empty($errors))	{		($hook = get_hook('pf_change_details_database_validation')) ? eval($hook) : null;		// Singlequotes around non-empty values and NULL for empty values		$new_values = array();		foreach ($form as $key => $input)		{			$value = ($input !== '') ? '\''.$forum_db->escape($input).'\'' : 'NULL';			$new_values[] = $key.'='.$value;		}		// Make sure we have something to update		if (empty($new_values))			message($lang_common['Bad request']);		// Run the update		$query = array(			'UPDATE'	=> 'users',			'SET'		=> implode(',', $new_values),			'WHERE'		=> 'id='.$id		);		($hook = get_hook('pf_change_details_qr_update_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If we changed the username we have to update some stuff		if ($username_updated)		{			($hook = get_hook('pf_change_details_username_changed')) ? eval($hook) : null;			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster_id='.$id			);			($hook = get_hook('pf_change_details_qr_update_posts_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_topics_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forums',				'SET'		=> 'last_poster=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'last_poster=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_forums_last_poster')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'online',				'SET'		=> 'ident=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'ident=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_online_ident')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'edited_by=\''.$forum_db->escape($form['username']).'\'',				'WHERE'		=> 'edited_by=\''.$forum_db->escape($old_username).'\''			);			($hook = get_hook('pf_change_details_qr_update_posts_edited_by')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// If the user is a moderator or an administrator we have to update the moderator lists and bans cache			if ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')			{				$query = array(					'SELECT'	=> 'f.id, f.moderators',					'FROM'		=> 'forums AS f'				);				($hook = get_hook('pf_change_details_qr_get_all_forum_mods')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_forum = $forum_db->fetch_assoc($result))				{					$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();					if (in_array($id, $cur_moderators))					{						unset($cur_moderators[$old_username]);						$cur_moderators[$form['username']] = $id;						ksort($cur_moderators);						$query = array(							'UPDATE'	=> 'forums',							'SET'		=> 'moderators=\''.$forum_db->escape(serialize($cur_moderators)).'\'',							'WHERE'		=> 'id='.$cur_forum['id']						);						($hook = get_hook('pf_change_details_qr_update_forum_moderators')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}				}				// Regenerate the bans cache				if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))					require FORUM_ROOT.'include/cache.php';				generate_bans_cache();			}		}		// Add flash message		$forum_flash->add_info($lang_profile['Profile redirect']);		($hook = get_hook('pf_change_details_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['profile_'.$section], $id), $lang_profile['Profile redirect']);	}}($hook = get_hook('pf_new_action')) ? eval($hook) : null;if ($user['signature'] != ''){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$parsed_signature = parse_signature($user['signature']);}// View or edit?if ($forum_user['id'] != $id &&	$forum_user['g_id'] != FORUM_ADMIN &&	($forum_user['g_moderator'] != '1' || $forum_user['g_mod_edit_users'] == '0' || $user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1')){	// Setup user identification	$forum_page['user_ident'] = array();	($hook = get_hook('pf_view_details_selected')) ? eval($hook) : null;	$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';	if ($forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		if (!empty($forum_page['avatar_markup']))			$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';	}	$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';	// Setup user information	$forum_page['user_info'] = array();	if ($user['realname'] !='')		$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';	if ($user['location'] !='')		$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';	$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';	$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>';	if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])		$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';	// Setup user address	$forum_page['user_contact'] = array();	if ($user['email_setting'] == '0' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';	if ($user['email_setting'] != '2' && !$forum_user['is_guest'] && $forum_user['g_send_email'] == '1')		$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';	if ($user['url'] != '')	{		$url_source = $user['url'];		// IDNA?		// Load the IDNA class for international url handling		require_once FORUM_ROOT.'include/idna/idna_convert.class.php';		if (defined('FORUM_SUPPORT_PCRE_UNICODE'))		{			$idn = new idna_convert();			$idn->set_parameter('encoding', 'utf8');			$idn->set_parameter('strict', false);			if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))			{				$user['url'] = $idn->decode($url_source);			}			else			{				$url_source = $idn->encode($url_source);			}		}		if ($forum_config['o_censoring'] == '1')			$user['url'] = censor_words($user['url']);		$url_source = forum_htmlencode($url_source);		$user['url'] = forum_htmlencode($user['url']);		$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';		$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';	}	if ($user['jabber'] !='')		$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';	if ($user['icq'] !='')		$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong> '.forum_htmlencode($user['icq']).'</strong></span></li>';	if ($user['msn'] !='')		$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';	if ($user['aim'] !='')		$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';	if ($user['yahoo'] !='')		$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';	// Setup signature demo	if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))		$forum_page['sig_demo'] = $parsed_signature;	// Setup search links	if ($forum_user['g_search'] == '1')	{		$forum_page['user_activity'] = array();		$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.sprintf($lang_profile['View user posts'], forum_htmlencode($user['username'])).'</a></li>';		$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.sprintf($lang_profile['View user topics'], forum_htmlencode($user['username'])).'</a></li>';	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	($hook = get_hook('pf_view_details_pre_header_load')) ? eval($hook) : null;	define('FORUM_ALLOW_INDEX', 1);	define('FORUM_PAGE', 'profile');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('pf_view_details_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php ($hook = get_hook('pf_view_details_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_view_details_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_view_details_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_activity_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h3>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php endif; ($hook = get_hook('pf_view_details_pre_user_sig_info')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h3>					<div class="sig-demo"><?php echo $forum_page['sig_demo']."\n" ?></div>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_view_details_user_info_end')) ? eval($hook) : null; ?>	</div><?php	($hook = get_hook('pf_view_details_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else{	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id))	);	// Is this users own profile	$forum_page['own_profile'] = ($forum_user['id'] == $id) ? true : false;	// Setup navigation menu	$forum_page['main_menu'] = array();	$forum_page['main_menu']['about'] = '<li class="first-item'.(($section == 'about')  ? ' active' : '').'"><a href="'.forum_link($forum_url['profile_about'], $id).'"><span>'.$lang_profile['Section about'].'</span></a></li>';	$forum_page['main_menu']['identity'] = '<li'.(($section == 'identity')  ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_identity'], $id).'"><span>'.$lang_profile['Section identity'].'</span></a></li>';	$forum_page['main_menu']['settings'] = '<li'.(($section == 'settings') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_settings'], $id).'"><span>'.$lang_profile['Section settings'].'</span></a></li>';	if ($forum_config['o_signatures'] == '1')		$forum_page['main_menu']['signature'] = '<li'.(($section == 'signature') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_signature'], $id).'"><span>'.$lang_profile['Section signature'].'</span></a></li>';	if ($forum_config['o_avatars'] == '1')		$forum_page['main_menu']['avatar'] = '<li'.(($section == 'avatar') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_avatar'], $id).'"><span>'.$lang_profile['Section avatar'].'</span></a></li>';	if ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_ban_users'] == '1' && !$forum_page['own_profile']))		$forum_page['main_menu']['admin'] = '<li'.(($section == 'admin') ? ' class="active"' : '').'><a href="'.forum_link($forum_url['profile_admin'], $id).'"><span>'.$lang_profile['Section admin'].'</span></a></li>';	($hook = get_hook('pf_change_details_modify_main_menu')) ? eval($hook) : null;	// End navigation menu	if ($section == 'about')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array(sprintf($lang_profile['Section about']), forum_link($forum_url['profile_about'], $id)),		);		// Setup user identification		$forum_page['user_ident'] = array();		($hook = get_hook('pf_change_details_about_selected')) ? eval($hook) : null;		$forum_page['user_ident']['username'] = '<li class="username'.(($user['realname'] =='') ? ' fn nickname' :  ' nickname').'"><strong>'.forum_htmlencode($user['username']).'</strong></li>';		if ($forum_config['o_avatars'] == '1')		{			$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);			if (!empty($forum_page['avatar_markup']))				$forum_page['user_ident']['avatar'] = '<li class="useravatar">'.$forum_page['avatar_markup'].'</li>';		}		$forum_page['user_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($user).'</span></li>';		// Create array for private information		$forum_page['user_private'] = array();		// Setup user information		$forum_page['user_info'] = array();		if ($user['realname'] !='')			$forum_page['user_info']['realname'] = '<li><span>'.$lang_profile['Realname'].': <strong class="fn">'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</strong></span></li>';		if ($user['location'] !='')			$forum_page['user_info']['location'] = '<li><span>'.$lang_profile['From'].': <strong> '.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</strong></span></li>';		$forum_page['user_info']['registered'] = '<li><span>'.$lang_profile['Registered'].': <strong> '.format_time($user['registered'], 1).'</strong></span></li>';		$forum_page['user_info']['lastvisit'] = '<li><span>'.$lang_profile['Last visit'].': <strong> '.format_time($user['last_visit']).'</strong></span></li>';		$forum_page['user_info']['lastpost'] = '<li><span>'.$lang_profile['Last post'].': <strong> '.format_time($user['last_post']).'</strong></span></li>'; 		if ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod'])			$forum_page['user_info']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		else			$forum_page['user_private']['posts'] = '<li><span>'.$lang_profile['Posts'].': <strong>'.forum_number_format($user['num_posts']).'</strong></span></li>';		if ($forum_user['is_admmod'] && $user['admin_note'] != '')			$forum_page['user_private']['note'] = '<li><span>'.$lang_profile['Note'].': <strong>'.forum_htmlencode($user['admin_note']).'</strong></span></li>';		// Setup user address		$forum_page['user_contact'] = array();		if (($user['email_setting'] == '0' && !$forum_user['is_guest']) && $forum_user['g_send_email'] == '1')			$forum_page['user_contact']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		else if ($forum_page['own_profile'] || $forum_user['is_admmod'])				$forum_page['user_private']['email'] = '<li><span>'.$lang_profile['E-mail'].': <a href="mailto:'.forum_htmlencode($user['email']).'" class="email">'.forum_htmlencode(($forum_config['o_censoring'] == '1' ? censor_words($user['email']) : $user['email'])).'</a></span></li>';		if ($user['email_setting'] != '2')			$forum_page['user_contact']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		else if ($forum_user['id'] == $id || ($forum_user['is_admmod'] && $user['email_setting'] == '2'))			$forum_page['user_private']['forum-mail'] = '<li><span>'.$lang_profile['E-mail'].': <a href="'.forum_link($forum_url['email'], $id).'">'.$lang_profile['Send forum e-mail'].'</a></span></li>';		// Website		if ($user['url'] != '')		{			$url_source = $user['url'];			// IDNA?			// Load the IDNA class for international url handling			require_once FORUM_ROOT.'include/idna/idna_convert.class.php';			if (defined('FORUM_SUPPORT_PCRE_UNICODE'))			{				$idn = new idna_convert();				$idn->set_parameter('encoding', 'utf8');				$idn->set_parameter('strict', false);				if (preg_match('!^(https?|ftp|news){1}'.preg_quote('://xn--', '!').'!', $url_source))				{					$user['url'] = $idn->decode($url_source);				}				else				{					$url_source = $idn->encode($url_source);				}			}			if ($forum_config['o_censoring'] == '1')				$user['url'] = censor_words($user['url']);			$url_source = forum_htmlencode($url_source);			$user['url'] = forum_htmlencode($user['url']);			$forum_page['url'] = '<a href="'.$url_source.'" class="external url" rel="me">'.$user['url'].'</a>';			$forum_page['user_contact']['website'] = '<li><span>'.$lang_profile['Website'].': '.$forum_page['url'].'</span></li>';		}		// Facebook		if ($user['facebook'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['facebook'] = censor_words($user['facebook']);			}			$facebook_url = (strpos($user['facebook'], 'http') === 0) ? forum_htmlencode($user['facebook']) : forum_htmlencode('https://www.facebook.com/'.$user['facebook']);			$forum_page['facebook'] = '<a href="'.$facebook_url.'" class="external url">'.$facebook_url.'</a>';			$forum_page['user_contact']['facebook'] = '<li><span>'.$lang_profile['Facebook'].': '.$forum_page['facebook'].'</span></li>';		}		// Twitter		if ($user['twitter'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['twitter'] = censor_words($user['twitter']);			}			$twitter_url = (strpos($user['twitter'], 'http') === 0) ? forum_htmlencode($user['twitter']) : forum_htmlencode('https://twitter.com/'.$user['twitter']);			$forum_page['twitter'] = '<a href="'.$twitter_url.'" class="external url">'.$twitter_url.'</a>';			$forum_page['user_contact']['twitter'] = '<li><span>'.$lang_profile['Twitter'].': '.$forum_page['twitter'].'</span></li>';		}		// LinkedIn		if ($user['linkedin'] != '')		{			if ($forum_config['o_censoring'] == '1')			{				$user['linkedin'] = censor_words($user['linkedin']);			}			$linkedin_url = forum_htmlencode($user['linkedin']);			$forum_page['linkedin'] = '<a href="'.$linkedin_url.'" class="external url" rel="me">'.$linkedin_url.'</a>';			$forum_page['user_contact']['linkedin'] = '<li><span>'.$lang_profile['LinkedIn'].': '.$forum_page['linkedin'].'</span></li>';		}		if ($forum_user['is_admmod'])			$forum_page['user_private']['ip']= '<li><span>'.$lang_profile['IP'].': <a href="'.forum_link($forum_url['get_host'], forum_htmlencode($user['registration_ip'])).'">'.forum_htmlencode($user['registration_ip']).'</a></span></li>';		// Setup user messaging		if ($user['jabber'] !='')			$forum_page['user_contact']['jabber'] = '<li><span>'.$lang_profile['Jabber'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</strong></span></li>';		if ($user['skype'] !='')			$forum_page['user_contact']['skype'] = '<li><span>'.$lang_profile['Skype'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['skype']) : $user['skype']).'</strong></span></li>';		if ($user['icq'] !='')			$forum_page['user_contact']['icq'] = '<li><span>'.$lang_profile['ICQ'].': <strong>'.forum_htmlencode($user['icq']).'</strong></span></li>';		if ($user['msn'] !='')			$forum_page['user_contact']['msn'] = '<li><span>'.$lang_profile['MSN'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</strong></span></li>';		if ($user['aim'] !='')			$forum_page['user_contact']['aim'] = '<li><span>'.$lang_profile['AOL IM'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</strong></span></li>';		if ($user['yahoo'] !='')			$forum_page['user_contact']['yahoo'] = '<li><span>'.$lang_profile['Yahoo'].': <strong>'.forum_htmlencode(($forum_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</strong></span></li>';		// Setup signature demo		if ($forum_config['o_signatures'] == '1' && isset($parsed_signature))			$forum_page['sig_demo'] = $parsed_signature;		// Setup search links		$forum_page['user_activity'] = array();		if ($forum_user['g_search'] == '1' || $forum_user['is_admmod'])		{			$forum_page['user_activity']['search_posts'] = '<li class="first-item"><a href="'.forum_link($forum_url['search_user_posts'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your posts'] : sprintf($lang_profile['View user posts'], forum_htmlencode($user['username']))).'</a></li>';			$forum_page['user_activity']['search_topics'] = '<li><a href="'.forum_link($forum_url['search_user_topics'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your topics'] : sprintf($lang_profile['View user topics'], forum_htmlencode($user['username']))).'</a></li>';		}		if (($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN) && $forum_config['o_subscriptions'] == '1')			 $forum_page['user_activity']['search_subs'] = '<li'.(empty($forum_page['user_activity']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_subscriptions'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['View your subscriptions'] : sprintf($lang_profile['View user subscriptions'], forum_htmlencode($user['username']))).'</a></li>';		// Setup user options		$forum_page['user_options'] = array();		if ($forum_page['own_profile'] || $forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && $forum_user['g_mod_change_passwords'] == '1'))			$forum_page['user_options']['change_password'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_password'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your password'] : sprintf($lang_profile['Change user password'], forum_htmlencode($user['username']))).'</a></span>';		if (!$forum_user['is_admmod'])			$forum_page['user_options']['change_email'] = '<span'.(empty($forum_page['user_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['change_email'], $id).'">'.(($forum_page['own_profile']) ? $lang_profile['Change your e-mail'] : sprintf($lang_profile['Change user e-mail'], forum_htmlencode($user['username']))).'</a></span>';		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		($hook = get_hook('pf_change_details_about_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-about');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_about_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_user['id'] == $id) ? $lang_profile['Profile welcome'] : $lang_profile['Profile welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<p class="content-options options"><?php echo implode(' ', $forum_page['user_options']) ?></p><?php ($hook = get_hook('pf_change_details_about_pre_user_info')) ? eval($hook) : null; ?>		<div class="profile ct-group data-group vcard"><?php ($hook = get_hook('pf_change_details_about_pre_user_ident_info')) ? eval($hook) : null; ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<ul class="user-ident ct-legend">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_ident']) ?>					</ul>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_info'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_contact_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_contact'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Contact info'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_contact'])."\n" ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_activity_info')) ? eval($hook) : null; ?><?php endif; if (!empty($forum_page['user_activity'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Posts and topics'] ?></span></h4>					<ul class="data-box">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_activity']) ?>					</ul>				</div>			</div><?php ($hook = get_hook('pf_change_details_about_pre_user_sig_info')) ? eval($hook) : null; ?><?php endif; if (isset($forum_page['sig_demo'])): ?>			<div class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h4 class="ct-legend hn"><span><?php echo $lang_profile['Current signature'] ?></span></h4>					<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>				</div>			</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_about_pre_user_private_info')) ? eval($hook) : null; ?><?php if (!empty($forum_page['user_private'])): ?>			<div id="private-profile" class="ct-set data-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box data-box">					<h3 class="ct-legend hn"><span><?php echo $lang_profile['Private info'] ?></span></h3>					<ul class="data-list">						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['user_private'])."\n" ?>					</ul>				</div>			</div><?php endif; ?>		</div><?php ($hook = get_hook('pf_change_details_about_user_info_end')) ? eval($hook) : null; ?>	</div><?php		($hook = get_hook('pf_change_details_about_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'identity')	{		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section identity'],forum_link($forum_url['profile_identity'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_identity'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1'))			$forum_page['hidden_fields']['old_username'] = '<input type="hidden" name="old_username" value="'.forum_htmlencode($user['username']).'" />';		// Does the form have required fields		$forum_page['has_required'] = ((($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')) || $forum_user['is_admmod']) ? true : false);		($hook = get_hook('pf_change_details_identity_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-identity');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_identity_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Identity welcome'] : $lang_profile['Identity welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();			foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('pf_change_details_identity_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}if ($forum_page['has_required']): ?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div><?php endif; ?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php if ($forum_page['has_required']): ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_common['Required information'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_username')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod'] && ($forum_user['g_id'] == FORUM_ADMIN || $forum_user['g_mod_rename_users'] == '1')): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Username'] ?></span> <small><?php echo $lang_profile['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo(isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : forum_htmlencode($user['username'])) ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_email')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['E-mail'] ?></span> <small><?php echo $lang_profile['E-mail help'] ?></small></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_email" value="<?php echo(isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : forum_htmlencode($user['email'])) ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_req_info_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_req_info_fieldset_end')) ? eval($hook) : null; ?><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Personal legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_realname')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Realname'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[realname]" value="<?php echo(isset($form['realname']) ? forum_htmlencode($form['realname']) : forum_htmlencode($user['realname'])) ?>" size="35" maxlength="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_title')) ? eval($hook) : null; ?><?php if ($forum_user['g_set_title'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Title'] ?></span><small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="title" value="<?php echo(isset($_POST['title']) ? forum_htmlencode($_POST['title']) : forum_htmlencode($user['title'])) ?>" size="35" maxlength="50" /></span><br />					</div>				</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_identity_pre_location')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Location'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[location]" value="<?php echo((isset($form['location']) ? forum_htmlencode($form['location']) : forum_htmlencode($user['location']))) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_admin_note')) ? eval($hook) : null; ?><?php if ($forum_user['is_admmod']): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Admin note'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="admin_note" value="<?php echo(isset($_POST['admin_note']) ? forum_htmlencode($_POST['admin_note']) : forum_htmlencode($user['admin_note'])) ?>" size="35" maxlength="30" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_num_posts')) ? eval($hook) : null; ?><?php if ($forum_user['g_id'] == FORUM_ADMIN): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Edit count'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="num_posts" value="<?php echo $user['num_posts'] ?>" size="8" maxlength="8" /></span>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_identity_pre_personal_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_personal_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Website'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[url]" value="<?php echo(isset($form['url']) ? forum_htmlencode($form['url']) : forum_htmlencode($user['url'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_facebook')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Facebook'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[facebook]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['facebook']) ? forum_htmlencode($form['facebook']) : forum_htmlencode($user['facebook'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_twitter')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Twitter'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[twitter]" placeholder="<?php echo $lang_profile['Name or Url'] ?>" value="<?php echo(isset($form['twitter']) ? forum_htmlencode($form['twitter']) : forum_htmlencode($user['twitter'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_linkedin')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['LinkedIn'] ?></span></label><br />						<span class="fld-input"><input type="url" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[linkedin]" value="<?php echo(isset($form['linkedin']) ? forum_htmlencode($form['linkedin']) : forum_htmlencode($user['linkedin'])) ?>" size="35" maxlength="80" /></span>					</div>				</div>			</fieldset>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Contact messengers legend'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_identity_pre_jabber')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Jabber'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="form[jabber]" value="<?php echo(isset($form['jabber']) ? forum_htmlencode($form['jabber']) : forum_htmlencode($user['jabber'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_skype')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Skype'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[skype]" value="<?php echo(isset($form['skype']) ? forum_htmlencode($form['skype']) : forum_htmlencode($user['skype'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_msn')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['MSN'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[msn]" value="<?php echo(isset($form['msn']) ? forum_htmlencode($form['msn']) : forum_htmlencode($user['msn'])) ?>" size="35" maxlength="80" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_icq')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['ICQ'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[icq]" value="<?php echo(isset($form['icq']) ? forum_htmlencode($form['icq']) : $user['icq']) ?>" size="20" maxlength="12" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_aim')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['AOL IM'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[aim]" value="<?php echo(isset($form['aim']) ? forum_htmlencode($form['aim']) : forum_htmlencode($user['aim'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_yahoo')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Yahoo'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="form[yahoo]" value="<?php echo(isset($form['yahoo']) ? forum_htmlencode($form['yahoo']) : forum_htmlencode($user['yahoo'])) ?>" size="20" maxlength="30" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_identity_pre_contact_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_identity_contact_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_identity_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'settings')	{		$forum_page['styles'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'style');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'style/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'style/'.$forum_page['entry'].'/'.$forum_page['entry'].'.php'))				$forum_page['styles'][] = $forum_page['entry'];		}		$forum_page['d']->close();		$forum_page['languages'] = array();		$forum_page['d'] = dir(FORUM_ROOT.'lang');		while (($forum_page['entry'] = $forum_page['d']->read()) !== false)		{			if ($forum_page['entry'] != '.' && $forum_page['entry'] != '..' && is_dir(FORUM_ROOT.'lang/'.$forum_page['entry']) && file_exists(FORUM_ROOT.'lang/'.$forum_page['entry'].'/common.php'))				$forum_page['languages'][] = $forum_page['entry'];		}		$forum_page['d']->close();		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section settings'],forum_link($forum_url['profile_settings'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_settings'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		($hook = get_hook('pf_change_details_settings_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-settings');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_settings_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Settings welcome'] : $lang_profile['Settings welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action']  ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Local settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_language')) ? eval($hook) : null;		// Only display the language selection box if there's more than one language available		if (count($forum_page['languages']) > 1)		{			natcasesort($forum_page['languages']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Language'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[language]"><?php			foreach ($forum_page['languages'] as $temp)			{				if ($forum_user['language'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_timezone')) ? eval($hook) : null;?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Timezone'] ?></span> <small><?php echo $lang_profile['Timezone info'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[timezone]">						<option value="-12"<?php if ($user['timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-12:00'] ?></option>						<option value="-11"<?php if ($user['timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-11:00'] ?></option>						<option value="-10"<?php if ($user['timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-10:00'] ?></option>						<option value="-9.5"<?php if ($user['timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:30'] ?></option>						<option value="-9"<?php if ($user['timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-09:00'] ?></option>						<option value="-8"<?php if ($user['timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-08:00'] ?></option>						<option value="-7"<?php if ($user['timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-07:00'] ?></option>						<option value="-6"<?php if ($user['timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-06:00'] ?></option>						<option value="-5"<?php if ($user['timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-05:00'] ?></option>						<option value="-4"<?php if ($user['timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-04:00'] ?></option>						<option value="-3.5"<?php if ($user['timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:30'] ?></option>						<option value="-3"<?php if ($user['timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-03:00'] ?></option>						<option value="-2"<?php if ($user['timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-02:00'] ?></option>						<option value="-1"<?php if ($user['timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC-01:00'] ?></option>						<option value="0"<?php if ($user['timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC'] ?></option>						<option value="1"<?php if ($user['timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+01:00'] ?></option>						<option value="2"<?php if ($user['timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+02:00'] ?></option>						<option value="3"<?php if ($user['timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:00'] ?></option>						<option value="3.5"<?php if ($user['timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+03:30'] ?></option>						<option value="4"<?php if ($user['timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:00'] ?></option>						<option value="4.5"<?php if ($user['timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+04:30'] ?></option>						<option value="5"<?php if ($user['timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:00'] ?></option>						<option value="5.5"<?php if ($user['timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:30'] ?></option>						<option value="5.75"<?php if ($user['timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+05:45'] ?></option>						<option value="6"<?php if ($user['timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:00'] ?></option>						<option value="6.5"<?php if ($user['timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+06:30'] ?></option>						<option value="7"<?php if ($user['timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+07:00'] ?></option>						<option value="8"<?php if ($user['timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:00'] ?></option>						<option value="8.75"<?php if ($user['timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+08:45'] ?></option>						<option value="9"<?php if ($user['timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:00'] ?></option>						<option value="9.5"<?php if ($user['timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+09:30'] ?></option>						<option value="10"<?php if ($user['timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:00'] ?></option>						<option value="10.5"<?php if ($user['timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+10:30'] ?></option>						<option value="11"<?php if ($user['timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:00'] ?></option>						<option value="11.5"<?php if ($user['timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+11:30'] ?></option>						<option value="12"<?php if ($user['timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:00'] ?></option>						<option value="12.75"<?php if ($user['timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+12:45'] ?></option>						<option value="13"<?php if ($user['timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+13:00'] ?></option>						<option value="14"<?php if ($user['timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_profile['UTC+14:00'] ?></option>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_dst_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[dst]" value="1" <?php if ($user['dst'] == 1) echo 'checked="checked" ' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['DST label'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_time_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Time format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[time_format]"><?php		foreach (array_unique($forum_time_formats) as $key => $time_format)		{			echo "\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['time_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 2, null, $time_format);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_date_format')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="legend"><?php echo $lang_profile['Date format'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[date_format]"><?php		foreach (array_unique($forum_date_formats) as $key => $date_format)		{			echo "\t\t\t\t\t\t\t".'<option value="'.$key.'"';			if ($user['date_format'] == $key)				echo ' selected="selected"';			echo '>'. format_time(time(), 1, $date_format, null, true);			if ($key == 0)				echo ' ('.$lang_profile['Default'].')';			echo "</option>\n";		}?>						</select></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_local_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_local_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Display settings'] ?></strong></legend><?php		($hook = get_hook('pf_change_details_settings_pre_style')) ? eval($hook) : null;		// Only display the style selection box if there's more than one style available		if (count($forum_page['styles']) == 1)			echo "\t\t\t\t".'<input type="hidden" name="form[style]" value="'.$forum_page['styles'][0].'" />'."\n";		else if (count($forum_page['styles']) > 1)		{			natcasesort($forum_page['styles']);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Styles'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="form[style]"><?php			foreach ($forum_page['styles'] as $temp)			{				if ($user['style'] == $temp)					echo "\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Image display'] ?></span></legend>					<div class="mf-box"><?php if ($forum_config['o_smilies'] == '1' || $forum_config['o_smilies_sig'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_smilies]" value="1"<?php if ($user['show_smilies'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show smilies'] ?></label>						</div><?php endif; if ($forum_config['o_avatars'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_avatars]" value="1"<?php if ($user['show_avatars'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show avatars'] ?></label>						</div><?php endif; if ($forum_config['p_message_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img]" value="1"<?php if ($user['show_img'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images'] ?></label>						</div><?php endif; if ($forum_config['o_signatures'] == '1' && $forum_config['p_sig_img_tag'] == '1'): ?>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_img_sig]" value="1"<?php if ($user['show_img_sig'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Show images sigs'] ?></label>						</div><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_new_image_display_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_image_display_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_pre_show_sigs_checkbox')) ? eval($hook) : null; ?><?php if ($forum_config['o_signatures'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[show_sig]" value="1"<?php if ($user['show_sig'] == '1') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Signature display'] ?></span> <?php echo $lang_profile['Show sigs'] ?></label>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_display_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_display_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Pagination settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_disp_topics')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Topics per page'] ?></span> <small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_topics]" value="<?php echo $user['disp_topics'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_disp_posts')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box sf-short text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Posts per page'] ?></span>	<small><?php echo $lang_profile['Leave blank'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="form[disp_posts]" value="<?php echo $user['disp_posts'] ?>" size="6" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_settings_pre_pagination_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_settings_pagination_fieldset_end')) ? eval($hook) : null; ?><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['E-mail and sub settings'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['E-mail settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="0"<?php if ($user['email_setting'] == '0') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 1'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="1"<?php if ($user['email_setting'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 2'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[email_setting]" value="2"<?php if ($user['email_setting'] == '2') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['E-mail setting 3'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_email_setting_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_email_settings_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_email_settings_fieldset_end')) ? eval($hook) : null; ?><?php if ($forum_config['o_subscriptions'] == '1'): ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_profile['Subscription settings'] ?></span></legend>					<div class="mf-box">						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[notify_with_post]" value="1"<?php if ($user['notify_with_post'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Notify full'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="form[auto_notify]" value="1"<?php if ($user['auto_notify'] == '1') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_profile['Subscribe by default'] ?></label>						</div><?php ($hook = get_hook('pf_change_details_settings_new_subscription_option')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('pf_change_details_settings_pre_subscription_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('pf_change_details_settings_subscription_fieldset_end')) ? eval($hook) : null; ?><?php endif; ?><?php ($hook = get_hook('pf_change_details_settings_pre_email_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php $forum_page['item_count'] = 0; ?><?php ($hook = get_hook('pf_change_details_settings_email_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_settings_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'signature' && $forum_config['o_signatures'] == '1')	{		$forum_page['sig_info'][] = '<li>'.$lang_profile['Signature info'].'</li>';		if ($user['signature'] != '')			$forum_page['sig_demo'] = $parsed_signature;		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section signature'], forum_link($forum_url['profile_signature'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_signature'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup help		$forum_page['text_options'] = array();		if ($forum_config['p_sig_bbcode'] == '1')			$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';		if ($forum_config['p_sig_img_tag'] == '1')			$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';		if ($forum_config['o_smilies_sig'] == '1')			$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';		($hook = get_hook('pf_change_details_signature_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-signature');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_signature_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Sig welcome'] : $lang_profile['Sig welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		if (!empty($forum_page['text_options']))			echo "\t\t".'<p class="content-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_signature_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Signature'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_signature_pre_signature_demo')) ? eval($hook) : null; ?><?php if (isset($forum_page['sig_demo'])): ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="ct-legend hn"><?php echo $lang_profile['Current signature'] ?></h3>						<div class="sig-demo"><?php echo $forum_page['sig_demo'] ?></div>					</div>				</div><?php endif; ($hook = get_hook('pf_change_details_signature_pre_signature_text')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Compose signature'] ?></span> <small><?php printf($lang_profile['Sig max size'], forum_number_format($forum_config['p_sig_length']), forum_number_format($forum_config['p_sig_lines'])) ?></small></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="signature" rows="4" cols="65"><?php echo(isset($_POST['signature']) ? forum_htmlencode($_POST['signature']) : forum_htmlencode($user['signature'])) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('pf_change_details_signature_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_signature_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_signature_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'avatar' && $forum_config['o_avatars'] == '1')	{		$forum_page['avatar_markup'] = generate_avatar_markup($id, $user['avatar'], $user['avatar_width'], $user['avatar_height'], $user['username'], TRUE);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section avatar'],forum_link($forum_url['profile_avatar'], $id))		);		// Setup the form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_avatar'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'max_file_size'	=> '<input type="hidden" name="MAX_FILE_SIZE" value="'.$forum_config['o_avatars_size'].'" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup form information		$forum_page['frm_info'] = array();		if (!empty($forum_page['avatar_markup']))		{			$forum_page['frm_info']['avatar_replace'] = '<li><span>'.$lang_profile['Avatar info replace'].'</span></li>';			$forum_page['frm_info']['avatar_type'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';			$forum_page['avatar_demo'] = $forum_page['avatar_markup'];		}		else		{			$forum_page['frm_info']['avatar_none'] = '<li><span>'.$lang_profile['Avatar info none'].'</span></li>';			$forum_page['frm_info']['avatar_info'] = '<li><span>'.$lang_profile['Avatar info type'].'</span></li>';			$forum_page['frm_info']['avatar_size'] = '<li><span>'.sprintf($lang_profile['Avatar info size'], $forum_config['o_avatars_width'], $forum_config['o_avatars_height'], forum_number_format($forum_config['o_avatars_size']), forum_number_format(ceil($forum_config['o_avatars_size'] / 1024))).'</span></li>';		}		($hook = get_hook('pf_change_details_avatar_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-avatar');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_avatar_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf(($forum_page['own_profile']) ? $lang_profile['Avatar welcome'] : $lang_profile['Avatar welcome user'], forum_htmlencode($user['username'])) ?></span></h2>	</div>	<div class="main-content main-frm"><?php		// If there were any errors, show them		if (!empty($errors))		{			$forum_page['errors'] = array();			foreach ($errors as $cur_error)				$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';			($hook = get_hook('pf_change_details_avatar_pre_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_profile['Profile update errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php		}?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" enctype="multipart/form-data">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset')) ? eval($hook) : null; ?>			<div class="ct-box info-box">				<ul class="info-list">					<?php echo implode("\n\t\t\t\t\t", $forum_page['frm_info'])."\n" ?>				</ul>			</div>			<div id="req-msg" class="req-warn ct-box info-box">    			<p class="important"><?php echo $lang_profile['No upload warn'] ?></p>   			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_profile['Avatar'] ?></strong></legend><?php ($hook = get_hook('pf_change_details_avatar_pre_cur_avatar_info')) ? eval($hook) : null; ?>				<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="ct-box">						<h3 class="hn ct-legend"><?php echo $lang_profile['Current avatar'] ?></h3><?php if (isset($forum_page['avatar_demo'])): ?>						<p class="avatar-demo"><span><?php echo $forum_page['avatar_demo'] ?></span></p><?php endif; ?>						<p><?php echo (isset($forum_page['avatar_demo'])) ? '<a href="'.forum_link($forum_url['delete_avatar'], array($id, generate_form_token('delete_avatar'.$id.$forum_user['id']))).'"><strong>'.$lang_profile['Delete avatar info'].'</strong></a>' : $lang_profile['No avatar info'] ?></p>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_avatar_upload')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Upload avatar file'] ?></span><small><?php echo $lang_profile['Avatar upload help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" name="req_file" type="file" size="40" /></span>					</div>				</div><?php ($hook = get_hook('pf_change_details_avatar_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_avatar_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update" value="<?php echo $lang_profile['Update profile'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('pf_change_details_avatar_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if ($section == 'admin')	{		if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || $forum_user['g_mod_ban_users'] == '0' || $forum_user['id'] == $id))			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array(sprintf($lang_profile['Users profile'], $user['username']), forum_link($forum_url['user'], $id)),			array($lang_profile['Section admin'],forum_link($forum_url['profile_admin'], $id))		);		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['profile_admin'], $id);		$forum_page['hidden_fields'] = array(			'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />'		);		// Setup ban and delete options		$forum_page['user_management'] = array();		if ($forum_user['g_moderator'] == '1')			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		else if ($forum_user['g_moderator'] != '1' && $user['g_id'] != FORUM_ADMIN )		{			$forum_page['user_management']['ban'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Ban user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['admin_bans']).'&amp;add_ban='.$id.'">'.$lang_profile['Ban user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';			$forum_page['user_management']['delete'] = '<div class="ct-set set'.++$forum_page['item_count'].'">'."\n\t\t\t\t".'<div class="ct-box">'."\n\t\t\t\t\t".'<h3 class="ct-legend hn">'.$lang_profile['Delete user'].'</h3>'."\n\t\t\t\t".'<p><a href="'.forum_link($forum_url['delete_user'], $id).'">'.$lang_profile['Delete user info'].'</a></p>'."\n\t\t\t\t".'</div>'."\n\t\t\t".'</div>';		}		($hook = get_hook('pf_change_details_admin_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'profile-admin');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('pf_change_details_admin_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_profile['User management'] ?></span></h2>	</div>	<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">		<div class="hidden">			<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>		</div>		<div class="main-content main-frm">			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php		($hook = get_hook('pf_change_details_admin_pre_user_management')) ? eval($hook) : null;		if (!empty($forum_page['user_management']))		{			echo "\t\t\t".implode("\n\t\t\t", $forum_page['user_management'])."\n";			($hook = get_hook('pf_change_details_admin_pre_membership')) ? eval($hook) : null;			if ($forum_user['g_moderator'] != '1' && !$forum_page['own_profile'])			{				($hook = get_hook('pf_change_details_admin_pre_group_membership')) ? eval($hook) : null;?>			<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box select">					<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['User group'] ?></span></label><br />					<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="group_id"><?php				$query = array(					'SELECT'	=> 'g.g_id, g.g_title',					'FROM'		=> 'groups AS g',					'WHERE'		=> 'g.g_id!='.FORUM_GUEST,					'ORDER BY'	=> 'g.g_title'				);				($hook = get_hook('pf_change_details_admin_qr_get_groups')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				while ($cur_group = $forum_db->fetch_assoc($result))				{					if ($cur_group['g_id'] == $user['g_id'] || ($cur_group['g_id'] == $forum_config['o_default_user_group'] && $user['g_id'] == ''))						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";					else						echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";				}?>					</select></span>				</div>			</div><?php ($hook = get_hook('pf_change_details_admin_pre_group_membership_submit')) ? eval($hook) : null; ?>			<div class="sf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="sf-box text">	 				<span class="submit"><input type="submit" name="update_group_membership" value="<?php echo $lang_profile['Update groups'] ?>" /></span>	 			</div>			</div><?php			}		}		($hook = get_hook('pf_change_details_admin_pre_mod_assignment')) ? eval($hook) : null;		if ($forum_user['g_id'] == FORUM_ADMIN && ($user['g_id'] == FORUM_ADMIN || $user['g_moderator'] == '1'))		{			($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset')) ? eval($hook) : null;?>			<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">				<legend><span><?php echo $lang_profile['Moderator assignment'] ?></span></legend><?php ($hook = get_hook('pf_change_details_admin_pre_forum_checklist')) ? eval($hook) : null; ?>				<div class="mf-box">					<div class="checklist"><?php			$query = array(				'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.moderators',				'FROM'		=> 'categories AS c',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'c.id=f.cat_id'					)				),				'WHERE'		=> 'f.redirect_url IS NULL',				'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'			);			($hook = get_hook('pf_change_details_admin_qr_get_cats_and_forums')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$cur_category = 0;			while ($cur_forum = $forum_db->fetch_assoc($result))			{				($hook = get_hook('pf_change_details_admin_forum_loop_start')) ? eval($hook) : null;				if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?				{					if ($cur_category)						echo "\n\t\t\t\t\t".'</fieldset>'."\n";					echo "\t\t\t\t\t".'<fieldset>'."\n\t\t\t\t\t\t".'<legend><span>'.$cur_forum['cat_name'].':</span></legend>'."\n";					$cur_category = $cur_forum['cid'];				}				$moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				echo "\t\t\t\t\t\t".'<div class="checklist-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="moderator_in['.$cur_forum['fid'].']" value="1"'.((in_array($id, $moderators)) ? ' checked="checked"' : '').' /></span> <label for="fld'.$forum_page['fld_count'].'">'.forum_htmlencode($cur_forum['forum_name']).'</label></div>'."\n";			}?>						</fieldset>					</div>				</div><?php ($hook = get_hook('pf_change_details_admin_pre_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('pf_change_details_admin_mod_assignment_fieldset_end')) ? eval($hook) : null; ?>			<div class="mf-set button-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="mf-box text">					<span class="submit"><input type="submit" name="update_forums" value="<?php echo $lang_profile['Update forums'] ?>" /></span>				</div>			</div><?php			($hook = get_hook('pf_change_details_admin_form_end')) ? eval($hook) : null;		}?>		</div>		<div class="frm-buttons">			<span class="submit"><?php echo $lang_profile['Instructions'] ?></span>		</div>	</div>	</form><?php		($hook = get_hook('pf_change_details_admin_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	($hook = get_hook('pf_change_details_new_section')) ? eval($hook) : null;	message($lang_common['Bad request']);}
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php// Language definitions used in post.php and edit.php$lang_post = array(// Post validation stuff (many are similar to those in edit.php)'No subject'			=>	'Topics must contain a subject.','Too long subject'		=>	'Subjects cannot be longer than 70 characters.','All caps subject'		=>	'Subjects cannot contain only capital letters.','No message'			=>	'You must enter a message.','Too long message'		=>	'Your post length is %s bytes. This exceeds the %s bytes limit.','All caps message'		=>	'Posts cannot contain only capital letters.','CSRF token mismatch'	=>	'Unable to confirm security token. A likely cause for this is that some time passed between when you first entered the page and when you posted the form. Clicking "Submit" again should solve the problem.','Invalid e-mail'		=>	'The email address you entered is invalid.',// Posting'Compose your reply'	=>	'Compose and post your new reply','Compose your topic'	=>	'Compose and post your new topic','Compose edited reply'	=>	'Compose and post your edited reply','Compose edited topic'	=>	'Compose and post your edited topic','Guest post legend'		=>	'Required information for guests','Post errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be posted:','Guest name'			=>	'Guest name',	// For guests (instead of Username)'Guest e-mail'			=>	'Guest email','Post redirect'			=>	'Post entered.','Post reply'			=>	'Post new reply','Post new topic'		=>	'Post new topic','Topic subject'			=>	'Topic subject','Write message'			=>	'Write message','Hide smilies'			=>	'Never show smilies as icons (images) for this post.','Subscribe'				=>	'Subscribe to this topic.','Stay subscribed'		=>	'Stay subscribed to this topic.','Topic review'			=>	'Topic review (newest first)','Flood'					=>	'At least %s seconds have to pass between posts. Please wait a while and try posting again.','Permalink post'		=>	'Permanent link to this post','Post settings'			=>	'Optional post settings','Preview reply'			=>	'Preview your new reply','Preview new topic'		=>	'Preview your new topic','Preview reply'			=>	'Preview reply', // For preview button'Preview topic'			=>	'Preview topic', // For preview button'Submit reply'			=>	'Submit reply', // For submit button'Submit topic'			=>	'Submit topic', // For submit button'Post byline'			=>	'<span>Post by </span>%s','Topic byline'			=>	'<span>Topic by </span>%s','Reply byline'			=>	'<span>Reply by </span>%s','Post posted'			=>	'<span>Posted </span>%s',// Edit post'Edit post legend'		=>	'Edit message','Edit topic'			=>	'Edit topic','Edit reply'			=>	'Edit reply','Silent edit'			=>	'Silent edit (don\'t display "Last edited by" in topic view for this edit).','Preview edited topic'	=>	'Preview of your edited topic','Preview edited reply'	=>	'Preview of your edited reply','Edit redirect'			=>	'Post updated.');
<?php/** * Loads common data and performs various functions necessary for the site to work properly. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	exit('The constant FORUM_ROOT must be defined and point to a valid PunBB installation root directory.');if (!defined('FORUM_ESSENTIALS_LOADED'))	require FORUM_ROOT.'include/essentials.php';// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Strip slashes from GET/POST/COOKIE (if magic_quotes_gpc is enabled)if (get_magic_quotes_gpc()){	function stripslashes_array($array)	{		return is_array($array) ? array_map('stripslashes_array', $array) : stripslashes($array);	}	$_GET = stripslashes_array($_GET);	$_POST = stripslashes_array($_POST);	$_COOKIE = stripslashes_array($_COOKIE);}// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// Enable output bufferingif (!defined('FORUM_DISABLE_BUFFERING')){	// For some very odd reason, "Norton Internet Security" unsets this	$_SERVER['HTTP_ACCEPT_ENCODING'] = isset($_SERVER['HTTP_ACCEPT_ENCODING']) ? $_SERVER['HTTP_ACCEPT_ENCODING'] : '';	// Should we use gzip output compression?	if ($forum_config['o_gzip'] && extension_loaded('zlib') && (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') !== false))		ob_start('ob_gzhandler');	else		ob_start();}// Define standard date/time formats$forum_time_formats = array($forum_config['o_time_format'], 'H:i:s', 'H:i', 'g:i:s a', 'g:i a');$forum_date_formats = array($forum_config['o_date_format'], 'Y-m-d', 'Y-d-m', 'd-m-Y', 'm-d-Y', 'M j Y', 'jS M Y');// Create forum_page array$forum_page = array();// Login and fetch user info$forum_user = array();cookie_login($forum_user);// Attempt to load the common language fileif (file_exists(FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php'))	include FORUM_ROOT.'lang/'.$forum_user['language'].'/common.php';else	error('There is no valid language pack \''.forum_htmlencode($forum_user['language']).'\' installed. Please reinstall a language of that name.');// Setup the URL rewriting schemeif (file_exists(FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php'))	require FORUM_ROOT.'include/url/'.$forum_config['o_sef'].'/forum_urls.php';else	require FORUM_ROOT.'include/url/Default/forum_urls.php';// A good place to modify the URL scheme($hook = get_hook('co_modify_url_scheme')) ? eval($hook) : null;// Check if we are to display a maintenance messageif ($forum_config['o_maintenance'] && $forum_user['g_id'] > FORUM_ADMIN && !defined('FORUM_TURN_OFF_MAINT'))	maintenance_message();// Load cached updates infoif ($forum_user['g_id'] == FORUM_ADMIN){	if (file_exists(FORUM_CACHE_DIR.'cache_updates.php'))		include FORUM_CACHE_DIR.'cache_updates.php';	// Regenerate cache only if automatic updates are enabled and if the cache is more than 12 hours old	if ($forum_config['o_check_for_updates'] == '1' && (!defined('FORUM_UPDATES_LOADED') || $forum_updates['cached'] < (time() - 43200)))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_updates_cache();		require FORUM_CACHE_DIR.'cache_updates.php';	}}// Load cached bansif (file_exists(FORUM_CACHE_DIR.'cache_bans.php'))	include FORUM_CACHE_DIR.'cache_bans.php';if (!defined('FORUM_BANS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_bans_cache();	require FORUM_CACHE_DIR.'cache_bans.php';}// Check if current user is bannedcheck_bans();// Update online listupdate_users_online();// Check to see if we logged in without a cookie being setif ($forum_user['is_guest'] && isset($_GET['login']))	message($lang_common['No cookie']);// If we're an administrator or moderator, make sure the CSRF token in $_POST is valid (token in post.php is dealt with in post.php)if (!empty($_POST) && (isset($_POST['confirm_cancel']) || (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== generate_form_token(get_current_url()))) && !defined('FORUM_SKIP_CSRF_CONFIRM'))	csrf_confirm_form();($hook = get_hook('co_common')) ? eval($hook) : null;
<?php/** * Handles logins, logouts, and password reset requests. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (isset($_GET['action']))	define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('li_start')) ? eval($hook) : null;// Load the login.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/login.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$errors = array();// Loginif (isset($_POST['form_sent']) && empty($action)){	$form_username = forum_trim($_POST['req_username']);	$form_password = forum_trim($_POST['req_password']);	$save_pass = isset($_POST['save_pass']);	($hook = get_hook('li_login_form_submitted')) ? eval($hook) : null;	// Get user info matching login attempt	$query = array(		'SELECT'	=> 'u.id, u.group_id, u.password, u.salt',		'FROM'		=> 'users AS u'	);	if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		$query['WHERE'] = 'username=\''.$forum_db->escape($form_username).'\'';	else		$query['WHERE'] = 'LOWER(username)=LOWER(\''.$forum_db->escape($form_username).'\')';	($hook = get_hook('li_login_qr_get_login_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($user_id, $group_id, $db_password_hash, $salt) = $forum_db->fetch_row($result);	$authorized = false;	if (!empty($db_password_hash))	{		$sha1_in_db = (strlen($db_password_hash) == 40) ? true : false;		$form_password_hash = forum_hash($form_password, $salt);		if ($sha1_in_db && $db_password_hash == $form_password_hash)			$authorized = true;		else if ((!$sha1_in_db && $db_password_hash == md5($form_password)) || ($sha1_in_db && $db_password_hash == sha1($form_password)))		{			$authorized = true;			$salt = random_key(12);			$form_password_hash = forum_hash($form_password, $salt);			// There's an old MD5 hash or an unsalted SHA1 hash in the database, so we replace it			// with a randomly generated salt and a new, salted SHA1 hash			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'password=\''.$form_password_hash.'\', salt=\''.$forum_db->escape($salt).'\'',				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_hash')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	($hook = get_hook('li_login_pre_auth_message')) ? eval($hook) : null;	if (!$authorized)		$errors[] = sprintf($lang_login['Wrong user/pass']);	// Did everything go according to plan?	if (empty($errors))	{		// Update the status if this is the first time the user logged in		if ($group_id == FORUM_UNVERIFIED)		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$forum_config['o_default_user_group'],				'WHERE'		=> 'id='.$user_id			);			($hook = get_hook('li_login_qr_update_user_group')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove this user's guest entry from the online list		$query = array(			'DELETE'	=> 'online',			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);		($hook = get_hook('li_login_qr_delete_online_user')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$expire = ($save_pass) ? time() + 1209600 : time() + $forum_config['o_timeout_visit'];		forum_setcookie($cookie_name, base64_encode($user_id.'|'.$form_password_hash.'|'.$expire.'|'.sha1($salt.$form_password_hash.forum_hash($expire, $salt))), $expire);		($hook = get_hook('li_login_pre_redirect')) ? eval($hook) : null;		redirect(forum_htmlencode($_POST['redirect_url']).((substr_count($_POST['redirect_url'], '?') == 1) ? '&amp;' : '?').'login=1', $lang_login['Login redirect']);	}}// Logoutelse if ($action == 'out'){	if ($forum_user['is_guest'] || !isset($_GET['id']) || $_GET['id'] != $forum_user['id'])	{		header('Location: '.forum_link($forum_url['index']));		exit;	}	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('logout'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('li_logout_selected')) ? eval($hook) : null;	// Remove user from "users online" list.	$query = array(		'DELETE'	=> 'online',		'WHERE'		=> 'user_id='.$forum_user['id']	);	($hook = get_hook('li_logout_qr_delete_online_user')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Update last_visit (make sure there's something to update it with)	if (isset($forum_user['logged']))	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_visit='.$forum_user['logged'],			'WHERE'		=> 'id='.$forum_user['id']		);		($hook = get_hook('li_logout_qr_update_last_visit')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	$expire = time() + 1209600;	forum_setcookie($cookie_name, base64_encode('1|'.random_key(8, false, true).'|'.$expire.'|'.random_key(8, false, true)), $expire);	// Reset tracked topics	set_tracked_topics(null);	($hook = get_hook('li_logout_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['index']), $lang_login['Logout redirect']);}// New passwordelse if ($action == 'forget' || $action == 'forget_2'){	if (!$forum_user['is_guest'])		header('Location: '.forum_link($forum_url['index']));	($hook = get_hook('li_forgot_pass_selected')) ? eval($hook) : null;	if (isset($_POST['form_sent']))	{		// User pressed the cancel button		if (isset($_POST['cancel']))			redirect(forum_link($forum_url['index']), $lang_login['New password cancel redirect']);		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		// Validate the email-address		$email = strtolower(forum_trim($_POST['req_email']));		if (!is_valid_email($email))			$errors[] = $lang_login['Invalid e-mail'];		($hook = get_hook('li_forgot_pass_end_validation')) ? eval($hook) : null;		// Did everything go according to plan?		if (empty($errors))		{			$users_with_email = array();			// Fetch user matching $email			$query = array(				'SELECT'	=> 'u.id, u.username, u.salt, u.last_email_sent',				'FROM'		=> 'users AS u',				'WHERE'		=> 'u.email=\''.$forum_db->escape($email).'\''			);			($hook = get_hook('li_forgot_pass_qr_get_user_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_user = $forum_db->fetch_assoc($result))			{				$users_with_email[] = $cur_user;			}			if (!empty($users_with_email))			{				($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null;				// Load the "activate password" template				$mail_tpl = forum_trim(file_get_contents(FORUM_ROOT.'lang/'.$forum_user['language'].'/mail_templates/activate_password.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = forum_trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = forum_trim(substr($mail_tpl, $first_crlf));				// Do the generic replacements first (they apply to all e-mails sent out here)				$mail_message = str_replace('<base_url>', $base_url.'/', $mail_message);				$mail_message = str_replace('<board_mailer>', sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']), $mail_message);				($hook = get_hook('li_forgot_pass_new_general_replace_data')) ? eval($hook) : null;				// Loop through users we found				foreach ($users_with_email as $cur_hit)				{					$forgot_pass_timeout = 3600;					($hook = get_hook('li_forgot_pass_pre_flood_check')) ? eval($hook) : null;					if ($cur_hit['last_email_sent'] != '' && (time() - $cur_hit['last_email_sent']) < $forgot_pass_timeout && (time() - $cur_hit['last_email_sent']) >= 0)						message(sprintf($lang_login['Email flood'], $forgot_pass_timeout));					// Generate a new password activation key					$new_password_key = random_key(8, true);					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'activate_key=\''.$new_password_key.'\', last_email_sent = '.time(),						'WHERE'		=> 'id='.$cur_hit['id']					);					($hook = get_hook('li_forgot_pass_qr_set_activate_key')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);					// Do the user specific replacements to the template					$cur_mail_message = str_replace('<username>', $cur_hit['username'], $mail_message);					$cur_mail_message = str_replace('<activation_url>', str_replace('&amp;', '&', forum_link($forum_url['change_password_key'], array($cur_hit['id'], $new_password_key))), $cur_mail_message);					($hook = get_hook('li_forgot_pass_new_user_replace_data')) ? eval($hook) : null;					forum_mail($email, $mail_subject, $cur_mail_message);				}				message(sprintf($lang_login['Forget mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			}			else				$errors[] = sprintf($lang_login['No e-mail match'], forum_htmlencode($email));		}	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['request_password']);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_login['New password request'], forum_link($forum_url['request_password']))	);	($hook = get_hook('li_forgot_pass_pre_header_load')) ? eval($hook) : null;	define ('FORUM_PAGE', 'reqpass');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('li_forgot_pass_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_login['New password request'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p class="important"><?php echo $lang_login['New password info'] ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_forgot_pass_pre_new_password_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['New password errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />			</div><?php ($hook = get_hook('li_forgot_pass_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_forgot_pass_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['E-mail address'] ?></span> <small><?php echo $lang_login['E-mail address help'] ?></small></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="email" name="req_email" value="<?php echo isset($_POST['req_email']) ? forum_htmlencode($_POST['req_email']) : '' ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('li_forgot_pass_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_forgot_pass_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="request_pass" value="<?php echo $lang_login['Submit password request'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('li_forgot_pass_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}if (!$forum_user['is_guest'])	header('Location: '.forum_link($forum_url['index']));// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['login']);$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'redirect_url'	=> '<input type="hidden" name="redirect_url" value="'.forum_htmlencode($forum_user['prev_url']).'" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_login['Login info'], $forum_config['o_board_title']), forum_link($forum_url['login'])));($hook = get_hook('li_login_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'login');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('li_login_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_login['Login info'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="content-head">			<p class="hn"><?php printf($lang_login['Login options'], '<a href="'.forum_link($forum_url['register']).'">'.$lang_login['register'].'</a>', '<a href="'.forum_link($forum_url['request_password']).'">'.$lang_login['Obtain pass'].'</a>') ?></p>		</div><?php	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();	foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('li_pre_login_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><?php echo $lang_login['Login errors'] ?></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('li_login_pre_login_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('li_login_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Username'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '' ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_pass')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_login['Password'] ?></span></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password" value="<?php echo isset($_POST['req_password']) ? forum_htmlencode($_POST['req_password']) : '' ?>" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('li_login_pre_remember_me_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="save_pass" value="1" <?php echo isset($_POST['save_pass']) ? 'checked="checked" ' : '' ?>/></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_login['Remember me'] ?></label>					</div>				</div><?php ($hook = get_hook('li_login_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('li_login_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="login" value="<?php echo $lang_login['Login'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('li_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * External syndication script * * Allows forum content to be syndicated outside of the site in various formats * (ie: RSS, Atom, XML, HTML). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB *//***********************************************************************  INSTRUCTIONS  This script is used to include information about your board from  pages outside the forums and to syndicate news about recent  discussions via RSS/Atom/XML. The script can display a list of  recent discussions, a list of active users or a collection of  general board statistics. The script can be called directly via  an URL, from a PHP include command or through the use of Server  Side Includes (SSI).  The scripts behaviour is controlled via variables supplied in the  URL to the script. The different variables are: action (what to  do), show (how many items to display), fid (the ID or ID's of  the forum(s) to poll for topics), nfid (the ID or ID's of forums  that should be excluded), tid (the ID of the topic from which to  display posts) and type (output as HTML or RSS). The only  mandatory variable is action. Possible/default values are:    action: feed - show most recent topics/posts (HTML or RSS)            online - show users online (HTML)            online_full - as above, but includes a full list (HTML)            stats - show board statistics (HTML)    type:   rss - output as RSS 2.0            atom - output as Atom 1.0            xml - output as XML            html - output as HTML (<li>'s)    fid:    One or more forum ID's (comma-separated). If ignored,            topics from all readable forums will be pulled.    nfid:   One or more forum ID's (comma-separated) that are to be            excluded. E.g. the ID of a a test forum.    tid:    A topic ID from which to show posts. If a tid is supplied,            fid and nfid are ignored.    show:   Any integer value between 1 and 50. The default is 15./***********************************************************************/define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ex_start')) ? eval($hook) : null;// The length at which topic subjects will be truncated (for HTML output)if (!defined('FORUM_EXTERN_MAX_SUBJECT_LENGTH'))    define('FORUM_EXTERN_MAX_SUBJECT_LENGTH', 30);// If we're a guest and we've sent a username/pass, we can try to authenticate using those detailsif ($forum_user['is_guest'] && isset($_SERVER['PHP_AUTH_USER']))	authenticate_user($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']);if ($forum_user['g_read_board'] == '0'){	http_authenticate_user();	exit($lang_common['No view']);}$action = isset($_GET['action']) ? $_GET['action'] : 'feed';//// Sends the proper headers for Basic HTTP Authentication//function http_authenticate_user(){	global $forum_config, $forum_user;	if (!$forum_user['is_guest'])		return;	header('WWW-Authenticate: Basic realm="'.$forum_config['o_board_title'].' External Syndication"');	header('HTTP/1.0 401 Unauthorized');}//// Output $feed as RSS 2.0//function output_rss($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<channel>'."\n";	echo "\t\t".'<title><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t\t".'<link>'.$feed['link'].'</link>'."\n";	echo "\t\t".'<atom:link href="'.forum_htmlencode(get_current_url()).'" rel="self" type="application/rss+xml" />'."\n";	echo "\t\t".'<description><![CDATA['.escape_cdata($feed['description']).']]></description>'."\n";	echo "\t\t".'<lastBuildDate>'.gmdate('r', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</lastBuildDate>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t\t".'<generator>PunBB '.$forum_config['o_cur_version'].'</generator>'."\n";	else		echo "\t\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_rss_info')) ? eval($hook) : null;	foreach ($feed['items'] as $item)	{		echo "\t\t".'<item>'."\n";		echo "\t\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t\t".'<description><![CDATA['.escape_cdata($item['description']).']]></description>'."\n";		echo "\t\t\t".'<author><![CDATA['.(isset($item['author']['email']) ? escape_cdata($item['author']['email']) : 'null@example.com').' ('.escape_cdata($item['author']['name']).')]]></author>'."\n";		echo "\t\t\t".'<pubDate>'.gmdate('r', $item['pubdate']).'</pubDate>'."\n";		echo "\t\t\t".'<guid>'.$item['link'].'</guid>'."\n";		($hook = get_hook('ex_add_new_rss_item_info')) ? eval($hook) : null;		echo "\t\t".'</item>'."\n";	}	echo "\t".'</channel>'."\n";	echo '</rss>'."\n";}//// Output $feed as Atom 1.0//function output_atom($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<feed xmlns="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<title type="html"><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t".'<link rel="self" href="'.forum_htmlencode(get_current_url()).'"/>'."\n";	echo "\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</updated>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t".'<generator version="'.$forum_config['o_cur_version'].'">PunBB</generator>'."\n";	else		echo "\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_atom_info')) ? eval($hook) : null;	echo "\t".'<id>'.$feed['link'].'</id>'."\n";	$content_tag = ($feed['type'] == 'posts') ? 'content' : 'summary';	foreach ($feed['items'] as $item)	{		echo "\t\t".'<entry>'."\n";		echo "\t\t\t".'<title type="html"><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link rel="alternate" href="'.$item['link'].'"/>'."\n";		echo "\t\t\t".'<'.$content_tag.' type="html"><![CDATA['.escape_cdata($item['description']).']]></'.$content_tag.'>'."\n";		echo "\t\t\t".'<author>'."\n";		echo "\t\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t\t".'</author>'."\n";		echo "\t\t\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', $item['pubdate']).'</updated>'."\n";		($hook = get_hook('ex_add_new_atom_item_info')) ? eval($hook) : null;		echo "\t\t\t".'<id>'.$item['link'].'</id>'."\n";		echo "\t\t".'</entry>'."\n";	}	echo '</feed>'."\n";}//// Output $feed as XML//function output_xml($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: application/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<source>'."\n";	echo "\t".'<url>'.$feed['link'].'</url>'."\n";	($hook = get_hook('ex_add_new_xml_info')) ? eval($hook) : null;	$forum_tag = ($feed['type'] == 'posts') ? 'post' : 'topic';	foreach ($feed['items'] as $item)	{		echo "\t".'<'.$forum_tag.' id="'.$item['id'].'">'."\n";		echo "\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t".'<content><![CDATA['.escape_cdata($item['description']).']]></content>'."\n";		echo "\t\t".'<author>'."\n";		echo "\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t".'</author>'."\n";		echo "\t\t".'<posted>'.gmdate('r', $item['pubdate']).'</posted>'."\n";		($hook = get_hook('ex_add_new_xml_item_info')) ? eval($hook) : null;		echo "\t".'</'.$forum_tag.'>'."\n";	}	echo '</source>'."\n";}//// Output $feed as HTML (using <li> tags)//function output_html($feed){	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	foreach ($feed['items'] as $item)	{		if (utf8_strlen($item['title']) > FORUM_EXTERN_MAX_SUBJECT_LENGTH)			$subject_truncated = forum_htmlencode(forum_trim(utf8_substr($item['title'], 0, (FORUM_EXTERN_MAX_SUBJECT_LENGTH - 5)))).'';		else			$subject_truncated = forum_htmlencode($item['title']);		echo '<li><a href="'.$item['link'].'" title="'.forum_htmlencode($item['title']).'">'.$subject_truncated.'</a></li>'."\n";	}}// Show recent discussionsif ($action == 'feed'){	// Determine what type of feed to output	$type = isset($_GET['type']) && in_array($_GET['type'], array('html', 'rss', 'atom', 'xml')) ? $_GET['type'] : 'html';	$show = isset($_GET['show']) ? intval($_GET['show']) : 15;	if ($show < 1 || $show > 50)		$show = 15;	($hook = get_hook('ex_set_syndication_type')) ? eval($hook) : null;	// Was a topic ID supplied?	if (isset($_GET['tid']))	{		$tid = intval($_GET['tid']);		// Fetch topic subject		$query = array(			'SELECT'	=> 't.subject, t.first_post_id',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.moved_to IS NULL and t.id='.$tid		);		($hook = get_hook('ex_qr_get_topic_data')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$cur_topic = $forum_db->fetch_assoc($result);		if (!$cur_topic)		{			http_authenticate_user();			exit($lang_common['Bad request']);		}		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$lang_common['Title separator'].$cur_topic['subject'],			'link'			=>	forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))),			'description'	=>	sprintf($lang_common['RSS description topic'], $cur_topic['subject']),			'items'			=>	array(),			'type'			=>	'posts'		);		// Fetch $show posts		$query = array(			'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted, p.poster_id, u.email_setting, u.email, p.poster_email',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				)			),			'WHERE'		=> 'p.topic_id='.$tid,			'ORDER BY'	=> 'p.posted DESC',			'LIMIT'		=> $show		);		($hook = get_hook('ex_qr_get_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_post = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')				$cur_post['message'] = censor_words($cur_post['message']);			$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);			$item = array(				'id'			=>	$cur_post['id'],				'title'			=>	$cur_topic['first_post_id'] == $cur_post['id'] ? $cur_topic['subject'] : $lang_common['RSS reply'].$cur_topic['subject'],				'link'			=>	forum_link($forum_url['post'], $cur_post['id']),				'description'	=>	$cur_post['message'],				'author'		=>	array(					'name'	=> $cur_post['poster'],				),				'pubdate'		=>	$cur_post['posted']			);			if ($cur_post['poster_id'] > 1)			{				if ($cur_post['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_post['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_post['poster_id']);			}			else if ($cur_post['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_post['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_post_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_topic_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	else	{		$forum_name = '';		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Were any forum ID's supplied?		if (isset($_GET['fid']) && is_scalar($_GET['fid']) && $_GET['fid'] != '')		{			$fids = explode(',', forum_trim($_GET['fid']));			$fids = array_map('intval', $fids);			if (!empty($fids))				$forum_sql = ' AND t.forum_id IN('.implode(',', $fids).')';			if (count($fids) == 1)			{				// Fetch forum name				$query = array(					'SELECT'	=> 'f.forum_name',					'FROM'		=> 'forums AS f',					'JOINS'		=> array(						array(							'LEFT JOIN'		=> 'forum_perms AS fp',							'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'						)					),					'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fids[0]				);				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$forum_name_in_db = $forum_db->result($result);				if ($forum_name_in_db !== false)					$forum_name = $lang_common['Title separator'].$forum_name_in_db;			}		}		// Any forum ID's to exclude?		if (isset($_GET['nfid']) && is_scalar($_GET['nfid']) && $_GET['nfid'] != '')		{			$nfids = explode(',', forum_trim($_GET['nfid']));			$nfids = array_map('intval', $nfids);			if (!empty($nfids))				$forum_sql = ' AND t.forum_id NOT IN('.implode(',', $nfids).')';		}		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$forum_name,			'link'			=>	forum_link($forum_url['index']),			'description'	=>	sprintf($lang_common['RSS description'], $forum_config['o_board_title']),			'items'			=>	array(),			'type'			=>	'topics'		);		// Fetch $show topics		$query = array(			'SELECT'	=> 't.id, t.poster, t.posted, t.subject, p.message, p.hide_smilies, u.email_setting, u.email, p.poster_id, p.poster_email',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'posts AS p',					'ON'			=> 'p.id = t.first_post_id'				),				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id = t.forum_id AND fp.group_id = '.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum = 1) AND t.moved_to IS NULL',			'ORDER BY'	=> 't.posted DESC',			'LIMIT'		=> $show		);		if (isset($forum_sql))			$query['WHERE'] .= $forum_sql;		($hook = get_hook('ex_qr_get_topics')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_topic = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')			{				$cur_topic['subject'] = censor_words($cur_topic['subject']);				$cur_topic['message'] = censor_words($cur_topic['message']);			}			$cur_topic['message'] = parse_message($cur_topic['message'], $cur_topic['hide_smilies']);			$item = array(				'id'			=>	$cur_topic['id'],				'title'			=>	$cur_topic['subject'],				'link'			=>	forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))),				'description'	=>	$cur_topic['message'],				'author'		=>	array(					'name'			=> $cur_topic['poster']				),				'pubdate'		=>	$cur_topic['posted']			);			if ($cur_topic['poster_id'] > 1)			{				if ($cur_topic['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_topic['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_topic['poster_id']);			}			else if ($cur_topic['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_topic['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_topic_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_forum_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	exit;}// Show users onlineelse if ($action == 'online' || $action == 'online_full'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Fetch users online info and generate strings for output	$num_guests = $num_users = 0;	$users = array();	$query = array(		'SELECT'	=> 'o.user_id, o.ident',		'FROM'		=> 'online AS o',		'WHERE'		=> 'o.idle=0',		'ORDER BY'	=> 'o.ident'	);	($hook = get_hook('ex_qr_get_users_online')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($forum_user_online = $forum_db->fetch_assoc($result))	{		if ($forum_user_online['user_id'] > 1)		{			$users[] = $forum_user['g_view_users'] == '1' ?'<a href="'.forum_link($forum_url['user'], $forum_user_online['user_id']).'">'.forum_htmlencode($forum_user_online['ident']).'</a>' : forum_htmlencode($forum_user_online['ident']);			++$num_users;		}		else			++$num_guests;	}	($hook = get_hook('ex_pre_online_output')) ? eval($hook) : null;	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo $lang_index['Guests online'].': '.forum_number_format($num_guests).'<br />'."\n";	if ($_GET['action'] == 'online_full' && !empty($users))		echo $lang_index['Users online'].': '.implode($lang_index['Online list separator'], $users).'<br />'."\n";	else		echo $lang_index['Users online'].': '.forum_number_format($num_users).'<br />'."\n";	exit;}// Show board statisticselse if ($action == 'stats'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ex_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ex_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ex_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	($hook = get_hook('ex_pre_stats_output')) ? eval($hook) : null;	echo sprintf($lang_index['No of users'], forum_number_format($stats['total_users'])).'<br />'."\n";	echo sprintf($lang_index['Newest user'], '<a href="'.forum_link($forum_url['user'], $stats['last_user']['id']).'">'.forum_htmlencode($stats['last_user']['username']).'</a>').'<br />'."\n";	echo sprintf($lang_index['No of topics'], forum_number_format($stats['total_topics'])).'<br />'."\n";	echo sprintf($lang_index['No of posts'], forum_number_format($stats['total_posts'])).'<br />'."\n";	exit;}($hook = get_hook('ex_new_action')) ? eval($hook) : null;// If we end up here, the script was called with some wacky parametersexit($lang_common['Bad request']);
