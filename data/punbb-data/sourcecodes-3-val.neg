<?php// Language definitions used in search.php$lang_search = array(// The search form'No search permission'		=>	'You do not have permission to use the search feature.','Search heading'			=>	'Search forums using your criteria','Search flood'				=>	'At least %s seconds have to pass between searches. Please wait a while and try searching again.','Search legend'				=>	'Search criteria','Results legend'			=>	'Search results','Keywords info'				=>	'You may search for a single keyword or for multiple keywords separated by spaces.','Refine info'				=>	'You may use <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> to refine your searches by keyword.','Wildcard info'				=>	'Use the wildcard character <strong>*</strong> for partial keyword or username matches.','Forum default info'		=>	'By default all forums are searched. You may narrow your search by selecting one or more forums to search.','Forum require info'		=>	'You may choose to search one or more forums. You <strong>must</strong> select at least one forum to search.','Keyword search'			=>	'Keyword or words','Author search'				=>	'Author\'s username','Forum search'				=>	'Select forums to search','Forum search default'		=>	'If no forums are selected then all forums will be searched.','Forum search require'		=>	'You must select at least one forum to search.','Sort by'					=>	'Sort results by','Sort order'				=>	'Results sort order','Sort by post time'			=>	'Post time','Sort by author'			=>	'Author','Sort by subject'			=>	'Subject','Sort by forum'				=>	'Forum','Ascending'					=>	'Ascending','Descending'				=>	'Descending','Display results'			=>	'Display results','Show as topics'			=>	'As topics','Show as posts'				=>	'As posts','Submit search'				=>	'Submit','User defined search'		=>	'User defined search','Advanced search'			=>	'Advanced search','Search in'					=>	'Search in','Message and subject'		=>	'Message text and topic subject','Message only'				=>	'Message text only','Topic only'				=>	'Topic subject only',// Results'Search results'			=>	'Search results','Topics with new'			=>	'Topics with new posts','All Topics'				=>	'Show all topics','Recently active topics'	=>	'Recently active topics','Unanswered topics'			=>	'Unanswered topics','Subscriptions'				=>	'Subscriptions','Topics found'				=>	'Topics found','Posts found'				=>	'Posts found','Topics by'					=>	'Topics by %s','Posts by'					=>	'Posts by %s','Topics by user'			=>	'Topics by this user','Posts by user'				=>	'Posts by this user','Perform new search'		=>	'Perform new search','Search options'			=>	'Search options','Posted in'					=>	'Posted in ','No terms'					=>	'You have to enter at least one keyword and/or an author to search for.','No hits'					=>	'Your search returned no hits.','No user posts'				=>	'There are no posts by this user in this forum.','No user topics'			=>	'There are no topics by this user in this forum.','No subscriptions'			=>	'There are no topics which have been subscribed to.','No new posts'				=>	'There are no topics with new posts since your last visit.','No recent posts'			=>	'No posts have been made recently.','No unanswered'				=>	'There are no unanswered posts in this forum.','Go to post'				=>	'Go to post','Go to forum'				=>	'Go to forum','Go to topic'				=>	'Go to topic','Go to profile'				=>	'Go to %s\'s profile');
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database.<br/>MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = @mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * Loads various functions that are used for searching the forum. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_SEARCH_MIN_WORD'))	define('FORUM_SEARCH_MIN_WORD', 3);if (!defined('FORUM_SEARCH_MAX_WORD'))	define('FORUM_SEARCH_MAX_WORD', 20);//// Cache the results of a search and redirect the user to the results page//function create_search_cache($keywords, $author, $search_in = false, $forum = array(-1), $show_as = 'topics', $sort_by = null, $sort_dir = 'DESC'){	global $forum_db, $forum_user, $forum_config, $forum_url, $lang_search, $lang_common, $db_type;	$return = ($hook = get_hook('sf_fn_create_search_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	if (utf8_strlen(str_replace(array('*', '%'), '', $author)) < 2)		$author = '';	if (utf8_strlen(str_replace(array('*', '%'), '', $keywords)) < FORUM_SEARCH_MIN_WORD)		$keywords = '';	if (!$keywords && !$author)		message($lang_search['No terms']);	$keywords = utf8_strtolower($keywords);	$author = utf8_strtolower($author);	// Flood protection	if ($forum_user['last_search'] && (time() - $forum_user['last_search']) < $forum_user['g_search_flood'] && (time() - $forum_user['last_search']) >= 0)		message(sprintf($lang_search['Search flood'], $forum_user['g_search_flood']));	if ($forum_user['is_guest'])	{		$query = array(			'UPDATE'	=> 'online',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'ident=\''.$forum_db->escape(get_remote_address()).'\''		);	}	else	{		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'last_search='.time(),			'WHERE'		=> 'id='.$forum_user['id'],		);	}	($hook = get_hook('sf_fn_create_search_cache_qr_update_last_search_time')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// We need to grab results, insert them into the cache and reload with a search id before showing them	$keyword_results = $author_results = array();	// If it's a search for keywords	if ($keywords)	{		// Remove any apostrophes which aren't part of words		$keywords = substr(preg_replace('((?<=\W)\'|\'(?=\W))', '', ' '.$keywords.' '), 1, -1);		// Remove symbols and multiple whitespace		$keywords = preg_replace('/[\^\$&\(\)<>`"\|,@_\?%~\+\[\]{}:=\/#\\\\;!\.\s]+/', ' ', $keywords);		// Fill an array with all the words		$keywords_array = array_unique(explode(' ', $keywords));		// Remove any words that are not indexed		$keywords_array = array_filter($keywords_array, 'validate_search_word');  		if (empty($keywords_array))			no_search_results();		$word_count = 0;		$match_type = 'and';		$result_list = array();		foreach ($keywords_array as $cur_word)		{			switch ($cur_word)			{				case 'and':				case 'or':				case 'not':					$match_type = $cur_word;					break;				default:				{					$query = array(						'SELECT'	=> 'm.post_id',						'FROM'		=> 'search_words AS w',						'JOINS'		=> array(							array(								'INNER JOIN'	=> 'search_matches AS m',								'ON'			=> 'm.word_id=w.id'							)						),						'WHERE'		=> 'w.word LIKE \''.$forum_db->escape(str_replace('*', '%', $cur_word)).'\''					);					// Search in what?					if ($search_in)						$query['WHERE'] .= ($search_in > 0 ? ' AND m.subject_match=0' : ' AND m.subject_match=1');					($hook = get_hook('sf_fn_create_search_cache_qr_get_keyword_hits')) ? eval($hook) : null;					$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);					$row = array();					while (list($post_id) = $forum_db->fetch_row($result))					{						$row[$post_id] = 1;						if (!$word_count)							$result_list[$post_id] = 1;						else if ($match_type == 'or')							$result_list[$post_id] = 1;						else if ($match_type == 'not')							$result_list[$post_id] = 0;					}					if ($match_type == 'and' && $word_count)					{						foreach (array_keys($result_list) as $post_id)						{							if (!isset($row[$post_id]))								$result_list[$post_id] = 0;						}					}					++$word_count;					$forum_db->free_result($result);					break;				}			}		}		foreach ($result_list as $post_id => $matches)		{			if ($matches)				$keyword_results[] = $post_id;		}		unset($result_list);	}	// If it's a search for author name (and that author name isn't Guest)	if ($author && $author != 'guest' && $author != utf8_strtolower($lang_common['Guest']))	{		$query = array(			'SELECT'	=> 'u.id',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.username '.($db_type == 'pgsql' ? 'ILIKE' : 'LIKE').' \''.$forum_db->escape(str_replace('*', '%', $author)).'\''		);		($hook = get_hook('sf_fn_create_search_cache_qr_get_author')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$user_ids = array();		while ($row = $forum_db->fetch_row($result))		{			$user_ids[] = $row[0];		}		if (!empty($user_ids))		{			$query = array(				'SELECT'	=> 'p.id',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.poster_id IN('.implode(',', $user_ids).')'			);			($hook = get_hook('sf_fn_create_search_cache_qr_get_author_hits')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$search_ids = array();			while ($row = $forum_db->fetch_row($result))				$author_results[] = $row[0];			$forum_db->free_result($result);		}	}	if ($author && $keywords)	{		// If we searched for both keywords and author name we want the intersection between the results		$search_ids = array_intersect($keyword_results, $author_results);		unset($keyword_results, $author_results);	}	else if ($keywords)		$search_ids = $keyword_results;	else		$search_ids = $author_results;	if (count($search_ids) == 0)		no_search_results();	// Setup the default show_as topics search	$query = array(		'SELECT'	=> 't.id',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'topics AS t',				'ON'			=> 't.id=p.topic_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id IN('.implode(',', $search_ids).')',		'GROUP BY'	=> 't.id'	);	// Search a specific forum?	if (!in_array(-1, $forum) || ($forum_config['o_search_all_forums'] == '0' && !$forum_user['is_admmod']))		$query['WHERE'] .= ' AND t.forum_id IN('.implode(',', $forum).')';	// Adjust the query if show_as posts	if ($show_as == 'posts')	{		$query['SELECT'] = 'p.id';		unset($query['GROUP BY']);	}	($hook = get_hook('sf_fn_create_search_cache_qr_get_hits')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_ids = array();	while ($row = $forum_db->fetch_row($result))		$search_ids[] = $row[0];	// Prune "old" search results	$query = array(		'SELECT'	=> 'o.ident',		'FROM'		=> 'online AS o'	);	($hook = get_hook('sf_fn_create_search_cache_qr_get_online_idents')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$online_idents = array();	while ($row = $forum_db->fetch_row($result))	{		$online_idents[] = '\''.$forum_db->escape($row[0]).'\'';	}	if (!empty($online_idents))	{		$query = array(			'DELETE'	=> 'search_cache',			'WHERE'		=> 'ident NOT IN('.implode(',', $online_idents).')'		);		($hook = get_hook('sf_fn_create_search_cache_qr_delete_old_cached_searches')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}	// Final search results	$search_results = implode(',', $search_ids);	// Fill an array with our results and search properties	$search_data = serialize(compact('search_results', 'sort_by', 'sort_dir', 'show_as'));	$search_id = mt_rand(1, 2147483647);	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'INSERT'	=> 'id, ident, search_data',		'INTO'		=> 'search_cache',		'VALUES'	=> $search_id.', \''.$forum_db->escape($ident).'\', \''.$forum_db->escape($search_data).'\''	);	($hook = get_hook('sf_fn_create_search_cache_qr_cache_search')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$return = ($hook = get_hook('sf_fn_create_search_cache_end')) ? eval($hook) : null;	if ($return != null)		return;	$forum_db->end_transaction();	$forum_db->close();	// Redirect the user to the cached result page	header('Location: '.str_replace('&amp;', '&', forum_link($forum_url['search_results'], $search_id)));	exit;}//// Generate query to grab the results for a cached search//function generate_cached_search_query($search_id, &$show_as){	global $forum_db, $db_type, $forum_user, $forum_config;	$return = ($hook = get_hook('sf_fn_generate_cached_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$ident = ($forum_user['is_guest']) ? get_remote_address() : $forum_user['username'];	$query = array(		'SELECT'	=> 'sc.search_data',		'FROM'		=> 'search_cache AS sc',		'WHERE'		=> 'sc.id='.$search_id.' AND sc.ident=\''.$forum_db->escape($ident).'\''	);	($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_search_data')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($row = $forum_db->fetch_assoc($result))	{		$search_data = unserialize($row['search_data']);		$search_results = $search_data['search_results'];		$sort_by = $search_data['sort_by'];		$sort_dir = $search_data['sort_dir'];		$show_as = $search_data['show_as'];		unset($search_data);	}	else		return false;	// If there are no posts, we don't need to execute the query	if (empty($search_results))		return false;	switch ($sort_by)	{		case 1:			$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';			break;		case 2:			$sort_by_sql = 't.subject';			break;		case 3:			$sort_by_sql = 't.forum_id';			break;		default:			$sort_by_sql = ($show_as == 'topics') ? 't.posted' : 'p.posted';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_cached_sort_by')) ? eval($hook) : null;			break;	}	if ($show_as == 'posts')	{		$query = array(			'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'			=> 't.id=p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 'p.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_posts')) ? eval($hook) : null;	}	else	{		$query = array(			'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'f.id=t.forum_id'				)			),			'WHERE'		=> 't.id IN('.$search_results.')',			'ORDER BY'	=> $sort_by_sql . ' ' . $sort_dir		);		// With "has posted" indication		if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')		{			$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';			$query['JOINS'][]	= array(				'LEFT JOIN'		=> 'posts AS p',				'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'			);			// Must have same columns as in prev SELECT			$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name';			($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_has_posted')) ? eval($hook) : null;		}		($hook = get_hook('sf_fn_generate_cached_search_query_qr_get_cached_hits_as_topics')) ? eval($hook) : null;	}	($hook = get_hook('sf_fn_generate_cached_search_query_end')) ? eval($hook) : null;	return $query;}//// Generate query to grab the results for an action search (i.e. quicksearch)//function generate_action_search_query($action, $value, &$search_id, &$url_type, &$show_as){	global $forum_db, $forum_user, $forum_config, $lang_common, $forum_url, $db_type;	$return = ($hook = get_hook('sf_fn_generate_action_search_query_start')) ? eval($hook) : null;	if ($return != null)		return $return;	switch ($action)	{		case 'show_new':			if ($forum_user['is_guest'])				message($lang_common['No permission']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.$forum_user['last_visit'].' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			if ($value != -1)				$query['WHERE'] .= ' AND f.id='.$value;			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_new_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_new')) ? eval($hook) : null;			break;		case 'show_recent':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.(time() - $value).' AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_recent_results'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_recent')) ? eval($hook) : null;			break;		case 'show_user_posts':			$query = array(				'SELECT'	=> 'p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name',				'FROM'		=> 'posts AS p',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'topics AS t',						'ON'			=> 't.id=p.topic_id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 'pposted DESC'			);			$url_type = $forum_url['search_user_posts'];			$search_id = $value;			$show_as = 'posts';			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_posts')) ? eval($hook) : null;			break;		case 'show_user_topics':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'posts AS p',						'ON'			=> 't.first_post_id=p.id'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$value,				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_user_topics'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_user_topics')) ? eval($hook) : null;			break;		case 'show_subscriptions':			if ($forum_user['is_guest'])				message($lang_common['Bad request']);			// Check we're allowed to see the subscriptions we're trying to look at			if ($forum_user['g_id'] != FORUM_ADMIN && $forum_user['id'] != $value)				message($lang_common['Bad request']);			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'subscriptions AS s',						'ON'			=> '(t.id=s.topic_id AND s.user_id='.$value.')'					),					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1)',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_subscriptions'];			$search_id = $value;			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_subscriptions')) ? eval($hook) : null;			break;		case 'show_unanswered':			$query = array(				'SELECT'	=> 't.id AS tid, t.poster, t.subject, t.first_post_id, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name',				'FROM'		=> 'topics AS t',				'JOINS'		=> array(					array(						'INNER JOIN'	=> 'forums AS f',						'ON'			=> 'f.id=t.forum_id'					),					array(						'LEFT JOIN'		=> 'forum_perms AS fp',						'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'					)				),				'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.num_replies=0 AND t.moved_to IS NULL',				'ORDER BY'	=> 't.last_post DESC'			);			// With "has posted" indication			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1')			{				$subquery = array(					'SELECT'	=> 'COUNT(p.id)',					'FROM'		=> 'posts AS p',					'WHERE'		=> 'p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id'				);				($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered_topics_has_posted')) ? eval($hook) : null;				$query['SELECT'] .= ', ('.$forum_db->query_build($subquery, true).') AS has_posted';			}			$url_type = $forum_url['search_unanswered'];			($hook = get_hook('sf_fn_generate_action_search_query_qr_get_unanswered')) ? eval($hook) : null;			break;	}	($hook = get_hook('sf_fn_generate_action_search_query_end')) ? eval($hook) : null;	return $query;}//// Get search results for a specified query, returns number of results//function get_search_results($query, &$search_set){	global $forum_db, $forum_user, $forum_page, $lang_common;	$return = ($hook = get_hook('sf_fn_get_search_results_start')) ? eval($hook) : null;	if ($return != null)		return $return;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$search_results = array();	while ($row = $forum_db->fetch_assoc($result))	{		$search_results[] = $row;	}	// Make sure we actually have some results	$num_hits = count($search_results);	if ($num_hits == 0)		return 0;	// Work out the settings for pagination	$forum_page['num_pages'] = ceil($num_hits / $forum_page['per_page']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];	// Determine the topic or post offset (based on $forum_page['page'])	$forum_page['start_from'] = $forum_page['per_page'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_page['per_page']), $num_hits);	// Fill $search_set with out search hits	$search_set = array();	$row_num = 0;	foreach ($search_results as $row)	{		if ($forum_page['start_from'] <= $row_num && $forum_page['finish_at'] > $row_num)			$search_set[] = $row;		++$row_num;	}	$forum_db->free_result($result);	$return = ($hook = get_hook('sf_fn_get_search_results_end')) ? eval($hook) : null;	if ($return != null)		return $return;	return $num_hits;}//// Output a message if there are no results//function no_search_results($action = 'search'){	global $forum_page, $lang_search, $forum_url;	$forum_page['search_again'] = '<a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a>';	$return = ($hook = get_hook('sf_fn_no_search_results_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			message($lang_search['No new posts'], $forum_page['search_again'], $lang_search['Topics with new']);			break;		case 'show_recent':			message($lang_search['No recent posts'], $forum_page['search_again'], $lang_search['Recently active topics']);			break;		case 'show_user_posts':			message($lang_search['No user posts'], $forum_page['search_again'], $lang_search['Posts by user']);			break;		case 'show_user_topics':			message($lang_search['No user topics'], $forum_page['search_again'], $lang_search['Topics by user']);			break;		case 'show_subscriptions':			message($lang_search['No subscriptions'], $forum_page['search_again'], $lang_search['Subscriptions']);			break;		case 'show_unanswered':			message($lang_search['No unanswered'], $forum_page['search_again'], $lang_search['Unanswered topics']);			break;		default:			message($lang_search['No hits'], $forum_page['search_again'], $lang_search['Search results']);			break;	}}//// Generate search breadcrumbs//function generate_search_crumbs($action = null){	global $forum_page, $lang_common, $lang_search, $forum_url, $forum_user, $num_hits, $search_set, $search_id, $show_as;	$return = ($hook = get_hook('sf_fn_generate_search_crumbs_start')) ? eval($hook) : null;	if ($return != null)		return;	switch ($action)	{		case 'show_new':			$forum_page['crumbs'][] = $lang_search['Topics with new'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			$forum_page['main_foot_options']['mark_all'] = '<span'.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['mark_read'], generate_form_token('markread'.$forum_user['id'])).'">'.$lang_common['Mark all as read'].'</a></span>';			// Add link for show all topics, not only new (updated)			$forum_page['main_head_options']['show_all'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['forum'], $search_set[0]['forum_id']).'">'.$lang_search['All Topics'].'</a></span>';			break;		case 'show_recent':			$forum_page['crumbs'][] = $lang_search['Recently active topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_unanswered':			$forum_page['crumbs'][] = $lang_search['Unanswered topics'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_posts':			$forum_page['crumbs'][] = sprintf($lang_search['Posts by'], $search_set[0]['pposter'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['items_info'] = generate_items_info($lang_search['Posts found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_topics'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_topics'], $search_id).'">'.sprintf($lang_search['Topics by'], forum_htmlencode($search_set[0]['pposter'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_user_topics':			$forum_page['crumbs'][] = sprintf($lang_search['Topics by'], $search_set[0]['poster']);			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['user_posts'] =  '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_user_posts'], $search_id).'">'.sprintf($lang_search['Posts by'], forum_htmlencode($search_set[0]['poster'])).'</a></span>';			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		case 'show_subscriptions':			$forum_page['crumbs'][] = $lang_search['Subscriptions'];			$forum_page['items_info'] = generate_items_info($lang_search['Topics found'], ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['defined_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['User defined search'].'</a></span>';			break;		default:			$forum_page['crumbs'][] = $lang_search['Search results'];			$forum_page['items_info'] = generate_items_info((($show_as == 'topics') ? $lang_search['Topics found'] : $lang_search['Posts found']), ($forum_page['start_from'] + 1), $num_hits);			$forum_page['main_head_options']['new_search'] = '<span'.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search']).'">'.$lang_search['Perform new search'].'</a></span>';			break;	}}//// Checks to see if an action is valid//function validate_search_action($action){	// A list of valid actions (extensions can add their own actions to the array)	$valid_actions = array('search', 'show_new', 'show_recent', 'show_user_posts', 'show_user_topics', 'show_subscriptions', 'show_unanswered');	$return = ($hook = get_hook('sf_fn_validate_actions_start')) ? eval($hook) : null;	if ($return != null)		return $return;	return in_array($action, $valid_actions);}
<?php/** * Edit post page. * * Modifies the contents of the specified post. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ed_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);// Load the post.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request']);// Fetch some info about the post, the topic and the forum$query = array(	'SELECT'	=> 'f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies',	'FROM'		=> 'posts AS p',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'topics AS t',			'ON'			=> 't.id=p.topic_id'		),		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'f.id=t.forum_id'		),		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id);($hook = get_hook('ed_qr_get_post_info')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_post = $forum_db->fetch_assoc($result);if (!$cur_post)	message($lang_common['Bad request']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$forum_page['is_admmod'] = ($forum_user['g_id'] == FORUM_ADMIN || ($forum_user['g_moderator'] == '1' && array_key_exists($forum_user['username'], $mods_array))) ? true : false;($hook = get_hook('ed_pre_permission_check')) ? eval($hook) : null;// Do we have permission to edit this post?if (($forum_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $forum_user['id'] ||	$cur_post['closed'] == '1') &&	!$forum_page['is_admmod'])	message($lang_common['No permission']);$can_edit_subject = $id == $cur_post['first_post_id'];($hook = get_hook('ed_post_selected')) ? eval($hook) : null;// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	($hook = get_hook('ed_form_submitted')) ? eval($hook) : null;	// If it is a topic it must contain a subject	if ($can_edit_subject)	{		$subject = forum_trim($_POST['req_subject']);		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if (utf8_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($forum_config['p_subject_all_caps'] == '0' && check_is_all_caps($subject) && !$forum_page['is_admmod'])			$subject = utf8_ucwords(utf8_strtolower($subject));	}	// Clean up message from POST	$message = forum_linebreaks(forum_trim($_POST['req_message']));	if (strlen($message) > FORUM_MAX_POSTSIZE_BYTES)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(strlen($message)), forum_number_format(FORUM_MAX_POSTSIZE_BYTES));	else if ($forum_config['p_message_all_caps'] == '0' && check_is_all_caps($message) && !$forum_page['is_admmod'])		$message = utf8_ucwords(utf8_strtolower($message));	// Validate BBCode syntax	if ($forum_config['p_message_bbcode'] == '1' || $forum_config['o_make_links'] == '1')	{		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if ($message == '')		$errors[] = $lang_post['No message'];	$hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;	($hook = get_hook('ed_end_validation')) ? eval($hook) : null;	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		($hook = get_hook('ed_pre_post_edited')) ? eval($hook) : null;		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$query = array(				'UPDATE'	=> 'topics',				'SET'		=> 'subject=\''.$forum_db->escape($subject).'\'',				'WHERE'		=> 'id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']			);			($hook = get_hook('ed_qr_update_subject')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'message=\''.$forum_db->escape($message).'\', hide_smilies=\''.$hide_smilies.'\'',			'WHERE'		=> 'id='.$id		);		if (!isset($_POST['silent']) || !$forum_page['is_admmod'])			$query['SET'] .= ', edited='.time().', edited_by=\''.$forum_db->escape($forum_user['username']).'\'';		($hook = get_hook('ed_qr_update_post')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		($hook = get_hook('ed_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['post'], $id), $lang_post['Edit redirect']);	}}// Setup error messagesif (!empty($errors)){	$forum_page['errors'] = array();	foreach ($errors as $cur_error)		$forum_page['errors'][] = '<li><span>'.$cur_error.'</span></li>';}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['edit'], $id);$forum_page['form_attributes'] = array();$forum_page['hidden_fields'] = array(	'form_sent'		=> '<input type="hidden" name="form_sent" value="1" />',	'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />');// Setup help$forum_page['main_head_options'] = array();if ($forum_config['p_message_bbcode'] == '1')	$forum_page['text_options']['bbcode'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'bbcode').'" title="'.sprintf($lang_common['Help page'], $lang_common['BBCode']).'">'.$lang_common['BBCode'].'</a></span>';if ($forum_config['p_message_img_tag'] == '1')	$forum_page['text_options']['img'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'img').'" title="'.sprintf($lang_common['Help page'], $lang_common['Images']).'">'.$lang_common['Images'].'</a></span>';if ($forum_config['o_smilies'] == '1')	$forum_page['text_options']['smilies'] = '<span'.(empty($forum_page['text_options']) ? ' class="first-item"' : '').'><a class="exthelp" href="'.forum_link($forum_url['help'], 'smilies').'" title="'.sprintf($lang_common['Help page'], $lang_common['Smilies']).'">'.$lang_common['Smilies'].'</a></span>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_post['forum_name'], forum_link($forum_url['forum'], array($cur_post['fid'], sef_friendly($cur_post['forum_name'])))),	array($cur_post['subject'], forum_link($forum_url['topic'], array($cur_post['tid'], sef_friendly($cur_post['subject'])))),	(($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply']));($hook = get_hook('ed_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'postedit');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ed_main_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo ($id == $cur_post['first_post_id']) ? $lang_post['Edit topic'] : $lang_post['Edit reply'] ?></span></h2>	</div><?php// If preview selected and there are no errorsif (isset($_POST['preview']) && empty($forum_page['errors'])){	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	// Generate the post heading	$forum_page['post_ident'] = array();	$forum_page['post_ident']['num'] = '<span class="post-num">#</span>';	$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($id == $cur_post['first_post_id']) ? $lang_post['Topic byline'] : $lang_post['Reply byline']), '<strong>'.forum_htmlencode($cur_post['poster']).'</strong>').'</span>';	$forum_page['post_ident']['link'] = '<span class="post-link">'.format_time(time()).'</span>';	$forum_page['preview_message'] = parse_message($message, $hide_smilies);	($hook = get_hook('ed_preview_pre_display')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $id == $cur_post['first_post_id'] ? $lang_post['Preview edited topic'] : $lang_post['Preview edited reply'] ?></span></h2>	</div>	<div id="post-preview" class="main-content main-frm">		<div class="post singlepost">			<div class="posthead">				<h3 class="hn"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('ed_preview_new_post_head_option')) ? eval($hook) : null; ?>			</div>			<div class="postbody">				<div class="post-entry">					<div class="entry-content">						<?php echo $forum_page['preview_message']."\n" ?>					</div><?php ($hook = get_hook('ed_preview_new_post_entry_data')) ? eval($hook) : null; ?>				</div>			</div>		</div>	</div><?php}?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Compose edited reply'] : $lang_post['Compose edited topic'] ?></span></h2>	</div>	<div id="post-form" class="main-content main-frm"><?php	if (!empty($forum_page['text_options']))		echo "\t\t".'<p class="ct-options options">'.sprintf($lang_common['You may use'], implode(' ', $forum_page['text_options'])).'</p>'."\n";// If there were any errors, show themif (isset($forum_page['errors'])){?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_post['Post errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form id="afocus" class="frm-form frm-ctrl-submit" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>"<?php if (!empty($forum_page['form_attributes'])) echo ' '.implode(' ', $forum_page['form_attributes']) ?>>			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('ed_pre_main_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_post['Edit post legend'] ?></strong></legend><?php ($hook = get_hook('ed_pre_subject')) ? eval($hook) : null; ?><?php if ($can_edit_subject): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Topic subject'] ?></span></label><br />						<span class="fld-input"><input id="fld<?php echo $forum_page['fld_count'] ?>" type="text" name="req_subject" size="70" maxlength="70" value="<?php echo forum_htmlencode(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" required /></span>					</div>				</div><?php endif; ($hook = get_hook('ed_pre_message_box')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea required">						<label for="fld<?php echo ++ $forum_page['fld_count'] ?>"><span><?php echo $lang_post['Write message'] ?></span></label>						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="req_message" rows="14" cols="95" required spellcheck="true"><?php echo forum_htmlencode(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea></span></div>					</div>				</div><?php$forum_page['checkboxes'] = array();if ($forum_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';	else		$forum_page['checkboxes']['hide_smilies'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="hide_smilies" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Hide smilies'].'</label></div>';}if ($forum_page['is_admmod']){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" checked="checked" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';	else		$forum_page['checkboxes']['silent'] = '<div class="mf-item"><span class="fld-input"><input type="checkbox" id="fld'.(++$forum_page['fld_count']).'" name="silent" value="1" /></span> <label for="fld'.$forum_page['fld_count'].'">'.$lang_post['Silent edit'].'</label></div>';}($hook = get_hook('ed_pre_checkbox_display')) ? eval($hook) : null;if (!empty($forum_page['checkboxes'])){?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="mf-box checkbox">						<?php echo implode("\n\t\t\t\t\t", $forum_page['checkboxes'])."\n"; ?>					</div><?php ($hook = get_hook('ed_pre_checkbox_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php}($hook = get_hook('ed_pre_main_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php($hook = get_hook('ed_main_fieldset_end')) ? eval($hook) : null;?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="submit_button" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Submit reply'] : $lang_post['Submit topic'] ?>" /></span>				<span class="submit"><input type="submit" name="preview" value="<?php echo ($id != $cur_post['first_post_id']) ? $lang_post['Preview reply'] : $lang_post['Preview topic'] ?>" /></span>			</div>		</form>	</div><?php$forum_id = $cur_post['fid'];($hook = get_hook('ed_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Forum management page. * * Allows administrators to add, modify, and remove forums. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('afo_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_forums.php';// Add a "default" forumif (isset($_POST['add_forum'])){	$add_to_cat = isset($_POST['add_to_cat']) ? intval($_POST['add_to_cat']) : 0;	if ($add_to_cat < 1)		message($lang_common['Bad request']);	$forum_name = forum_trim($_POST['forum_name']);	$position = intval($_POST['position']);	($hook = get_hook('afo_add_forum_form_submitted')) ? eval($hook) : null;	if ($forum_name == '')		message($lang_admin_forums['Must enter forum message']);	// Make sure the category we're adding to exists	$query = array(		'SELECT'	=> 'COUNT(c.id)',		'FROM'		=> 'categories AS c',		'WHERE'		=> 'c.id='.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_validate_category_id')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'INSERT'	=> 'forum_name, disp_position, cat_id',		'INTO'		=> 'forums',		'VALUES'	=> '\''.$forum_db->escape($forum_name).'\', '.$position.', '.$add_to_cat	);	($hook = get_hook('afo_add_forum_qr_add_forum')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forum added']);	($hook = get_hook('afo_add_forum_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum added']);}// Delete a forumelse if (isset($_GET['del_forum'])){	$forum_to_delete = intval($_GET['del_forum']);	if ($forum_to_delete < 1)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_forum_cancel']))		redirect(forum_link($forum_url['admin_forums']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('afo_del_forum_form_submitted')) ? eval($hook) : null;	if (isset($_POST['del_forum_comply']))	// Delete a forum with all posts	{		@set_time_limit(0);		// Prune all posts and topics		prune($forum_to_delete, 1, -1);		delete_orphans();		// Delete the forum and any forum specific group permissions		$query = array(			'DELETE'	=> 'forums',			'WHERE'		=> 'id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_delete_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum deleted']);		($hook = get_hook('afo_del_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum deleted']);	}	else	// If the user hasn't confirmed the delete	{		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$forum_to_delete		);		($hook = get_hook('afo_del_forum_qr_get_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_name = $forum_db->result($result);		if (is_null($forum_name) || $forum_name === false)			message($lang_common['Bad request']);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),			array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),			$lang_admin_forums['Delete forum']		);		($hook = get_hook('afo_del_forum_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'start');		define('FORUM_PAGE', 'admin-forums');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('afo_del_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Confirm delete forum'], forum_htmlencode($forum_name)) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?del_forum=<?php echo $forum_to_delete ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?del_forum='.$forum_to_delete) ?>" />			</div>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_forums['Delete forum warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_forum_comply" value="<?php echo $lang_admin_forums['Delete forum'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_forum_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('afo_del_forum_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Update forum positionselse if (isset($_POST['update_positions'])){	$positions = array_map('intval', $_POST['position']);	($hook = get_hook('afo_update_positions_form_submitted')) ? eval($hook) : null;	$query = array(		'SELECT'	=> 'f.id, f.disp_position',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			)		),		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('afo_update_positions_qr_get_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_forum = $forum_db->fetch_assoc($result))	{		// If these aren't set, we're looking at a forum that was added after		// the admin started editing: we don't want to mess with it		if (isset($positions[$cur_forum['id']]))		{			$new_disp_position = $positions[$cur_forum['id']];			if ($new_disp_position < 0)				message($lang_admin_forums['Must be integer']);			// We only want to update if we changed the position			if ($cur_forum['disp_position'] != $new_disp_position)			{				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'disp_position='.$new_disp_position,					'WHERE'		=> 'id='.$cur_forum['id']				);				($hook = get_hook('afo_update_positions_qr_update_forum_position')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}	}	// Regenerate the quickjump cache	require_once FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info($lang_admin_forums['Forums updated']);	($hook = get_hook('afo_update_positions_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forums updated']);}else if (isset($_GET['edit_forum'])){	$forum_id = intval($_GET['edit_forum']);	if ($forum_id < 1)		message($lang_common['Bad request']);	($hook = get_hook('afo_edit_forum_selected')) ? eval($hook) : null;	// Fetch forum info	$query = array(		'SELECT'	=> 'f.id, f.forum_name, f.forum_desc, f.redirect_url, f.num_topics, f.sort_by, f.cat_id',		'FROM'		=> 'forums AS f',		'WHERE'		=> 'f.id='.$forum_id	);	($hook = get_hook('afo_edit_forum_qr_get_forum_details')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_forum = $forum_db->fetch_assoc($result);	if (is_null($cur_forum) || $cur_forum === false)		message($lang_common['Bad request']);	// Update group permissions for $forum_id	if (isset($_POST['save']))	{		($hook = get_hook('afo_save_forum_form_submitted')) ? eval($hook) : null;		// Start with the forum details		$forum_name = forum_trim($_POST['forum_name']);		$forum_desc = forum_linebreaks(forum_trim($_POST['forum_desc']));		$cat_id = intval($_POST['cat_id']);		$sort_by = intval($_POST['sort_by']);		$redirect_url = isset($_POST['redirect_url']) && $cur_forum['num_topics'] == 0 ? forum_trim($_POST['redirect_url']) : null;		if ($forum_name == '')			message($lang_admin_forums['Must enter forum message']);		if ($cat_id < 1)			message($lang_common['Bad request']);		$forum_desc = ($forum_desc != '') ? '\''.$forum_db->escape($forum_desc).'\'' : 'NULL';		$redirect_url = ($redirect_url != '') ? '\''.$forum_db->escape($redirect_url).'\'' : 'NULL';		$query = array(			'UPDATE'	=> 'forums',			'SET'		=> 'forum_name=\''.$forum_db->escape($forum_name).'\', forum_desc='.$forum_desc.', redirect_url='.$redirect_url.', sort_by='.$sort_by.', cat_id='.$cat_id,			'WHERE'		=> 'id='.$forum_id		);		($hook = get_hook('afo_save_forum_qr_update_forum')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Now let's deal with the permissions		if (isset($_POST['read_forum_old']))		{			$query = array(				'SELECT'	=> 'g.g_id, g.g_read_board, g.g_post_replies, g.g_post_topics',				'FROM'		=> 'groups AS g',				'WHERE'		=> 'g_id!='.FORUM_ADMIN			);			($hook = get_hook('afo_save_forum_qr_get_groups')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_group = $forum_db->fetch_assoc($result))			{				// The default permissions for this group				$perms_default = array(					'read_forum'	=>	$cur_group['g_read_board'],					'post_replies'	=>	$cur_group['g_post_replies'],					'post_topics'	=>	$cur_group['g_post_topics']				);				// The old permissions for this group				$perms_old = array(					'read_forum'	=>	$_POST['read_forum_old'][$cur_group['g_id']],					'post_replies'	=>	$_POST['post_replies_old'][$cur_group['g_id']],					'post_topics'	=>	$_POST['post_topics_old'][$cur_group['g_id']]				);				// The new permissions for this group				$perms_new = array(					'read_forum'	=>	($cur_group['g_read_board'] == '1') ? isset($_POST['read_forum_new'][$cur_group['g_id']]) ? '1' : '0' : intval($_POST['read_forum_old'][$cur_group['g_id']]),					'post_replies'	=>	isset($_POST['post_replies_new'][$cur_group['g_id']]) ? '1' : '0',					'post_topics'	=>	isset($_POST['post_topics_new'][$cur_group['g_id']]) ? '1' : '0'				);				($hook = get_hook('afo_save_forum_pre_perms_compare')) ? eval($hook) : null;				// Force all permissions values to integers				$perms_default = array_map('intval', $perms_default);				$perms_old = array_map('intval', $perms_old);				$perms_new = array_map('intval', $perms_new);				// Check if the new permissions differ from the old				if ($perms_new !== $perms_old)				{					// If the new permissions are identical to the default permissions for this group, delete its row in forum_perms					if ($perms_new === $perms_default)					{						$query = array(							'DELETE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						($hook = get_hook('afo_save_forum_qr_delete_group_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);					}					else					{						// Run an UPDATE and see if it affected a row, if not, INSERT						$query = array(							'UPDATE'	=> 'forum_perms',							'WHERE'		=> 'group_id='.$cur_group['g_id'].' AND forum_id='.$forum_id						);						$perms_new_values = array();						foreach ($perms_new as $key => $value)							$perms_new_values[] = $key.'='.$value;						$query['SET'] = implode(', ', $perms_new_values);						($hook = get_hook('afo_save_forum_qr_update_forum_perms')) ? eval($hook) : null;						$forum_db->query_build($query) or error(__FILE__, __LINE__);						if (!$forum_db->affected_rows())						{							$query = array(								'INSERT'	=> 'group_id, forum_id',								'INTO'		=> 'forum_perms',								'VALUES'	=> $cur_group['g_id'].', '.$forum_id							);							$query['INSERT'] .= ', '.implode(', ', array_keys($perms_new));							$query['VALUES'] .= ', '.implode(', ', $perms_new);							($hook = get_hook('afo_save_forum_qr_add_forum_perms')) ? eval($hook) : null;							$forum_db->query_build($query) or error(__FILE__, __LINE__);						}					}				}			}		}		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_forums['Forum updated']);		($hook = get_hook('afo_save_forum_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']), $lang_admin_forums['Forum updated']);	}	else if (isset($_POST['revert_perms']))	{		($hook = get_hook('afo_revert_perms_form_submitted')) ? eval($hook) : null;		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'forum_id='.$forum_id		);		($hook = get_hook('afo_revert_perms_qr_revert_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		($hook = get_hook('afo_revert_perms_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id, $lang_admin_forums['Permissions reverted']);	}	$forum_page['form_info'] = array();	if ($cur_forum['redirect_url'])		$forum_page['form_info'][] = '<li><span>'.$lang_admin_forums['Forum perms redirect info'].'</span></li>';	$forum_page['form_info']['read'] = '<li><span>'.$lang_admin_forums['Forum perms read info'].'</span></li>';	$forum_page['form_info']['restore'] = '<li><span>'.$lang_admin_forums['Forum perms restore info'].'</span></li>';	$forum_page['form_info']['groups'] = '<li><span>'. sprintf($lang_admin_forums['Forum perms groups info'], '<a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_forums['User groups'].'</a>').'</span></li>';	$forum_page['form_info']['admins'] = '<li><span>'.$lang_admin_forums['Forum perms admins info'].'</span></li>';	// Setup the form	$forum_page['item_count'] = $forum_page['group_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])),		$lang_admin_forums['Edit forum']	);	($hook = get_hook('afo_edit_forum_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'start');	define('FORUM_PAGE', 'admin-forums');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('afo_edit_forum_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_forums['Edit forum head'], forum_htmlencode($cur_forum['forum_name'])) ?></span></h2>	</div>	<div class="main-content main-frm">		<form method="post" class="frm-form" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?edit_forum=<?php echo $forum_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?edit_forum='.$forum_id) ?>" />			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum details head'] ?></span></h3>			</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum details legend'] ?></strong></legend><?php ($hook = get_hook('afo_edit_forum_pre_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" value="<?php echo forum_htmlencode($cur_forum['forum_name']) ?>" required /></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_descrip')) ? eval($hook) : null; ?>				<div class="txt-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="txt-box textarea">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum description'] ?></span> <small><?php echo $lang_admin_forums['Forum description help'] ?></small></label><br />						<div class="txt-input"><span class="fld-input"><textarea id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_desc" rows="3" cols="50"><?php echo forum_htmlencode($cur_forum['forum_desc']) ?></textarea></span></div>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Category assignment'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="cat_id"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_edit_forum_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))	{		$selected = ($cur_cat['id'] == $cur_forum['cat_id']) ? ' selected="selected"' : '';		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'"'.$selected.'>'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Sort topics by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">							<option value="0"<?php if ($cur_forum['sort_by'] == '0') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort last post'] ?></option>							<option value="1"<?php if ($cur_forum['sort_by'] == '1') echo ' selected="selected"' ?>><?php echo $lang_admin_forums['Sort topic start'] ?></option><?php ($hook = get_hook('afo_edit_forum_modify_sort_by')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_forum_redirect_url')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Redirect URL'] ?></span></label><br />						<span class="fld-input"><?php echo ($cur_forum['num_topics']) ? '<input type="url" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.$lang_admin_forums['Only for empty forums'].'" disabled="disabled" />' : '<input type="text" id="fld'.$forum_page['fld_count'].'" name="redirect_url" size="45" maxlength="100" value="'.forum_htmlencode($cur_forum['redirect_url']).'" />'; ?></span>					</div>				</div><?php ($hook = get_hook('afo_edit_forum_pre_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php($hook = get_hook('afo_edit_forum_details_fieldset_end')) ? eval($hook) : null;// Reset fieldset counter$forum_page['group_count'] = $forum_page['item_count'] = 0;($hook = get_hook('afo_edit_forum_pre_permissions_part')) ? eval($hook) : null;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_forums['Edit forum perms head'] ?></span></h3>			</div>			<div class="ct-box">				<ul>					<?php echo implode("\n\t\t\t\t\t", $forum_page['form_info'])."\n" ?>				</ul>			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Edit forum perms legend'] ?></strong></legend><?php	$i = 2;	$query = array(		'SELECT'	=> 'g.g_id, g.g_title, g.g_read_board, g.g_post_replies, g.g_post_topics, fp.read_forum, fp.post_replies, fp.post_topics',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> 'g.g_id=fp.group_id AND fp.forum_id='.$forum_id			)		),		'WHERE'		=> 'g.g_id!='.FORUM_ADMIN,		'ORDER BY'	=> 'g.g_id'	);	($hook = get_hook('afo_qr_get_forum_perms')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_perm = $forum_db->fetch_assoc($result))	{		$read_forum = ($cur_perm['read_forum'] != '0') ? true : false;		$post_replies = (($cur_perm['g_post_replies'] == '0' && $cur_perm['post_replies'] == '1') || ($cur_perm['g_post_replies'] == '1' && $cur_perm['post_replies'] != '0')) ? true : false;		$post_topics = (($cur_perm['g_post_topics'] == '0' && $cur_perm['post_topics'] == '1') || ($cur_perm['g_post_topics'] == '1' && $cur_perm['post_topics'] != '0')) ? true : false;		// Determine if the current sittings differ from the default or not		$read_forum_def = ($cur_perm['read_forum'] == '0') ? false : true;		$post_replies_def = (($post_replies && $cur_perm['g_post_replies'] == '0') || (!$post_replies && ($cur_perm['g_post_replies'] == '' || $cur_perm['g_post_replies'] == '1'))) ? false : true;		$post_topics_def = (($post_topics && $cur_perm['g_post_topics'] == '0') || (!$post_topics && ($cur_perm['g_post_topics'] == '' || $cur_perm['g_post_topics'] == '1'))) ? false : true;($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo forum_htmlencode($cur_perm['g_title']) ?></span></legend>					<div class="mf-box mf-yesno"><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_read_forum_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="read_forum_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($read_forum) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_forum_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($read_forum) echo ' checked="checked"'; echo ($cur_perm['g_read_board'] == '0') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$read_forum_def) echo ' class="warn"' ?>><?php echo $lang_admin_forums['Read forum'] ?> <?php if (!$read_forum_def) echo $lang_admin_forums['Not default']  ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_replies_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_replies_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_replies) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_replies) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_replies_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post replies'] ?> <?php if (!$post_replies_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_post_topics_permission')) ? eval($hook) : null; ?>						<div class="mf-item">							<input type="hidden" name="post_topics_old[<?php echo $cur_perm['g_id'] ?>]" value="<?php echo ($post_topics) ? '1' : '0'; ?>" />							<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics_new[<?php echo $cur_perm['g_id'] ?>]" value="1"<?php if ($post_topics) echo ' checked="checked"'; echo ($cur_forum['redirect_url'] != '') ? ' disabled="disabled"' : ''; ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"<?php if (!$post_topics_def) echo ' class="warn"'; ?>><?php echo $lang_admin_forums['Post topics'] ?> <?php if (!$post_topics_def) echo $lang_admin_forums['Not default'] ?></label>						</div><?php ($hook = get_hook('afo_edit_forum_post_cur_group_post_topics_permission')) ? eval($hook) : null; ?>					</div><?php ($hook = get_hook('afo_edit_forum_pre_cur_group_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_forum_cur_group_permissions_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</fieldset>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="save" value="<?php echo $lang_admin_common['Save changes'] ?>" /></span>				<span class="submit"><input type="submit" name="revert_perms" value="<?php echo $lang_admin_forums['Restore defaults'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('afo_edit_forum_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['fld_count'] = $forum_page['group_count'] = $forum_page['item_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Start'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Forums'], forum_link($forum_url['admin_forums'])));($hook = get_hook('afo_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'start');define('FORUM_PAGE', 'admin-forums');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('afo_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Add forum head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=adddel">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=adddel') ?>" />			</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_forums['Add forum legend'] ?></strong></legend><?php ($hook = get_hook('afo_pre_new_forum_name')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Forum name label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="forum_name" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_position')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position" size="3" maxlength="3" /></span>					</div>				</div><?php ($hook = get_hook('afo_pre_new_forum_cat')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Add to category label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="add_to_cat"><?php	$query = array(		'SELECT'	=> 'c.id, c.cat_name',		'FROM'		=> 'categories AS c',		'ORDER BY'	=> 'c.disp_position'	);	($hook = get_hook('afo_qr_get_categories')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_cat = $forum_db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.forum_htmlencode($cur_cat['cat_name']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('afo_pre_add_forum_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('afo_add_forum_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_forum" value=" <?php echo $lang_admin_forums['Add forum'] ?> " /></span>			</div>		</form>	</div><?php// Display all the categories and forums$query = array(	'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.disp_position',	'FROM'		=> 'categories AS c',	'JOINS'		=> array(		array(			'INNER JOIN'	=> 'forums AS f',			'ON'			=> 'c.id=f.cat_id'		)	),	'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position');($hook = get_hook('afo_qr_get_cats_and_forums')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forums = array();while ($cur_forum = $forum_db->fetch_assoc($result)){	$forums[] = $cur_forum;}if (!empty($forums)){	// Reset fieldset counter	$forum_page['set_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_forums['Edit forums head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_forums']) ?>?action=edit">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_forums']).'?action=edit') ?>" />			</div><?php	$cur_category = 0;	$i = 2;	$forum_page['item_count'] = 0;	foreach ($forums as $cur_forum)	{		if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?		{			if ($i > 2) echo "\t\t\t".'</div>'."\n";			$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php printf($lang_admin_forums['Forums in category'], forum_htmlencode($cur_forum['cat_name'])) ?></span></h3>			</div>			<div class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>"><?php			$cur_category = $cur_forum['cid'];		}($hook = get_hook('afo_pre_edit_cur_forum_fieldset')) ? eval($hook) : null;?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php printf($lang_admin_forums['Edit or delete'], '<a href="'.forum_link($forum_url['admin_forums']).'?edit_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Edit'].'</a>', '<a href="'.forum_link($forum_url['admin_forums']).'?del_forum='.$cur_forum['fid'].'">'.$lang_admin_forums['Delete'].'</a>') ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('afo_pre_edit_cur_forum_name')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 forum-field">							<span class="aslabel"><?php echo $lang_admin_forums['Forum name'] ?></span>							<span class="fld-input"><?php echo forum_htmlencode($cur_forum['forum_name']) ?></span>						</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_position')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_forums['Position label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="position[<?php echo $cur_forum['fid'] ?>]" size="3" maxlength="3" value="<?php echo $cur_forum['disp_position'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('afo_pre_edit_cur_forum_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('afo_edit_cur_forum_fieldset_end')) ? eval($hook) : null;		++$i;	}?>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="update_positions" value="<?php echo $lang_admin_forums['Update positions'] ?>" /></span>			</div>		</form>	</div><?php}($hook = get_hook('afo_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Outputs the footer used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// START SUBST - <!-- forum_about -->ob_start();($hook = get_hook('ft_about_output_start')) ? eval($hook) : null;// Display the "Jump to" drop listif ($forum_user['g_read_board'] == '1' && $forum_config['o_quickjump'] == '1'){	($hook = get_hook('ft_about_pre_quickjump')) ? eval($hook) : null;	// Load cached quickjump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	if (!defined('FORUM_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache($forum_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$forum_user['g_id'].'.php';	}}($hook = get_hook('ft_about_pre_copyright')) ? eval($hook) : null;?>	<p id="copyright"><?php echo sprintf($lang_common['Powered by'], '<a href="http://punbb.informer.com/">PunBB</a>'.($forum_config['o_show_version'] == '1' ? ' '.$forum_config['o_cur_version'] : ''), '<a href="http://www.informer.com/">Informer Technologies, Inc</a>') ?></p><?php($hook = get_hook('ft_about_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_about -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_about -->// START SUBST - <!-- forum_debug -->if (defined('FORUM_DEBUG') || defined('FORUM_SHOW_QUERIES')){	ob_start();	($hook = get_hook('ft_debug_output_start')) ? eval($hook) : null;	// Display debug info (if enabled/defined)	if (defined('FORUM_DEBUG'))	{		// Calculate script generation time		$time_diff = forum_number_format(forum_microtime() - $forum_start, 3);		echo '<p id="querytime" class="quiet">'.sprintf($lang_common['Querytime'], $time_diff, forum_number_format($forum_db->get_num_queries())).'</p>'."\n";	}	if (defined('FORUM_SHOW_QUERIES'))		echo get_saved_queries();	($hook = get_hook('ft_debug_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_debug -->', $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_debug -->// START SUBST - <!-- forum_javascript -->$forum_javascript_commonjs_urls = '	if (typeof PUNBB === "undefined" || !PUNBB) {		var PUNBB = {};	}	PUNBB.env = {		base_url: "'.forum_htmlencode($base_url).'/",		base_js_url: "'.forum_htmlencode($base_url).'/include/js/",		user_lang: "'.forum_htmlencode($forum_user['language']).'",		user_style: "'.forum_htmlencode($forum_user['style']).'",		user_is_guest: "'.forum_htmlencode(($forum_user['is_guest'] == 1) ? "1" : "0").'",		page: "'.forum_htmlencode((defined("FORUM_PAGE")) ? FORUM_PAGE : "unknown" ).'",	};';$forum_loader->add_js($forum_javascript_commonjs_urls, array('type' => 'inline', 'weight' => 50, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/LAB.src.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));//$forum_loader->add_js('include/js/punbb.common.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.common.min.js', array('type' => 'file', 'weight' => 55, 'async' => false, 'group' => FORUM_JS_GROUP_SYSTEM));$forum_loader->add_js('include/js/min/punbb.mobile.min.js', array('type' => 'file', 'weight' => 60, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));//$forum_loader->add_js('include/js/min/jquery-1.5.2.min.js', array('type' => 'file', 'weight' => 10, 'async' => false, 'group' => FORUM_JS_GROUP_DEFAULT));($hook = get_hook('ft_js_include')) ? eval($hook) : null;$tpl_main = str_replace('<!-- forum_javascript -->', $forum_loader->render_js(), $tpl_main);// END SUBST - <!-- forum_javascript -->// Last call!($hook = get_hook('ft_end')) ? eval($hook) : null;// End the transaction$forum_db->end_transaction();// Close the db connection (and free up any result data)$forum_db->close();// Spit out the pageexit($tpl_main);
<?php/** * External syndication script * * Allows forum content to be syndicated outside of the site in various formats * (ie: RSS, Atom, XML, HTML). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB *//***********************************************************************  INSTRUCTIONS  This script is used to include information about your board from  pages outside the forums and to syndicate news about recent  discussions via RSS/Atom/XML. The script can display a list of  recent discussions, a list of active users or a collection of  general board statistics. The script can be called directly via  an URL, from a PHP include command or through the use of Server  Side Includes (SSI).  The scripts behaviour is controlled via variables supplied in the  URL to the script. The different variables are: action (what to  do), show (how many items to display), fid (the ID or ID's of  the forum(s) to poll for topics), nfid (the ID or ID's of forums  that should be excluded), tid (the ID of the topic from which to  display posts) and type (output as HTML or RSS). The only  mandatory variable is action. Possible/default values are:    action: feed - show most recent topics/posts (HTML or RSS)            online - show users online (HTML)            online_full - as above, but includes a full list (HTML)            stats - show board statistics (HTML)    type:   rss - output as RSS 2.0            atom - output as Atom 1.0            xml - output as XML            html - output as HTML (<li>'s)    fid:    One or more forum ID's (comma-separated). If ignored,            topics from all readable forums will be pulled.    nfid:   One or more forum ID's (comma-separated) that are to be            excluded. E.g. the ID of a a test forum.    tid:    A topic ID from which to show posts. If a tid is supplied,            fid and nfid are ignored.    show:   Any integer value between 1 and 50. The default is 15./***********************************************************************/define('FORUM_QUIET_VISIT', 1);if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ex_start')) ? eval($hook) : null;// The length at which topic subjects will be truncated (for HTML output)if (!defined('FORUM_EXTERN_MAX_SUBJECT_LENGTH'))    define('FORUM_EXTERN_MAX_SUBJECT_LENGTH', 30);// If we're a guest and we've sent a username/pass, we can try to authenticate using those detailsif ($forum_user['is_guest'] && isset($_SERVER['PHP_AUTH_USER']))	authenticate_user($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']);if ($forum_user['g_read_board'] == '0'){	http_authenticate_user();	exit($lang_common['No view']);}$action = isset($_GET['action']) ? $_GET['action'] : 'feed';//// Sends the proper headers for Basic HTTP Authentication//function http_authenticate_user(){	global $forum_config, $forum_user;	if (!$forum_user['is_guest'])		return;	header('WWW-Authenticate: Basic realm="'.$forum_config['o_board_title'].' External Syndication"');	header('HTTP/1.0 401 Unauthorized');}//// Output $feed as RSS 2.0//function output_rss($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<channel>'."\n";	echo "\t\t".'<title><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t\t".'<link>'.$feed['link'].'</link>'."\n";	echo "\t\t".'<atom:link href="'.forum_htmlencode(get_current_url()).'" rel="self" type="application/rss+xml" />'."\n";	echo "\t\t".'<description><![CDATA['.escape_cdata($feed['description']).']]></description>'."\n";	echo "\t\t".'<lastBuildDate>'.gmdate('r', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</lastBuildDate>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t\t".'<generator>PunBB '.$forum_config['o_cur_version'].'</generator>'."\n";	else		echo "\t\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_rss_info')) ? eval($hook) : null;	foreach ($feed['items'] as $item)	{		echo "\t\t".'<item>'."\n";		echo "\t\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t\t".'<description><![CDATA['.escape_cdata($item['description']).']]></description>'."\n";		echo "\t\t\t".'<author><![CDATA['.(isset($item['author']['email']) ? escape_cdata($item['author']['email']) : 'null@example.com').' ('.escape_cdata($item['author']['name']).')]]></author>'."\n";		echo "\t\t\t".'<pubDate>'.gmdate('r', $item['pubdate']).'</pubDate>'."\n";		echo "\t\t\t".'<guid>'.$item['link'].'</guid>'."\n";		($hook = get_hook('ex_add_new_rss_item_info')) ? eval($hook) : null;		echo "\t\t".'</item>'."\n";	}	echo "\t".'</channel>'."\n";	echo '</rss>'."\n";}//// Output $feed as Atom 1.0//function output_atom($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: text/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<feed xmlns="http://www.w3.org/2005/Atom">'."\n";	echo "\t".'<title type="html"><![CDATA['.escape_cdata($feed['title']).']]></title>'."\n";	echo "\t".'<link rel="self" href="'.forum_htmlencode(get_current_url()).'"/>'."\n";	echo "\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', count($feed['items']) ? $feed['items'][0]['pubdate'] : time()).'</updated>'."\n";	if ($forum_config['o_show_version'] == '1')		echo "\t".'<generator version="'.$forum_config['o_cur_version'].'">PunBB</generator>'."\n";	else		echo "\t".'<generator>PunBB</generator>'."\n";	($hook = get_hook('ex_add_new_atom_info')) ? eval($hook) : null;	echo "\t".'<id>'.$feed['link'].'</id>'."\n";	$content_tag = ($feed['type'] == 'posts') ? 'content' : 'summary';	foreach ($feed['items'] as $item)	{		echo "\t\t".'<entry>'."\n";		echo "\t\t\t".'<title type="html"><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t\t".'<link rel="alternate" href="'.$item['link'].'"/>'."\n";		echo "\t\t\t".'<'.$content_tag.' type="html"><![CDATA['.escape_cdata($item['description']).']]></'.$content_tag.'>'."\n";		echo "\t\t\t".'<author>'."\n";		echo "\t\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t\t".'</author>'."\n";		echo "\t\t\t".'<updated>'.gmdate('Y-m-d\TH:i:s\Z', $item['pubdate']).'</updated>'."\n";		($hook = get_hook('ex_add_new_atom_item_info')) ? eval($hook) : null;		echo "\t\t\t".'<id>'.$item['link'].'</id>'."\n";		echo "\t\t".'</entry>'."\n";	}	echo '</feed>'."\n";}//// Output $feed as XML//function output_xml($feed){	global $lang_common, $forum_config;	// Send XML/no cache headers	header('Content-Type: application/xml; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo '<?xml version="1.0" encoding="utf-8"?>'."\n";	echo '<source>'."\n";	echo "\t".'<url>'.$feed['link'].'</url>'."\n";	($hook = get_hook('ex_add_new_xml_info')) ? eval($hook) : null;	$forum_tag = ($feed['type'] == 'posts') ? 'post' : 'topic';	foreach ($feed['items'] as $item)	{		echo "\t".'<'.$forum_tag.' id="'.$item['id'].'">'."\n";		echo "\t\t".'<title><![CDATA['.escape_cdata($item['title']).']]></title>'."\n";		echo "\t\t".'<link>'.$item['link'].'</link>'."\n";		echo "\t\t".'<content><![CDATA['.escape_cdata($item['description']).']]></content>'."\n";		echo "\t\t".'<author>'."\n";		echo "\t\t\t".'<name><![CDATA['.escape_cdata($item['author']['name']).']]></name>'."\n";		if (isset($item['author']['email']))			echo "\t\t\t".'<email><![CDATA['.escape_cdata($item['author']['email']).']]></email>'."\n";		if (isset($item['author']['uri']))			echo "\t\t\t".'<uri>'.$item['author']['uri'].'</uri>'."\n";		echo "\t\t".'</author>'."\n";		echo "\t\t".'<posted>'.gmdate('r', $item['pubdate']).'</posted>'."\n";		($hook = get_hook('ex_add_new_xml_item_info')) ? eval($hook) : null;		echo "\t".'</'.$forum_tag.'>'."\n";	}	echo '</source>'."\n";}//// Output $feed as HTML (using <li> tags)//function output_html($feed){	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	foreach ($feed['items'] as $item)	{		if (utf8_strlen($item['title']) > FORUM_EXTERN_MAX_SUBJECT_LENGTH)			$subject_truncated = forum_htmlencode(forum_trim(utf8_substr($item['title'], 0, (FORUM_EXTERN_MAX_SUBJECT_LENGTH - 5)))).'';		else			$subject_truncated = forum_htmlencode($item['title']);		echo '<li><a href="'.$item['link'].'" title="'.forum_htmlencode($item['title']).'">'.$subject_truncated.'</a></li>'."\n";	}}// Show recent discussionsif ($action == 'feed'){	// Determine what type of feed to output	$type = isset($_GET['type']) && in_array($_GET['type'], array('html', 'rss', 'atom', 'xml')) ? $_GET['type'] : 'html';	$show = isset($_GET['show']) ? intval($_GET['show']) : 15;	if ($show < 1 || $show > 50)		$show = 15;	($hook = get_hook('ex_set_syndication_type')) ? eval($hook) : null;	// Was a topic ID supplied?	if (isset($_GET['tid']))	{		$tid = intval($_GET['tid']);		// Fetch topic subject		$query = array(			'SELECT'	=> 't.subject, t.first_post_id',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id='.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.moved_to IS NULL and t.id='.$tid		);		($hook = get_hook('ex_qr_get_topic_data')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$cur_topic = $forum_db->fetch_assoc($result);		if (!$cur_topic)		{			http_authenticate_user();			exit($lang_common['Bad request']);		}		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$lang_common['Title separator'].$cur_topic['subject'],			'link'			=>	forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))),			'description'	=>	sprintf($lang_common['RSS description topic'], $cur_topic['subject']),			'items'			=>	array(),			'type'			=>	'posts'		);		// Fetch $show posts		$query = array(			'SELECT'	=> 'p.id, p.poster, p.message, p.hide_smilies, p.posted, p.poster_id, u.email_setting, u.email, p.poster_email',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				)			),			'WHERE'		=> 'p.topic_id='.$tid,			'ORDER BY'	=> 'p.posted DESC',			'LIMIT'		=> $show		);		($hook = get_hook('ex_qr_get_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_post = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')				$cur_post['message'] = censor_words($cur_post['message']);			$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);			$item = array(				'id'			=>	$cur_post['id'],				'title'			=>	$cur_topic['first_post_id'] == $cur_post['id'] ? $cur_topic['subject'] : $lang_common['RSS reply'].$cur_topic['subject'],				'link'			=>	forum_link($forum_url['post'], $cur_post['id']),				'description'	=>	$cur_post['message'],				'author'		=>	array(					'name'	=> $cur_post['poster'],				),				'pubdate'		=>	$cur_post['posted']			);			if ($cur_post['poster_id'] > 1)			{				if ($cur_post['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_post['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_post['poster_id']);			}			else if ($cur_post['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_post['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_post_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_topic_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	else	{		$forum_name = '';		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Were any forum ID's supplied?		if (isset($_GET['fid']) && is_scalar($_GET['fid']) && $_GET['fid'] != '')		{			$fids = explode(',', forum_trim($_GET['fid']));			$fids = array_map('intval', $fids);			if (!empty($fids))				$forum_sql = ' AND t.forum_id IN('.implode(',', $fids).')';			if (count($fids) == 1)			{				// Fetch forum name				$query = array(					'SELECT'	=> 'f.forum_name',					'FROM'		=> 'forums AS f',					'JOINS'		=> array(						array(							'LEFT JOIN'		=> 'forum_perms AS fp',							'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'						)					),					'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fids[0]				);				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$forum_name_in_db = $forum_db->result($result);				if ($forum_name_in_db !== false)					$forum_name = $lang_common['Title separator'].$forum_name_in_db;			}		}		// Any forum ID's to exclude?		if (isset($_GET['nfid']) && is_scalar($_GET['nfid']) && $_GET['nfid'] != '')		{			$nfids = explode(',', forum_trim($_GET['nfid']));			$nfids = array_map('intval', $nfids);			if (!empty($nfids))				$forum_sql = ' AND t.forum_id NOT IN('.implode(',', $nfids).')';		}		// Setup the feed		$feed = array(			'title' 		=>	$forum_config['o_board_title'].$forum_name,			'link'			=>	forum_link($forum_url['index']),			'description'	=>	sprintf($lang_common['RSS description'], $forum_config['o_board_title']),			'items'			=>	array(),			'type'			=>	'topics'		);		// Fetch $show topics		$query = array(			'SELECT'	=> 't.id, t.poster, t.posted, t.subject, p.message, p.hide_smilies, u.email_setting, u.email, p.poster_id, p.poster_email',			'FROM'		=> 'topics AS t',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'posts AS p',					'ON'			=> 'p.id = t.first_post_id'				),				array(					'INNER JOIN'	=> 'users AS u',					'ON'			=> 'u.id = p.poster_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id = t.forum_id AND fp.group_id = '.$forum_user['g_id'].')'				)			),			'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum = 1) AND t.moved_to IS NULL',			'ORDER BY'	=> 't.posted DESC',			'LIMIT'		=> $show		);		if (isset($forum_sql))			$query['WHERE'] .= $forum_sql;		($hook = get_hook('ex_qr_get_topics')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_topic = $forum_db->fetch_assoc($result))		{			if ($forum_config['o_censoring'] == '1')			{				$cur_topic['subject'] = censor_words($cur_topic['subject']);				$cur_topic['message'] = censor_words($cur_topic['message']);			}			$cur_topic['message'] = parse_message($cur_topic['message'], $cur_topic['hide_smilies']);			$item = array(				'id'			=>	$cur_topic['id'],				'title'			=>	$cur_topic['subject'],				'link'			=>	forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))),				'description'	=>	$cur_topic['message'],				'author'		=>	array(					'name'			=> $cur_topic['poster']				),				'pubdate'		=>	$cur_topic['posted']			);			if ($cur_topic['poster_id'] > 1)			{				if ($cur_topic['email_setting'] == '0' && !$forum_user['is_guest'])					$item['author']['email'] = $cur_topic['email'];				$item['author']['uri'] = forum_link($forum_url['user'], $cur_topic['poster_id']);			}			else if ($cur_topic['poster_email'] != '' && !$forum_user['is_guest'])				$item['author']['email'] = $cur_topic['poster_email'];			$feed['items'][] = $item;			($hook = get_hook('ex_modify_cur_topic_item')) ? eval($hook) : null;		}		($hook = get_hook('ex_pre_forum_output')) ? eval($hook) : null;		$output_func = 'output_'.$type;		$output_func($feed);	}	exit;}// Show users onlineelse if ($action == 'online' || $action == 'online_full'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Fetch users online info and generate strings for output	$num_guests = $num_users = 0;	$users = array();	$query = array(		'SELECT'	=> 'o.user_id, o.ident',		'FROM'		=> 'online AS o',		'WHERE'		=> 'o.idle=0',		'ORDER BY'	=> 'o.ident'	);	($hook = get_hook('ex_qr_get_users_online')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($forum_user_online = $forum_db->fetch_assoc($result))	{		if ($forum_user_online['user_id'] > 1)		{			$users[] = $forum_user['g_view_users'] == '1' ?'<a href="'.forum_link($forum_url['user'], $forum_user_online['user_id']).'">'.forum_htmlencode($forum_user_online['ident']).'</a>' : forum_htmlencode($forum_user_online['ident']);			++$num_users;		}		else			++$num_guests;	}	($hook = get_hook('ex_pre_online_output')) ? eval($hook) : null;	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	echo $lang_index['Guests online'].': '.forum_number_format($num_guests).'<br />'."\n";	if ($_GET['action'] == 'online_full' && !empty($users))		echo $lang_index['Users online'].': '.implode($lang_index['Online list separator'], $users).'<br />'."\n";	else		echo $lang_index['Users online'].': '.forum_number_format($num_users).'<br />'."\n";	exit;}// Show board statisticselse if ($action == 'stats'){	// Load the index.php language file	require FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/index.php';	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ex_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ex_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ex_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	// Send the Content-type header in case the web server is setup to send something else	header('Content-type: text/html; charset=utf-8');	header('Expires: '.gmdate('D, d M Y H:i:s').' GMT');	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');	header('Pragma: public');	($hook = get_hook('ex_pre_stats_output')) ? eval($hook) : null;	echo sprintf($lang_index['No of users'], forum_number_format($stats['total_users'])).'<br />'."\n";	echo sprintf($lang_index['Newest user'], '<a href="'.forum_link($forum_url['user'], $stats['last_user']['id']).'">'.forum_htmlencode($stats['last_user']['username']).'</a>').'<br />'."\n";	echo sprintf($lang_index['No of topics'], forum_number_format($stats['total_topics'])).'<br />'."\n";	echo sprintf($lang_index['No of posts'], forum_number_format($stats['total_posts'])).'<br />'."\n";	exit;}($hook = get_hook('ex_new_action')) ? eval($hook) : null;// If we end up here, the script was called with some wacky parametersexit($lang_common['Bad request']);
<?php/** * Caching functions. * * This file contains all of the functions used to generate the cache files used by the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Safe create or write of cache files// Use LOCKfunction write_cache_file($file, $content){	$tmp_file = tempnam(FORUM_CACHE_DIR, md5($file.time().uniqid()));	if (!$tmp_file)	{		return false;	}	$fh = @/**/fopen($tmp_file, 'wb');	if (!$fh)	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	// Write	fwrite($fh, $content);	fclose($fh);	// Rename TMP to file	if (!@/**/rename($tmp_file, $file))	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	return true;}//// Generate the config cache PHP script//function generate_config_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_config_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the forum config from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'config AS c'	);	($hook = get_hook('ch_fn_generate_config_cache_qr_get_config')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_config_item = $forum_db->fetch_row($result))		$output[$cur_config_item[0]] = $cur_config_item[1];	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_config.php', '<?php'."\n\n".'define(\'FORUM_CONFIG_LOADED\', 1);'."\n\n".'$forum_config = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the bans cache PHP script//function generate_bans_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_bans_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the ban list from the DB	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id'	);	($hook = get_hook('ch_fn_generate_bans_cache_qr_get_bans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_ban = $forum_db->fetch_assoc($result))		$output[] = $cur_ban;	// Output ban list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_bans.php', '<?php'."\n\n".'define(\'FORUM_BANS_LOADED\', 1);'."\n\n".'$forum_bans = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write bans cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the ranks cache PHP script//function generate_ranks_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_ranks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the rank list from the DB	$query = array(		'SELECT'	=> 'r.*',		'FROM'		=> 'ranks AS r',		'ORDER BY'	=> 'r.min_posts'	);	($hook = get_hook('ch_fn_generate_ranks_cache_qr_get_ranks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_rank = $forum_db->fetch_assoc($result))		$output[] = $cur_rank;	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ranks.php', '<?php'."\n\n".'define(\'FORUM_RANKS_LOADED\', 1);'."\n\n".'$forum_ranks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write ranks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the forum stats cache PHP script//function generate_stats_cache(){	global $forum_db;	$stats = array();	$return = ($hook = get_hook('ch_fn_generate_stats_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	// Get last registered user info	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	// Get num topics and posts	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	$stats['cached'] = time();	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_stats.php', '<?php'."\n\n".'if (!defined(\'FORUM_STATS_LOADED\')) define(\'FORUM_STATS_LOADED\', 1);'."\n\n".'$forum_stats = '.var_export($stats, true).';'."\n\n".'?>'))	{		error('Unable to write stats cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}	unset($stats);}//// Generate the censor cache PHP script//function generate_censors_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_censors_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the censor list from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'censoring AS c',		'ORDER BY'	=> 'c.search_for'	);	($hook = get_hook('ch_fn_generate_censors_cache_qr_get_censored_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_censor = $forum_db->fetch_assoc($result))		$output[] = $cur_censor;	// Output censors list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_censors.php', '<?php'."\n\n".'define(\'FORUM_CENSORS_LOADED\', 1);'."\n\n".'$forum_censors = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write censor cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate quickjump cache PHP scripts//function generate_quickjump_cache($group_id = false){	global $forum_db, $lang_common, $forum_url, $forum_config, $forum_user, $base_url;	$return = ($hook = get_hook('ch_fn_generate_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);'."\n".'$forum_id = isset($forum_id) ? $forum_id : 0;'."\n\n".'?>';		$output .= '<form id="qjump" method="get" accept-charset="utf-8" action="'.$base_url.'/viewforum.php">'."\n\t".'<div class="frm-fld frm-select">'."\n\t\t".'<label for="qjump-select"><span><?php echo $lang_common[\'Jump to\'] ?>'.'</span></label><br />'."\n\t\t".'<span class="frm-input"><select id="qjump-select" name="id">'."\n";		// Get the list of categories and forums from the DB		$query = array(			'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',			'FROM'		=> 'categories AS c',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'c.id=f.cat_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$group_id.')'				)			),			'WHERE'		=> 'fp.read_forum IS NULL OR fp.read_forum=1',			'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_cats_and_forums')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forums = array();		while ($cur_forum = $forum_db->fetch_assoc($result))		{			$forums[] = $cur_forum;		}		$cur_category = 0;		$forum_count = 0;		$sef_friendly_names = array();		foreach ($forums as $cur_forum)		{			($hook = get_hook('ch_fn_generate_quickjump_cache_forum_loop_start')) ? eval($hook) : null;			if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?			{				if ($cur_category)					$output .= "\t\t\t".'</optgroup>'."\n";				$output .= "\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";				$cur_category = $cur_forum['cid'];			}			$sef_friendly_names[$cur_forum['fid']] = sef_friendly($cur_forum['forum_name']);			$redirect_tag = ($cur_forum['redirect_url'] != '') ? ' &gt;&gt;&gt;' : '';			$output .= "\t\t\t\t".'<option value="'.$cur_forum['fid'].'"<?php echo ($forum_id == '.$cur_forum['fid'].') ? \' selected="selected"\' : \'\' ?>>'.forum_htmlencode($cur_forum['forum_name']).$redirect_tag.'</option>'."\n";			$forum_count++;		}		$output .= "\t\t\t".'</optgroup>'."\n\t\t".'</select>'."\n\t\t".'<input type="submit" id="qjump-submit" value="<?php echo $lang_common[\'Go\'] ?>" /></span>'."\n\t".'</div>'."\n".'</form>'."\n";		$output .= '<script type="text/javascript">'."\n\t\t".'var forum_quickjump_url = "'.forum_link($forum_url['forum']).'";'."\n\t\t".'var sef_friendly_url_array = new Array('.count($forums).');';		foreach ($sef_friendly_names as $forum_id => $forum_name)			$output .= "\n\t".'sef_friendly_url_array['.$forum_id.'] = "'.forum_htmlencode($forum_name).'";';		$output .= "\n".'</script>'."\n";		if ($forum_count < 2)			$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);';		// Output quickjump as PHP code		if (!write_cache_file(FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php', $output))		{			error('Unable to write quickjump cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);		}	}}//// Clean quickjump cache PHP scripts//function clean_quickjump_cache($group_id = false){	global $forum_db;	$return = ($hook = get_hook('ch_fn_clean_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_clean_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		// Output quickjump as PHP code		$qj_cache_file = FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php';		if (file_exists($qj_cache_file))		{			unlink($qj_cache_file);		}	}}//// Generate the hooks cache PHP script//function generate_hooks_cache(){	global $forum_db, $forum_config, $base_url;	$return = ($hook = get_hook('ch_fn_generate_hooks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the hooks from the DB	$query = array(		'SELECT'	=> 'eh.id, eh.code, eh.extension_id, e.dependencies',		'FROM'		=> 'extension_hooks AS eh',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'extensions AS e',				'ON'			=> 'e.id=eh.extension_id'			)		),		'WHERE'		=> 'e.disabled=0',		'ORDER BY'	=> 'eh.priority, eh.installed'	);	($hook = get_hook('ch_fn_generate_hooks_cache_qr_get_hooks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_hook = $forum_db->fetch_assoc($result))	{		$load_ext_info = '$GLOBALS[\'ext_info_stack\'][] = array('."\n".			'\'id\'				=> \''.$cur_hook['extension_id'].'\','."\n".			'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'dependencies\'	=> array ('."\n";		$dependencies = explode('|', substr($cur_hook['dependencies'], 1, -1));		foreach ($dependencies as $cur_dependency)		{			// This happens if there are no dependencies because explode ends up returning an array with one empty element			if (empty($cur_dependency))				continue;			$load_ext_info .= '\''.$cur_dependency.'\'	=> array('."\n".				'\'id\'				=> \''.$cur_dependency.'\','."\n".				'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_dependency.'\','."\n".				'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_dependency.'\'),'."\n";		}		$load_ext_info .= ')'."\n".');'."\n".'$ext_info = $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$unload_ext_info = 'array_pop($GLOBALS[\'ext_info_stack\']);'."\n".'$ext_info = empty($GLOBALS[\'ext_info_stack\']) ? array() : $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$output[$cur_hook['id']][] = $load_ext_info."\n\n".$cur_hook['code']."\n\n".$unload_ext_info."\n";	}	// Output hooks as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_hooks.php', '<?php'."\n\n".'define(\'FORUM_HOOKS_LOADED\', 1);'."\n\n".'$forum_hooks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write hooks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the updates cache PHP script//function generate_updates_cache(){	global $forum_db, $forum_config;	$return = ($hook = get_hook('ch_fn_generate_updates_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of installed hotfix extensions	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id LIKE \'hotfix_%\''	);	($hook = get_hook('ch_fn_generate_updates_cache_qr_get_hotfixes')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$hotfixes = array();	while ($cur_ext_hotfix_id = $forum_db->fetch_row($result))	{		$hotfixes[] = urlencode($cur_ext_hotfix_id[0]);	}	// Contact the punbb.informer.com updates service	$result = get_remote_file('http://punbb.informer.com/update/?type=xml&version='.urlencode($forum_config['o_cur_version']).'&hotfixes='.implode(',', $hotfixes), 8);	// Make sure we got everything we need	if ($result != null && strpos($result['content'], '</updates>') !== false)	{		if (!defined('FORUM_XML_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/xml.php';		$output = xml_to_array(forum_trim($result['content']));		$output = current($output);		if (!empty($output['hotfix']) && is_array($output['hotfix']) && !is_array(current($output['hotfix'])))			$output['hotfix'] = array($output['hotfix']);		$output['cached'] = time();		$output['fail'] = false;	}	else	// If the update check failed, set the fail flag		$output = array('cached' => time(), 'fail' => true);	// This hook could potentially (and responsibly) be used by an extension to do its own little update check	($hook = get_hook('ch_fn_generate_updates_cache_write')) ? eval($hook) : null;	// Output update status as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_updates.php', '<?php'."\n\n".'if (!defined(\'FORUM_UPDATES_LOADED\')) define(\'FORUM_UPDATES_LOADED\', 1);'."\n\n".'$forum_updates = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write updates cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}function generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension){	$forum_ext_last_versions = array();	$forum_ext_repos = array();	foreach (array_unique(array_merge($repository_urls, $repository_url_by_extension)) as $url)	{		//Get repository timestamp		$remote_file = get_remote_file( $url.'/timestamp', 2);		$repository_timestamp = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);		unset($remote_file);		if (!is_numeric($repository_timestamp))			continue;		if (!isset( $forum_ext_repos[ $url ][ 'timestamp' ] ))			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		if ($forum_ext_repos[ $url ][ 'timestamp' ] <= $repository_timestamp)		{			foreach ($inst_exts as $ext)			{				$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastversion', 2);				$version = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);				unset($remote_file);				if (empty($version) || !preg_match('~^[0-9a-zA-Z\. +-]+$~u', $version))					continue;				$forum_ext_repos[ $url ][ 'extension_versions' ][ $ext['id'] ] = $version;				//If key with current extension exist in array, compare it with version in rep-ry				if (!isset($forum_ext_last_versions[ $ext['id'] ]) || ( version_compare($forum_ext_last_versions[ $ext['id'] ][ 'version' ], $version, '<') ) )				{					$forum_ext_last_versions[ $ext['id'] ] = array('version' => $version, 'repo_url' => $url);					$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastchanges', 2);					$last_changes = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);					unset($remote_file);					if ( !empty($last_changes) )						$forum_ext_last_versions[ $ext['id'] ][ 'changes' ] = $last_changes;				}			}			//Write timestamp to cache			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		}	}	if (array_keys($forum_ext_last_versions) != array_keys($inst_exts))		foreach ($inst_exts as $ext)			if ( !in_array($ext['id'], array_keys($forum_ext_last_versions)) )				$forum_ext_last_versions[$ext['id']] = array('version' => $ext['version'], 'repo_url' => '', 'changes' => '');	($hook = get_hook('ch_generate_ext_versions_cache_check_repository')) ? eval($hook) : null;	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ext_version_notifications.php', '<?php'."\n\n".'if (!defined(\'FORUM_EXT_VERSIONS_LOADED\')) define(\'FORUM_EXT_VERSIONS_LOADED\', 1);'."\n\n".'$forum_ext_repos = '.var_export($forum_ext_repos, true).';'."\n\n".' $forum_ext_last_versions = '.var_export($forum_ext_last_versions, true).";\n\n".'$forum_ext_versions_update_cache = '.time().";\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}define('FORUM_CACHE_FUNCTIONS_LOADED', 1);
<?php/** * Database updating script. * * Updates the database to the latest version. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */define('UPDATE_TO', '1.4b1');define('UPDATE_TO_DB_REVISION', 5);// The number of items to process per pageview (lower this if the update script times out during UTF-8 conversion)define('PER_PAGE', 300);define('MIN_MYSQL_VERSION', '4.1.2');// Make sure we are running at least PHP 5.0.0if (!function_exists('version_compare') || version_compare(PHP_VERSION, '5.0.0', '<'))	exit('You are running PHP version '.PHP_VERSION.'. '.UPDATE_TO.' requires at least PHP 5.0.0 to run properly. You must upgrade your PHP installation before you can continue.');define('FORUM_ROOT', '../');// Attempt to load the configuration file config.phpif (file_exists(FORUM_ROOT.'config.php'))	include FORUM_ROOT.'config.php';if (defined('PUN'))	define('FORUM', 1);// If FORUM isn't defined, config.php is missing or corrupt or we are outside the root directoryif (!defined('FORUM'))	exit('Cannot find config.php, are you sure it exists?');// Enable debug modeif (!defined('FORUM_DEBUG'))	define('FORUM_DEBUG', 1);// Turn on full PHP error reportingerror_reporting(E_ALL);// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	@ini_set('magic_quotes_runtime', false);// Turn off PHP time limit@set_time_limit(0);// If a cookie name is not specified in config.php, we use the default (forum_cookie)if (empty($cookie_name))	$cookie_name = 'forum_cookie';// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', FORUM_ROOT.'cache/');// Load the functions scriptrequire FORUM_ROOT.'include/functions.php';// Load UTF-8 functionsrequire FORUM_ROOT.'include/utf8/utf8.php';require FORUM_ROOT.'include/utf8/ucwords.php';require FORUM_ROOT.'include/utf8/trim.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// If the request_uri is invalid try fix itif (!defined('FORUM_IGNORE_REQUEST_URI'))	forum_fix_request_uri();// Instruct DB abstraction layer that we don't want it to "SET NAMES". If we need to, we'll do it ourselves below.define('FORUM_NO_SET_NAMES', 1);// Load DB abstraction layer and try to connectrequire FORUM_ROOT.'include/dblayer/common_db.php';// Check current version$query = array(	'SELECT'	=> 'conf_value',	'FROM'		=> 'config',	'WHERE'		=> 'conf_name = \'o_cur_version\'');$result = $forum_db->query_build($query);$cur_version = $forum_db->result($result);if (version_compare($cur_version, '1.2', '<'))	error('Version mismatch. The database \''.$db_name.'\' doesn\'t seem to be running a PunBB database schema supported by this update script.', __FILE__, __LINE__);// If we've already done charset conversion in a previous update, we have to do SET NAMES$forum_db->set_names(strpos($cur_version, '1.3') === 0 ? 'utf8' : 'latin1');// If MySQL, make sure it's at least 4.1.2if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb'))){	$mysql_info = $forum_db->get_version();	if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))		error('You are running MySQL version '.$mysql_version.'. PunBB '.UPDATE_TO.' requires at least MySQL '.MIN_MYSQL_VERSION.' to run properly. You must upgrade your MySQL installation before you can continue.');}// Get the forum config$query = array(	'SELECT'	=> '*',	'FROM'		=> 'config');$result = $forum_db->query_build($query);while ($cur_config_item = $forum_db->fetch_row($result))	$forum_config[$cur_config_item[0]] = $cur_config_item[1];// Check the database revision and the current versionif (isset($forum_config['o_database_revision']) && $forum_config['o_database_revision'] >= UPDATE_TO_DB_REVISION && version_compare($forum_config['o_cur_version'], UPDATE_TO, '>='))	error('Your database is already as up-to-date as this script can make it.');// If $base_url isn't set, use o_base_url from configif (!isset($base_url))	$base_url = $forum_config['o_base_url'];// There's no $forum_user, but we need the style element// We default to Oxygen if the default style is invalid (a 1.2 to 1.3 upgrade most likely)if (file_exists(FORUM_ROOT.'style/'.$forum_config['o_default_style'].'/'.$forum_config['o_default_style'].'.php'))	$forum_user['style'] = $forum_config['o_default_style'];else{	$forum_user['style'] = 'Oxygen';	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'Oxygen\'',		'WHERE'		=> 'conf_name = \'o_default_style\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}// Make sure the default language exists// We default to English if the default language is invalid (a 1.2 to 1.3 upgrade most likely)if (!file_exists(FORUM_ROOT.'lang/'.$forum_config['o_default_lang'].'/common.php')){	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value = \'English\'',		'WHERE'		=> 'conf_name = \'o_default_lang\''	);	$forum_db->query_build($query) or error(__FILE__, __LINE__);}//// Determines whether $str is UTF-8 encoded or not//function seems_utf8($str){	$str_len = strlen($str);	for ($i = 0; $i < $str_len; ++$i)	{		if (ord($str[$i]) < 0x80) continue; # 0bbbbbbb		else if ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; # 110bbbbb		else if ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; # 1110bbbb		else if ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; # 11110bbb		else if ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; # 111110bb		else if ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; # 1111110b		else return false; # Does not match any model		for ($j = 0; $j < $n; ++$j) # n bytes matching 10bbbbbb follow ?		{			if ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))				return false;		}	}	return true;}//// Translates the number from an HTML numeric entity into an UTF-8 character//function dcr2utf8($src){	$dest = '';	if ($src < 0)		return false;	else if ($src <= 0x007f)		$dest .= chr($src);	else if ($src <= 0x07ff)	{		$dest .= chr(0xc0 | ($src >> 6));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src == 0xFEFF)	{		// nop -- zap the BOM	}	else if ($src >= 0xD800 && $src <= 0xDFFF)	{		// found a surrogate		return false;	}	else if ($src <= 0xffff)	{		$dest .= chr(0xe0 | ($src >> 12));		$dest .= chr(0x80 | (($src >> 6) & 0x003f));		$dest .= chr(0x80 | ($src & 0x003f));	}	else if ($src <= 0x10ffff)	{		$dest .= chr(0xf0 | ($src >> 18));		$dest .= chr(0x80 | (($src >> 12) & 0x3f));		$dest .= chr(0x80 | (($src >> 6) & 0x3f));		$dest .= chr(0x80 | ($src & 0x3f));	}	else	{		// out of range		return false;	}	return $dest;}//// Attemts to convert $str from $old_charset to UTF-8. Also converts HTML entities (including numeric entities) to UTF-8 characters.//function convert_to_utf8(&$str, $old_charset){	if ($str == '')		return false;	$save = $str;	// Replace literal entities (for non-UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '<') && $old_charset == 'ISO-8859-1' || $old_charset == 'ISO-8859-15')		$str = html_entity_decode($str, ENT_QUOTES, $old_charset);	if (!seems_utf8($str))	{		if ($old_charset == 'ISO-8859-1')			$str = utf8_encode($str);		else if (function_exists('iconv'))			$str = iconv($old_charset, 'UTF-8', $str);		else if (function_exists('mb_convert_encoding'))			$str = mb_convert_encoding($str, 'UTF-8', $old_charset);	}	// Replace literal entities (for UTF-8 compliant html_entity_encode)	if (version_compare(PHP_VERSION, '5.0.0', '>='))		$str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');	// Replace numeric entities	$str = preg_replace_callback('/&#([0-9]+);/', 'utf8_callback_1', $str);	$str = preg_replace_callback('/&#x([a-f0-9]+);/i', 'utf8_callback_2', $str);	return ($save != $str);}function utf8_callback_1($matches){	return dcr2utf8($matches[1]);}function utf8_callback_2($matches){	return dcr2utf8(hexdec($matches[1]));}//// Tries to determine whether post data in the database is UTF-8 encoded or not//function db_seems_utf8(){	global $db_type, $forum_db;	$seems_utf8 = true;	$query = array(		'SELECT'	=> 'MIN(id), MAX(id), COUNT(id)',		'FROM'		=> 'posts'	);	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($min_id, $max_id, $count_id) = $forum_db->fetch_row($result);	if ($count_id == 0)		return false;	// Get a random soup of data and check if it appears to be UTF-8	for ($i = 0; $i < 100; ++$i)	{		$id = ($i == 0) ? $min_id : (($i == 1) ? $max_id : rand($min_id, $max_id));		$query = array(			'SELECT'	=> 'p.message, p.poster, t.subject, f.forum_name',			'FROM'		=> 'posts AS p',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'topics AS t',					'ON'		=> 't.id = p.topic_id'				),				array(					'INNER JOIN'	=> 'forums AS f',					'ON'		=> 'f.id = t.forum_id'				)			),			'WHERE'		=> 'p.id >= '.$id,			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$random_row = $forum_db->fetch_row($result);		if (!seems_utf8($random_row[0].$random_row[1].$random_row[2].$random_row[3]))		{			$seems_utf8 = false;			break;		}	}	return $seems_utf8;}//// Safely converts text type columns into utf8 (MySQL only)// Function based on update_convert_table_utf8() from the Drupal project (http://drupal.org/)//function convert_table_utf8($table){	global $forum_db;	$types = array(		'char' 			=> 'binary',		'varchar'		=> 'varbinary',		'tinytext'		=> 'tinyblob',		'mediumtext'	=> 'mediumblob',		'text'			=> 'blob',		'longtext'		=> 'longblob'	);	// Set table default charset to utf8	$forum_db->query('ALTER TABLE `'.$table.'` CHARACTER SET utf8') or error(__FILE__, __LINE__);	// Find out which columns need converting and build SQL statements	$result = $forum_db->query('SHOW FULL COLUMNS FROM `'.$table.'`') or error(__FILE__, __LINE__);	while ($cur_column = $forum_db->fetch_assoc($result))	{		list($type) = explode('(', $cur_column['Type']);		if (isset($types[$type]) && strpos($cur_column['Collation'], 'utf8') === false)		{			$allow_null = ($cur_column['Null'] == 'YES');			$forum_db->alter_field($table, $cur_column['Field'], preg_replace('/'.$type.'/i', $types[$type], $cur_column['Type']), $allow_null, $cur_column['Default']);			$forum_db->alter_field($table, $cur_column['Field'], $cur_column['Type'].' CHARACTER SET utf8', $allow_null, $cur_column['Default']);		}	}}// Move avatars to DBfunction convert_avatars(){	global $forum_config, $forum_db;	$avatar_dir = FORUM_ROOT.'img/avatars/';	if (!is_dir($avatar_dir))	{		return false;	}	if ($handle = opendir($avatar_dir))	{		while (false !== ($avatar = readdir($handle)))		{			$avatar_file =  $avatar_dir.$avatar;			if (!is_file($avatar_file))			{				continue;			}			//echo $avatar_file;			$avatar = basename($avatar_file);			if (preg_match('/^(\d+)\.(png|gif|jpg)/', $avatar, $matches))			{				$user_id = intval($matches[1], 10);				$avatar_ext = $matches[2];				$avatar_type = FORUM_AVATAR_NONE;				if ($avatar_ext == 'png')				{					$avatar_type = FORUM_AVATAR_PNG;				}				else if ($avatar_ext == 'gif')				{					$avatar_type = FORUM_AVATAR_GIF;				}				else if ($avatar_ext == 'jpg')				{					$avatar_type = FORUM_AVATAR_JPG;				}				// Check user and avatar type				if ($user_id < 2 || $avatar_type == FORUM_AVATAR_NONE)				{					continue;				}				// Now check the width/height				list($width, $height, $type,) = @/**/getimagesize($avatar_file);				if (empty($width) || empty($height) || $width > $forum_config['o_avatars_width'] || $height > $forum_config['o_avatars_height'])				{					@/**/unlink($avatar_file);				}				else				{					// Save to DB					$query = array(						'UPDATE'	=> 'users',						'SET'		=> 'avatar=\''.$avatar_type.'\', avatar_height=\''.$height.'\', avatar_width=\''.$width.'\'',						'WHERE'		=> 'id='.$user_id					);					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}			}		}		closedir($handle);	}}header('Content-type: text/html; charset=utf-8');// Empty all output buffers and stop bufferingwhile (@ob_end_clean());$stage = isset($_GET['stage']) ? $_GET['stage'] : '';$old_charset = isset($_GET['req_old_charset']) ? str_replace('ISO8859', 'ISO-8859', strtoupper($_GET['req_old_charset'])) : 'ISO-8859-1';$start_at = isset($_GET['start_at']) ? intval($_GET['start_at']) : 0;$query_str = '';switch ($stage){	// Show form	case '':		$db_seems_utf8 = db_seems_utf8();?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update: Perform update of database tables</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<ul class="spaced">				<li class="warn"><span><strong>WARNING!</strong> This script will update your PunBB forum database. The update procedure might take anything from a few seconds to a few minutes (or in extreme cases, hours) depending on the speed of the server, the size of the forum database and the number of changes required.</span></li>				<li><span>Do not forget to make a backup of the database before continuing.</span></li>				<li><span>Did you read the update instructions in the documentation? If not, start there.</span></li><?phpif (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force']))){	if (!function_exists('iconv') && !function_exists('mb_convert_encoding'))	{?>				<li class="important"><strong>IMPORTANT!</strong> PunBB has detected that this PHP environment does not have support for the encoding mechanisms required to do UTF-8 conversion from character sets other than ISO-8859-1. What this means is that if the current character set is not ISO-8859-1, PunBB won't be able to convert your forum database to UTF-8 and you will have to do it manually. Instructions for doing manual charset conversion can be found in the update instructions.</span></li><?php	}}$current_url = get_current_url();if (strpos($cur_version, '1.2') === 0 && $db_seems_utf8 && !isset($_GET['force'])){?>				<li class="important"><span><strong>IMPORTANT!</strong> Based on a random selection of 100 posts, topic subjects, usernames and forum names from the database, it appears as if text in the database is currently UTF-8 encoded. This is a good thing. Based on this, the update process will not attempt to do charset conversion. If you have reason to believe that the charset conversion is required nonetheless, you can <a href="<?php echo $current_url.((substr_count($current_url, '?') == 1) ? '&amp;' : '?').'force=1' ?>">force the conversion to run</a>.</span></li><?php}?>			</ul>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo $current_url ?>">			<div class="hidden">				<input type="hidden" name="stage" value="start" />			</div><?php		if (strpos($cur_version, '1.2') === 0 && (!$db_seems_utf8 || isset($_GET['force'])))		{?>			<div class="ct-box info-box">				<p class="important"><strong>Enable conversion:</strong> When enabled this update script will, after it has made the required structural changes to the database, convert all text in the database from the current character set to UTF-8. This conversion is required if you're upgrading from PunBB 1.2 and you are not currently using an UTF-8 language pack.</p>				<p class="important"><strong>Current character set:</strong> If the primary language in your forum is English, you can leave this at the default value. However, if your forum is non-English, you should enter the character set of the primary language pack used in the forum.</p>			</div>			<div id="req-msg" class="req-warn ct-box error-box">				<p class="important"><strong>Important!</strong> All fields labelled <em>(Required)</em> must be completed before submitting this form.</p>			</div>			<fieldset class="frm-group group1">				<legend class="group-legend"><span>Charset conversion</span></legend>				<div class="sf-set set1">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld1" name="convert_charset" value="1" checked="checked" /></span>						<label for="fld1"><span>Enable conversion:</span> Perform database charset conversion.</label>					</div>				</div>				<div class="sf-set set2">					<div class="sf-box text required">						<label for="fld2"><span>Current character set: <em>(Required)</em></span> <small>Accept default for English forums otherwise the character set of the primary langauge pack.</small></label><br />						<span class="fld-input"><input type="text" id="fld2" name="req_old_charset" size="12" maxlength="20" value="ISO-8859-1" /></span>					</div>				</div>			</fieldset><?php		}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="start" value="Start update" /></span>			</div>		</form>	</div></div></div></div></body></html><?php		break;	// Start by updating the database structure	case 'start':		// Put back dropped search tables		if (!$forum_db->table_exists('search_cache') && in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'ident'			=> array(						'datatype'		=> 'VARCHAR(200)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'search_data'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					)				),				'PRIMARY KEY'	=> array('id'),				'INDEXES'		=> array(					'ident_idx'	=> array('ident(8)')				)			);			$forum_db->create_table('search_cache', $schema);			$schema = array(				'FIELDS'		=> array(					'post_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'word_id'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'subject_match'	=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					)				),				'INDEXES'		=> array(					'word_id_idx'	=> array('word_id'),					'post_id_idx'	=> array('post_id')				)			);			$forum_db->create_table('search_matches', $schema);			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'SERIAL',						'allow_null'	=> false					),					'word'			=> array(						'datatype'		=> 'VARCHAR(20)',						'allow_null'	=> false,						'default'		=> '\'\'',						'collation'		=> 'bin'					)				),				'PRIMARY KEY'	=> array('word'),				'INDEXES'		=> array(					'id_idx'	=> array('id')				)			);			$forum_db->create_table('search_words', $schema);		}		// Add the extensions table if it doesn't already exist		if (!$forum_db->table_exists('extensions'))		{			$schema = array(				'FIELDS'		=> array(					'id'				=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'title'				=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'version'			=> array(						'datatype'		=> 'VARCHAR(25)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'description'		=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'author'			=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'uninstall'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'uninstall_note'	=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'disabled'			=> array(						'datatype'		=> 'TINYINT(1)',						'allow_null'	=> false,						'default'		=> '0'					),					'dependencies'		=> array(						'datatype'		=> 'VARCHAR(255)',						'allow_null'	=> false,						'default'		=> '\'\''					)				),				'PRIMARY KEY'	=> array('id')			);			$forum_db->create_table('extensions', $schema);		}		// Make sure the collation on "word" in the search_words table is utf8_bin		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$result = $forum_db->query('SHOW FULL COLUMNS FROM '.$forum_db->prefix.'search_words') or error(__FILE__, __LINE__);			while ($cur_column = $forum_db->fetch_assoc($result))			{				if ($cur_column['Field'] === 'word')				{					if ($cur_column['Collation'] !== 'utf8_bin')						$forum_db->alter_field('search_words', 'word', 'VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin', false, '');					break;				}			}		}		// Add uninstall_note field to extensions		$forum_db->add_field('extensions', 'uninstall_note', 'TEXT', true, null, 'uninstall');		// Drop uninstall_notes (plural) field		$forum_db->drop_field('extensions', 'uninstall_notes');		// Add disabled field to extensions		$forum_db->add_field('extensions', 'disabled', 'TINYINT(1)', false, 0, 'uninstall_note');		// Add dependencies field to extensions		$forum_db->add_field('extensions', 'dependencies', 'VARCHAR(255)', false, '', 'disabled');		// Add the extension_hooks table		if (!$forum_db->table_exists('extension_hooks'))		{			$schema = array(				'FIELDS'		=> array(					'id'			=> array(						'datatype'		=> 'VARCHAR(150)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'extension_id'	=> array(						'datatype'		=> 'VARCHAR(50)',						'allow_null'	=> false,						'default'		=> '\'\''					),					'code'			=> array(						'datatype'		=> 'TEXT',						'allow_null'	=> true					),					'installed'		=> array(						'datatype'		=> 'INT(10) UNSIGNED',						'allow_null'	=> false,						'default'		=> '0'					),					'priority'		=> array(						'datatype'		=> 'TINYINT(1) UNSIGNED',						'allow_null'	=> false,						'default'		=> '5'					)				),				'PRIMARY KEY'	=> array('id', 'extension_id')			);			$forum_db->create_table('extension_hooks', $schema);		}		// Add priority field to extension_hooks		$forum_db->add_field('extension_hooks', 'priority', 'TINYINT(1)', false, 5, 'installed');		// Extend id field in extension_hooks to 150		$forum_db->alter_field('extension_hooks', 'id', 'VARCHAR(150)', false, '');		// Make all e-mail fields VARCHAR(80)		$forum_db->alter_field('bans', 'email', 'VARCHAR(80)', true);		$forum_db->alter_field('posts', 'poster_email', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'email', 'VARCHAR(80)', false, '');		$forum_db->alter_field('users', 'jabber', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'msn', 'VARCHAR(80)', true);		$forum_db->alter_field('users', 'activate_string', 'VARCHAR(80)', true);		// Add avatars field		$forum_db->add_field('users', 'avatar', 'TINYINT(3) UNSIGNED', false, 0);		$forum_db->add_field('users', 'avatar_width', 'TINYINT(3) UNSIGNED', false, 0, 'avatar');		$forum_db->add_field('users', 'avatar_height', 'TINYINT(3) UNSIGNED', false, 0, 'avatar_width');		// Add new profile fileds		$forum_db->add_field('users', 'facebook', 'VARCHAR(100)', true, null, 'url');		$forum_db->add_field('users', 'twitter', 'VARCHAR(100)', true, null, 'facebook');		$forum_db->add_field('users', 'linkedin', 'VARCHAR(100)', true, null, 'twitter');		$forum_db->add_field('users', 'skype', 'VARCHAR(100)', true, null, 'linkedin');		// Add avatars to DB		convert_avatars();		// Remove NOT NULL from TEXT fields for consistency. See http://dev.punbb.org/changeset/596		$forum_db->alter_field('posts', 'message', 'TEXT', true);		$forum_db->alter_field('reports', 'message', 'TEXT', true);		// Drop fulltext indexes  (should only apply to SVN installs)		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			$forum_db->drop_index('topics', 'subject_idx');			$forum_db->drop_index('posts', 'message_idx');		}		// Make all IP fields VARCHAR(39) to support IPv6		$forum_db->alter_field('posts', 'poster_ip', 'VARCHAR(39)', true);		$forum_db->alter_field('users', 'registration_ip', 'VARCHAR(39)', false, '0.0.0.0');		// Add the DST option to the users table		$forum_db->add_field('users', 'dst', 'TINYINT(1)', false, 0, 'timezone');		// Add the salt field to the users table		$forum_db->add_field('users', 'salt', 'VARCHAR(12)', true, null, 'password');		// Add the access_keys field to the users table		$forum_db->add_field('users', 'access_keys', 'TINYINT(1)', false, 0, 'show_sig');		// Add the CSRF token field to the online table		$forum_db->add_field('online', 'csrf_token', 'VARCHAR(40)', false, '', null);		// Add the prev_url field to the online table		$forum_db->add_field('online', 'prev_url', 'VARCHAR(255)', true, null, null);		// Add the last_post field to the online table		$forum_db->add_field('online', 'last_post', 'INT(10) UNSIGNED', true, null, null);		// Add the last_search field to the online table		$forum_db->add_field('online', 'last_search', 'INT(10) UNSIGNED', true, null, null);		// Drop use_avatar column from users table		$forum_db->drop_field('users', 'use_avatar');		// Drop save_pass column from users table		$forum_db->drop_field('users', 'save_pass');		// Drop g_edit_subjects_interval column from groups table		$forum_db->drop_field('groups', 'g_edit_subjects_interval');		$new_config = array();		// Add quote depth option		if (!array_key_exists('o_quote_depth', $forum_config))			$new_config[] = '\'o_quote_depth\', \'3\'';		// Add database revision number		if (!array_key_exists('o_database_revision', $forum_config))			$new_config[] = '\'o_database_revision\', \'0\'';		// Add default email setting option		if (!array_key_exists('o_default_email_setting', $forum_config))			$new_config[] = '\'o_default_email_setting\', \'1\'';		// Make sure we have o_additional_navlinks (was added in 1.2.1)		if (!array_key_exists('o_additional_navlinks', $forum_config))			$new_config[] = '\'o_additional_navlinks\', \'\'';		// Insert new config options o_sef		if (!array_key_exists('o_sef', $forum_config))			$new_config[] = '\'o_sef\', \'Default\'';		// Insert new config option o_topic_views		if (!array_key_exists('o_topic_views', $forum_config))			$new_config[] = '\'o_topic_views\', \'1\'';		// Insert new config option o_signatures		if (!array_key_exists('o_signatures', $forum_config))			$new_config[] = '\'o_signatures\', \'1\'';		// Insert new config option o_smtp_ssl		if (!array_key_exists('o_smtp_ssl', $forum_config))			$new_config[] = '\'o_smtp_ssl\', \'0\'';		// Insert new config option o_check_for_updates		if (!array_key_exists('o_check_for_updates', $forum_config))		{			$check_for_updates = (function_exists('curl_init') || function_exists('fsockopen') || in_array(strtolower(@ini_get('allow_url_fopen')), array('on', 'true', '1'))) ? 1 : 0;			$new_config[] = '\'o_check_for_updates\', \''.$check_for_updates.'\'';		}		// Insert new config option o_check_for_version		if (!array_key_exists('o_check_for_versions', $forum_config))		{			$o_check_for_versions = array_key_exists('o_check_for_updates', $forum_config) ? $forum_config['o_check_for_updates'] : $check_for_updates;			$new_config[] = '\'o_check_for_versions\', \''.$o_check_for_versions.'\'';		}		// Insert new config option o_announcement_heading		if (!array_key_exists('o_announcement_heading', $forum_config))			$new_config[] = '\'o_announcement_heading\', \'\'';		// Insert new config option o_default_dst		if (!array_key_exists('o_default_dst', $forum_config))			$new_config[] = '\'o_default_dst\', \'0\'';		// Insert new config option o_show_moderators		if (!array_key_exists('o_show_moderators', $forum_config))			$new_config[] = '\'o_show_moderators\', \'0\'';		if (!empty($new_config))		{			$query = array(				'INSERT'	=> 'conf_name, conf_value',				'INTO'		=> 'config',				'VALUES'	=> $new_config			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		unset($new_config);		// Server timezone is now simply the default timezone		if (!array_key_exists('o_default_timezone', $forum_config))		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_name = \'o_default_timezone\'',				'WHERE'		=> 'conf_name = \'o_server_timezone\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Increase visit timeout to 30 minutes (only if it hasn't been changed from the default)		if ($forum_config['o_timeout_visit'] == '600')		{			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'1800\'',				'WHERE'		=> 'conf_name = \'o_timeout_visit\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Remove obsolete g_post_polls permission from groups table		$forum_db->drop_field('groups', 'g_post_polls');		// Make room for multiple moderator groups		if (!$forum_db->field_exists('groups', 'g_moderator'))		{			// Add g_moderator column to groups table			$forum_db->add_field('groups', 'g_moderator', 'TINYINT(1)', false, 0, 'g_user_title');			// Give the moderator group moderator privileges			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_moderator = 1',				'WHERE'		=> 'g_id = 2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Shuffle the group IDs around a bit			$query = array(				'SELECT'	=> 'MAX(g_id) + 1',				'FROM'		=> 'groups'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$temp_id = $forum_db->result($result);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id='.$temp_id,				'WHERE'		=> 'g_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=2',				'WHERE'		=> 'g_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=3',				'WHERE'		=> 'g_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_id=4',				'WHERE'		=> 'g_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id='.$temp_id,				'WHERE'		=> 'group_id=2'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=2',				'WHERE'		=> 'group_id=3'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=3',				'WHERE'		=> 'group_id=4'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'UPDATE'	=> 'forum_perms',				'SET'		=> 'group_id=4',				'WHERE'		=> 'group_id='.$temp_id			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Update the default usergroup if it uses the old ID for the members group			$query = array(				'UPDATE'	=> 'config',				'SET'		=> 'conf_value = \'3\'',				'WHERE'		=> 'conf_name = \'o_default_user_group\' and conf_value = \'4\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_edit_users config setting with new per-group permission		if (array_key_exists('p_mod_edit_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_edit_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_edit_users', 'TINYINT(1)', false, 0, 'g_moderator');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_edit_users = '.$forum_config['p_mod_edit_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_rename_users config setting with new per-group permission		if (array_key_exists('p_mod_rename_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_rename_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_rename_users', 'TINYINT(1)', false, 0, 'g_mod_edit_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_rename_users = '.$forum_config['p_mod_rename_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_change_passwords config setting with new per-group permission		if (array_key_exists('p_mod_change_passwords', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_change_passwords\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_change_passwords', 'TINYINT(1)', false, 0, 'g_mod_rename_users');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_change_passwords = '.$forum_config['p_mod_change_passwords'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Replace obsolete p_mod_ban_users config setting with new per-group permission		if (array_key_exists('p_mod_ban_users', $forum_config))		{			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'p_mod_ban_users\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$forum_db->add_field('groups', 'g_mod_ban_users', 'TINYINT(1)', false, 0, 'g_mod_change_passwords');			$query = array(				'UPDATE'	=> 'groups',				'SET'		=> 'g_mod_ban_users = '.$forum_config['p_mod_ban_users'],				'WHERE'		=> 'g_moderator = 1'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// We need to add a unique index to avoid users having multiple rows in the online table		if (!$forum_db->index_exists('online', 'user_id_ident_idx'))		{			$query = array(				'DELETE'	=> 'online'			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			switch ($db_type)			{				case 'mysql':				case 'mysql_innodb':				case 'mysqli':				case 'mysqli_innodb':					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident(25)'), true);					break;				default:					$forum_db->add_index('online', 'user_id_ident_idx', array('user_id', 'ident'), true);					break;			}		}		// Remove the redundant user_id_idx on the online table		$forum_db->drop_index('online', 'user_id_idx');		// Add an index to ident on the online table		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$forum_db->add_index('online', 'ident_idx', array('ident(25)'));				break;			default:				$forum_db->add_index('online', 'ident_idx', array('ident'));				break;		}		// Add an index to logged on the online table		$forum_db->add_index('online', 'logged_idx', array('logged'));		// Add an index on last_post in the topics table		$forum_db->add_index('topics', 'last_post_idx', array('last_post'));		// Remove any remnants of the now defunct post approval system		$forum_db->drop_field('forums', 'approval');		$forum_db->drop_field('groups', 'g_posts_approved');		$forum_db->drop_field('posts', 'approved');		// Add g_view_users field to groups table		$forum_db->add_field('groups', 'g_view_users', 'TINYINT(1)', false, 1, 'g_read_board');		// Add the time/date format settings to the user table		$forum_db->add_field('users', 'time_format', 'INT(10)', false, 0, 'dst');		$forum_db->add_field('users', 'date_format', 'INT(10)', false, 0, 'dst');		// Add the last_search column to the users table		$forum_db->add_field('users', 'last_search', 'INT(10)', true, null, 'last_post');		// Add the last_email_sent column to the users table and the g_send_email and		// g_email_flood columns to the groups table		$forum_db->add_field('users', 'last_email_sent', 'INT(10)', true, null, 'last_search');		$forum_db->add_field('groups', 'g_send_email', 'TINYINT(1)', false, 1, 'g_search_users');		$forum_db->add_field('groups', 'g_email_flood', 'INT(10)', false, 60, 'g_search_flood');		// Set non-default g_send_email and g_flood_email values properly		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_send_email = 0',			'WHERE'		=> 'g_id = 2'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_email_flood = 0',			'WHERE'		=> 'g_id IN (1,2,4)'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the auto notify/subscription option to the users table		$forum_db->add_field('users', 'auto_notify', 'TINYINT(1)', false, 0, 'notify_with_post');		// Add the first_post_id column to the topics table		if (!$forum_db->field_exists('topics', 'first_post_id'))		{			$forum_db->add_field('topics', 'first_post_id', 'INT(10) UNSIGNED', false, 0, 'posted');			$forum_db->add_index('topics', 'first_post_id_idx', array('first_post_id'));			// Now that we've added the column and indexed it, we need to give it correct data			$query = array(				'SELECT'	=> 'MIN(id) AS first_post, topic_id',				'FROM'		=> 'posts',				'GROUP BY'	=> 'topic_id'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			while ($cur_post = $forum_db->fetch_assoc($result))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'first_post_id = '.$cur_post['first_post'],					'WHERE'		=> 'id = '.$cur_post['topic_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Add the index for the post time		if (!$forum_db->index_exists('posts', 'posted_idx'))			$forum_db->add_index('posts', 'posted_idx', array('posted'));		// Move any users with the old unverified status to their new group		$query = array(			'UPDATE'	=> 'users',			'SET'		=> 'group_id=0',			'WHERE'		=> 'group_id=32000'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Add the ban_creator column to the bans table		$forum_db->add_field('bans', 'ban_creator', 'INT(10) UNSIGNED', false, 0);		// Remove any hotfix extensions this update supersedes		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'extensions',			'WHERE'		=> 'id LIKE \'hotfix_%\' AND version != \''.UPDATE_TO.'\''		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_ext = $forum_db->fetch_assoc($result))		{			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$query = array(				'DELETE'	=> 'extensions',				'WHERE'		=> 'id = \''.$cur_ext['id'].'\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Should we do charset conversion or not?		if (strpos($cur_version, '1.3') === 0)			$query_str = '?stage=finish';		elseif (strpos($cur_version, '1.2') === 0 && isset($_GET['convert_charset']))			$query_str = '?stage=conv_misc&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_tables';		break;	// Convert config, categories, forums, groups, ranks and censor words	case 'conv_misc':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Convert config		echo 'Converting configuration'."<br />\n";		foreach ($forum_config as $conf_name => $conf_value)		{			if (convert_to_utf8($conf_value, $old_charset))			{				$query = array(					'UPDATE'	=> 'config',					'SET'		=> 'conf_value = \''.$forum_db->escape($conf_value).'\'',					'WHERE'		=> 'conf_name = \''.$conf_name.'\''				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert categories		echo 'Converting categories'."<br />\n";		$query = array(			'SELECT'	=> 'id, cat_name',			'FROM'		=> 'categories',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['cat_name'], $old_charset))			{				$query = array(					'UPDATE'	=> 'categories',					'SET'		=> 'cat_name = \''.$forum_db->escape($cur_item['cat_name']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert forums		echo 'Converting forums'."<br />\n";		$query = array(			'SELECT'	=> 'id, forum_name, forum_desc, moderators',			'FROM'		=> 'forums',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			$moderators = ($cur_item['moderators'] != '') ? unserialize($cur_item['moderators']) : array();			$moderators_utf8 = array();			foreach ($moderators as $mod_username => $mod_user_id)			{				convert_to_utf8($mod_username, $old_charset);				$moderators_utf8[$mod_username] = $mod_user_id;			}			if (convert_to_utf8($cur_item['forum_name'], $old_charset) | convert_to_utf8($cur_item['forum_desc'], $old_charset) || $moderators !== $moderators_utf8)			{				$cur_item['forum_desc'] = $cur_item['forum_desc'] != '' ? '\''.$forum_db->escape($cur_item['forum_desc']).'\'' : 'NULL';				$cur_item['moderators'] = !empty($moderators_utf8) ? '\''.$forum_db->escape(serialize($moderators_utf8)).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'forums',					'SET'		=> 'forum_name = \''.$forum_db->escape($cur_item['forum_name']).'\', forum_desc = '.$cur_item['forum_desc'].', moderators = '.$cur_item['moderators'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert groups		echo 'Converting groups'."<br />\n";		$query = array(			'SELECT'	=> 'g_id, g_title, g_user_title',			'FROM'		=> 'groups',			'ORDER BY'	=> 'g_id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['g_title'], $old_charset) | convert_to_utf8($cur_item['g_user_title'], $old_charset))			{				$cur_item['g_user_title'] = $cur_item['g_user_title'] != '' ? '\''.$forum_db->escape($cur_item['g_user_title']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'groups',					'SET'		=> 'g_title = \''.$forum_db->escape($cur_item['g_title']).'\', g_user_title = '.$cur_item['g_user_title'].'',					'WHERE'		=> 'g_id = '.$cur_item['g_id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert ranks		echo 'Converting ranks'."<br />\n";		$query = array(			'SELECT'	=> 'id, rank',			'FROM'		=> 'ranks',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['rank'], $old_charset))			{				$query = array(					'UPDATE'	=> 'ranks',					'SET'		=> 'rank = \''.$forum_db->escape($cur_item['rank']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Convert censor words		echo 'Converting censor words'."<br />\n";		$query = array(			'SELECT'	=> 'id, search_for, replace_with',			'FROM'		=> 'censoring',			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			if (convert_to_utf8($cur_item['search_for'], $old_charset) | convert_to_utf8($cur_item['replace_with'], $old_charset))			{				$query = array(					'UPDATE'	=> 'censoring',					'SET'		=> 'search_for = \''.$forum_db->escape($cur_item['search_for']).'\', replace_with = \''.$forum_db->escape($cur_item['replace_with']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		break;	// Convert reports	case 'conv_reports':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first report ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'reports',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch reports to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting report '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['message'], $old_charset))			{				$query = array(					'UPDATE'	=> 'reports',					'SET'		=> 'message = \''.$forum_db->escape($cur_item['message']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'reports',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_reports&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert search words	case 'conv_search_words':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first search word ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'search_words',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch words to process this cycle		$query = array(			'SELECT'	=> 'id, word',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting search word '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['word'], $old_charset))			{				$query = array(					'UPDATE'	=> 'search_words',					'SET'		=> 'word = \''.$forum_db->escape($cur_item['word']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'search_words',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_search_words&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert users	case 'conv_users':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)			$start_at = 2;		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, username, title, realname, location, signature, admin_note',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting user '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['username'], $old_charset) | convert_to_utf8($cur_item['title'], $old_charset) | convert_to_utf8($cur_item['realname'], $old_charset) | convert_to_utf8($cur_item['location'], $old_charset) | convert_to_utf8($cur_item['signature'], $old_charset) | convert_to_utf8($cur_item['admin_note'], $old_charset))			{				$cur_item['title'] = $cur_item['title'] != '' ? '\''.$forum_db->escape($cur_item['title']).'\'' : 'NULL';				$cur_item['realname'] = $cur_item['realname'] != '' ? '\''.$forum_db->escape($cur_item['realname']).'\'' : 'NULL';				$cur_item['location'] = $cur_item['location'] != '' ? '\''.$forum_db->escape($cur_item['location']).'\'' : 'NULL';				$cur_item['signature'] = $cur_item['signature'] != '' ? '\''.$forum_db->escape($cur_item['signature']).'\'' : 'NULL';				$cur_item['admin_note'] = $cur_item['admin_note'] != '' ? '\''.$forum_db->escape($cur_item['admin_note']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'users',					'SET'		=> 'username = \''.$forum_db->escape($cur_item['username']).'\', title = '.$cur_item['title'].', realname = '.$cur_item['realname'].', location = '.$cur_item['location'].', signature = '.$cur_item['signature'].', admin_note = '.$cur_item['admin_note'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_users&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert topics	case 'conv_topics':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first topic ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'topics',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch topics to process this cycle		$query = array(			'SELECT'	=> 'id, poster, subject, last_poster',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting topic '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['subject'], $old_charset) | convert_to_utf8($cur_item['last_poster'], $old_charset))			{				$query = array(					'UPDATE'	=> 'topics',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', subject = \''.$forum_db->escape($cur_item['subject']).'\', last_poster = \''.$forum_db->escape($cur_item['last_poster']).'\'',					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'topics',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE;		else			$query_str = '?stage=conv_topics&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert posts	case 'conv_posts':		if (strpos($cur_version, '1.2') !== 0)		{			$query_str = '?stage=conv_tables';			break;		}		// We need to set names to utf8 before we execute update query		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, poster, message, edited_by',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Converting post '.$cur_item['id'].'<br />'."\n";			if (convert_to_utf8($cur_item['poster'], $old_charset) | convert_to_utf8($cur_item['message'], $old_charset) | convert_to_utf8($cur_item['edited_by'], $old_charset))			{				$cur_item['edited_by'] = $cur_item['edited_by'] != '' ? '\''.$forum_db->escape($cur_item['edited_by']).'\'' : 'NULL';				$query = array(					'UPDATE'	=> 'posts',					'SET'		=> 'poster = \''.$forum_db->escape($cur_item['poster']).'\', message = \''.$forum_db->escape($cur_item['message']).'\', edited_by = '.$cur_item['edited_by'],					'WHERE'		=> 'id = '.$cur_item['id']				);				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=conv_tables';		else			$query_str = '?stage=conv_posts&req_old_charset='.$old_charset.'&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Convert table columns to utf8 (MySQL only)	case 'conv_tables':		// Do the cumbersome charset conversion of MySQL tables/columns		if (in_array($db_type, array('mysql', 'mysqli', 'mysql_innodb', 'mysqli_innodb')))		{			echo 'Converting table '.$forum_db->prefix.'bans<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'bans');			echo 'Converting table '.$forum_db->prefix.'categories<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'categories');			echo 'Converting table '.$forum_db->prefix.'censoring<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'censoring');			echo 'Converting table '.$forum_db->prefix.'config<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'config');			echo 'Converting table '.$forum_db->prefix.'extension_hooks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extension_hooks');			echo 'Converting table '.$forum_db->prefix.'extensions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'extensions');			echo 'Converting table '.$forum_db->prefix.'forum_perms<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forum_perms');			echo 'Converting table '.$forum_db->prefix.'forums<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'forums');			echo 'Converting table '.$forum_db->prefix.'groups<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'groups');			echo 'Converting table '.$forum_db->prefix.'online<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'online');			echo 'Converting table '.$forum_db->prefix.'posts<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'posts');			echo 'Converting table '.$forum_db->prefix.'ranks<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'ranks');			echo 'Converting table '.$forum_db->prefix.'reports<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'reports');			echo 'Converting table '.$forum_db->prefix.'search_cache<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_cache');			echo 'Converting table '.$forum_db->prefix.'search_matches<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_matches');			echo 'Converting table '.$forum_db->prefix.'search_words<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'search_words');			echo 'Converting table '.$forum_db->prefix.'subscriptions<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'subscriptions');			echo 'Converting table '.$forum_db->prefix.'topics<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'topics');			echo 'Converting table '.$forum_db->prefix.'users<br />'."\n"; flush();			convert_table_utf8($forum_db->prefix.'users');		}		$query_str = '?stage=preparse_posts';		break;	case 'preparse_posts':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			// Get the first post ID from the db			$query = array(				'SELECT'	=> 'id',				'FROM'		=> 'posts',				'ORDER BY'	=> 'id',				'LIMIT'		=> '1'			);			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$start_at = $forum_db->result($result);			if (is_null($start_at) || $start_at === false)				$start_at = 0;		}		$end_at = $start_at + PER_PAGE;		// Fetch posts to process this cycle		$query = array(			'SELECT'	=> 'id, message',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing post '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'message = \''.$forum_db->escape(preparse_bbcode($cur_item['message'], $preparse_errors)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'posts',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=preparse_sigs';		else			$query_str = '?stage=preparse_posts&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	case 'preparse_sigs':		if (!defined('FORUM_PARSER_LOADED'))			require FORUM_ROOT.'include/parser.php';		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// Determine where to start		if ($start_at == 0)		{			$start_at = 1;		}		$end_at = $start_at + PER_PAGE;		// Fetch users to process this cycle		$query = array(			'SELECT'	=> 'id, signature',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$start_at.' AND id < '.$end_at,			'ORDER BY'	=> 'id'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_item = $forum_db->fetch_assoc($result))		{			echo 'Preparsing signature '.$cur_item['id'].'<br />'."\n";			$preparse_errors = array();			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'signature = \''.$forum_db->escape(preparse_bbcode($cur_item['signature'], $preparse_errors, true)).'\'',				'WHERE'		=> 'id = '.$cur_item['id']			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Check if there is more work to do		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'users',			'WHERE'		=> 'id >= '.$end_at,			'ORDER BY'	=> 'id ASC',			'LIMIT'		=> '1'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$start_id = $forum_db->result($result);		if (is_null($start_id) || $start_id === false)			$query_str = '?stage=finish';		else			$query_str = '?stage=preparse_sigs&req_per_page='.PER_PAGE.'&start_at='.$start_id;		unset($start_id);		break;	// Show results page	case 'finish':		// Now we're definitely using UTF-8, so we convert the output properly		$forum_db->set_names('utf8');		// We update the version number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO.'\'',			'WHERE'		=> 'conf_name = \'o_cur_version\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// And the database revision number		$query = array(			'UPDATE'	=> 'config',			'SET'		=> 'conf_value = \''.UPDATE_TO_DB_REVISION.'\'',			'WHERE'		=> 'conf_name = \'o_database_revision\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// This feels like a good time to synchronize the forums		$query = array(			'SELECT'	=> 'id',			'FROM'		=> 'forums'		);		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			sync_forum($row[0]);		// We'll empty the search cache table as well (using DELETE FROM since SQLite does not support TRUNCATE TABLE)		$query = array(			'DELETE'	=> 'search_cache'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the online table too (we did not convert strings there)		$query = array(			'DELETE'	=> 'online'		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Drop Base URL row from database config		if (array_key_exists('o_base_url', $forum_config))		{			// Generate new config file			$new_config = "<?php\n\n\$db_type = '$db_type';\n\$db_host = '$db_host';\n\$db_name = '".addslashes($db_name)."';\n\$db_username = '".addslashes($db_username)."';\n\$db_password = '".addslashes($db_password)."';\n\$db_prefix = '".addslashes($db_prefix)."';\n\$p_connect = ".($p_connect ? 'true' : 'false').";\n\n\$base_url = '$base_url';\n\n\$cookie_name = '$cookie_name';\n\$cookie_domain = '$cookie_domain';\n\$cookie_path = '$cookie_path';\n\$cookie_secure = $cookie_secure;\n\ndefine('FORUM', 1);";			// Attempt to write config.php and display it if writing fails			$written = false;			if (is_writable(FORUM_ROOT))			{				// We rename the old config.php file just in case				if (rename(FORUM_ROOT.'config.php', FORUM_ROOT.'config.old.'.time().'.php'))				{					$fh = @fopen(FORUM_ROOT.'config.php', 'wb');					if ($fh)					{						fwrite($fh, $new_config);						fclose($fh);						$written = true;					}				}			}			$query = array(				'DELETE'	=> 'config',				'WHERE'		=> 'conf_name = \'o_base_url\''			);			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}?><!DOCTYPE html><html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>PunBB Database Update</title><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen.css" /><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_cs.css" /><!--[if lte IE 6]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" href="<?php echo $base_url ?>/style/Oxygen/Oxygen_ie7.css" /><![endif]--><script type="text/javascript" src="<?php echo $base_url ?>/include/js/punbb.common.js"></script></head><body><div id="brd-update" class="brd-page"><div id="brd-wrap" class="brd"><div id="brd-head" class="gen-content">	<p id="brd-title"><strong>PunBB Database Update</strong></p>	<p id="brd-desc">Update database tables of current installation</p></div><div id="brd-main" class="main basic">	<div class="main-head">		<h1 class="hn"><span>PunBB Database Update completed!</span></h1>	</div>	<div class="main-content frm">		<div class="ct-box info-box">			<p>Your forum database was updated successfully.</p><?php if (isset($new_config) && !$written): ?>			<p>In order to complete the process, you must now update your config.php script. <strong>Copy and paste the text in the text box below into the file called config.php in the root directory of your PunBB installation</strong>. The file already exists, so you must edit/overwrite the contents of the old file. You may then <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> once config.php has been updated.</p><?php else: ?>			<p>You may <a href="<?php echo $base_url ?>/index.php">go to the forum index</a> now.</p><?php endif; ?>		</div><?php if (isset($new_config) && !$written): ?>		<form class="frm-form" action="foo">			<fieldset class="frm-group group1">				<legend class="group-legend"><span>New config.php contents</span></legend>				<div class="txt-set set1">					<div class="txt-box textarea">						<label for="fld1"><span>Copy contents:</span></label>						<div class="txt-input"><span class="frm-input"><textarea id="fld1" readonly="readonly" cols="80" rows="20"><?php echo forum_htmlencode($new_config) ?></textarea></span></div>					</div>				</div>			</fieldset>		</form><?php endif; ?>	</div></div></div></div></body></html><?php		break;}$forum_db->end_transaction();$forum_db->close();if ($query_str != '')	exit('<script type="text/javascript">window.location="db_update.php'.$query_str.'"</script><br />JavaScript seems to be disabled. <a href="db_update.php'.$query_str.'">Click here to continue</a>.');
