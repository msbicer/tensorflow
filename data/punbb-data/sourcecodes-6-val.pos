<?php/*** @version $Id: ord.php,v 1.4 2006/09/11 15:22:54 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to ord* Returns the unicode ordinal for a character* @param string UTF-8 encoded character* @return int unicode ordinal for the character* @see http://www.php.net/ord* @see http://www.php.net/manual/en/function.ord.php#46267*/function utf8_ord($chr) {    $ord0 = ord($chr);    if ( $ord0 >= 0 && $ord0 <= 127 ) {        return $ord0;    }    if ( !isset($chr{1}) ) {        trigger_error('Short sequence - at least 2 bytes expected, only 1 seen');        return FALSE;    }    $ord1 = ord($chr{1});    if ( $ord0 >= 192 && $ord0 <= 223 ) {        return ( $ord0 - 192 ) * 64             + ( $ord1 - 128 );    }    if ( !isset($chr{2}) ) {        trigger_error('Short sequence - at least 3 bytes expected, only 2 seen');        return FALSE;    }    $ord2 = ord($chr{2});    if ( $ord0 >= 224 && $ord0 <= 239 ) {        return ($ord0-224)*4096             + ($ord1-128)*64                 + ($ord2-128);    }    if ( !isset($chr{3}) ) {        trigger_error('Short sequence - at least 4 bytes expected, only 3 seen');        return FALSE;    }    $ord3 = ord($chr{3});    if ($ord0>=240 && $ord0<=247) {        return ($ord0-240)*262144             + ($ord1-128)*4096                 + ($ord2-128)*64                     + ($ord3-128);    }    if ( !isset($chr{4}) ) {        trigger_error('Short sequence - at least 5 bytes expected, only 4 seen');        return FALSE;    }    $ord4 = ord($chr{4});    if ($ord0>=248 && $ord0<=251) {        return ($ord0-248)*16777216             + ($ord1-128)*262144                 + ($ord2-128)*4096                     + ($ord3-128)*64                         + ($ord4-128);    }    if ( !isset($chr{5}) ) {        trigger_error('Short sequence - at least 6 bytes expected, only 5 seen');        return FALSE;    }    if ($ord0>=252 && $ord0<=253) {        return ($ord0-252) * 1073741824             + ($ord1-128)*16777216                 + ($ord2-128)*262144                     + ($ord3-128)*4096                         + ($ord4-128)*64                             + (ord($c{5})-128);    }    if ( $ord0 >= 254 && $ord0 <= 255 ) {         trigger_error('Invalid UTF-8 with surrogate ordinal '.$ord0);        return FALSE;    }}
<?php$lang_admin_settings = array('Settings updated'				=>	'Settings updated.',// Setup section'Setup personal'				=>	'Personalize your PunBB installation','Setup personal legend'			=>	'PunBB installation','Board description label'		=>	'Board description','Board title label'				=>	'Board title','Default style label'			=>	'Default style','Setup local'					=>	'Configure PunBB for your location','Setup local legend'			=>	'Local settings','Default timezone label'		=>	'Default timezone','DST label'						=>	'Daylight saving time (advance times by 1 hour).','Default language label'		=>	'Default language','Default language help'			=>	'(If you remove a language pack you must update this setting)','Time format label'				=>	'Time format','Date format label'				=>	'Date format','Current format'				=>	'[ Current format: %s ] %s','External format help'			=>	'See <a class="exthelp" href="http://www.php.net/manual/en/function.date.php">here</a> for formatting options.','Setup timeouts'				=>	'Default timeouts and redirect delay','Setup timeouts legend'			=>	'Timeout defaults','Visit timeout label'			=>	'Visit timeout','Visit timeout help'			=>	'Seconds idle before user is logged out','Online timeout label'			=>	'Online timeout','Online timeout help'			=>	'Seconds idle before being removed from the online users list','Redirect time label'			=>	'Redirect wait','Redirect time help'			=>	'If set to 0 seconds, no redirect page will be displayed','Setup pagination'				=>	'Default pagination for topics, posts and post review','Setup pagination legend'		=>	'Pagination defaults','Topics per page label'			=>	'Topics per page','Posts per page label'			=>	'Posts per page','Topic review label'			=>	'Topic review','Topic review help'				=>	'Ordered newest first. 0 to disable.','Setup reports'					=>	'Method for receiving reports of posts and topics','Setup reports legend'			=>	'Receive reports','Reporting method'				=>	'Reporting method','Report internal label'			=>	'By internal report system.','Report both label'				=>	'Both by internal report system and by email to those on mailing list.','Report email label'			=>	'By email to those on mailing list.','Setup URL'						=>	'URL Scheme (<abbr title ="Search Engine Friendly">SEF</abbr> URLs) for your board\'s pages','Setup URL legend'				=>	'Select a scheme','URL scheme info'				=>	'<strong>WARNING!</strong> If you select any scheme other than the default scheme you must copy/rename the file <em>.htaccess.dist</em> to <em>.htaccess</em> in the forum root directory. The server that hosts the forums must be configured with mod_rewrite support and must allow the use of <em>.htaccess</em> files. For servers other than Apache, please refer to your servers documentation.','URL scheme label'				=>	'URL scheme','URL scheme help'				=>	'Make sure you have read and understood the information above.','Setup links'					=>	'Add your own links to the main navigation menu','Setup links info'				=>	'By entering HTML hyperlinks into this textbox, any number of items can be added to the navigation menu at the top of all pages. The format for adding new links is X = &lt;a href="URL"&gt;LINK&lt;/a&gt; where X is the position at which the link should be inserted (e.g. 0 to insert at the beginning and 2 to insert after "User list"). Separate entries with a linebreak.','Setup links legend'			=>	'Menu items','Enter links label'				=>	'Enter your links','Error no board title'			=>	'You must enter a board title.','Error timeout value'			=>	'The value of "Online timeout" must be smaller than the value of "Visit timeout".',// Features section'Features general'				=>	'General PunBB features which are optional','Features general legend'		=>	'General features','Searching'						=>	'Searching','Search all label'				=>	'Allow users to search all forums instead of one forum at a time. Disable if server load is high due to excessive searching.','User ranks'					=>	'User ranks','User ranks label'				=>	'Enable user ranking based on number of posts.','Censor words'					=>	'Censoring','Censor words label'			=>	'Enable censoring of specific words.','Quick jump'					=>	'Quick jump menu','Quick jump label'				=>	'Enable the quick jump (jump to forum) drop list.','Show version'					=>	'Show version','Show version label'			=>	'Show PunBB version number in the footer.','Show moderators'				=>	'Show moderators','Show moderators label'			=>	'Show moderators list on the index page.','Online list'					=>	'Online list','Users online label'			=>	'Display list of guests and registered users online.','Features posting'				=>	'Topic and post features and information','Features posting legend'		=>	'Posting features','Quick post'					=>	'Quick post','Quick post label'				=>	'Add a quick post form at the foot of topics.','Subscriptions'					=>	'Subscriptions','Subscriptions label'			=>	'Allow users to subscribe to topics (receive email when someone replies).','Guest posting'					=>	'Guest posting','Guest posting label'			=>	'Guests must supply email addresses when posting.','User has posted'				=>	'User has posted','User has posted label'			=>	'Display a dot in front of topics to indicate to a user that they have posted in that topic earlier. Disable if you are experiencing high server load.','Topic views'					=>	'Topic views','Topic views label'				=>	'Keep track of the number of views a topic has. Disable if you are experiencing high server load in a busy forum.','User post count'				=>	'User post count','User post count label'			=>	'Show user post count in posts, profile and user list.','User info'						=>	'User info in posts','User info label'				=>	'Show poster location, register date, post count, email and URL in posts.','Features posts'				=>	'Topic and post content','Features posts legend'			=>	'Topic and post content options','Post content group'			=>	'Message options','Allow BBCode label'			=>	'Allow BBCode in posts (recommended).','Allow img label'				=>	'Allow BBCode [img] tag in posts.','Smilies in posts label'		=>	'Convert smilies to small icons in posts.','Make clickable links label'	=>	'Allow BBCode parser to detect URLs and put them into [url] tag.','Allow capitals group'			=>	'Allow all capitals','All caps message label'		=>	'Allow messages to contain only capital letters.','All caps subject label'		=>	'Allow subjects to contain only capital letters.','Indent size label'				=>	'[code] tag indent size','Indent size help'				=>	'Indent text by this many spaces. If set to 8, a regular tab will be used.','Quote depth label'				=>	'Maximum [quote] depth','Quote depth help'				=>	'The maximum times a [quote] tag can go inside other [quote] tags, any tags deeper than this will be discarded.','Features sigs'					=>	'User signatures and signature content','Features sigs legend'			=>	'Signature options','Allow signatures'				=>	'Allow signatures','Allow signatures label'		=>	'Allow users to attach a signature to their posts.','Signature content group'		=>	'Signature content','BBCode in sigs label'			=>	'Allow BBCode in signatures.','Img in sigs label'				=>	'Allow BBCode [img] tag in signatures (not recommended).','All caps sigs label'			=>	'Allow signatures to contain only capital letters.','Smilies in sigs label'			=>	'Convert smilies to small icons in user signatures.','Max sig length label'			=>	'Maximum characters','Max sig lines label'			=>	'Maximum lines','Features Avatars'				=>	'User avatars (upload and size settings)','Features Avatars legend'		=>	'User avatar settings','Allow avatars'					=>	'Allow avatars','Allow avatars label'			=>	'Allow users to upload avatars for display in posts.','Avatar directory label'		=>	'Avatar upload directory','Avatar directory help'			=>	'Relative to the PunBB root directory. PHP must have write permissions to this directory.','Avatar Max width label'		=>	'Avatar max width','Avatar Max width help'			=>	'Pixels (60 is recommended).','Avatar Max height label'		=>	'Avatar max height','Avatar Max height help'		=>	'Pixels (60 is recommended).','Avatar Max size label'			=>	'Avatar max size','Avatar Max size help'			=>	'Bytes (10,240 is recommended).','Features update'				=>	'Automatically check for updates','Features update info'			=>	'PunBB is able to periodically check if there are any important updates to your software. The updates may be new releases or hotfix extensions. When updates are available an alert for administrator will appear.','Features update disabled info'	=>	'The ability to automatically check for updates is not available. In order to support this feature, the PHP environment under which PunBB runs, must support either the <a href="http://www.php.net/manual/en/ref.curl.php">cURL extension</a>, the <a href="http://www.php.net/manual/en/function.fsockopen.php">fsockopen() function</a> or be configured with <a href="http://www.php.net/manual/en/ref.filesystem.php#ini.allow-url-fopen">allow_url_fopen</a> enabled.','Features update legend'		=>	'Automatic updates','Update check'					=>	'Check for updates','Update check label'			=>	'Enable automatic update checking.','Check for versions'			=>	'Check for new versions','Auto check for versions'		=>	'Enable check for new versions of extensions.','Features gzip'					=>	'Compress output using gzip','Features gzip legend'			=>	'Output compression','Features gzip info'			=>	'If enabled, PunBB will gzip the output sent to browsers. This will reduce bandwidth usage, but use a little more CPU. This feature requires that PHP is configured with zlib (--with-zlib). Note: If you already have one of the Apache modules mod_gzip or mod_deflate set up to compress PHP scripts, you should disable this feature.','Enable gzip'					=>	'Enable gzip','Enable gzip label'				=>	'Enable output compression using gzip.',// Announcements section'Announcements head'			=>	'Display an announcement on each page of your board','Announcements legend'			=>	'Announcement','Enable announcement'			=>	'Enable announcement','Enable announcement label'		=>	'Display an announcement message.','Announcement heading label'	=>	'Announcement heading','Announcement message label'	=>	'Announcement message','Announcement message help'		=>	'You may use HTML in your message. Announcements are not parsed like posts.','Announcement message default'	=>	'<p>Enter your announcement here.</p>',// Registration section'Registration new'				=>	'New registrations','New reg info'					=>	'You may choose to verify all new registrations. When registration verification is enabled, users are emailed an activation link when they register. They can then use the link to set their password and log in. This feature also requires users to verify new email addresses if they choose to change from the email addresses they registered with. This is an effective way of avoiding registration abuse and making sure that all users have "correct" email addresses in their profiles.','Registration new legend'		=>	'New registration settings','Allow new reg'					=>	'Allow new registrations','Allow new reg label'			=>	'Allow new users to register. Disable only under special circumstances.','Verify reg'					=>	'Verify registrations','Verify reg label'				=>	'Require verification of all new registrations by email.','Reg e-mail group'				=>	'Registration email','Allow banned label'			=>	'Allow registration with banned email addresses.','Allow dupe label'				=>	'Allow registration with duplicate email addresses.','Report new reg'				=>	'Notify by email','Report new reg label'			=>	'Notify users on the mailing list when new users register.','E-mail setting group'			=>	'Default email setting','Display e-mail label'			=>	'Display email address to other users.','Allow form e-mail label'		=>	'Hide email address but allow email via the forum.','Disallow form e-mail label'	=>	'Hide email address and disallow email via the forum.','Registration rules'			=>	'Forum rules (enable and compose forum rules)','Registration rules info'		=>	'You may require new users to agree to a set of rules when registering. The rules will always be available through a link in the navigation menu at the top of every page. You may enable the use of rules and then compose your rules below.','Registration rules legend'		=>	'Forum rules','Require rules'					=>	'Use rules','Require rules label'			=>	'Users must agree to forum rules before registering.','Compose rules label'			=>	'Compose rules','Compose rules help'			=>	'You may use HTML as text is not parsed.','Rules default'					=>	'Enter your rules here.',// Email section'E-mail addresses'				=>	'Forum email addresses and mailing list','E-mail addresses legend'		=>	'Email addresses','Admin e-mail'					=>	'Administrator\'s email','Webmaster e-mail label'		=>	'Webmaster email','Webmaster e-mail help'			=>	'The "from" address of emails sent by the forum','Mailing list label'			=>	'Create mailing list','Mailing list help'				=>	'A comma separated list of recipients of reports and/or new registration notifications.','E-mail server'					=>	'Mail server configuration for sending emails from the forum','E-mail server legend'			=>	'Email server','E-mail server info'			=>	'In most cases PunBB will be able to send email using your local email program in which case you can ignore the following settings. PunBB can be configured to use an external mail server. Enter the address of the external server and, if required, specify a custom port number if the SMTP server doesn\'t run on the default port 25 (example: mail.example.com:3580).','SMTP address label'			=>	'SMTP server address','SMTP address help'				=>	'For external servers. Leave blank to use local mail program','SMTP username label'			=>	'SMTP server username','SMTP username help'			=>	'Not required by most SMTP servers','SMTP password label'			=>	'SMTP server password','SMTP password help'			=>	'Not required by most SMTP servers','SMTP SSL'						=>	'Encrypt SMTP using SSL','SMTP SSL label'				=>	'If your version of PHP supports SSL and your SMTP server requires it.','Error invalid admin e-mail'	=>	'The admin email address you entered is invalid.','Error invalid web e-mail'		=>	'The webmaster email address you entered is invalid.',// Maintenance section'Maintenance head'				=>	'Setup maintenance message and activate maintenance mode','Maintenance mode info'			=>	'<strong>IMPORTANT!</strong> Putting the board into maintenance mode means it will only be available to administrators. This should be used if the board needs to be taken down temporarily for maintenance.','Maintenance mode warn'			=>	'<strong>WARNING!</strong> DO NOT LOGOUT when the board is in maintenance mode. You will not be able to login again.','Maintenance legend'			=>	'Maintenance','Maintenance mode'				=>	'Maintenance mode','Maintenance mode label'		=>	'Put board into maintenance mode.','Maintenance message label'		=>	'Maintenance message','Maintenance message help'		=>	'The message to be shown when the board is in maintenance mode. You may use the default message provided or compose your own. You may use HTML in your message.','Maintenance message default'	=>	'The forums are temporarily down for maintenance. Please try again in a few minutes.<br /><br />Administrator',);
<?php/*** @version $Id: substr_replace.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware substr_replace.* Note: requires utf8_substr to be loaded* @see http://www.php.net/substr_replace* @see utf8_strlen* @see utf8_substr*/function utf8_substr_replace($str, $repl, $start , $length = NULL ) {    preg_match_all('/./us', $str, $ar);    preg_match_all('/./us', $repl, $rar);    if( $length === NULL ) {        $length = utf8_strlen($str);    }    array_splice( $ar[0], $start, $length, $rar[0] );    return join('',$ar[0]);}
<?php/** * Loads the reserved strings used to transform problematic strings in URLs. * These are matched against the whole string after all other transformations. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_reserved_strings = array(	''				=>	'view',	'newpost'		=>	'view',	'newposts'		=>	'view',	'new-post'		=>	'view',	'new-posts'		=>	'view',	'lastpost'		=>	'view',	'lastposts'		=>	'view',	'last-post'		=>	'view',	'last-posts'	=>	'view',);
<?php/** * Loads the regular expressions used to match SEF URL requests to their proper URLs. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */$forum_rewrite_rules = array(	'/^topic[\/_-]?([0-9]+).*(new|last)[\/_-]?(posts?)(\.html?|\/)?$/i'														=>	'viewtopic.php?id=$1&action=$2',	'/^post[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'viewtopic.php?pid=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'view$1.php?id=$2&p=$4',	'/^feed[\/_-]?(rss|atom)[\/_-]?(f|t)(orum|opic)[\/_-]?([0-9]+)[\/_-]?(\.xml?|\/)?$/i'									=>	'extern.php?action=feed&$2id=$4&type=$1',	'/^(forum|topic)[\/_-]?([0-9]+).*(\.html?|\/)?$/i'																		=>	'view$1.php?id=$2',	'/^new[\/_-]?reply[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?tid=$1',	'/^new[\/_-]?reply[\/_-]?([0-9]+)[\/_-]?quote[\/_-]?([0-9]+)(\.html?|\/)?$/i'											=>	'post.php?tid=$1&qid=$2',	'/^new[\/_-]?topic[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'post.php?fid=$1',	'/^(delete|edit)[\/_-]?([0-9]+)(\.html?|\/)?$/i'																		=>	'$1.php?id=$2',	'/^(login|search|register)(\.html?|\/)?$/i'																				=>	'$1.php',	'/^logout[\/_-]?([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'																=>	'login.php?action=out&id=$1&csrf_token=$2',	'/^request[\/_-]?password(\.html?|\/)?$/i'																				=>	'login.php?action=forget',	'/^user[\/_-]?([0-9]+)(\.html?|\/)?$/i'																					=>	'profile.php?id=$1',	'/^user[\/_-]?([0-9]+)[\/_-]?([a-z]+)(\.html?|\/)?$/i'																	=>	'profile.php?section=$2&id=$1',	'/^(delete)[\/_-]?(avatar|user)?[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'										=>	'profile.php?action=$1_$2&id=$3&csrf_token=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)[\/_-]([a-zA-Z0-9]+)(\.html?|\/)?$/i'									=>	'profile.php?action=change_$1&id=$3&key=$4',	'/^change[\/_-]?(email|pass)(word)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'														=>	'profile.php?action=change_$1&id=$3',	'/^search[\/_-]?advanced(\.html?|\/)?$/i'																				=>	'search.php?advanced=1',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_new&forum=$2',	'/^search[\/_-]?(new)[\/_-]([0-9-]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_new&forum=$2&p=$4',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)(\.html?|\/)?$/i'																	=>	'search.php?action=show_recent&value=$2',	'/^search[\/_-]?(recent)[\/_-]([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'										=>	'search.php?action=show_recent&value=$2&p=$4',	'/^search[\/_-]?(new|recent|unanswered)(\.html?|\/)?$/i'																=>	'search.php?action=show_$1',	'/^search[\/_-]?(new|recent|unanswered)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'search.php?action=show_$1&p=$3',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)(\.html?|\/)?$/i'															=>	'search.php?action=show_subscriptions&user_id=$1',	'/^search[\/_-]?subscriptions[\/_-]?([0-9]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'								=>	'search.php?action=show_subscriptions&user_id=$1&p=$3',	'/^search[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'search.php?search_id=$1',	'/^search[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'													=>	'search.php?search_id=$1&p=$3',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'search.php?action=show_user_$1&user_id=$2',	'/^search[\/_-]?(posts|topics)[\/_-]?user[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'					=>	'search.php?action=show_user_$1&user_id=$2&p=$4',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/?$/i'					=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search\/k(.*)\/([0-9-]+)\/a(.*)\/(message|subject|all)\/([0-9]+)\/(ASC|DESC)\/(posts|topics)\/page\/([0-9]+)\/?$/i'	=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7&p=$8',	'/^search-k(.*)-([0-9-]+)-a(.*)-(message|subject|all)-([0-9]+)-(ASC|DESC)-(posts|topics).html?$/i'						=>	'search.php?action=search&keywords=$1&author=$3&forum=$2&search_in=$4&sort_by=$5&sort_dir=$6&show_as=$7',	'/^search-k(.*)-(message|subject|all)-a(.*)-([0-9]+)-(ASC|DESC)-([0-9-]+)-(posts|topics)-p([0-9]+).html?$/i'			=>	'search.php?action=search&keywords=$1&author=$3&forum=$6&search_in=$2&sort_by=$4&sort_dir=$5&show_as=$7&p=$8',	'/^users(\.html?|\/)?$/i'																								=>	'userlist.php',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)[\/_-]p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'						=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4&p=$6',	'/^users\/(.*)\/([0-9-]+)\/?([a-z_]+)[\/_-]([a-zA-Z]+)(\.html?|\/)?$/i'													=>	'userlist.php?username=$1&show_group=$2&sort_by=$3&sort_dir=$4',	'/^(email|report|subscribe|unsubscribe)[\/_-]?([0-9]+)[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'								=>	'misc.php?$1=$2&csrf_token=$3',	'/^(mark|rules)[\/_-]?(read)?[\/_-]?([a-z0-9]+)?(\.html?|\/)?$/i'														=>	'misc.php?action=$1$2&csrf_token=$3',	'/^mark[\/_-](forum)[\/_-]?([0-9]+)[\/_-](read)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'										=>	'misc.php?action=markforumread&fid=$2&csrf_token=$4',	'/^help[\/_-]([a-z]+)(\.html?|\/)?$/i'																					=>	'help.php?section=$1',	'/^moderate[\/_-]?([0-9]+)(\.html?|\/)?$/i'																				=>	'moderate.php?fid=$1',	'/^move_topics[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'															=>	'moderate.php?fid=$1&move_topics=$2',	'/^(open|close|stick|unstick)[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]([a-z0-9]+)(\.html?|\/)?$/i'							=>	'moderate.php?fid=$2&$1=$3&csrf_token=$4',	'/^moderate[\/_-]?([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'												=>	'moderate.php?fid=$1&p=$3',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)(\.html?|\/)?$/i'																=>	'moderate.php?fid=$1&tid=$2',	'/^moderate[\/_-]?([0-9]+)[\/_-]([0-9]+)[\/_-]?p(age)?[\/_-]?([0-9]+)(\.html?|\/)?$/i'									=>	'moderate.php?fid=$1&tid=$2&p=$4',	'/^get_host[\/_-]?([0-9]+|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(\.html?|\/)?$/i'								=>	'moderate.php?get_host=$1',	'/^feed[\/_-]?(rss|atom)(\.xml?|\/)?$/i'																				=>	'extern.php?action=feed&type=$1');
<?php// Language definitions used in viewforum.php$lang_forum = array('Forum subtitle'			=>	'%1$s in this forum with details of %2$s.','Search subtitle'			=>	'%1$s found with details of %2$s.','Topics'					=>	'Topics','topics'					=>	'topics','Reply'						=>	'Reply','Replies'					=>	'Replies','Forum'						=>	'Forum','reply'						=>	'reply','replies'					=>	'replies','View'						=>	'View','Views'						=>	'Views','views'						=>	'views','view'						=>	'view','Last post'					=>	'Last post','last post'					=>	'last post','Select topic'				=>	'Select topic: %s.','No replies info'			=>	'No reply information','No views info'				=>	'No viewing information','No lastpost info'			=>	'No last post information','by poster'					=>	'by %s','Item status'				=>	'%s:','Topic starter'				=>	'by <cite>%s</cite>','New posts'					=>	'New posts','Topic navigation'			=>	'( %s )','Location'					=>	'Found in forum: %s','Pages'						=>	'Pages','Post topic'				=>	'Post new topic','Login to post'				=>	'You must %1$s or %2$s to post a new topic','No permission'				=>	'Sorry! no permission to post new topics','Moved'						=>	'Moved','Sticky'					=>	'Sticky','Closed'					=>	'Closed','Empty forum'				=>	'Empty forum','No topics'					=>	'No topics have been posted','First topic nag'			=>	'Be the first to post a topic in this forum.','You posted indicator'		=>	'','Permalink forum'			=>	'Permanent link to this forum.','Forum options'				=>	'Forum options','Moderate forum'			=>	'Moderate forum','Mark forum read'			=>	'Mark forum as read','RSS forum feed'			=>	'RSS forum feed','New posts info'			=>	'Go to the first new post since your last visit.');
<?php// Language definitions used in help.php$lang_help = array('Help'					=>	'Help','Help with'				=>	'Help with %s','produces'				=>	'produces','BBCode info'			=>	'Administrators have the ability to enable or disable BBCode. If BBCode is enabled a link to BBCode help will appear when you compose/edit a post or your signature. BBCode is a collection of formatting tags that are used to change the look of text in this forum. BBCode is based on the same principal as, and is very similar to, HTML. Below is a list of all the available BBCodes and instructions on how to use them.','Image info'			=>	'Administrators have the ability to enable or disable the display of images in posts and/or signatures. If image display is enabled a link to Image help will appear when you compose/edit a post or your signature. Images are inserted using the BBCode [img] tag. The text appearing after the "=" sign in the opening tag is used for the alt attribute and should be included whenever possible.','Text style'			=>	'Text appearance can be changed with the following tags which can be nested.','Bold text'				=>	'Bold text','Underlined text'		=>	'Underlined text','Italic text'			=>	'Italic text','Red text'				=>	'Red text','Blue text'				=>	'Blue text','Heading text'			=>	'Heading text','Links info'			=>	'You can create links to other documents or to email addresses using the following tags:','My e-mail address'		=>	'My email address','Quotes info'			=>	'To quote someone use the quote tag. You can use the quote tag without specifying a name.','Quote text'			=>	'This is the text I want to quote.','produces named'		=>	'produces a quote box citing the person being quoted.','produces unnamed'		=>	'produces a bare quote box.','Code info'				=>	'When displaying source code you should make sure that you use the code tag. Text displayed with the code tag will use a monospaced font and will not be affected by other tags. Long items of code will cause the text to scroll.','Code text'				=>	'This is some code.','Code text long'		=>	'This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code. This is a long piece of code.','produces code box'		=>	'produces a code box.','produces scroll box'	=>	'produces a scrolling code box.','List info'				=>	'To create a list you can use the list tag. You can create 3 types of lists using the list tag.','List text 1'			=>	'Example list item 1.','List text 2'			=>	'Example list item 2.','List text 3'			=>	'Example list item 3.','produces list'			=>	'produces a bulleted list.','produces decimal list'	=>	'produces a numbered list.','produces alpha list'	=>	'produces an alphabetically labelled list.','Bold, underlined text'	=>	'Bold, underlined text','Smilies info'			=>	'If you like (and if it is enabled), the forum can convert a selection of smilies to image representations of those smilies. This forum recognizes the smilies listed below and replaces them with images.');
<?php/** * Provides a list of forum users that can be sorted based on various criteria. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('ul_start')) ? eval($hook) : null;if ($forum_user['g_read_board'] == '0')	message($lang_common['No view']);else if ($forum_user['g_view_users'] == '0')	message($lang_common['No permission']);// Load the userlist.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/userlist.php';// Miscellaneous setup$forum_page['show_post_count'] = ($forum_config['o_show_post_count'] == '1' || $forum_user['is_admmod']) ? true : false;$forum_page['username'] = (isset($_GET['username']) && $_GET['username'] != '-' && $forum_user['g_search_users'] == '1') ? $_GET['username'] : '';$forum_page['show_group'] = (!isset($_GET['show_group']) || intval($_GET['show_group']) < -1 && intval($_GET['show_group']) > 2) ? -1 : intval($_GET['show_group']);$forum_page['sort_by'] = (!isset($_GET['sort_by']) || $_GET['sort_by'] != 'username' && $_GET['sort_by'] != 'registered' && ($_GET['sort_by'] != 'num_posts' || !$forum_page['show_post_count'])) ? 'username' : $_GET['sort_by'];$forum_page['sort_dir'] = (!isset($_GET['sort_dir']) || strtoupper($_GET['sort_dir']) != 'ASC' && strtoupper($_GET['sort_dir']) != 'DESC') ? 'ASC' : strtoupper($_GET['sort_dir']);// Create any SQL for the WHERE clause$where_sql = array();$like_command = ($db_type == 'pgsql') ? 'ILIKE' : 'LIKE';if ($forum_user['g_search_users'] == '1' && $forum_page['username'] != '')	$where_sql[] = 'u.username '.$like_command.' \''.$forum_db->escape(str_replace('*', '%', $forum_page['username'])).'\'';if ($forum_page['show_group'] > -1)	$where_sql[] = 'u.group_id='.$forum_page['show_group'];// Fetch user count$query = array(	'SELECT'	=> 'COUNT(u.id)',	'FROM'		=> 'users AS u',	'WHERE'		=> 'u.id > 1 AND u.group_id != '.FORUM_UNVERIFIED);if (!empty($where_sql))	$query['WHERE'] .= ' AND '.implode(' AND ', $where_sql);($hook = get_hook('ul_qr_get_user_count')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['num_users'] = $forum_db->result($result);// Determine the user offset (based on $_GET['p'])$forum_page['num_pages'] = ceil($forum_page['num_users'] / 50);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);$forum_page['start_from'] = 50 * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + 50), ($forum_page['num_users']));$forum_page['users_searched'] = (($forum_user['g_search_users'] == '1' && $forum_page['username'] != '') || $forum_page['show_group'] > -1);if ($forum_page['num_users'] > 0)	$forum_page['items_info'] = generate_items_info( (($forum_page['users_searched']) ? $lang_ul['Users found'] : $lang_ul['Users']), ($forum_page['start_from'] + 1), $forum_page['num_users']);else	$forum_page['items_info'] = $lang_ul['Users'];// Generate paging links$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['users_browse'], $lang_common['Paging separator'], array($forum_page['show_group'], $forum_page['sort_by'], $forum_page['sort_dir'], ($forum_page['username'] != '') ? urlencode($forum_page['username']) : '-')).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['users_browse'], $forum_url['page'], $forum_page['num_pages'], array($forum_page['show_group'], $forum_page['sort_by'], $forum_page['sort_dir'], ($forum_page['username'] != '') ? urlencode($forum_page['username']) : '-')).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['users_browse'], $forum_url['page'], ($forum_page['page'] + 1), array($forum_page['show_group'], $forum_page['sort_by'], $forum_page['sort_dir'], ($forum_page['username'] != '') ? urlencode($forum_page['username']) : '-')).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['users_browse'], $forum_url['page'], ($forum_page['page'] - 1), array($forum_page['show_group'], $forum_page['sort_by'], $forum_page['sort_dir'], ($forum_page['username'] != '') ? urlencode($forum_page['username']) : '-')).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['users_browse'], array($forum_page['show_group'], $forum_page['sort_by'], $forum_page['sort_dir'], ($forum_page['username'] != '') ? urlencode($forum_page['username']) : '-')).'" title="'.$lang_common['Page'].' 1" />';}// Setup main optionsif (empty($_GET))	$forum_page['main_head_options'] = array();else	$forum_page['main_head_options'] = array(		'new_search'	=> '<span'.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['users']).'">'.$lang_ul['Perform new search'].'</a></span>'	);// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = $base_url.'/userlist.php';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_common['User list'], forum_link($forum_url['users'])));// Setup main headingif ($forum_page['num_pages'] > 1)	$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);($hook = get_hook('ul_pre_header_load')) ? eval($hook) : null;define('FORUM_ALLOW_INDEX', 1);define('FORUM_PAGE', 'userlist');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ul_main_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>'."\n";?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form id="afocus" method="get" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">		<div class="frm-form"><?php ($hook = get_hook('ul_search_fieldset_start')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_ul['User find legend'] ?></strong></legend><?php ($hook = get_hook('ul_pre_username')) ? eval($hook) : null; ?><?php if ($forum_user['g_search_users'] == '1'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_ul['Search for username'] ?></span> <small><?php echo $lang_ul['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="username" value="<?php echo forum_htmlencode($forum_page['username']) ?>" size="35" maxlength="25" /></span>					</div>				</div><?php endif; ?><?php ($hook = get_hook('ul_pre_group_select')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_ul['User group'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="show_group">						<option value="-1"<?php if ($forum_page['show_group'] == -1) echo ' selected="selected"' ?>><?php echo $lang_ul['All users'] ?></option><?php($hook = get_hook('ul_search_new_group_option')) ? eval($hook) : null;// Get the list of user groups (excluding the guest group)$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g.g_id!='.FORUM_GUEST,	'ORDER BY'	=> 'g.g_id');($hook = get_hook('ul_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result)){	if ($cur_group['g_id'] == $forum_page['show_group'])		echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	else		echo "\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";}?>						</select></span>					</div>				</div><?php ($hook = get_hook('ul_pre_sort_by')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_ul['Sort users by'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="sort_by">						<option value="username"<?php if ($forum_page['sort_by'] == 'username') echo ' selected="selected"' ?>><?php echo $lang_ul['Username'] ?></option>						<option value="registered"<?php if ($forum_page['sort_by'] == 'registered') echo ' selected="selected"' ?>><?php echo $lang_ul['Registered'] ?></option><?php if ($forum_page['show_post_count']): ?>						<option value="num_posts"<?php if ($forum_page['sort_by'] == 'num_posts') echo ' selected="selected"' ?>><?php echo $lang_ul['No of posts'] ?></option><?php endif; ($hook = get_hook('ul_new_sort_by_option')) ? eval($hook) : null; ?>						</select></span>					</div>				</div><?php ($hook = get_hook('ul_pre_sort_order_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_ul['User sort order'] ?></span></legend><?php ($hook = get_hook('ul_pre_sort_order')) ? eval($hook) : null; ?>					<div class="mf-box mf-yesno">						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="ASC"<?php if ($forum_page['sort_dir'] == 'ASC') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_ul['Ascending'] ?></label>						</div>						<div class="mf-item">							<span class="fld-input"><input type="radio" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="sort_dir" value="DESC"<?php if ($forum_page['sort_dir'] == 'DESC') echo ' checked="checked"' ?> /></span>							<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_ul['Descending'] ?></label>						</div>					</div><?php ($hook = get_hook('ul_pre_sort_order_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('ul_pre_search_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('ul_search_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="search" value="<?php echo $lang_ul['Submit user search'] ?>" /></span>			</div>		</div>		</form><?php// Grab the users$query = array(	'SELECT'	=> 'u.id, u.username, u.title, u.num_posts, u.registered, g.g_id, g.g_user_title',	'FROM'		=> 'users AS u',	'JOINS'		=> array(		array(			'LEFT JOIN'		=> 'groups AS g',			'ON'			=> 'g.g_id=u.group_id'		)	),	'WHERE'		=> 'u.id > 1 AND u.group_id != '.FORUM_UNVERIFIED,	'ORDER BY'	=> $forum_page['sort_by'].' '.$forum_page['sort_dir'].', u.id ASC',	'LIMIT'		=> $forum_page['start_from'].', 50');if (!empty($where_sql))	$query['WHERE'] .= ' AND '.implode(' AND ', $where_sql);($hook = get_hook('ul_qr_get_users')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$founded_user_datas = array();while ($user_data = $forum_db->fetch_assoc($result)){	$founded_user_datas[] = $user_data;}$forum_page['item_count'] = 0;if (!empty($founded_user_datas)){	($hook = get_hook('ul_results_pre_header')) ? eval($hook) : null;	$forum_page['table_header'] = array();	$forum_page['table_header']['username'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_ul['Username'].'</th>';	$forum_page['table_header']['title'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_ul['Title'].'</th>';	if ($forum_page['show_post_count'])		$forum_page['table_header']['posts'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_ul['Posts'].'</th>';	$forum_page['table_header']['registered'] = '<th class="tc'.count($forum_page['table_header']).'" scope="col">'.$lang_ul['Registered'].'</th>';	($hook = get_hook('ul_results_pre_header_output')) ? eval($hook) : null;?>		<div class="ct-group">			<table>				<caption><?php echo $lang_ul['Table summary'] ?></caption>				<thead>					<tr>						<?php echo implode("\n\t\t\t\t\t\t", $forum_page['table_header'])."\n" ?>					</tr>				</thead>				<tbody><?php	foreach ($founded_user_datas as $user_data)	{		($hook = get_hook('ul_results_row_pre_data')) ? eval($hook) : null;		$forum_page['table_row'] = array();		$forum_page['table_row']['username'] = '<td class="tc'.count($forum_page['table_row']).'"><a href="'.forum_link($forum_url['user'], $user_data['id']).'">'.forum_htmlencode($user_data['username']).'</a></td>';		$forum_page['table_row']['title'] = '<td class="tc'.count($forum_page['table_row']).'">'.get_title($user_data).'</td>';		if ($forum_page['show_post_count'])			$forum_page['table_row']['posts'] = '<td class="tc'.count($forum_page['table_row']).'">'.forum_number_format($user_data['num_posts']).'</td>';		$forum_page['table_row']['registered'] = '<td class="tc'.count($forum_page['table_row']).'">'.format_time($user_data['registered'], 1).'</td>';		++$forum_page['item_count'];		($hook = get_hook('ul_results_row_pre_data_output')) ? eval($hook) : null;?>				<tr class="<?php echo ($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even' ?><?php echo ($forum_page['item_count'] == 1) ? ' row1' : '' ?>">					<?php echo implode("\n\t\t\t\t\t\t", $forum_page['table_row'])."\n" ?>				</tr><?php	}?>				</tbody>			</table>		</div><?php}else{?>		<div class="ct-box">			<p><strong><?php echo $lang_ul['No users found'] ?></strong></p>		</div><?php}?>	</div>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php($hook = get_hook('ul_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/*** @version $Id: str_split.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to str_split* Convert a string to an array* Note: requires utf8_strlen to be loaded* @param string UTF-8 encoded* @param int number to characters to split string by* @return string characters in string reverses* @see http://www.php.net/str_split* @see utf8_strlen* @package utf8* @subpackage strings*/function utf8_str_split($str, $split_len = 1) {    if ( !preg_match('/^[0-9]+$/',$split_len) || $split_len < 1 ) {        return FALSE;    }    $len = utf8_strlen($str);    if ( $len <= $split_len ) {        return array($str);    }    preg_match_all('/.{'.$split_len.'}|[^\x00]{1,'.$split_len.'}$/us', $str, $ar);    return $ar[0];}
<?php/** * Loads common functions used in the administration panel. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;//// Display the admin navigation menu//function generate_admin_menu($submenu){	global $forum_config, $forum_url, $forum_user, $lang_admin_common, $db_type;	$return = ($hook = get_hook('ca_fn_generate_admin_menu_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if ($submenu)	{		$forum_page['admin_submenu'] = array();		if ($forum_user['g_id'] != FORUM_ADMIN)		{			$forum_page['admin_submenu']['index'] = '<li class="'.((FORUM_PAGE == 'admin-information') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_index']).'">'.$lang_admin_common['Information'].'</span></a></li>';			$forum_page['admin_submenu']['users'] = '<li class="'.((FORUM_PAGE == 'admin-users') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_users']).'">'.$lang_admin_common['Searches'].'</a></li>';			if ($forum_config['o_censoring'] == '1')				$forum_page['admin_submenu']['censoring'] = '<li class="'.((FORUM_PAGE == 'admin-censoring') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_censoring']).'">'.$lang_admin_common['Censoring'].'</a></li>';			$forum_page['admin_submenu']['reports'] = '<li class="'.((FORUM_PAGE == 'admin-reports') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_admin_common['Reports'].'</a></li>';			if ($forum_user['g_mod_ban_users'] == '1')				$forum_page['admin_submenu']['bans'] = '<li class="'.((FORUM_PAGE == 'admin-bans') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_bans']).'">'.$lang_admin_common['Bans'].'</a></li>';		}		else		{			if (FORUM_PAGE_SECTION == 'start')			{				$forum_page['admin_submenu']['index'] = '<li class="'.((FORUM_PAGE == 'admin-information') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_index']).'">'.$lang_admin_common['Information'].'</a></li>';				$forum_page['admin_submenu']['categories'] = '<li class="'.((FORUM_PAGE == 'admin-categories') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_categories']).'">'.$lang_admin_common['Categories'].'</a></li>';				$forum_page['admin_submenu']['forums'] = '<li class="'.((FORUM_PAGE == 'admin-forums') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_forums']).'">'.$lang_admin_common['Forums'].'</a></li>';			}			else if (FORUM_PAGE_SECTION == 'users')			{				$forum_page['admin_submenu']['users'] = '<li class="'.((FORUM_PAGE == 'admin-users' || FORUM_PAGE == 'admin-uresults' || FORUM_PAGE == 'admin-iresults') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_users']).'">'.$lang_admin_common['Searches'].'</a></li>';				$forum_page['admin_submenu']['groups'] = '<li class="'.((FORUM_PAGE == 'admin-groups') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_groups']).'">'.$lang_admin_common['Groups'].'</a></li>';				$forum_page['admin_submenu']['ranks'] = '<li class="'.((FORUM_PAGE == 'admin-ranks') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_ranks']).'">'.$lang_admin_common['Ranks'].'</a></li>';				$forum_page['admin_submenu']['bans'] = '<li class="'.((FORUM_PAGE == 'admin-bans') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_bans']).'">'.$lang_admin_common['Bans'].'</a></li>';			}			else if (FORUM_PAGE_SECTION == 'settings')			{				$forum_page['admin_submenu']['settings_setup'] = '<li class="'.((FORUM_PAGE == 'admin-settings-setup') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_setup']).'">'.$lang_admin_common['Setup'].'</a></li>';				$forum_page['admin_submenu']['settings_features'] = '<li class="'.((FORUM_PAGE == 'admin-settings-features') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_features']).'">'.$lang_admin_common['Features'].'</a></li>';				$forum_page['admin_submenu']['settings-announcements'] = '<li class="'.((FORUM_PAGE == 'admin-settings-announcements') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_announcements']).'">'.$lang_admin_common['Announcements'].'</a></li>';				$forum_page['admin_submenu']['settings-email'] = '<li class="'.((FORUM_PAGE == 'admin-settings-email') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_email']).'">'.$lang_admin_common['E-mail'].'</a></li>';				$forum_page['admin_submenu']['settings-registration'] = '<li class="'.((FORUM_PAGE == 'admin-settings-registration') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_registration']).'">'.$lang_admin_common['Registration'].'</a></li>';				$forum_page['admin_submenu']['censoring'] = '<li class="'.((FORUM_PAGE == 'admin-censoring') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_censoring']).'">'.$lang_admin_common['Censoring'].'</a></li>';			}			else if (FORUM_PAGE_SECTION == 'management')			{				$forum_page['admin_submenu']['reports'] = '<li class="'.((FORUM_PAGE == 'admin-reports') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_admin_common['Reports'].'</a></li>';				$forum_page['admin_submenu']['prune'] = '<li class="'.((FORUM_PAGE == 'admin-prune') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_prune']).'">'.$lang_admin_common['Prune topics'].'</a></li>';				$forum_page['admin_submenu']['reindex'] = '<li class="'.((FORUM_PAGE == 'admin-reindex') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_reindex']).'">'.$lang_admin_common['Rebuild index'].'</a></li>';				$forum_page['admin_submenu']['options-maintenance'] = '<li class="'.((FORUM_PAGE == 'admin-settings-maintenance') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_maintenance']).'">'.$lang_admin_common['Maintenance mode'].'</a></li>';			}			else if (FORUM_PAGE_SECTION == 'extensions')			{				$forum_page['admin_submenu']['extensions-manage'] = '<li class="'.((FORUM_PAGE == 'admin-extensions-manage') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_extensions_manage']).'">'.$lang_admin_common['Manage extensions'].'</a></li>';				$forum_page['admin_submenu']['extensions-hotfixes'] = '<li class="'.((FORUM_PAGE == 'admin-extensions-hotfixes') ? 'active' : 'normal').((empty($forum_page['admin_submenu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_extensions_hotfixes']).'">'.$lang_admin_common['Manage hotfixes'].'</a></li>';			}		}		($hook = get_hook('ca_fn_generate_admin_menu_new_sublink')) ? eval($hook) : null;		return (!empty($forum_page['admin_submenu'])) ? implode("\n\t\t", $forum_page['admin_submenu']) : '';	}	else	{		if ($forum_user['g_id'] != FORUM_ADMIN)			$forum_page['admin_menu']['index'] = '<li class="active first-item"><a href="'.forum_link($forum_url['admin_index']).'"><span>'.$lang_admin_common['Moderate'].'</span></a></li>';		else		{			$forum_page['admin_menu']['index'] = '<li class="'.((FORUM_PAGE_SECTION == 'start') ? 'active' : 'normal').((empty($forum_page['admin_menu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_index']).'"><span>'.$lang_admin_common['Start'].'</span></a></li>';			$forum_page['admin_menu']['settings_setup'] = '<li class="'.((FORUM_PAGE_SECTION == 'settings') ? 'active' : 'normal').((empty($forum_page['admin_menu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_settings_setup']).'"><span>'.$lang_admin_common['Settings'].'</span></a></li>';			$forum_page['admin_menu']['users'] = '<li class="'.((FORUM_PAGE_SECTION == 'users') ? 'active' : 'normal').((empty($forum_page['admin_menu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_users']).'"><span>'.$lang_admin_common['Users'].'</span></a></li>';			$forum_page['admin_menu']['reports'] = '<li class="'.((FORUM_PAGE_SECTION == 'management') ? 'active' : 'normal').((empty($forum_page['admin_menu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_reports']).'"><span>'.$lang_admin_common['Management'].'</span></a></li>';			$forum_page['admin_menu']['extensions_manage'] = '<li class="'.((FORUM_PAGE_SECTION == 'extensions') ? 'active' : 'normal').((empty($forum_page['admin_menu'])) ? ' first-item' : '').'"><a href="'.forum_link($forum_url['admin_extensions_manage']).'"><span>'.$lang_admin_common['Extensions'].'</span></a></li>';		}		($hook = get_hook('ca_fn_generate_admin_menu_new_link')) ? eval($hook) : null;		return implode("\n\t\t", $forum_page['admin_menu']);	}}//// Delete topics from $forum_id that are "older than" $prune_date (if $prune_sticky is 1, sticky topics will also be deleted)//function prune($forum_id, $prune_sticky, $prune_date){	global $forum_db, $db_type;	$return = ($hook = get_hook('ca_fn_prune_start')) ? eval($hook) : null;	if ($return != null)		return;	// Fetch topics to prune	$query = array(		'SELECT'	=> 't.id',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.forum_id='.$forum_id	);	if ($prune_date != -1)		$query['WHERE'] .= ' AND last_post<'.$prune_date;	if (!$prune_sticky)		$query['WHERE'] .= ' AND sticky=\'0\'';	($hook = get_hook('ca_fn_prune_qr_get_topics_to_prune')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$topic_ids = array();	while ($row = $forum_db->fetch_row($result))		$topic_ids[] = $row[0];	if (!empty($topic_ids))	{		$topic_ids = implode(',', $topic_ids);		// Fetch posts to prune (used lated for updating the search index)		$query = array(			'SELECT'	=> 'p.id',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.topic_id IN('.$topic_ids.')'		);		($hook = get_hook('ca_fn_prune_qr_get_posts_to_prune')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$post_ids = array();		while ($row = $forum_db->fetch_row($result))			$post_ids[] = $row[0];		// Delete topics		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.$topic_ids.')'		);		($hook = get_hook('ca_fn_prune_qr_prune_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete posts		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id IN('.$topic_ids.')'		);		($hook = get_hook('ca_fn_prune_qr_prune_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.$topic_ids.')'		);		($hook = get_hook('ca_fn_prune_qr_prune_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// We removed a bunch of posts, so now we have to update the search index		if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/search_idx.php';		strip_search_index($post_ids);	}}// Add config value to forum config table// Warning!// This function dont refresh config cache - use "forum_clear_cache()" if// call this function outside install/uninstall extension manifest sectionfunction forum_config_add($name, $value){	global $forum_db, $forum_config;	if (!empty($name) && !isset($forum_config[$name]))	{		$query = array(			'INSERT'	=> 'conf_name, conf_value',			'INTO'		=> 'config',			'VALUES'	=> '\''.$name.'\', \''.$value.'\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}}// Remove config value from forum config table// Warning!// This function dont refresh config cache - use "forum_clear_cache()" if// call this function outside install/uninstall extension manifest sectionfunction forum_config_remove($name){	global $forum_db;	if (!empty($name))	{		$query = array(			'DELETE'	=> 'config',			'WHERE'		=> 'conf_name=\''.$name.'\''		);		$forum_db->query_build($query) or error(__FILE__, __LINE__);	}}($hook = get_hook('ca_new_function')) ? eval($hook) : null;
<?php/** * A database layer class that relies on the SQLite PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for SQLiteif (!class_exists('SQLite3'))	exit('This PHP environment doesn\'t have SQLite3 support built in. SQLite3 support is required if you want to use a SQLite3 database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $error_no = false;	var $error_msg = 'Unknown';	var $datatype_transformations = array(		'/^SERIAL$/'															=>	'INTEGER',		'/^(TINY|SMALL|MEDIUM|BIG)?INT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'	=>	'INTEGER',		'/^(TINY|MEDIUM|LONG)?TEXT$/i'											=>	'TEXT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		// Prepend $db_name with the path to the forum root directory		$db_name = FORUM_ROOT.$db_name;		$this->prefix = $db_prefix;		if (!file_exists($db_name))		{			@/**/touch($db_name);			@/**/chmod($db_name, 0666);			if (!file_exists($db_name))				error('Unable to create new database \''.$db_name.'\'. Permission denied.', __FILE__, __LINE__);		}		if (!is_readable($db_name))			error('Unable to open database \''.$db_name.'\' for reading. Permission denied.', __FILE__, __LINE__);		if (!is_writable($db_name))			error('Unable to open database \''.$db_name.'\' for writing. Permission denied.', __FILE__, __LINE__);		@/**/$this->link_id = new SQLite3($db_name, SQLITE3_OPEN_READWRITE);		if (!$this->link_id)			error('Unable to open database \''.$db_name.'\'.', __FILE__, __LINE__);		else			return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return ($this->link_id->exec('BEGIN TRANSACTION')) ? true : false;	}	function end_transaction()	{		--$this->in_transaction;		if ($this->link_id->exec('COMMIT'))			return true;		else		{			$this->link_id->exec('ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = $this->link_id->query($sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			$this->error_no = $this->link_id->lastErrorCode();			$this->error_msg = $this->link_id->lastErrorMsg();			if ($this->in_transaction)				$this->link_id->exec('ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))			{				$new_query = $query;				if ($return_query_string)				{					$query_set = array();					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$query_set[] = $this->query_build($new_query, true, $unbuffered);					}					$sql = implode('; ', $query_set);				}				else				{					$result_set = null;					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$result_set = $this->query_build($new_query, false, $unbuffered);					}					return $result_set;				}			}			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row != 0)			{				$result_rows = array();				while ($cur_result_row = @/**/$query_id->fetchArray(SQLITE3_NUM))				{					$result_rows[] = $cur_result_row;				}				$cur_row = array_slice($result_rows, $row);			}			else				$cur_row = @/**/$query_id->fetchArray(SQLITE3_NUM);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		if ($query_id)		{			$cur_row = @/**/$query_id->fetchArray(SQLITE3_ASSOC);			if ($cur_row)			{				// Horrible hack to get rid of table names and table aliases from the array keys				foreach ($cur_row as $key => $value)				{					$dot_spot = strpos($key, '.');					if ($dot_spot !== false)					{						unset($cur_row[$key]);						$key = substr($key, $dot_spot+1);						$cur_row[$key] = $value;					}				}			}			return $cur_row;		}		else			return false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @/**/$query_id->fetchArray(SQLITE3_NUM) : false;	}	function num_rows($query_id = 0)	{		return false;	}	function affected_rows()	{		return ($this->query_result) ? $this->link_id->changes() : false;	}	function insert_id()	{		return ($this->link_id) ? $this->link_id->lastInsertRowID() : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		if ($query_id)		{			@/**/$query_id->finalize();		}		return true;	}	function escape($str)	{		return is_array($str) ? '' : $this->link_id->escapeString($str);	}	function error()	{		$result['error_sql'] = @/**/current(@/**/end($this->saved_queries));		$result['error_no'] = $this->error_no;		$result['error_msg'] = $this->error_msg;		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->in_transaction)			{				if (defined('FORUM_SHOW_QUERIES'))					$this->saved_queries[] = array('COMMIT', 0);				$this->link_id->exec('COMMIT');			}			return @/**/$this->link_id->close();		}		else			return false;	}	function set_names($names)	{		return;	}	function get_version()	{		$info = SQLite3::version();		return array(			'name'		=> 'SQLite3',			'version'	=> $info['versionString']		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SELECT COUNT(type) FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		return (intval($this->result($result)) > 0);	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SELECT sql FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		$sql = $this->result($result);		if (is_null($sql) || $sql === false)			return false;		return (preg_match('/[\r\n]'.preg_quote($field_name).' /', $sql) === 1);	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$result = $this->query('SELECT COUNT(type) FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_'.$this->escape($index_name).'\' AND type=\'index\'');		return (intval($this->result($result)) > 0);	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE ('.implode(',', $key_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".')';		$this->query($query) or error(__FILE__, __LINE__);		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$this->add_index($table_name, $index_name, $index_fields, false, $no_prefix);		}	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function get_table_info($table_name, $no_prefix = false)	{		// Grab table info		$result = $this->query('SELECT sql FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' ORDER BY type DESC') or error(__FILE__, __LINE__);		$table = array();		$table['indices'] = array();		$num_rows = 0;		while ($cur_index = $this->fetch_assoc($result))		{			if (!isset($table['sql']))				$table['sql'] = $cur_index['sql'];			else				$table['indices'][] = $cur_index['sql'];			++$num_rows;		}		// Check for empty		if ($num_rows < 1)			return;		// Work out the columns in the table currently		$table_lines = explode("\n", $table['sql']);		$table['columns'] = array();		foreach ($table_lines as $table_line)		{			$table_line = forum_trim($table_line);			if (substr($table_line, 0, 12) == 'CREATE TABLE')				continue;			else if (substr($table_line, 0, 11) == 'PRIMARY KEY')				$table['primary_key'] = $table_line;			else if (substr($table_line, 0, 6) == 'UNIQUE')				$table['unique'] = $table_line;			else if (substr($table_line, 0, strpos($table_line, ' ')) != '')				$table['columns'][substr($table_line, 0, strpos($table_line, ' '))] = forum_trim(substr($table_line, strpos($table_line, ' ')));		}		return $table;	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Create new table sql		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		$query = $field_type;		if (!$allow_null)			$query .= ' NOT NULL';		if ($default_value === null || $default_value === '')			$default_value = '\'\'';		$query .= ' DEFAULT '.$default_value;		$old_columns = array_keys($table['columns']);		array_insert($table['columns'], $after_field, $query.',', $field_name);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' ('.implode(', ', $old_columns).') SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		return;	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Work out the columns we need to keep and the sql for the new table		unset($table['columns'][$field_name]);		$new_columns = array_keys($table['columns']);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				if (!preg_match('#\(.*'.$field_name.'.*\)#', $cur_index))					$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' SELECT '.implode(', ', $new_columns).' FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('CREATE '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ON '.($no_prefix ? '' : $this->prefix).$table_name.'('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * SEF URLs that use a folder-like layout and include topic name and forum name * where applicable. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// These are the "fancy" folder based SEF URLs$forum_url = array(	'change_email'					=>	'change/email/$1/',	'change_email_key'				=>	'change/email/$1/$2/',	'change_password'				=>	'change/password/$1/',	'change_password_key'			=>	'change/password/$1/$2/',	'delete'						=>	'delete/$1/',	'delete_avatar'					=>	'delete/avatar/$1/$2/',	'delete_user'					=>	'delete/user/$1/',	'edit'							=>	'edit/$1/',	'email'							=>	'email/$1/',	'forum'							=>	'forum/$1/$2/',	'forum_rss'						=>	'feed/rss/forum/$1/',	'forum_atom'					=>	'feed/atom/forum/$1/',	'help'							=>	'help/$1/',	'index'							=>	'',	'index_rss'						=>	'feed/rss/',	'index_atom'					=>	'feed/atom/',	'login'							=>	'login/',	'logout'						=>	'logout/$1/$2/',	'mark_read'						=>	'mark/read/$1/',	'mark_forum_read'				=>	'mark/forum/$1/read/$2/',	'new_topic'						=>	'new/topic/$1/',	'new_reply'						=>	'new/reply/$1/',	'post'							=>	'post/$1/#p$1',	'profile_about'					=>	'user/$1/about/',	'profile_identity'				=>	'user/$1/identity/',	'profile_settings'				=>	'user/$1/settings/',	'profile_avatar'				=>	'user/$1/avatar/',	'profile_signature'				=>	'user/$1/signature/',	'profile_admin'					=>	'user/$1/admin/',	'quote'							=>	'new/reply/$1/quote/$2/',	'register'						=>	'register/',	'report'						=>	'report/$1/',	'request_password'				=>	'request/password/',	'rules'							=>	'rules/',	'search'						=>	'search/',	'search_advanced'				=>	'search/advanced/',	'search_resultft'				=>	'search/k$1/$2/a$3/$4/$5/$6/$7/',	'search_results'				=>	'search/$1/',	'search_new'					=>	'search/new/',	'search_new_results'			=>	'search/new/$1/',	'search_recent'					=>	'search/recent/',	'search_recent_results'			=>	'search/recent/$1/',	'search_unanswered'				=>	'search/unanswered/',	'search_subscriptions'			=>	'search/subscriptions/$1/',	'search_user_posts'				=>	'search/posts/user/$1/',	'search_user_topics'			=>	'search/topics/user/$1/',	'subscribe'						=>	'subscribe/$1/$2/',	'topic'							=>	'topic/$1/$2/',	'topic_rss'						=>	'feed/rss/topic/$1/',	'topic_atom'					=>	'feed/atom/topic/$1/',	'topic_new_posts'				=>	'topic/$1/$2/new/posts/',	'topic_last_post'				=>	'topic/$1/last/post/',	'unsubscribe'					=>	'unsubscribe/$1/$2/',	'user'							=>	'user/$1/',	'users'							=>	'users/',	'users_browse'					=>	'users/$4/$1/$2/$3/',	'page'							=>	'page/$1/',	'moderate_forum'				=>	'moderate/$1/',	'get_host'						=>	'get_host/$1/',	'move'							=>	'move_topics/$1/$2/',	'open'							=>	'open/$1/$2/$3/',	'close'							=>	'close/$1/$2/$3/',	'stick'							=>	'stick/$1/$2/$3/',	'unstick'						=>	'unstick/$1/$2/$3/',	'moderate_topic'				=>	'moderate/$1/$2/',	'admin_index'					=>	'admin/index.php',	'admin_bans'					=>	'admin/bans.php?sort_by=1',	'admin_categories'				=>	'admin/categories.php',	'admin_censoring'				=>	'admin/censoring.php',	'admin_extensions_manage'		=>	'admin/extensions.php?section=manage',	'admin_extensions_hotfixes'		=>	'admin/extensions.php?section=hotfixes',	'admin_forums'					=>	'admin/forums.php',	'admin_groups'					=>	'admin/groups.php',	'admin_loader'					=>	'admin/loader.php',	'admin_reindex'					=>	'admin/reindex.php',	'admin_settings_setup'			=>	'admin/settings.php?section=setup',	'admin_settings_features'		=>	'admin/settings.php?section=features',	'admin_settings_content'		=>	'admin/settings.php?section=content',	'admin_settings_email'			=>	'admin/settings.php?section=email',	'admin_settings_announcements'	=>	'admin/settings.php?section=announcements',	'admin_settings_registration'	=>	'admin/settings.php?section=registration',	'admin_settings_communications'	=>	'admin/settings.php?section=communications',	'admin_settings_maintenance'	=>	'admin/settings.php?section=maintenance',	'admin_prune'					=>	'admin/prune.php',	'admin_ranks'					=>	'admin/ranks.php',	'admin_reports'					=>	'admin/reports.php',	'admin_users'					=>	'admin/users.php');
<?php/** * Loader class for inject CSS and JS files. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// JS groupsdefine('FORUM_JS_GROUP_SYSTEM', -100);define('FORUM_JS_GROUP_DEFAULT', 0);define('FORUM_JS_GROUP_COUNTER', 100);// CSS groupsdefine('FORUM_CSS_GROUP_SYSTEM', -100);define('FORUM_CSS_GROUP_DEFAULT', 0);class Loader{	private $libs;	// Class instance    private static $instance;	// Start of life	private function __construct() {		$this->libs = array();		$this->libs['js'] = array();		$this->libs['css'] = array();	}	// The end	public function __destruct() {		unset($this->libs);	}	// Singleton    public static function singleton() {        if (!isset(self::$instance)) {            $c = __CLASS__;            self::$instance = new $c;        }        return self::$instance;    }    // Clone forbiden    public function __clone() {        trigger_error('Clone is forbiden.', E_USER_ERROR);    }	// Add JS url or file to load	public function add_js($data = NULL, $options = NULL)	{		$return = ($hook = get_hook('ld_fn_add_js_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (is_null($options) || !is_array($options))		{			$options = array();		}		// Default options		$default_options = array(			// external, inline, file			'type'		=> array(				'default'	=> 'external',			),			//			'async'			=> array(				'default'	=> false,			),			//			'weight'		=> array(				'default'	=> 100,			),			//			'group'			=> array(				'default'	=> FORUM_JS_GROUP_DEFAULT,			),			//			'every_page'	=> array(				'default'	=> false,			),			//			'defer'			=> array(				'default'	=> false,			),			//			'preprocess'	=> array(				'default'	=> true,			)		);		$length = count($default_options);		$keys = array_keys($default_options);		for ($i = 0; $i < $length; $i++)		{			$key = $keys[$i];			if (!isset($options[$key]))			{				$default_options[$keys[$i]] = $default_options[$keys[$i]]['default'];				continue;			}			$default_options[$keys[$i]] = $options[$key];		}		// Check data  url or inline code		$default_options['data'] = forum_trim($data);		if (empty($default_options['data']) || utf8_strlen($default_options['data']) < 1)		{			return FALSE;		}		// Check type		if ($default_options['type'] == 'file')		{			$default_options['data'] = $this->create_url_from_file(forum_trim($data));		}		// Tweak weight		$default_options['weight'] += count($this->libs['js']) / 1000;		($hook = get_hook('ld_fn_add_js_pre_merge')) ? eval($hook) : null;		// Add to libs		if ($default_options['type'] != 'inline')		{			$this->libs['js'][$default_options['data']] = $default_options;		}		else		{			$this->libs['js'][] = $default_options;		}		($hook = get_hook('ld_fn_add_js_end')) ? eval($hook) : null;		return $this->libs['js'];	}	//	public function render_js()	{		$output = '';		$return = ($hook = get_hook('ld_fn_render_js_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (empty($this->libs['js']))			return $output;		// Sorts the scripts into correct order		uasort($this->libs['js'], array('Loader', 'sort_libs'));		return $this->render_js_labjs();	}	// Add CSS url or file to load	public function add_css($data = NULL, $options = NULL)	{		$return = ($hook = get_hook('ld_fn_add_css_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (is_null($options) || !is_array($options))		{			$options = array();		}		// Default options		$default_options = array(			//			'type'		=> array(				'default'	=> 'external',			),			//			'weight'		=> array(				'default'	=> 100,			),			//			'group'			=> array(				'default'	=> FORUM_CSS_GROUP_DEFAULT,			),			// screen, all, print			'media'			=> array(				'default'	=> 'all',			),			//			'every_page'	=> array(				'default'	=> false,			),			//			'preprocess'	=> array(				'default'	=> true,			),			'browsers'		=> array(				'default'	=> array(),			),		);		$length = count($default_options);		$keys = array_keys($default_options);		for ($i = 0; $i < $length; $i++)		{			$key = $keys[$i];			if (!isset($options[$key]))			{				$default_options[$keys[$i]] = $default_options[$keys[$i]]['default'];				continue;			}			$default_options[$keys[$i]] = $options[$key];		}		// Check data  url or inline code		$default_options['data'] = forum_trim($data);		if (empty($default_options['data']) || utf8_strlen($default_options['data']) < 1)		{			return FALSE;		}		// Check type		if ($default_options['type'] == 'file')		{			$default_options['data'] = $this->create_url_from_file(forum_trim($data));		}		// Tweak weight		$default_options['weight'] += count($this->libs['css']) / 1000;		($hook = get_hook('ld_fn_add_css_pre_merge')) ? eval($hook) : null;		// Add to libs		if ($default_options['type'] != 'inline')		{			$this->libs['css'][$default_options['data']] = $default_options;		}		else		{			$this->libs['css'][] = $default_options;		}		($hook = get_hook('ld_fn_add_css_end')) ? eval($hook) : null;		return $this->libs['css'];	}	// Render CSS libs	public function render_css()	{		$output = '';		$return = ($hook = get_hook('ld_fn_render_css_start')) ? eval($hook) : null;		if ($return != null)			return $return;		if (empty($this->libs['css']))			return $output;		// Sorts the scripts into correct order		uasort($this->libs['css'], array('Loader', 'sort_libs'));		return $this->render_css_simple();	}	// Render for CSS  use link tags method	private function render_css_simple()	{		$output = '';		$libs = $this->libs['css'];		$return = ($hook = get_hook('ld_fn_render_css_simple_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['type'] == 'inline')			{				$output .= forum_trim($this->check_conditional_comments($lib, '<style>'.$lib['data'].'</style>'))."\n";				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				$output .= forum_trim($this->check_conditional_comments($lib, '<link rel="stylesheet" type="text/css" media="'.$lib['media'].'" href="'.$lib['data'].'" />'))."\n";				unset($libs[$key]);				continue;			}		}		($hook = get_hook('ld_fn_render_css_simple_end')) ? eval($hook) : null;		return $output;	}	// Render for JS  use default script tags method	private function render_js_simple()	{		$output = '';		$libs = $this->libs['js'];		$return = ($hook = get_hook('ld_fn_render_js_simple_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['type'] == 'inline')			{				$output .= '<script>'.$lib['data'].'</script>'."\n";				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				$output .= '<script'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").' src="'.$lib['data'].'"></script>'."\n";				unset($libs[$key]);				continue;			}		}		($hook = get_hook('ld_fn_render_js_simple_end')) ? eval($hook) : null;		return $output;	}	// Render for JS  use LABjs method	private function render_js_labjs()	{		$output_system = $output_counter = $output_default = '';		$libs = $this->libs['js'];		$return = ($hook = get_hook('ld_fn_render_js_labjs_start')) ? eval($hook) : null;		if ($return != null)			return $return;		foreach ($libs as $key => $lib)		{			if ($lib['data'] === FALSE)			{				continue;			}			if ($lib['type'] == 'inline')			{				if ($lib['group'] == FORUM_JS_GROUP_SYSTEM)				{					$output_system .= '<script>'.$lib['data'].'</script>'."\n";				}				else if ($lib['group'] == FORUM_JS_GROUP_COUNTER)				{					$output_counter .= '<script>'.$lib['data'].'</script>'."\n";				}				else				{					$output_default .= "\n\t".'.wait(function () { '.$lib['data'].' })';				}				unset($libs[$key]);				continue;			}			else if ($lib['type'] == 'external' || $lib['type'] == 'file')			{				if ($lib['group'] == FORUM_JS_GROUP_SYSTEM)				{					$output_system .= '<script src="'.$lib['data'].'"'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").'></script>'."\n";				}				else if ($lib['group'] == FORUM_JS_GROUP_COUNTER)				{					$output_counter .= '<script src="'.$lib['data'].'"'.(($lib['async']) ? " async" : "").(($lib['defer']) ? " defer=\"true\"" : "").'></script>'."\n";				}				else				{					$output_default .= "\n\t".'.script("'.$lib['data'].'")';				}				unset($libs[$key]);				continue;			}		}		// Wrap default to LABjs parameters		if ($output_default != '')		{			$output_default = '<script>'."\n\t".'$LAB.setOptions({AlwaysPreserveOrder:true})'.$output_default.';'."\n".'</script>';		}		($hook = get_hook('ld_fn_render_js_labjs_end')) ? eval($hook) : null;		return $output_system.$output_default.$output_counter;	}	// Sort libs	private static function sort_libs($a, $b)	{		$return = ($hook = get_hook('ld_fn_sort_libs_start')) ? eval($hook) : null;		if ($return != null)			return $return;		// 1. Sort by group  system first		if ($a['group'] < $b['group'])		{			return -1;		}		elseif ($a['group'] > $b['group'])		{			return 1;		}		// 2. Within a group, order all infrequently needed, page-specific files after		// common files needed throughout the website. Separating this way allows for		// the aggregate file generated for all of the common files to be reused		// across a site visit without being cut by a page using a less common file.		elseif ($a['every_page'] && !$b['every_page'])		{			return -1;		}		elseif (!$a['every_page'] && $b['every_page'])		{			return 1;		}		// 3. Sort by weight		elseif ($a['weight'] < $b['weight'])		{			return -1;		}		elseif ($a['weight'] > $b['weight'])		{		    return 1;		}		else		{			return 0;		}	}	// Try a get uri scheme (based on Drupal)	private function get_file_uri_scheme($uri)	{		$position = strpos($uri, '://');		return $position ? substr($uri, 0, $position) : FALSE;	}	//	private function encode_path($path)	{		return str_replace('%2F', '/', rawurlencode($path));	}	// Creates a web-accessible URL for local file. (based on Drupal)	private function create_url_from_file($uri)	{		global $base_url;		$scheme = $this->get_file_uri_scheme($uri);		if (!$scheme)		{		    // Allow for:		    // - root-relative URIs (e.g. /foo.jpg in http://example.com/foo.jpg)		    // - protocol-relative URIs (e.g. //bar.jpg, which is expanded to		    //   http://example.com/bar.jpg by the browser when viewing a page over		    //   HTTP and to https://example.com/bar.jpg when viewing a HTTPS page)		    // Both types of relative URIs are characterized by a leading slash, hence		    // we can use a single check.		    if (utf8_substr($uri, 0, 1) == '/')		    {				return $uri;		    }		    else		    {				// If this is not a properly formatted stream, then it is a shipped file.				// Therefore, return the urlencoded URI with the base URL prepended.				return $base_url.'/'.$this->encode_path($uri);		    }		}		else if ($scheme == 'http' || $scheme == 'https')		{			// Check for http so that we don't have to implement getExternalUrl() for			// the http wrapper.			return $uri;		}		else		{			return FALSE;		}	}	// Helper func for render_*  wrap lib in IE-conditional comments	private function check_conditional_comments($element, $data)	{		$return = ($hook = get_hook('ld_fn_check_conditional_comments_start')) ? eval($hook) : null;		if ($return != null)			return $return;		$browsers = (isset($element['browsers']) && is_array($element['browsers'])) ? $element['browsers'] : array();		$browsers += array('IE' => TRUE, '!IE' => TRUE);		// If rendering in all browsers, no need for conditional comments.		if ($browsers['IE'] === true && $browsers['!IE'])		{			return $data;		}		// Determine the conditional comment expression for Internet Explorer to evaluate.		if ($browsers['IE'] === TRUE)		{			$expression = 'IE';		}		elseif ($browsers['IE'] === FALSE)		{			$expression = '!IE';		}		else		{			$expression = $browsers['IE'];		}		if (!$browsers['!IE'])		{			// "downlevel-hidden".			$data = "\n<!--[if $expression]>".$data."<![endif]-->";		}		else		{		    // "downlevel-revealed".		    $data = "\n<!--[if $expression]><!-->".$data."<!--<![endif]-->";		}		return $data;	}}// Create the loader adapter object$forum_loader = Loader::singleton();?>
<?php/** * Word censor management page. * * Allows administrators and moderators to add, modify, and delete the word censors used by the software when censoring is enabled. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('acs_start')) ? eval($hook) : null;if (!$forum_user['is_admmod'])	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_censoring.php';// Add a censor wordif (isset($_POST['add_word'])){	$search_for = forum_trim($_POST['new_search_for']);	$replace_with = forum_trim($_POST['new_replace_with']);	if ($search_for == '' || $replace_with == '')		message($lang_admin_censoring['Must enter text message']);	($hook = get_hook('acs_add_word_form_submitted')) ? eval($hook) : null;	$query = array(		'INSERT'	=> 'search_for, replace_with',		'INTO'		=> 'censoring',		'VALUES'	=> '\''.$forum_db->escape($search_for).'\', \''.$forum_db->escape($replace_with).'\''	);	($hook = get_hook('acs_add_word_qr_add_censor')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the censor cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_censors_cache();	// Add flash message	$forum_flash->add_info($lang_admin_censoring['Censor word added']);	($hook = get_hook('acs_add_word_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_censoring']), $lang_admin_censoring['Censor word added']);}// Update a censor wordelse if (isset($_POST['update'])){	$id = intval(key($_POST['update']));	$search_for = forum_trim($_POST['search_for'][$id]);	$replace_with = forum_trim($_POST['replace_with'][$id]);	if ($search_for == '' || $replace_with == '')		message($lang_admin_censoring['Must enter text message']);	($hook = get_hook('acs_update_form_submitted')) ? eval($hook) : null;	$query = array(		'UPDATE'	=> 'censoring',		'SET'		=> 'search_for=\''.$forum_db->escape($search_for).'\', replace_with=\''.$forum_db->escape($replace_with).'\'',		'WHERE'		=> 'id='.$id	);	($hook = get_hook('acs_update_qr_update_censor')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the censor cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_censors_cache();	// Add flash message	$forum_flash->add_info($lang_admin_censoring['Censor word updated']);	($hook = get_hook('acs_update_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_censoring']), $lang_admin_censoring['Censor word updated']);}// Remove a censor wordelse if (isset($_POST['remove'])){	$id = intval(key($_POST['remove']));	($hook = get_hook('acs_remove_form_submitted')) ? eval($hook) : null;	$query = array(		'DELETE'	=> 'censoring',		'WHERE'		=> 'id='.$id	);	($hook = get_hook('acs_remove_qr_delete_censor')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the censor cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_censors_cache();	// Add flash message	$forum_flash->add_info($lang_admin_censoring['Censor word removed']);	($hook = get_hook('acs_remove_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_censoring']), $lang_admin_censoring['Censor word removed']);}// Load the cached censorsif (file_exists(FORUM_CACHE_DIR.'cache_censors.php'))	include FORUM_CACHE_DIR.'cache_censors.php';if (!defined('FORUM_CENSORS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_censors_cache();	require FORUM_CACHE_DIR.'cache_censors.php';}// Setup the form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])));if ($forum_user['g_id'] == FORUM_ADMIN)	$forum_page['crumbs'][] = array($lang_admin_common['Settings'], forum_link($forum_url['admin_settings_setup']));$forum_page['crumbs'][] = array($lang_admin_common['Censoring'], forum_link($forum_url['admin_censoring']));($hook = get_hook('acs_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'settings');define('FORUM_PAGE', 'admin-censoring');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('acs_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_censoring['Censored word head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_censoring']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_censoring']).'?action=foo') ?>" />			</div>			<div class="ct-box" id="info-censored-intro">				<p><?php echo $lang_admin_censoring['Add censored word intro']; if ($forum_user['g_id'] == FORUM_ADMIN) printf(' '.$lang_admin_censoring['Add censored word extra'], '<strong><a href="'.forum_link($forum_url['admin_settings_features']).'">'.$lang_admin_common['Settings'].' - '.$lang_admin_common['Features'].'</a></strong>') ?></p>			</div>			<fieldset class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_censoring['Add censored word legend'] ?></span></legend><?php ($hook = get_hook('acs_pre_add_word_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php echo $lang_admin_censoring['Add new word legend'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('acs_pre_add_search_for')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_censoring['Censored word label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_search_for" size="24" maxlength="60" required /></span>						</div><?php ($hook = get_hook('acs_pre_add_replace_with')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_censoring['Replacement label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_replace_with" size="24" maxlength="60" required /></span>						</div><?php ($hook = get_hook('acs_pre_add_submit')) ? eval($hook) : null; ?>						<div class="mf-field">							<span class="submit"><input type="submit" name="add_word" value=" <?php echo $lang_admin_censoring['Add word'] ?> " /></span>						</div>					</div><?php ($hook = get_hook('acs_pre_add_word_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('acs_add_word_fieldset_end')) ? eval($hook) : null; ?>			</fieldset>		</form><?phpif (!empty($forum_censors)){	// Reset	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_censoring']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_censoring']).'?action=foo') ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_censoring['Edit censored word legend'] ?></span></legend><?php	foreach ($forum_censors as $censor_key => $cur_word)	{	?><?php ($hook = get_hook('acs_pre_edit_word_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set mf-extra set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php echo $lang_admin_censoring['Existing censored word legend'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('acs_pre_edit_search_for')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_censoring['Censored word label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="search_for[<?php echo $cur_word['id'] ?>]" value="<?php echo forum_htmlencode($cur_word['search_for']) ?>" size="24" maxlength="60" required /></span>						</div><?php ($hook = get_hook('acs_pre_edit_replace_with')) ? eval($hook) : null; ?>						<div class="mf-field">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_censoring['Replacement label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="replace_with[<?php echo $cur_word['id'] ?>]" value="<?php echo forum_htmlencode($cur_word['replace_with']) ?>" size="24" maxlength="60" required /></span>						</div><?php ($hook = get_hook('acs_pre_edit_submit')) ? eval($hook) : null; ?>						<div class="mf-field">							<span class="submit"><input type="submit" name="update[<?php echo $cur_word['id'] ?>]" value="<?php echo $lang_admin_common['Update'] ?>" /> <input type="submit" name="remove[<?php echo $cur_word['id'] ?>]" value="<?php echo $lang_admin_common['Remove'] ?>" formnovalidate /></span>						</div>					</div><?php ($hook = get_hook('acs_pre_edit_word_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('acs_edit_word_fieldset_end')) ? eval($hook) : null; ?><?php	}?>			</fieldset>		</form>	</div><?php}else{?>		<div class="frm-form">			<div class="ct-box">				<p><?php echo $lang_admin_censoring['No censored words'] ?></p>			</div>		</div>	</div><?php}($hook = get_hook('acs_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php// The contents of this file are very much inspired by the file i18n-ascii.txt// from the CMS software Textpattern (http://textpattern.com/). // Replacements done by sef_friendly function$lang_url_replace = array('' => 'A','' => 'A','' => 'A','' => 'A','' => 'Ae','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'C','' => 'C','' => 'C','' => 'C','' => 'C','' => 'D','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'G','' => 'G','' => 'G','' => 'G','' => 'H','' => 'H','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'IJ','' => 'J','' => 'K','' => 'K','' => 'K','' => 'K','' => 'K','' => 'L','' => 'N','' => 'N','' => 'N','' => 'N','' => 'N','' => 'O','' => 'O','' => 'O','' => 'O','' => 'Oe','' => 'O','' => 'O','' => 'O','' => 'O','' => 'OE','' => 'R','' => 'R','' => 'R','' => 'S','' => 'S','' => 'S','' => 'S','' => 'S','' => 'T','' => 'T','' => 'T','' => 'T','' => 'U','' => 'U','' => 'U','' => 'Ue','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'U','' => 'W','' => 'Y','' => 'Y','' => 'Y','' => 'Z','' => 'Z','' => 'Z','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'a','' => 'a','' => 'a','' => 'a','' => 'ae','' => 'c','' => 'c','' => 'c','' => 'c','' => 'c','' => 'd','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'f','' => 'g','' => 'g','' => 'g','' => 'g','' => 'h','' => 'h','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'ij','' => 'j','' => 'k','' => 'k','' => 'l','' => 'l','' => 'l','' => 'l','' => 'l','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'n','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'o','' => 'o','' => 'o','' => 'o','' => 'oe','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'u','' => 'u','' => 'u','' => 'ue','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'u','' => 'w','' => 'y','' => 'y','' => 'y','' => 'z','' => 'z','' => 'z','' => 'ss','' => 'ss','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'A','' => 'B','' => 'G','' => 'D','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'E','' => 'Z','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'TH','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'KS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'P','' => 'R','' => 'R','' => 'S','' => 'T','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'Y','' => 'F','' => 'X','' => 'PS','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'O','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'a','' => 'b','' => 'g','' => 'd','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'e','' => 'z','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'th','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'i','' => 'k','' => 'l','' => 'm','' => 'n','' => 'ks','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'p','' => 'r','' => 'r','' => 'r','' => 's','' => 's','' => 't','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'y','' => 'f','' => 'x','' => 'ps','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => 'o','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => '','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => 'A','' => 'B','' => 'V','' => 'G','' => 'D','' => 'E','' => 'E','' => 'ZH','' => 'Z','' => 'I','' => 'I','' => 'K','' => 'L','' => 'M','' => 'N','' => 'O','' => 'P','' => 'R','' => 'S','' => 'T','' => 'U','' => 'F','' => 'KH','' => 'TS','' => 'CH','' => 'SH','' => 'SHCH','' => 'Y','' => 'E','' => 'YU','' => 'YA','' => '','' => '','' => '','' => '','' => 'YE','' => 'YE','' => 'YI','' => 'YI','' => 'KG','' => 'KG','' => 'd','' => 'D','' => 'th','' => 'TH',);
<?php// Language definitions used in all admin files$lang_admin_prune = array('Prune settings head'			=>	'Prune topics according to age of latest post and forum','Prune legend'					=>	'Select posts to prune','Confirm prune heading'			=>	'Confirm prune topics','Prune details head'			=>	'Confirm prune topics from: %s','Prune topics info 1'			=>	'<strong>WARNING!</strong> Pruning will permanently delete <em>%s</em> topics%s.','Prune topics info 2'			=>	'The topics being deleted do not contain posts newer than <em>%s</em> days old.','All forums'					=>	'All forums','Include sticky'				=>	'including sticky topics','Days old'						=>	'Days old','Prune topics'					=>	'Prune topics','Number of topics'				=>	'Number of topics','Prune caution'					=>	'<strong>IMPORTANT!</strong> Use this feature with caution. Pruned posts can <em>NEVER</em> be recovered. For best performance you should put the forum in maintenance mode during pruning.','Prune intro'					=>	'You may prune topics from all forums or from one particular forum. Topics will be pruned according to the value you specify for "Days old". E.g. if you were to enter 30, every topic that didn\'t contain a post dated less than 30 days old would be deleted.','Prune sticky'					=>	'Prune sticky topics','Prune sticky enable'			=>	'Enable pruning of sticky topics.','Prune from'					=>	'Prune from forum','Days to prune message'			=>	'Days to prune must be a positive integer.','No days old message'			=>	'There are no topics that are as old as you have specified. Please decrease the value of "Days old" and try again.','Prune done'					=>	'Posts pruned.',);
<?php/** * Rank management page. * * Allows administrators to control the tags given to posters based on their post count. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('ark_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ranks.php';// Add a rankif (isset($_POST['add_rank'])){	$rank = forum_trim($_POST['new_rank']);	$min_posts = intval($_POST['new_min_posts']);	if ($rank == '')		message($lang_admin_ranks['Title message']);	if ($min_posts < 0)		message($lang_admin_ranks['Min posts message']);	($hook = get_hook('ark_add_rank_form_submitted')) ? eval($hook) : null;	// Make sure there isn't already a rank with the same min_posts value	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'ranks AS r',		'WHERE'		=> 'min_posts='.$min_posts	);	($hook = get_hook('ark_add_rank_qr_check_rank_collision')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$rank_num_min_posts = $forum_db->result($result);	if ($rank_num_min_posts !== false && $rank_num_min_posts > 0)		message(sprintf($lang_admin_ranks['Min posts occupied message'], $min_posts));	$query = array(		'INSERT'	=> 'rank, min_posts',		'INTO'		=> 'ranks',		'VALUES'	=> '\''.$forum_db->escape($rank).'\', '.$min_posts	);	($hook = get_hook('ark_add_rank_qr_add_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank added']);	($hook = get_hook('ark_add_rank_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank added']);}// Update a rankelse if (isset($_POST['update'])){	$id = intval(key($_POST['update']));	$rank = forum_trim($_POST['rank'][$id]);	$min_posts = intval($_POST['min_posts'][$id]);	if ($rank == '')		message($lang_admin_ranks['Title message']);	if ($min_posts < 0)		message($lang_admin_ranks['Min posts message']);	($hook = get_hook('ark_update_form_submitted')) ? eval($hook) : null;	// Make sure there isn't already a rank with the same min_posts value	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'ranks AS r',		'WHERE'		=> 'id!='.$id.' AND min_posts='.$min_posts	);	($hook = get_hook('ark_update_qr_check_rank_collision')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$rank_num_min_posts = $forum_db->result($result);	if ($rank_num_min_posts !== false && $rank_num_min_posts > 0)		message(sprintf($lang_admin_ranks['Min posts occupied message'], $min_posts));	$query = array(		'UPDATE'	=> 'ranks',		'SET'		=> 'rank=\''.$forum_db->escape($rank).'\', min_posts='.$min_posts,		'WHERE'		=> 'id='.$id	);	($hook = get_hook('ark_update_qr_update_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank updated']);	($hook = get_hook('ark_update_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank updated']);}// Remove a rankelse if (isset($_POST['remove'])){	$id = intval(key($_POST['remove']));	($hook = get_hook('ark_remove_form_submitted')) ? eval($hook) : null;	$query = array(		'DELETE'	=> 'ranks',		'WHERE'		=> 'id='.$id	);	($hook = get_hook('ark_remove_qr_delete_rank')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the ranks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	// Add flash message	$forum_flash->add_info($lang_admin_ranks['Rank removed']);	($hook = get_hook('ark_remove_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_ranks']), $lang_admin_ranks['Rank removed']);}// Load the cached ranksif (file_exists(FORUM_CACHE_DIR.'cache_ranks.php'))	include FORUM_CACHE_DIR.'cache_ranks.php';if (!defined('FORUM_RANKS_LOADED')){	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_ranks_cache();	require FORUM_CACHE_DIR.'cache_ranks.php';}// Setup the form$forum_page['fld_count'] = $forum_page['item_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Ranks'], forum_link($forum_url['admin_ranks'])));($hook = get_hook('ark_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-ranks');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ark_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ranks['Rank head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_ranks']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_ranks']).'?action=foo') ?>" />			</div>			<div class="ct-box" id="info-ranks-intro">				<p><?php printf($lang_admin_ranks['Add rank intro'], '<strong><a href="'.forum_link($forum_url['admin_settings_features']).'">'.$lang_admin_common['Settings'].' - '.$lang_admin_common['Features'].'</a></strong>') ?></p>			</div>			<fieldset class="frm-group frm-hdgroup group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_admin_ranks['Add rank legend'] ?></strong></legend><?php ($hook = get_hook('ark_pre_add_rank_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?><?php echo ($forum_page['item_count'] == 1) ? ' mf-head' : ' mf-extra' ?>">					<legend><span><?php echo $lang_admin_ranks['New rank'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('ark_pre_add_rank_title')) ? eval($hook) : null; ?>						<div class="mf-field mf-field1 text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Rank title label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_rank" size="24" maxlength="50" required /></span>						</div><?php ($hook = get_hook('ark_pre_add_rank_min_posts')) ? eval($hook) : null; ?>						<div class="mf-field text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Min posts label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_min_posts" size="7" maxlength="7" required /></span>						</div><?php ($hook = get_hook('ark_pre_add_rank_submit')) ? eval($hook) : null; ?>						<div class="mf-field text">							<span class="submit"><input type="submit" name="add_rank" value="<?php echo $lang_admin_ranks['Add rank'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('ark_pre_add_rank_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php ($hook = get_hook('ark_add_rank_fieldset_end')) ? eval($hook) : null; ?>			</fieldset>		</form><?phpif (!empty($forum_ranks)){	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_ranks']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_ranks']).'?action=foo') ?>" />			</div>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_ranks['Existing ranks legend'] ?></span></legend><?php	foreach ($forum_ranks as $rank_key => $cur_rank)	{	?><?php ($hook = get_hook('ark_pre_edit_cur_rank_fieldset')) ? eval($hook) : null; ?>				<fieldset class="mf-set mf-extra set<?php echo ++$forum_page['item_count'] ?>">					<legend><span><?php echo $lang_admin_ranks['Existing rank'] ?></span></legend>					<div class="mf-box"><?php ($hook = get_hook('ark_pre_edit_cur_rank_title')) ? eval($hook) : null; ?>						<div class="mf-field text mf-field1">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_ranks['Rank title label'] ?></span></label><br />							<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="rank[<?php echo $cur_rank['id'] ?>]" value="<?php echo forum_htmlencode($cur_rank['rank']) ?>" size="24" maxlength="50" required /></span>						</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_min_posts')) ? eval($hook) : null; ?>						<div class="mf-field text">							<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_ranks['Min posts label'] ?></span></label><br />							<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="min_posts[<?php echo $cur_rank['id'] ?>]" value="<?php echo $cur_rank['min_posts'] ?>" size="7" maxlength="7" required /></span>						</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_submit')) ? eval($hook) : null; ?>						<div class="mf-field text">							<span class="submit"><input type="submit" name="update[<?php echo $cur_rank['id'] ?>]" value="<?php echo $lang_admin_ranks['Update'] ?>" /> <input type="submit" name="remove[<?php echo $cur_rank['id'] ?>]" value="<?php echo $lang_admin_ranks['Remove'] ?>" /></span>						</div>					</div><?php ($hook = get_hook('ark_pre_edit_cur_rank_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		($hook = get_hook('ark_edit_cur_rank_fieldset_end')) ? eval($hook) : null;	}?>			</fieldset>		</form>	</div><?php}else{?>		<div class="frm-form">			<div class="ct-box">				<p><?php echo $lang_admin_ranks['No ranks'] ?></p>			</div>		</div>	</div><?php}($hook = get_hook('ark_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads various functions used in parsing XML (mostly for extensions). * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;//// Parse XML data into an array//function xml_to_array($raw_xml){	$xml_parser = xml_parser_create();	xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, 0);	xml_parser_set_option($xml_parser, XML_OPTION_SKIP_WHITE, 0);	xml_parse_into_struct($xml_parser, $raw_xml, $vals);	xml_parser_free($xml_parser);	$_tmp = '';	foreach ($vals as $xml_elem)	{		$x_tag = $xml_elem['tag'];		$x_level = $xml_elem['level'];		$x_type = $xml_elem['type'];		if ($x_level != 1 && $x_type == 'close')		{			if (isset($multi_key[$x_tag][$x_level]))				$multi_key[$x_tag][$x_level] = 1;			else				$multi_key[$x_tag][$x_level] = 0;		}		if ($x_level != 1 && $x_type == 'complete')		{			if ($_tmp == $x_tag)				$multi_key[$x_tag][$x_level] = 1;			$_tmp = $x_tag;		}	}	foreach ($vals as $xml_elem)	{		$x_tag = $xml_elem['tag'];		$x_level = $xml_elem['level'];		$x_type = $xml_elem['type'];		if ($x_type == 'open')			$level[$x_level] = $x_tag;		$start_level = 1;		$php_stmt = '$xml_array';		if ($x_type == 'close' && $x_level != 1)			$multi_key[$x_tag][$x_level]++;		while ($start_level < $x_level)		{			$php_stmt .= '[$level['.$start_level.']]';			if (isset($multi_key[$level[$start_level]][$start_level]) && $multi_key[$level[$start_level]][$start_level])				$php_stmt .= '['.($multi_key[$level[$start_level]][$start_level]-1).']';			++$start_level;		}		$add = '';		if (isset($multi_key[$x_tag][$x_level]) && $multi_key[$x_tag][$x_level] && ($x_type == 'open' || $x_type == 'complete'))		{			if (!isset($multi_key2[$x_tag][$x_level]))				$multi_key2[$x_tag][$x_level] = 0;			else				$multi_key2[$x_tag][$x_level]++;			$add = '['.$multi_key2[$x_tag][$x_level].']';		}		if (isset($xml_elem['value']) && forum_trim($xml_elem['value']) != '' && !array_key_exists('attributes', $xml_elem))		{			if ($x_type == 'open')				$php_stmt_main = $php_stmt.'[$x_type]'.$add.'[\'content\'] = $xml_elem[\'value\'];';			else				$php_stmt_main = $php_stmt.'[$x_tag]'.$add.' = $xml_elem[\'value\'];';			eval($php_stmt_main);		}		if (array_key_exists('attributes', $xml_elem))		{			if (isset($xml_elem['value']))			{				$php_stmt_main = $php_stmt.'[$x_tag]'.$add.'[\'content\'] = $xml_elem[\'value\'];';				eval($php_stmt_main);			}			foreach ($xml_elem['attributes'] as $key=>$value)			{				$php_stmt_att=$php_stmt.'[$x_tag]'.$add.'[\'attributes\'][$key] = $value;';				eval($php_stmt_att);			}		}	}	if (isset($xml_array))	{		// Make sure there's an array of notes (even if there is only one)		if (isset($xml_array['extension']['note']))		{			if (!is_array(current($xml_array['extension']['note'])))				$xml_array['extension']['note'] = array($xml_array['extension']['note']);		}		else			$xml_array['extension']['note'] = array();		// Make sure there's an array of hooks (even if there is only one)		if (isset($xml_array['extension']['hooks']) && isset($xml_array['extension']['hooks']['hook']))		{			if (!is_array(current($xml_array['extension']['hooks']['hook'])))				$xml_array['extension']['hooks']['hook'] = array($xml_array['extension']['hooks']['hook']);		}	}	return isset($xml_array) ? $xml_array : array();}//// Validate the syntax of an extension manifest file//function validate_manifest($xml_array, $folder_name){	global $lang_admin_ext, $forum_config;	$errors = array();	$return = ($hook = get_hook('xm_fn_validate_manifest_start')) ? eval($hook) : null;	if ($return != null)		return;	if (!isset($xml_array['extension']) || !is_array($xml_array['extension']))		$errors[] = $lang_admin_ext['extension root error'];	else	{		$ext = $xml_array['extension'];		if (!isset($ext['attributes']['engine']))			$errors[] = $lang_admin_ext['extension/engine error'];		else if ($ext['attributes']['engine'] != '1.0')			$errors[] = $lang_admin_ext['extension/engine error2'];		if (!isset($ext['id']) || $ext['id'] == '')			$errors[] = $lang_admin_ext['extension/id error'];		if ($ext['id'] != $folder_name)			$errors[] = $lang_admin_ext['extension/id error2'];		if (!isset($ext['title']) || $ext['title'] == '')			$errors[] = $lang_admin_ext['extension/title error'];		if (!isset($ext['version']) || $ext['version'] == '' || preg_match('/[^a-z0-9\- \.]+/i', $ext['version']))			$errors[] = $lang_admin_ext['extension/version error'];		if (!isset($ext['description']) || $ext['description'] == '')			$errors[] = $lang_admin_ext['extension/description error'];		if (!isset($ext['author']) || $ext['author'] == '')			$errors[] = $lang_admin_ext['extension/author error'];		if (!isset($ext['minversion']) || $ext['minversion'] == '')			$errors[] = $lang_admin_ext['extension/minversion error'];		if (isset($ext['minversion']) && version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext['minversion']), '<'))			$errors[] = sprintf($lang_admin_ext['extension/minversion error2'], $ext['minversion']);		if (!isset($ext['maxtestedon']) || $ext['maxtestedon'] == '')			$errors[] = $lang_admin_ext['extension/maxtestedon error'];		if (isset($ext['note']))		{			foreach ($ext['note'] as $note)			{				if (!isset($note['content']) || $note['content'] == '')					$errors[] = $lang_admin_ext['extension/note error'];				if (!isset($note['attributes']['type']) || $note['attributes']['type'] == '')					$errors[] = $lang_admin_ext['extension/note error2'];			}		}		if (isset($ext['hooks']) && is_array($ext['hooks']))		{			if (!isset($ext['hooks']['hook']) || !is_array($ext['hooks']['hook']))				$errors[] = $lang_admin_ext['extension/hooks/hook error'];			else			{				foreach ($ext['hooks']['hook'] as $hook)				{					if (!isset($hook['content']) || $hook['content'] == '')						$errors[] = $lang_admin_ext['extension/hooks/hook error'];					if (!isset($hook['attributes']['id']) || $hook['attributes']['id'] == '')						$errors[] = $lang_admin_ext['extension/hooks/hook error2'];					if (isset($hook['attributes']['priority']) && (!ctype_digit($hook['attributes']['priority']) || $hook['attributes']['priority'] < 0 || $hook['attributes']['priority'] > 10))						$errors[] = $lang_admin_ext['extension/hooks/hook error3'];					$tokenized_hook = token_get_all('<?php '.$hook['content']);					$last_element = array_pop($tokenized_hook);					if (is_array($last_element) && $last_element[0] == T_INLINE_HTML)						$errors[] = $lang_admin_ext['extension/hooks/hook error4'];				}			}		}	}	($hook = get_hook('xm_fn_validate_manifest_end')) ? eval($hook) : null;	return $errors;}define('FORUM_XML_FUNCTIONS_LOADED', 1);
<?php// Language definitions used in all admin files$lang_admin_reindex = array('Reindex heading'			=>	'Rebuild search index to restore search performance','Rebuild index legend'		=>	'Rebuild search index','Reindex info'				=>	'If you have added, edited or removed posts manually in the database or if you are having problems searching, you should rebuild the search index. For best performance you should put the forum in maintenance mode during rebuilding. Once the process has completed you will be redirected back to this page. It is highly recommended that you have JavaScript enabled in your browser during rebuilding (for automatic redirect when a cycle has completed).','Reindex warning'			=>	'<strong>IMPORTANT!</strong> Rebuilding the search index can take a long time and will increase server load during the rebuild process. If you are forced to abort the rebuild process, make a note of the last processed post ID and enter that ID+1 in "Starting post ID" when/if you want to continue.','Empty index warning'		=>	'<strong>WARNING!</strong> If you want to resume an aborted rebuild, do not select "empty index".','Posts per cycle'			=>	'Posts per cycle','Posts per cycle info'		=>	'The number of posts to process per pageview. E.g. if you were to enter 100, one hundred posts would be processed and then the page would refresh. This is to prevent the script from timing out during the rebuild process.','Starting post'				=>	'Starting post ID','Starting post info'		=>	'The post ID to start rebuilding at. The default value is the first available ID in the database. Normally you would not want to change this.','Empty index'				=>	'Empty index','Empty index info'			=>	'Empty search index before rebuilding (see below).','Rebuilding index title'	=>	'Rebuilding search index','Rebuilding index'			=>	'Rebuilding index This might be a good time to put on some coffee :-)','Processing post'			=>	'Processing post <strong>%s</strong> in topic <strong>%s</strong>.','Javascript redirect'		=>	'JavaScript redirect unsuccessful.','Click to continue'			=>	'Click here to continue','Rebuild index'				=>	'Rebuild index',);
<?php// Language definitions used in all admin files$lang_admin_bans = array('Ban advanced'					=>	'Ban advanced settings','Ban advanced heading'			=>	'Ban by username with IP and email or just ban by IP, by email or both','Ban criteria legend'			=>	'Ban criteria','Ban settings legend'			=>	'Ban settings','Ban IP warning'				=>	'<strong>Warning!</strong> You should be very careful when banning an IP-range because of the possibility of multiple users matching the same partial IP.','Current ban head'				=>	'Banned by %s','Username'						=>	'Username:','Username to ban label'			=>	'Username to ban','Ban creator'					=>	'Ban creator','IP-addresses to ban label'		=>	'IP-addresses to ban','IP-addresses help'				=>	'The IP or IP-ranges you wish to ban (e.g. 150.11.110.1 or 150.11.110). Separate addresses with spaces. If an IP is entered already it is the last known IP of this user in the database.','IP-addresses help stats'		=>	'Click the following link to see IP statistics for this user: ','IP-addresses help link'		=>	'User IP statistics','E-mail/domain to ban label'	=>	'Email or domain to ban','E-mail/domain help'			=>	'The email or email domain you wish to ban (e.g. someone@example.com or example.com). See "Allow registration with banned email addresses" in Settings/Registration for more info.','Ban message label'				=>	'Ban message','Ban message help'				=>	'Displayed to the banned user when he/she visits the forums','Expire date label'				=>	'Ban expiry date','Expire date help'				=>	'The date when this ban should be automatically removed (format: YYYY-MM-DD). Leave blank to remove manually.','Expires'						=>	'Expires:','Message'						=>	'Message:','New ban heading'				=>	'Ban specified username','New ban legend'				=>	'New ban','Advanced ban info'				=>	'The next page will let you enter a custom IP and email. If you just want to ban a specific IP/IP-range or email just leave the username on this page blank.','Existing bans heading'			=>	'Edit or remove existing bans','Add ban'						=>	'Add ban','Save ban'						=>	'Save ban','E-mail'						=>	'Email:','IP-ranges'						=>	'IP/IP-ranges:','Reason'						=>	'Reason','No bans'						=>	'No bans in list.','Edit ban'						=>	'Edit ban','Remove ban'					=>	'Remove ban','Edit or remove'				=>	'%s or %s','Ban removed'					=>	'Ban removed.','Ban added'						=>	'Ban added.','Ban edited'					=>	'Ban edited.','No user id message'			=>	'No user by that ID registered.','No user username message'		=>	'No user by that username registered. If you want to add a ban not tied to a specific username just leave the username blank.','User is admin message'			=>	'The user is an administrator and can\'t be banned. If you want to ban an administrator, you must first move him/her to any other user group.','Must enter message'			=>	'You must enter at least one of the following pieces of information: a username, an IP address or an email address.','Invalid IP message'			=>	'You entered an invalid IP/IP-range.','Can\'t ban guest user'			=>	'The guest user cannot be banned.','Invalid e-mail message'		=>	'The email address (e.g. user@example.com) or partial email address domain (e.g. example.com) you entered is invalid.','Invalid expire message'		=>	'You entered an invalid expire date. The format should be YYYY-MM-DD and the date must be at least one day in the future.',);
<?php// Language definitions used in the index page of the admin panel$lang_admin_index = array('Information head'				=>	'Welcome to PunBB administration control panel','Alerts'						=>	'Administrator Alerts','Check for updates enabled'		=>	'This board is setup to automatically check for updates and hotfixes against the punbb.informer.com updates service.','Check for updates manual'		=>	'Check for updates',	// Link text'Copyright message'				=>	'&copy; 2008-2011 <a href="http://punbb.informer.com/">PunBB</a>, partially based on code &copy; 2008-2009 <a href="http://fluxbb.org/">FluxBB</a>','PunBB version'					=>	'PunBB version','PunBB community'				=>	'Community','Forums'						=>	'Forums','Twitter'						=>	'Twitter','Development'					=>	'Development','Not available'					=>	'Not available','Not applicable'				=>	'N/A','Server load'					=>	'Server load','users online'					=>	'users online','Environment'					=>	'Environment','Operating system'				=>	'Operating system','Show info'						=>	'Show info','Accelerator'					=>	'Accelerator','Database'						=>	'Database','Rows'							=>	'Rows','Size'							=>	'Size','phpinfo disabled'				=>	'The PHP function phpinfo() has been disabled on this server.',);
<?php/** * A database layer class that relies on the SQLite PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for SQLiteif (!function_exists('sqlite_open'))	exit('This PHP environment doesn\'t have SQLite support built in. SQLite support is required if you want to use a SQLite database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $error_no = false;	var $error_msg = 'Unknown';	var $datatype_transformations = array(		'/^SERIAL$/'															=>	'INTEGER',		'/^(TINY|SMALL|MEDIUM|BIG)?INT( )?(\\([0-9]+\\))?( )?(UNSIGNED)?$/i'	=>	'INTEGER',		'/^(TINY|MEDIUM|LONG)?TEXT$/i'											=>	'TEXT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		// Prepend $db_name with the path to the forum root directory		$db_name = FORUM_ROOT.$db_name;		$this->prefix = $db_prefix;		if (!file_exists($db_name))		{			@touch($db_name);			@chmod($db_name, 0666);			if (!file_exists($db_name))				error('Unable to create new database \''.$db_name.'\'. Permission denied.', __FILE__, __LINE__);		}		if (!is_readable($db_name))			error('Unable to open database \''.$db_name.'\' for reading. Permission denied.', __FILE__, __LINE__);		if (!is_writable($db_name))			error('Unable to open database \''.$db_name.'\' for writing. Permission denied.', __FILE__, __LINE__);		if ($p_connect)			$this->link_id = @sqlite_popen($db_name, 0666, $sqlite_error);		else			$this->link_id = @sqlite_open($db_name, 0666, $sqlite_error);		if (!$this->link_id)			error('Unable to open database \''.$db_name.'\'. SQLite reported: '.$sqlite_error, __FILE__, __LINE__);		else			return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return (@sqlite_query($this->link_id, 'BEGIN')) ? true : false;	}	function end_transaction()	{		--$this->in_transaction;		if (@sqlite_query($this->link_id, 'COMMIT'))			return true;		else		{			@sqlite_query($this->link_id, 'ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		if ($unbuffered)			$this->query_result = @sqlite_unbuffered_query($this->link_id, $sql);		else			$this->query_result = @sqlite_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			$this->error_no = @sqlite_last_error($this->link_id);			$this->error_msg = @sqlite_error_string($this->error_no);			if ($this->in_transaction)				@sqlite_query($this->link_id, 'ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))			{				$new_query = $query;				if ($return_query_string)				{					$query_set = array();					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$query_set[] = $this->query_build($new_query, true, $unbuffered);					}					$sql = implode('; ', $query_set);				}				else				{					$result_set = null;					foreach ($query['VALUES'] as $cur_values)					{						$new_query['VALUES'] = $cur_values;						$result_set = $this->query_build($new_query, false, $unbuffered);					}					return $result_set;				}			}			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row != 0)				@sqlite_seek($query_id, $row);			$cur_row = @sqlite_current($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		if ($query_id)		{			$cur_row = @sqlite_fetch_array($query_id, SQLITE_ASSOC);			if ($cur_row)			{				// Horrible hack to get rid of table names and table aliases from the array keys				foreach ($cur_row as $key => $value)				{					$dot_spot = strpos($key, '.');					if ($dot_spot !== false)					{						unset($cur_row[$key]);						$key = substr($key, $dot_spot+1);						$cur_row[$key] = $value;					}				}			}			return $cur_row;		}		else			return false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @sqlite_fetch_array($query_id, SQLITE_NUM) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @sqlite_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->query_result) ? @sqlite_changes($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @sqlite_last_insert_rowid($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return true;	}	function escape($str)	{		return is_array($str) ? '' : sqlite_escape_string($str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = $this->error_no;		$result['error_msg'] = $this->error_msg;		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->in_transaction)			{				if (defined('FORUM_SHOW_QUERIES'))					$this->saved_queries[] = array('COMMIT', 0);				@sqlite_query($this->link_id, 'COMMIT');			}			return @sqlite_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return;	}	function get_version()	{		return array(			'name'		=> 'SQLite',			'version'	=> sqlite_libversion()		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SELECT sql FROM sqlite_master WHERE name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND type=\'table\'');		if (!$this->num_rows($result))			return false;		return preg_match('/[\r\n]'.preg_quote($field_name).' /', $this->result($result));	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$result = $this->query('SELECT 1 FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' AND name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_'.$this->escape($index_name).'\' AND type=\'index\'');		return $this->num_rows($result) > 0;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE ('.implode(',', $key_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".')';		$this->query($query) or error(__FILE__, __LINE__);		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$this->add_index($table_name, $index_name, $index_fields, false, $no_prefix);		}	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function get_table_info($table_name, $no_prefix = false)	{		// Grab table info		$result = $this->query('SELECT sql FROM sqlite_master WHERE tbl_name = \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\' ORDER BY type DESC') or error(__FILE__, __LINE__);		$num_rows = $this->num_rows($result);		if ($num_rows == 0)			return;		$table = array();		$table['indices'] = array();		while ($cur_index = $this->fetch_assoc($result))		{			if (!isset($table['sql']))				$table['sql'] = $cur_index['sql'];			else				$table['indices'][] = $cur_index['sql'];		}		// Work out the columns in the table currently		$table_lines = explode("\n", $table['sql']);		$table['columns'] = array();		foreach ($table_lines as $table_line)		{			$table_line = forum_trim($table_line);			if (substr($table_line, 0, 12) == 'CREATE TABLE')				continue;			else if (substr($table_line, 0, 11) == 'PRIMARY KEY')				$table['primary_key'] = $table_line;			else if (substr($table_line, 0, 6) == 'UNIQUE')				$table['unique'] = $table_line;			else if (substr($table_line, 0, strpos($table_line, ' ')) != '')				$table['columns'][substr($table_line, 0, strpos($table_line, ' '))] = forum_trim(substr($table_line, strpos($table_line, ' ')));		}		return $table;	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Create new table sql		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		$query = $field_type;		if (!$allow_null)			$query .= ' NOT NULL';		if ($default_value === null || $default_value === '')			$default_value = '\'\'';		$query .= ' DEFAULT '.$default_value;		$old_columns = array_keys($table['columns']);		array_insert($table['columns'], $after_field, $query.',', $field_name);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' ('.implode(', ', $old_columns).') SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = 0, $no_prefix = false)	{		return;	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$table = $this->get_table_info($table_name, $no_prefix);		// Create temp table		$now = time();		$tmptable = str_replace('CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (', 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' (', $table['sql']);		$this->query($tmptable) or error(__FILE__, __LINE__);		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now.' SELECT * FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name)) or error(__FILE__, __LINE__);		// Work out the columns we need to keep and the sql for the new table		unset($table['columns'][$field_name]);		$new_columns = array_keys($table['columns']);		$new_table = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' (';		foreach ($table['columns'] as $cur_column => $column_details)			$new_table .= "\n".$cur_column.' '.$column_details;		if (isset($table['unique']))			$new_table .= "\n".$table['unique'].',';		if (isset($table['primary_key']))			$new_table .= "\n".$table['primary_key'];		$new_table = trim($new_table, ',')."\n".');';		// Drop old table		$this->drop_table($table_name, $no_prefix);		// Create new table		$this->query($new_table) or error(__FILE__, __LINE__);		// Recreate indexes		if (!empty($table['indices']))		{			foreach ($table['indices'] as $cur_index)				if (!preg_match('#\(.*'.$field_name.'.*\)#', $cur_index))					$this->query($cur_index) or error(__FILE__, __LINE__);		}		//Copy content back		$this->query('INSERT INTO '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).' SELECT '.implode(', ', $new_columns).' FROM '.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'_t'.$now) or error(__FILE__, __LINE__);		// Drop temp table		$this->drop_table($table_name.'_t'.$now, $no_prefix);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('CREATE '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ON '.($no_prefix ? '' : $this->prefix).$table_name.'('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php// Language definitions used in all admin files$lang_admin_reports = array('No reports selected'			=>	'No reports were selected to be marked as read.','Reports marked read'			=>	'Reports marked as read.','New reports heading'			=>	'New reports (select and mark as read once dealt with)','Empty reports heading'			=>	'Reports are empty','Reported by'					=>	'By %s','Deleted forum'					=>	'Deleted forum','Deleted topic'					=>	'Deleted topic','Deleted post'					=>	'Deleted post','Deleted user'					=>	'Deleted user','Mark read'						=>	'Mark as read','Select report'					=>	'Select report','No new reports'				=>	'(there are no unread reports for you to view)','Read reports heading'			=>	'Last 10 reports marked as read','No reports'					=>	'There are no reports either read or unread for you to view.','Marked read by'				=>	'Read %s by %s',);
<?php/** * A database layer class that relies on the MySQL PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysql_connect'))	exit('This PHP environment doesn\'t have MySQL support built in. MySQL support is required if you want to use a MySQL database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $p_connect)	{		$this->prefix = $db_prefix;		if ($p_connect)			$this->link_id = @mysql_pconnect($db_host, $db_username, $db_password);		else			$this->link_id = @mysql_connect($db_host, $db_username, $db_password);		if ($this->link_id)		{			if (!@mysql_select_db($db_name, $this->link_id))				error('Unable to select database. MySQL reported: '.mysql_error(), __FILE__, __LINE__);		}		else			error('Unable to connect to MySQL server. MySQL reported: '.mysql_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		if ($unbuffered)			$this->query_result = @mysql_unbuffered_query($sql, $this->link_id);		else			$this->query_result = @mysql_query($sql, $this->link_id);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		return ($query_id) ? @mysql_result($query_id, $row, $col) : false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysql_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysql_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysql_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysql_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysql_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysql_free_result($query_id) : false;	}	function escape($str)	{		if (is_array($str))			return '';		else if (function_exists('mysql_real_escape_string'))			return mysql_real_escape_string($str, $this->link_id);		else			return mysql_escape_string($str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysql_errno($this->link_id);		$result['error_msg'] = @mysql_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysql_free_result($this->query_result);			return @mysql_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Standard',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $in_transaction = 0;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database. MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		++$this->in_transaction;		return mysqli_query($this->link_id, 'START TRANSACTION');	}	function end_transaction()	{		--$this->in_transaction;		if (mysqli_query($this->link_id, 'COMMIT'))			return true;		else		{			mysqli_query($this->link_id, 'ROLLBACK');			return false;		}	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			if ($this->in_transaction)				mysqli_query($this->link_id, 'ROLLBACK');			--$this->in_transaction;			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved (InnoDB)',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'InnoDB').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
<?php/*** Utilities for processing "special" characters in UTF-8. "Special" largely means anything which would* be regarded as a non-word character, like ASCII control characters and punctuation. This has a "Roman"* bias - it would be unaware of modern Chinese "punctuation" characters for example.* Note: requires utils/unicode.php to be loaded* @version $Id: specials.php,v 1.2 2006/10/16 21:13:59 harryf Exp $* @package utf8* @subpackage utils* @see utf8_is_valid*///--------------------------------------------------------------------/*** Used internally. Builds a PCRE pattern from the $UTF8_SPECIAL_CHARS * array defined in this file* The $UTF8_SPECIAL_CHARS should contain all special characters (non-letter/non-digit)* defined in the various local charsets - it's not a complete list of* non-alphanum characters in UTF-8. It's not perfect but should match most* cases of special chars.* This function adds the control chars 0x00 to 0x19 to the array of* special chars (they are not included in $UTF8_SPECIAL_CHARS)* @package utf8* @subpackage utils* @return string* @see utf8_from_unicode* @see utf8_is_word_chars* @see utf8_strip_specials*/function utf8_specials_pattern() {    static $pattern = NULL;    if ( !$pattern ) {        $UTF8_SPECIAL_CHARS = array(    0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022, 0x0023,    0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 0x002c,    0x002f,         0x003b, 0x003c, 0x003d, 0x003e, 0x003f, 0x0040, 0x005b,    0x005c, 0x005d, 0x005e,         0x0060, 0x007b, 0x007c, 0x007d, 0x007e,    0x007f, 0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x0085, 0x0086, 0x0087, 0x0088,    0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 0x008e, 0x008f, 0x0090, 0x0091, 0x0092,    0x0093, 0x0094, 0x0095, 0x0096, 0x0097, 0x0098, 0x0099, 0x009a, 0x009b, 0x009c,    0x009d, 0x009e, 0x009f, 0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00a4, 0x00a5, 0x00a6,    0x00a7, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x00af, 0x00b0,    0x00b1, 0x00b2, 0x00b3, 0x00b4, 0x00b5, 0x00b6, 0x00b7, 0x00b8, 0x00b9, 0x00ba,    0x00bb, 0x00bc, 0x00bd, 0x00be, 0x00bf, 0x00d7, 0x00f7, 0x02c7, 0x02d8, 0x02d9,    0x02da, 0x02db, 0x02dc, 0x02dd, 0x0300, 0x0301, 0x0303, 0x0309, 0x0323, 0x0384,    0x0385, 0x0387, 0x03b2, 0x03c6, 0x03d1, 0x03d2, 0x03d5, 0x03d6, 0x05b0, 0x05b1,    0x05b2, 0x05b3, 0x05b4, 0x05b5, 0x05b6, 0x05b7, 0x05b8, 0x05b9, 0x05bb, 0x05bc,    0x05bd, 0x05be, 0x05bf, 0x05c0, 0x05c1, 0x05c2, 0x05c3, 0x05f3, 0x05f4, 0x060c,    0x061b, 0x061f, 0x0640, 0x064b, 0x064c, 0x064d, 0x064e, 0x064f, 0x0650, 0x0651,    0x0652, 0x066a, 0x0e3f, 0x200c, 0x200d, 0x200e, 0x200f, 0x2013, 0x2014, 0x2015,    0x2017, 0x2018, 0x2019, 0x201a, 0x201c, 0x201d, 0x201e, 0x2020, 0x2021, 0x2022,    0x2026, 0x2030, 0x2032, 0x2033, 0x2039, 0x203a, 0x2044, 0x20a7, 0x20aa, 0x20ab,    0x20ac, 0x2116, 0x2118, 0x2122, 0x2126, 0x2135, 0x2190, 0x2191, 0x2192, 0x2193,    0x2194, 0x2195, 0x21b5, 0x21d0, 0x21d1, 0x21d2, 0x21d3, 0x21d4, 0x2200, 0x2202,    0x2203, 0x2205, 0x2206, 0x2207, 0x2208, 0x2209, 0x220b, 0x220f, 0x2211, 0x2212,    0x2215, 0x2217, 0x2219, 0x221a, 0x221d, 0x221e, 0x2220, 0x2227, 0x2228, 0x2229,    0x222a, 0x222b, 0x2234, 0x223c, 0x2245, 0x2248, 0x2260, 0x2261, 0x2264, 0x2265,    0x2282, 0x2283, 0x2284, 0x2286, 0x2287, 0x2295, 0x2297, 0x22a5, 0x22c5, 0x2310,    0x2320, 0x2321, 0x2329, 0x232a, 0x2469, 0x2500, 0x2502, 0x250c, 0x2510, 0x2514,    0x2518, 0x251c, 0x2524, 0x252c, 0x2534, 0x253c, 0x2550, 0x2551, 0x2552, 0x2553,    0x2554, 0x2555, 0x2556, 0x2557, 0x2558, 0x2559, 0x255a, 0x255b, 0x255c, 0x255d,    0x255e, 0x255f, 0x2560, 0x2561, 0x2562, 0x2563, 0x2564, 0x2565, 0x2566, 0x2567,    0x2568, 0x2569, 0x256a, 0x256b, 0x256c, 0x2580, 0x2584, 0x2588, 0x258c, 0x2590,    0x2591, 0x2592, 0x2593, 0x25a0, 0x25b2, 0x25bc, 0x25c6, 0x25ca, 0x25cf, 0x25d7,    0x2605, 0x260e, 0x261b, 0x261e, 0x2660, 0x2663, 0x2665, 0x2666, 0x2701, 0x2702,    0x2703, 0x2704, 0x2706, 0x2707, 0x2708, 0x2709, 0x270c, 0x270d, 0x270e, 0x270f,    0x2710, 0x2711, 0x2712, 0x2713, 0x2714, 0x2715, 0x2716, 0x2717, 0x2718, 0x2719,    0x271a, 0x271b, 0x271c, 0x271d, 0x271e, 0x271f, 0x2720, 0x2721, 0x2722, 0x2723,    0x2724, 0x2725, 0x2726, 0x2727, 0x2729, 0x272a, 0x272b, 0x272c, 0x272d, 0x272e,    0x272f, 0x2730, 0x2731, 0x2732, 0x2733, 0x2734, 0x2735, 0x2736, 0x2737, 0x2738,    0x2739, 0x273a, 0x273b, 0x273c, 0x273d, 0x273e, 0x273f, 0x2740, 0x2741, 0x2742,    0x2743, 0x2744, 0x2745, 0x2746, 0x2747, 0x2748, 0x2749, 0x274a, 0x274b, 0x274d,    0x274f, 0x2750, 0x2751, 0x2752, 0x2756, 0x2758, 0x2759, 0x275a, 0x275b, 0x275c,    0x275d, 0x275e, 0x2761, 0x2762, 0x2763, 0x2764, 0x2765, 0x2766, 0x2767, 0x277f,    0x2789, 0x2793, 0x2794, 0x2798, 0x2799, 0x279a, 0x279b, 0x279c, 0x279d, 0x279e,    0x279f, 0x27a0, 0x27a1, 0x27a2, 0x27a3, 0x27a4, 0x27a5, 0x27a6, 0x27a7, 0x27a8,    0x27a9, 0x27aa, 0x27ab, 0x27ac, 0x27ad, 0x27ae, 0x27af, 0x27b1, 0x27b2, 0x27b3,    0x27b4, 0x27b5, 0x27b6, 0x27b7, 0x27b8, 0x27b9, 0x27ba, 0x27bb, 0x27bc, 0x27bd,    0x27be, 0xf6d9, 0xf6da, 0xf6db, 0xf8d7, 0xf8d8, 0xf8d9, 0xf8da, 0xf8db, 0xf8dc,    0xf8dd, 0xf8de, 0xf8df, 0xf8e0, 0xf8e1, 0xf8e2, 0xf8e3, 0xf8e4, 0xf8e5, 0xf8e6,    0xf8e7, 0xf8e8, 0xf8e9, 0xf8ea, 0xf8eb, 0xf8ec, 0xf8ed, 0xf8ee, 0xf8ef, 0xf8f0,    0xf8f1, 0xf8f2, 0xf8f3, 0xf8f4, 0xf8f5, 0xf8f6, 0xf8f7, 0xf8f8, 0xf8f9, 0xf8fa,    0xf8fb, 0xf8fc, 0xf8fd, 0xf8fe, 0xfe7c, 0xfe7d,            );        $pattern = preg_quote(utf8_from_unicode($UTF8_SPECIAL_CHARS), '/');        $pattern = '/[\x00-\x19'.$pattern.']/u';    }    return $pattern;}//--------------------------------------------------------------------/*** Checks a string for whether it contains only word characters. This* is logically equivalent to the \w PCRE meta character. Note that* this is not a 100% guarantee that the string only contains alpha /* numeric characters but just that common non-alphanumeric are not* in the string, including ASCII device control characters.* @package utf8* @subpackage utils* @param string to check* @return boolean TRUE if the string only contains word characters* @see utf8_specials_pattern*/function utf8_is_word_chars($str) {    return !(bool)preg_match(utf8_specials_pattern(),$str);}//--------------------------------------------------------------------/*** Removes special characters (nonalphanumeric) from a UTF-8 string* * This can be useful as a helper for sanitizing a string for use as* something like a file name or a unique identifier. Be warned though* it does not handle all possible non-alphanumeric characters and is* not intended is some kind of security / injection filter.** @package utf8* @subpackage utils* @author Andreas Gohr <andi@splitbrain.org>* @param string $string The UTF8 string to strip of special chars* @param string (optional) $repl   Replace special with this string* @return string with common non-alphanumeric characters removed* @see utf8_specials_pattern*/function utf8_strip_specials($string, $repl=''){    return preg_replace(utf8_specials_pattern(), $repl, $string);}
<?php/** * Search index rebuilding script. * * Allows administrators to rebuild the index used to search the posts and topics. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');// Tell common.php that we don't want output bufferingdefine('FORUM_DISABLE_BUFFERING', 1);require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('ari_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_reindex.php';if (isset($_GET['i_per_page']) && isset($_GET['i_start_at'])){	$per_page = intval($_GET['i_per_page']);	$start_at = intval($_GET['i_start_at']);	if ($per_page < 1 || $start_at < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('reindex'.$forum_user['id'])))		csrf_confirm_form();	($hook = get_hook('ari_cycle_start')) ? eval($hook) : null;	@set_time_limit(0);	// If this is the first cycle of posts we empty the search index before we proceed	if (isset($_GET['i_empty_index']))	{		$query = array(			'DELETE'	=> 'search_matches'		);		($hook = get_hook('ari_cycle_qr_empty_search_matches')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'search_words'		);		($hook = get_hook('ari_cycle_qr_empty_search_words')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Reset the sequence for the search words (not needed for SQLite)		switch ($db_type)		{			case 'mysql':			case 'mysql_innodb':			case 'mysqli':			case 'mysqli_innodb':				$result = $forum_db->query('ALTER TABLE '.$forum_db->prefix.'search_words auto_increment=1') or error(__FILE__, __LINE__);				break;			case 'pgsql';				$result = $forum_db->query('SELECT setval(\''.$forum_db->prefix.'search_words_id_seq\', 1, false)') or error(__FILE__, __LINE__);		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Management'], forum_link($forum_url['admin_reports'])),		$lang_admin_reindex['Rebuilding index title']	);?><!DOCTYPE html><html lang="<?php $lang_common['lang_identifier'] ?>" dir="<?php echo $lang_common['lang_direction'] ?>"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title><?php echo generate_crumbs(true) ?></title><style type="text/css">body {	font: 68.75% Verdana, Arial, Helvetica, sans-serif;	color: #333333;	background-color: #FFFFFF}</style></head><body><p><?php echo $lang_admin_reindex['Rebuilding index'] ?></p><?php	if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/search_idx.php';	// Fetch posts to process	$query = array(		'SELECT'	=> 'p.id, p.message, t.id, t.subject, t.first_post_id',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'topics AS t',				'ON'			=> 't.id=p.topic_id'			)		),		'WHERE'		=> 'p.id>='.$start_at,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> $per_page	);	($hook = get_hook('ari_cycle_qr_fetch_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$post_id = 0;	echo '<p>';	while ($cur_post = $forum_db->fetch_row($result))	{		echo sprintf($lang_admin_reindex['Processing post'], $cur_post[0], $cur_post[2]).'<br />'."\n";		if ($cur_post[0] == $cur_post[4])	// This is the "topic post" so we have to index the subject as well			update_search_index('post', $cur_post[0], $cur_post[1], $cur_post[3]);		else			update_search_index('post', $cur_post[0], $cur_post[1]);		$post_id = $cur_post[0];	}	echo '</p>';	// Check if there is more work to do	$query = array(		'SELECT'	=> 'COUNT(p.id)',		'FROM'		=> 'posts AS p',		'WHERE'		=> 'p.id>'.$post_id,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> '1'	);	($hook = get_hook('ari_cycle_qr_find_next_post')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$num_posts_to_proced = $forum_db->result($result);	$query_str = '';	if ($num_posts_to_proced !== false && $num_posts_to_proced > 0)	{		$query_str = '?i_per_page='.$per_page.'&i_start_at='.$num_posts_to_proced.'&csrf_token='.generate_form_token('reindex'.$forum_user['id']);	}	($hook = get_hook('ari_cycle_end')) ? eval($hook) : null;	$forum_db->end_transaction();	$forum_db->close();	exit('<script type="text/javascript">window.location="'.forum_link($forum_url['admin_reindex']).$query_str.'"</script><br />'.$lang_admin_reindex['Javascript redirect'].' <a href="'.forum_link($forum_url['admin_reindex']).$query_str.'">'.$lang_admin_reindex['Click to continue'].'</a>.');}// Get the first post ID from the db$query = array(	'SELECT'	=> 'p.id',	'FROM'		=> 'posts AS p',	'ORDER BY'	=> 'p.id',	'LIMIT'		=> '1');($hook = get_hook('ari_qr_find_lowest_post_id')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$first_id = $forum_db->result($result);if (is_null($first_id) || $first_id === false){	unset($first_id);}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Management'], forum_link($forum_url['admin_reports'])),	array($lang_admin_common['Rebuild index'], forum_link($forum_url['admin_reindex'])));($hook = get_hook('ari_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'management');define('FORUM_PAGE', 'admin-reindex');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('ari_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_reindex['Reindex heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_reindex['Reindex info'] ?></p>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_reindex']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token('reindex'.$forum_user['id']) ?>" />			</div><?php ($hook = get_hook('ari_pre_rebuild_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_reindex['Rebuild index legend'] ?></span></legend><?php ($hook = get_hook('ari_pre_rebuild_per_page')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_reindex['Posts per cycle'] ?></span> <small><?php echo $lang_admin_reindex['Posts per cycle info'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="i_per_page" size="7" maxlength="7" value="100" /></span>					</div>				</div><?php ($hook = get_hook('ari_pre_rebuild_start_post')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span class="fld-label"><?php echo $lang_admin_reindex['Starting post'] ?></span> <small><?php echo $lang_admin_reindex['Starting post info'] ?></small></label><br />						<span class="fld-input"><input type="number" id="fld<?php echo $forum_page['fld_count'] ?>" name="i_start_at" size="7" maxlength="7" value="<?php echo (isset($first_id)) ? $first_id : 0 ?>" /></span>					</div>				</div><?php ($hook = get_hook('ari_pre_rebuild_empty_index')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="i_empty_index" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_admin_reindex['Empty index'] ?></span> <?php echo $lang_admin_reindex['Empty index info'] ?></label>					</div>				</div><?php ($hook = get_hook('ari_pre_rebuild_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('ari_rebuild_fieldset_end')) ? eval($hook) : null; ?>			<div class="ct-box warn-box">				<p class="important"><?php echo $lang_admin_reindex['Reindex warning'] ?></p>				<p class="warn"><?php echo $lang_admin_reindex['Empty index warning'] ?></p>			</div>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="rebuild_index" value="<?php echo $lang_admin_reindex['Rebuild index'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('ari_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Allows the creation of new user accounts. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('rg_start')) ? eval($hook) : null;// If we are logged in, we shouldn't be hereif (!$forum_user['is_guest']){	header('Location: '.forum_link($forum_url['index']));	exit;}// Load the profile.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/profile.php';if ($forum_config['o_regs_allow'] == '0')	message($lang_profile['No new regs']);$errors = array();// User pressed the cancel buttonif (isset($_GET['cancel']))	redirect(forum_link($forum_url['index']), $lang_profile['Reg cancel redirect']);// User pressed agree but failed to tick checkboxelse if (isset($_GET['agree']) && !isset($_GET['req_agreement']))	redirect(forum_link($forum_url['index']), $lang_profile['Reg cancel redirect']);// Show the ruleselse if ($forum_config['o_rules'] == '1' && !isset($_GET['agree']) && !isset($_POST['form_sent'])){	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_common['Register'], forum_link($forum_url['register'])),		$lang_common['Rules']	);	($hook = get_hook('rg_rules_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'rules');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('rg_rules_output_start')) ? eval($hook) : null;	$forum_page['set_count'] = $forum_page['fld_count'] = 0;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_profile['Register at'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_profile['Reg rules head'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box user-box">			<?php echo $forum_config['o_rules_message'] ?>		</div>		<form class="frm-form" method="get" accept-charset="utf-8" action="<?php echo forum_link($forum_url['register']) ?>"><?php ($hook = get_hook('rg_rules_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('rg_rules_pre_agree_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_agreement" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Agreement'] ?></span> <?php echo $lang_profile['Agreement label'] ?></label>					</div>				</div><?php ($hook = get_hook('rg_rules_pre_group_end')) ? eval($hook) : null; ?>			</div><?php ($hook = get_hook('rg_rules_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="agree" value="<?php echo $lang_profile['Agree'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	($hook = get_hook('rg_rules_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}else if (isset($_POST['form_sent'])){	($hook = get_hook('rg_register_form_submitted')) ? eval($hook) : null;	// Check that someone from this IP didn't register a user within the last hour (DoS prevention)	$query = array(		'SELECT'	=> 'COUNT(u.id)',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.registration_ip=\''.$forum_db->escape(get_remote_address()).'\' AND u.registered>'.(time() - 3600)	);	($hook = get_hook('rg_register_qr_check_register_flood')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) > 0)	{		$errors[] = $lang_profile['Registration flood'];	}	// Did everything go according to plan so far?	if (empty($errors))	{		$username = forum_trim($_POST['req_username']);		$email1 = strtolower(forum_trim($_POST['req_email1']));		if ($forum_config['o_regs_verify'] == '1')		{			$password1 = random_key(8, true);			$password2 = $password1;		}		else		{			$password1 = forum_trim($_POST['req_password1']);			$password2 = forum_trim($_POST['req_password2']);		}		// Validate the username		$errors = array_merge($errors, validate_username($username));		// ... and the password		if (utf8_strlen($password1) < 4)			$errors[] = $lang_profile['Pass too short'];		else if ($password1 != $password2)			$errors[] = $lang_profile['Pass not match'];		// ... and the e-mail address		if (!defined('FORUM_EMAIL_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/email.php';		if (!is_valid_email($email1))			$errors[] = $lang_profile['Invalid e-mail'];		// Check if it's a banned e-mail address		$banned_email = is_banned_email($email1);		if ($banned_email && $forum_config['p_allow_banned_email'] == '0')			$errors[] = $lang_profile['Banned e-mail'];		// Clean old unverified registrators - delete older than 72 hours		$query = array(			'DELETE'	=> 'users',			'WHERE'		=> 'group_id='.FORUM_UNVERIFIED.' AND activate_key IS NOT NULL AND registered < '.(time() - 259200)		);		($hook = get_hook('rg_register_qr_delete_unverified')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Check if someone else already has registered with that e-mail address		$dupe_list = array();		$query = array(			'SELECT'	=> 'u.username',			'FROM'		=> 'users AS u',			'WHERE'		=> 'u.email=\''.$forum_db->escape($email1).'\''		);		($hook = get_hook('rg_register_qr_check_email_dupe')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_dupe = $forum_db->fetch_assoc($result))		{			$dupe_list[] = $cur_dupe['username'];		}		if (!empty($dupe_list) && empty($errors))		{			if ($forum_config['p_allow_dupe_email'] == '0')				$errors[] = $lang_profile['Dupe e-mail'];		}		($hook = get_hook('rg_register_end_validation')) ? eval($hook) : null;		// Did everything go according to plan so far?		if (empty($errors))		{			// Make sure we got a valid language string			if (isset($_POST['language']))			{				$language = preg_replace('#[\.\\\/]#', '', $_POST['language']);				if (!file_exists(FORUM_ROOT.'lang/'.$language.'/common.php'))					message($lang_common['Bad request']);			}			else				$language = $forum_config['o_default_lang'];			$initial_group_id = ($forum_config['o_regs_verify'] == '0') ? $forum_config['o_default_user_group'] : FORUM_UNVERIFIED;			$salt = random_key(12);			$password_hash = forum_hash($password1, $salt);			// Validate timezone and DST			$timezone = (isset($_POST['timezone'])) ? floatval($_POST['timezone']) : $forum_config['o_default_timezone'];			// Validate timezone  on error use default value			if (($timezone > 14.0) || ($timezone < -12.0)) {				$timezone = $forum_config['o_default_timezone'];			}			// DST			$dst = (isset($_POST['dst']) && intval($_POST['dst']) === 1) ? 1 : $forum_config['o_default_dst'];			// Insert the new user into the database. We do this now to get the last inserted id for later use.			$user_info = array(				'username'				=>	$username,				'group_id'				=>	$initial_group_id,				'salt'					=>	$salt,				'password'				=>	$password1,				'password_hash'			=>	$password_hash,				'email'					=>	$email1,				'email_setting'			=>	$forum_config['o_default_email_setting'],				'timezone'				=>	$timezone,				'dst'					=>	$dst,				'language'				=>	$language,				'style'					=>	$forum_config['o_default_style'],				'registered'			=>	time(),				'registration_ip'		=>	get_remote_address(),				'activate_key'			=>	($forum_config['o_regs_verify'] == '1') ? '\''.random_key(8, true).'\'' : 'NULL',				'require_verification'	=>	($forum_config['o_regs_verify'] == '1'),				'notify_admins'			=>	($forum_config['o_regs_report'] == '1')			);			($hook = get_hook('rg_register_pre_add_user')) ? eval($hook) : null;			add_user($user_info, $new_uid);			// If we previously found out that the e-mail was banned			if ($banned_email && $forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Banned e-mail detected';				$mail_message = 'User \''.$username.'\' registered with banned e-mail address: '.$email1."\n\n".'User profile: '.forum_link($forum_url['user'], $new_uid)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				($hook = get_hook('rg_register_banned_email')) ? eval($hook) : null;				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}			// If we previously found out that the e-mail was a dupe			if (!empty($dupe_list) && $forum_config['o_mailing_list'] != '')			{				$mail_subject = 'Alert - Duplicate e-mail detected';				$mail_message = 'User \''.$username.'\' registered with an e-mail address that also belongs to: '.implode(', ', $dupe_list)."\n\n".'User profile: '.forum_link($forum_url['user'], $new_uid)."\n\n".'-- '."\n".'Forum Mailer'."\n".'(Do not reply to this message)';				($hook = get_hook('rg_register_dupe_email')) ? eval($hook) : null;				forum_mail($forum_config['o_mailing_list'], $mail_subject, $mail_message);			}			($hook = get_hook('rg_register_pre_login_redirect')) ? eval($hook) : null;			// Must the user verify the registration or do we log him/her in right now?			if ($forum_config['o_regs_verify'] == '1')				message(sprintf($lang_profile['Reg e-mail'], '<a href="mailto:'.forum_htmlencode($forum_config['o_admin_email']).'">'.forum_htmlencode($forum_config['o_admin_email']).'</a>'));			$expire = time() + $forum_config['o_timeout_visit'];			forum_setcookie($cookie_name, base64_encode($new_uid.'|'.$password_hash.'|'.$expire.'|'.sha1($salt.$password_hash.forum_hash($expire, $salt))), $expire);			redirect(forum_link($forum_url['index']), $lang_profile['Reg complete']);		}	}}// Setup form$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['register']).'?action=register';// Setup form information$forum_page['frm_info'] = array();if ($forum_config['o_regs_verify'] != '0')	$forum_page['frm_info']['email'] = '<p class="warn">'.$lang_profile['Reg e-mail info'].'</p>';// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array(sprintf($lang_profile['Register at'], $forum_config['o_board_title']), forum_link($forum_url['register'])),);// Load JS for timezone detection$forum_loader->add_js('include/js/min/detect_timezone.min.js', array('type' => 'file'));$forum_loader->add_js('FORUM.detect_timezone.detect_on_register_form();', array('type' => 'inline'));($hook = get_hook('rg_register_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'register');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('rg_register_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo sprintf($lang_profile['Register at'], $forum_config['o_board_title']) ?></span></h2>	</div>	<div class="main-content main-frm"><?php	if (!empty($forum_page['frm_info'])):?>		<div class="ct-box info-box">			<?php echo implode("\n\t\t\t", $forum_page['frm_info'])."\n" ?>		</div><?php	endif;	// If there were any errors, show them	if (!empty($errors))	{		$forum_page['errors'] = array();		foreach ($errors as $cur_error)			$forum_page['errors'][] = '<li class="warn"><span>'.$cur_error.'</span></li>';		($hook = get_hook('rg_pre_register_errors')) ? eval($hook) : null;?>		<div class="ct-box error-box">			<h2 class="warn hn"><span><?php echo $lang_profile['Register errors'] ?></span></h2>			<ul class="error-list">				<?php echo implode("\n\t\t\t\t", $forum_page['errors'])."\n" ?>			</ul>		</div><?php	}?>		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_common['Required warn'], '<em>'.$lang_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" id="afocus" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>" autocomplete="off">			<div class="hidden">				<input type="hidden" name="form_sent" value="1" />				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />				<input type="hidden" name="timezone" id="register_timezone" value="<?php echo forum_htmlencode($forum_config['o_default_timezone']) ?>" />				<input type="hidden" name="dst" id="register_dst" value="<?php echo forum_htmlencode($forum_config['o_default_dst']) ?>" />			</div><?php ($hook = get_hook('rg_register_pre_group')) ? eval($hook) : null; ?>			<div class="frm-group group<?php echo ++$forum_page['group_count'] ?>"><?php ($hook = get_hook('rg_register_pre_username')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Username'] ?></span> <small><?php echo $lang_profile['Username help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_username" value="<?php echo(isset($_POST['req_username']) ? forum_htmlencode($_POST['req_username']) : '') ?>" size="35" maxlength="25" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_password')) ? eval($hook) : null; ?><?php if ($forum_config['o_regs_verify'] == '0'): ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Password'] ?></span> <small><?php echo $lang_profile['Password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password1" size="35" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_confirm_password')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Confirm password'] ?></span> <small><?php echo $lang_profile['Confirm password help'] ?></small></label><br />						<span class="fld-input"><input type="password" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_password2" size="35" required /></span>					</div>				</div><?php endif; ($hook = get_hook('rg_register_pre_email')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['E-mail'] ?></span> <small><?php echo $lang_profile['E-mail help'] ?></small></label><br />						<span class="fld-input"><input type="email" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_email1" value="<?php echo(isset($_POST['req_email1']) ? forum_htmlencode($_POST['req_email1']) : '') ?>" size="35" maxlength="80" required /></span>					</div>				</div><?php ($hook = get_hook('rg_register_pre_email_confirm')) ? eval($hook) : null;		$languages = array();		$d = dir(FORUM_ROOT.'lang');		while (($entry = $d->read()) !== false)		{			if ($entry != '.' && $entry != '..' && is_dir(FORUM_ROOT.'lang/'.$entry) && file_exists(FORUM_ROOT.'lang/'.$entry.'/common.php'))				$languages[] = $entry;		}		$d->close();		($hook = get_hook('rg_register_pre_language')) ? eval($hook) : null;		// Only display the language selection box if there's more than one language available		if (count($languages) > 1)		{			natcasesort($languages);?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_profile['Language'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="language"><?php			$select_lang = isset($_POST['language']) ? $_POST['language'] : $forum_config['o_default_lang'];			foreach ($languages as $lang)			{				if ($select_lang == $lang)					echo "\t\t\t\t\t\t".'<option value="'.$lang.'" selected="selected">'.$lang.'</option>'."\n";				else					echo "\t\t\t\t\t\t".'<option value="'.$lang.'">'.$lang.'</option>'."\n";			}?>						</select></span>					</div>				</div><?php		}		($hook = get_hook('rg_register_pre_group_end')) ? eval($hook) : null;?>			</div><?php ($hook = get_hook('rg_register_group_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="register" value="<?php echo $lang_profile['Register'] ?>" /></span>			</div>		</form>	</div><?php($hook = get_hook('rg_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/*** @version $Id: strcasecmp.php,v 1.1 2006/02/25 13:50:17 harryf Exp $* @package utf8* @subpackage strings*///---------------------------------------------------------------/*** UTF-8 aware alternative to strcasecmp* A case insensivite string comparison* Note: requires utf8_strtolower* @param string* @param string* @return int* @see http://www.php.net/strcasecmp* @see utf8_strtolower* @package utf8* @subpackage strings*/function utf8_strcasecmp($strX, $strY) {    $strX = utf8_strtolower($strX);    $strY = utf8_strtolower($strY);    return strcmp($strX, $strY);}
