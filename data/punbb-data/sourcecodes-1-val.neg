<?php/** * Extension and hotfix management page. * * Allows administrators to control the extensions and hotfixes installed in the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';if (!defined('FORUM_XML_FUNCTIONS_LOADED'))	require FORUM_ROOT.'include/xml.php';($hook = get_hook('aex_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_ext.php';// Make sure we have XML supportif (!function_exists('xml_parser_create'))	message($lang_admin_ext['No XML support']);$section = isset($_GET['section']) ? $_GET['section'] : null;// Install an extensionif (isset($_GET['install']) || isset($_GET['install_hotfix'])){	($hook = get_hook('aex_install_selected')) ? eval($hook) : null;	// User pressed the cancel button	if (isset($_POST['install_cancel']))		redirect(forum_link(isset($_GET['install']) ? $forum_url['admin_extensions_manage'] : $forum_url['admin_extensions_hotfixes']), $lang_admin_common['Cancel redirect']);	$id = preg_replace('/[^0-9a-z_]/', '', isset($_GET['install']) ? $_GET['install'] : $_GET['install_hotfix']);	// Load manifest (either locally or from punbb.informer.com updates service)	if (isset($_GET['install']))		$manifest = is_readable(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') ? file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml') : false;	else	{		$remote_file = get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16);		if (!empty($remote_file['content']))			$manifest = $remote_file['content'];	}	// Parse manifest.xml into an array and validate it	$ext_data = xml_to_array($manifest);	$errors = validate_manifest($ext_data, $id);	if (!empty($errors))		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_ext['Hotfix download failed']);	// Make sure we have an array of dependencies	if (!isset($ext_data['extension']['dependencies']['dependency']))		$ext_data['extension']['dependencies'] = array();	else if (!is_array(current($ext_data['extension']['dependencies'])))		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);	else		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.disabled=0'	);	($hook = get_hook('aex_install_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$installed_ext = array();	while ($row = $forum_db->fetch_assoc($result))		$installed_ext[] = $row['id'];	foreach ($ext_data['extension']['dependencies'] as $dependency)	{		if (!in_array($dependency, $installed_ext))			message(sprintf($lang_admin_ext['Missing dependency'], $dependency));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Install hotfix'] : $lang_admin_ext['Install extension']	);	if (isset($_POST['install_comply']))	{		($hook = get_hook('aex_install_comply_form_submitted')) ? eval($hook) : null;		// $ext_info contains some information about the extension being installed		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id,			'dependencies'	=> array()		);		foreach ($ext_data['extension']['dependencies'] as $dependency)		{			$ext_info['dependencies'][$dependency] = array(				'id'	=> $dependency,				'path'	=> FORUM_ROOT.'extensions/'.$dependency,				'url'	=> $base_url.'/extensions/'.$dependency,			);		}		// Is there some uninstall code to store in the db?		$uninstall_code = (isset($ext_data['extension']['uninstall']) && forum_trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(forum_trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';		// Is there an uninstall note to store in the db?		$uninstall_note = 'NULL';		foreach ($ext_data['extension']['note'] as $cur_note)		{			if ($cur_note['attributes']['type'] == 'uninstall' && forum_trim($cur_note['content']) != '')				$uninstall_note = '\''.$forum_db->escape(forum_trim($cur_note['content'])).'\'';		}		$notices = array();		// Is this a fresh install or an upgrade?		$query = array(			'SELECT'	=> 'e.version',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_install_comply_qr_get_current_ext_version')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ext_version = $forum_db->result($result);		if (!is_null($ext_version) && $ext_version !== false)		{			// EXT_CUR_VERSION will be available to the extension install routine (to facilitate extension upgrades)			define('EXT_CUR_VERSION', $ext_version);			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Update the existing extension			$query = array(				'UPDATE'	=> 'extensions',				'SET'		=> 'title=\''.$forum_db->escape($ext_data['extension']['title']).'\', version=\''.$forum_db->escape($ext_data['extension']['version']).'\', description=\''.$forum_db->escape($ext_data['extension']['description']).'\', author=\''.$forum_db->escape($ext_data['extension']['author']).'\', uninstall='.$uninstall_code.', uninstall_note='.$uninstall_note.', dependencies=\'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',				'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Delete the old hooks			$query = array(				'DELETE'	=> 'extension_hooks',				'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''			);			($hook = get_hook('aex_install_comply_qr_update_ext_delete_hooks')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		else		{			// Run the author supplied install code			if (isset($ext_data['extension']['install']) && forum_trim($ext_data['extension']['install']) != '')				eval($ext_data['extension']['install']);			// Add the new extension			$query = array(				'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',				'INTO'		=> 'extensions',				'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',			);			($hook = get_hook('aex_install_comply_qr_add_ext')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Now insert the hooks		if (isset($ext_data['extension']['hooks']['hook']))		{			foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)  			{				$cur_hooks = explode(',', $ext_hook['attributes']['id']);				foreach ($cur_hooks as $cur_hook)				{					$query = array(						'INSERT'	=> 'id, extension_id, code, installed, priority',						'INTO'		=> 'extension_hooks',						'VALUES'	=> '\''.$forum_db->escape(forum_trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(forum_trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)					);					($hook = get_hook('aex_install_comply_qr_add_hook')) ? eval($hook) : null;					$forum_db->query_build($query) or error(__FILE__, __LINE__);				}  			}  		}		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_install_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			if (strpos($id, 'hotfix_') === 0)				define('FORUM_PAGE', 'admin-extensions-hotfixes');			else				define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_install_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension installed info'] ?></p>			<ul class="data-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_install_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix installed']);			else				$forum_flash->add_info($lang_admin_ext['Extension installed']);			($hook = get_hook('aex_install_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix installed']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension installed']);		}	}	($hook = get_hook('aex_install_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	if (strpos($id, 'hotfix_') === 0)		define('FORUM_PAGE', 'admin-extensions-hotfixes');	else		define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['extension']['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php'.(isset($_GET['install']) ? '?install=' : '?install_hotfix=').$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['extension']['title']) ?></span></h3>						<p><?php  echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['extension']['description']) ?></p>					</div>				</div>			</div><?php	// Setup an array of warnings to display in the form	$form_warnings = array();	$forum_page['num_items'] = 0;	foreach ($ext_data['extension']['note'] as $cur_note)	{		if ($cur_note['attributes']['type'] == 'install')			$form_warnings[] = '<li>'.forum_htmlencode($cur_note['content']).'</li>';	}	if (version_compare(clean_version($forum_config['o_cur_version']), clean_version($ext_data['extension']['maxtestedon']), '>'))		$form_warnings[] = '<li>'.$lang_admin_ext['Maxtestedon warning'].'</li>';	if (!empty($form_warnings))	{?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Install note'] ?></strong></p>				<ol class="info-list"><?php		echo implode("\n\t\t\t\t\t", $form_warnings)."\n";?>				</ol>			</div><?php	}?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="install_comply" value="<?php echo ((strpos($id, 'hotfix_') !== 0) ? $lang_admin_ext['Install extension'] : $lang_admin_ext['Install hotfix']) ?>" /></span>				<span class="cancel"><input type="submit" name="install_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('aex_install_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Uninstall an extensionelse if (isset($_GET['uninstall'])){	// User pressed the cancel button	if (isset($_POST['uninstall_cancel']))		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_common['Cancel redirect']);	($hook = get_hook('aex_uninstall_selected')) ? eval($hook) : null;	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['uninstall']);	// Fetch info about the extension	$query = array(		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_uninstall_qr_get_extension')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_data = $forum_db->fetch_assoc($result);	if (!$ext_data)	{		message($lang_common['Bad request']);	}	// Check dependancies	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''	);	($hook = get_hook('aex_uninstall_qr_check_dependencies')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$dependency = $forum_db->fetch_assoc($result);	if (!is_null($dependency) && $dependency !== false)	{		message(sprintf($lang_admin_ext['Uninstall dependency'], $dependency['id']));	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array((strpos($id, 'hotfix_') === 0) ? $lang_admin_common['Manage hotfixes'] : $lang_admin_common['Manage extensions'], (strpos($id, 'hotfix_') === 0) ? forum_link($forum_url['admin_extensions_hotfixes']) : forum_link($forum_url['admin_extensions_manage'])),		(strpos($id, 'hotfix_') === 0) ? $lang_admin_ext['Uninstall hotfix'] : $lang_admin_ext['Uninstall extension']	);	// If the user has confirmed the uninstall	if (isset($_POST['uninstall_comply']))	{		($hook = get_hook('aex_uninstall_comply_form_submitted')) ? eval($hook) : null;		$ext_info = array(			'id'			=> $id,			'path'			=> FORUM_ROOT.'extensions/'.$id,			'url'			=> $base_url.'/extensions/'.$id		);		$notices = array();		// Run uninstall code		eval($ext_data['uninstall']);		// Now delete the extension and its hooks from the db		$query = array(			'DELETE'	=> 'extension_hooks',			'WHERE'		=> 'extension_id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_uninstall_delete_hooks')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'extensions',			'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_uninstall_comply_qr_delete_extension')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Empty the PHP cache		forum_clear_cache();		// Regenerate the hooks cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_hooks_cache();		// Display notices if there are any		if (!empty($notices))		{			($hook = get_hook('aex_uninstall_notices_pre_header_load')) ? eval($hook) : null;			define('FORUM_PAGE_SECTION', 'extensions');			define('FORUM_PAGE', 'admin-extensions-manage');			require FORUM_ROOT.'header.php';			// START SUBST - <!-- forum_main -->			ob_start();			($hook = get_hook('aex_uninstall_notices_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['Extension uninstalled info'] ?></p>			<ul class="info-list"><?php			foreach ($notices as $cur_notice)				echo "\t\t\t\t".'<li><span>'.$cur_notice.'</span></li>'."\n";?>			</ul>			<p><a href="<?php echo forum_link($forum_url['admin_extensions_manage']) ?>"><?php echo $lang_admin_common['Manage extensions'] ?></a></p>		</div>	</div><?php			($hook = get_hook('aex_uninstall_notices_end')) ? eval($hook) : null;			$tpl_temp = forum_trim(ob_get_contents());			$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);			ob_end_clean();			// END SUBST - <!-- forum_main -->			require FORUM_ROOT.'footer.php';		}		else		{			// Add flash message			if (strpos($id, 'hotfix_') === 0)				$forum_flash->add_info($lang_admin_ext['Hotfix uninstalled']);			else				$forum_flash->add_info($lang_admin_ext['Extension uninstalled']);			($hook = get_hook('aex_uninstall_comply_pre_redirect')) ? eval($hook) : null;			if (strpos($id, 'hotfix_') === 0)				redirect(forum_link($forum_url['admin_extensions_hotfixes']), $lang_admin_ext['Hotfix uninstalled']);			else				redirect(forum_link($forum_url['admin_extensions_manage']), $lang_admin_ext['Extension uninstalled']);		}	}	else	// If the user hasn't confirmed the uninstall	{		($hook = get_hook('aex_uninstall_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE_SECTION', 'extensions');		if (strpos($id, 'hotfix_') === 0)			define('FORUM_PAGE', 'admin-extensions-hotfixes');		else			define('FORUM_PAGE', 'admin-extensions-manage');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('aex_uninstall_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']) ?> "<?php echo forum_htmlencode($ext_data['title']) ?>"</span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $base_url ?>/admin/extensions.php?section=manage&amp;uninstall=<?php echo $id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id) ?>" />			</div>			<div class="ct-group data-group">				<div class="ct-set data-set set1">					<div class="ct-box data-box">						<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext_data['title']) ?></span></h3>						<p><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext_data['version']) : $lang_admin_ext['Hotfix']) ?></p>						<p><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['author'])) ?></p>						<p><?php echo forum_htmlencode($ext_data['description']) ?></p>					</div>				</div>			</div><?php if ($ext_data['uninstall_note'] != ''): ?>			<div class="ct-box warn-box">				<p class="important"><strong><?php echo $lang_admin_ext['Uninstall note'] ?></strong></p>				<p><?php echo forum_htmlencode($ext_data['uninstall_note']) ?></p>			</div><?php endif; ?><?php if (strpos($id, 'hotfix_') !== 0): ?>			<div class="ct-box warn-box">				<p class="warn"><?php echo $lang_admin_ext['Installed extensions warn'] ?></p>			</div><?php endif; ?>				<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="uninstall_comply" value="<?php echo $lang_admin_ext['Uninstall'] ?>" /></span>				<span class="cancel"><input type="submit" name="uninstall_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php		($hook = get_hook('aex_uninstall_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}}// Enable or disable an extensionelse if (isset($_GET['flip'])){	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['flip']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('flip'.$id)))		csrf_confirm_form();	($hook = get_hook('aex_flip_selected')) ? eval($hook) : null;	// Fetch the current status of the extension	$query = array(		'SELECT'	=> 'e.disabled',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_get_disabled_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$ext_status = $forum_db->result($result);	// No rows	if (is_null($ext_status) || $ext_status === false)	{		message($lang_common['Bad request']);	}	// Are we disabling or enabling?	$disable = $ext_status == '0';	// Check dependancies	if ($disable)	{		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \'%|'.$forum_db->escape($id).'|%\''		);		($hook = get_hook('aex_flip_qr_get_disable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependency = $forum_db->fetch_assoc($result);		if (!is_null($dependency) && $dependency !== false)		{			message(sprintf($lang_admin_ext['Disable dependency'], $dependency['id']));		}	}	else	{		$query = array(			'SELECT'	=> 'e.dependencies',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''		);		($hook = get_hook('aex_flip_qr_get_enable_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$dependencies = $forum_db->fetch_assoc($result);		$dependencies = explode('|', substr($dependencies['dependencies'], 1, -1));		$query = array(			'SELECT'	=> 'e.id',			'FROM'		=> 'extensions AS e',			'WHERE'		=> 'e.disabled=0'		);		($hook = get_hook('aex_flip_qr_check_dependencies')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$installed_ext = array();		while ($row = $forum_db->fetch_assoc($result))			$installed_ext[] = $row['id'];		foreach ($dependencies as $dependency)		{			if (!empty($dependency) && !in_array($dependency, $installed_ext))				message(sprintf($lang_admin_ext['Disabled dependency'], $dependency));		}	}	$query = array(		'UPDATE'	=> 'extensions',		'SET'		=> 'disabled='.($disable ? '1' : '0'),		'WHERE'		=> 'id=\''.$forum_db->escape($id).'\''	);	($hook = get_hook('aex_flip_qr_update_disabled_status')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the hooks cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_hooks_cache();	// Add flash message	if ($section == 'hotfixes')		$forum_flash->add_info(($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		$forum_flash->add_info(($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));	($hook = get_hook('aex_flip_pre_redirect')) ? eval($hook) : null;	if ($section == 'hotfixes')		redirect(forum_link($forum_url['admin_extensions_hotfixes']), ($disable ? $lang_admin_ext['Hotfix disabled'] : $lang_admin_ext['Hotfix enabled']));	else		redirect(forum_link($forum_url['admin_extensions_manage']), ($disable ? $lang_admin_ext['Extension disabled'] : $lang_admin_ext['Extension enabled']));}($hook = get_hook('aex_new_action')) ? eval($hook) : null;// Generate an array of installed extensions$inst_exts = array();$query = array(	'SELECT'	=> 'e.*',	'FROM'		=> 'extensions AS e',	'ORDER BY'	=> 'e.title');($hook = get_hook('aex_qr_get_all_extensions')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_ext = $forum_db->fetch_assoc($result))	$inst_exts[$cur_ext['id']] = $cur_ext;// Hotfixes listif ($section == 'hotfixes'){	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage hotfixes'], forum_link($forum_url['admin_extensions_hotfixes']))	);	($hook = get_hook('aex_section_hotfixes_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-hotfixes');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_hotfixes_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Hotfixes available'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	// Loop through any available hotfixes	if (isset($forum_updates['hotfix']))	{		// If there's only one hotfix, add one layer of arrays so we can foreach over it		if (!is_array(current($forum_updates['hotfix'])))			$forum_updates['hotfix'] = array($forum_updates['hotfix']);		foreach ($forum_updates['hotfix'] as $hotfix)		{			if (!array_key_exists($hotfix['attributes']['id'], $inst_exts))			{				$forum_page['ext_item'][] = '<div class="ct-box info-box hotfix available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($hotfix['content']).'</span></h3>'."\n\t\t\t".'<ul>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], 'PunBB').'</span></li>'."\n\t\t\t\t".'<li><span>'.$lang_admin_ext['Hotfix description'].'</span></li>'."\n\t\t\t".'</ul>'."\n\t\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install_hotfix='.urlencode($hotfix['attributes']['id']).'">'.$lang_admin_ext['Install hotfix'].'</a></span></p>'."\n\t\t".'</div>';				++$num_exts;			}		}	}	($hook = get_hook('aex_section_hotfixes_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed hotfixes'] ?></span></h2>	</div>	<div class="main-content main-hotfixes"><?php	$installed_count = 0;	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') !== 0)				continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=hotfixes&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=hotfixese&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		($hook = get_hook('aex_section_hotfixes_pre_ext_actions')) ? eval($hook) : null;?>		<div class="ct-box info-box hotfix <?php echo $ext['disabled'] == '1' ? 'disabled' : 'enabled' ?>">			<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($ext['title']) ?><?php if ($ext['disabled'] == '1') echo ' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )' ?></span></h3>			<ul class="data-list">				<li><span><?php echo ((strpos($id, 'hotfix_') !== 0) ? sprintf($lang_admin_ext['Version'], $ext['version']) : $lang_admin_ext['Hotfix']) ?></span></li>				<li><span><?php printf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])) ?></span></li><?php if ($ext['description'] != ''): ?>				<li><span><?php echo forum_htmlencode($ext['description']) ?></span></li><?php endif; ?>			</ul>			<p class="options"><?php echo implode(' ', $forum_page['ext_actions']) ?></p>		</div><?php		$installed_count++;	}	if ($installed_count == 0)	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed hotfixes'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_hotfixes_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Extensions listelse{	if ($forum_config['o_check_for_versions'] == 1)	{		// Check for the new versions of the extensions istalled		$repository_urls = array('http://punbb.informer.com/extensions');		($hook = get_hook('aex_add_extensions_repository')) ? eval($hook) : null;		$repository_url_by_extension = array();		foreach (array_keys($inst_exts) as $id)			($hook = get_hook('aex_add_repository_for_'.$id)) ? eval($hook) : null;		if (is_readable(FORUM_CACHE_DIR.'cache_ext_version_notifications.php'))			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		//Get latest timestamp in cache		if (isset($forum_ext_repos))		{			$min_timestamp = 10000000000;			foreach ( $forum_ext_repos as $rep)				$min_timestamp = min($min_timestamp, $rep['timestamp']);		}		$update_hour = (isset($forum_ext_versions_update_cache) && (time() - $forum_ext_versions_update_cache > 60 * 60));		// Update last versions if there is no cahe or some extension was added/removed or one day has gone since last update		$update_new_versions_cache = !defined('FORUM_EXT_VERSIONS_LOADED') || (isset($forum_ext_last_versions) && array_diff($inst_exts, $forum_ext_last_versions) != array()) || $update_hour  || ( $update_hour && isset($min_timestamp) && (time() - $min_timestamp > 60*60*24));		($hook = get_hook('aex_before_update_checking')) ? eval($hook) : null;		if ($update_new_versions_cache)		{			if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))				require_once FORUM_ROOT.'include/cache.php';			generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension);			include FORUM_CACHE_DIR.'cache_ext_version_notifications.php';		}	}	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Extensions'], forum_link($forum_url['admin_extensions_manage'])),		array($lang_admin_common['Manage extensions'], forum_link($forum_url['admin_extensions_manage']))	);	($hook = get_hook('aex_section_manage_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'extensions');	define('FORUM_PAGE', 'admin-extensions-manage');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('aex_section_install_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Extensions available'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$num_exts = 0;	$num_failed = 0;	$forum_page['item_num'] = 1;	$forum_page['ext_item'] = array();	$forum_page['ext_error'] = array();	$d = dir(FORUM_ROOT.'extensions');	while (($entry = $d->read()) !== false)	{		if ($entry{0} != '.' && is_dir(FORUM_ROOT.'extensions/'.$entry))		{			if (preg_match('/[^0-9a-z_]/', $entry))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Illegal ID'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			else if (!file_exists(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml'))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Missing manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Parse manifest.xml into an array			$ext_data = is_readable(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml') ? xml_to_array(file_get_contents(FORUM_ROOT.'extensions/'.$entry.'/manifest.xml')) : '';			if (empty($ext_data))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'<span></h3>'."\n\t\t\t\t".'<p>'.$lang_admin_ext['Failed parse manifest'].'</p>'."\n\t\t\t".'</div>';				++$num_failed;				continue;			}			// Validate manifest			$errors = validate_manifest($ext_data, $entry);			if (!empty($errors))			{				$forum_page['ext_error'][] = '<div class="ext-error databox db'.++$forum_page['item_num'].'">'."\n\t\t\t\t".'<h3 class="legend"><span>'.sprintf($lang_admin_ext['Extension loading error'], forum_htmlencode($entry)).'</span></h3>'."\n\t\t\t\t".'<p>'.implode(' ', $errors).'</p>'."\n\t\t\t".'</div>';				++$num_failed;			}			else			{				if (!array_key_exists($entry, $inst_exts) || version_compare($inst_exts[$entry]['version'], $ext_data['extension']['version'], '!='))				{					$forum_page['ext_item'][] = '<div class="ct-box info-box extension available">'."\n\t\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext_data['extension']['title']).'</span></h3>'."\n\t\t\t".'<ul class="data-list">'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext_data['extension']['version']).'</span></li>'."\n\t\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext_data['extension']['author'])).'</span></li>'.(($ext_data['extension']['description'] != '') ? "\n\t\t\t\t".'<li><span>'.forum_htmlencode($ext_data['extension']['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t\t".'<p class="options"><span class="first-item"><a href="'.$base_url.'/admin/extensions.php?install='.urlencode($entry).'">'.(isset($inst_exts[$entry]['version']) ? $lang_admin_ext['Upgrade extension'] : $lang_admin_ext['Install extension']).'</a></span></p>'."\n\t\t".'</div>';					++$num_exts;				}			}		}	}	$d->close();	($hook = get_hook('aex_section_install_pre_display_available_ext_list')) ? eval($hook) : null;	if ($num_exts)		echo "\t\t".implode("\n\t\t", $forum_page['ext_item'])."\n";	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No available extensions'] ?></p>		</div><?php	}	// If any of the extensions had errors	if ($num_failed)	{?>		<div class="ct-box data-box">			<p class="important"><?php echo $lang_admin_ext['Invalid extensions'] ?></p>			<?php echo implode("\n\t\t\t", $forum_page['ext_error'])."\n" ?>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_pre_display_installed_ext_list')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_ext['Installed extensions'] ?></span></h2>	</div>	<div class="main-content main-extensions"><?php	$installed_count = 0;	$forum_page['ext_item'] = array();	foreach ($inst_exts as $id => $ext)	{		if (strpos($id, 'hotfix_') === 0)			continue;		$forum_page['ext_actions'] = array(			'flip'		=> '<span class="first-item"><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;flip='.$id.'&amp;csrf_token='.generate_form_token('flip'.$id).'">'.($ext['disabled'] != '1' ? $lang_admin_ext['Disable'] : $lang_admin_ext['Enable']).'</a></span>',			'uninstall'	=> '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;uninstall='.$id.'">'.$lang_admin_ext['Uninstall'].'</a></span>'		);		if ($forum_config['o_check_for_versions'] == 1 && isset($forum_ext_last_versions[$id]) && version_compare($ext['version'], $forum_ext_last_versions[$id]['version'], '<'))			$forum_page['ext_actions']['latest_ver'] = '<span><a href="'.$forum_ext_last_versions[$id]['repo_url'].'/'.$id.'/'.$id.'.zip">'.$lang_admin_ext['Download latest version'].'</a></span>';		($hook = get_hook('aex_section_manage_pre_ext_actions')) ? eval($hook) : null;		if ($ext['disabled'] == '1')			$forum_page['ext_item'][] = '<div class="ct-box info-box extension disabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).' ( <span>'.$lang_admin_ext['Extension disabled'].'</span> )</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		else			$forum_page['ext_item'][] = '<div class="ct-box info-box extension enabled">'."\n\t\t".'<h3 class="ct-legend hn"><span>'.forum_htmlencode($ext['title']).'</span></h3>'."\n\t\t".'<ul class="data-list">'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Version'], $ext['version']).'</span></li>'."\n\t\t\t".'<li><span>'.sprintf($lang_admin_ext['Extension by'], forum_htmlencode($ext['author'])).'</span></li>'."\n\t\t\t".(($ext['description'] != '') ? '<li><span>'.forum_htmlencode($ext['description']).'</span></li>' : '')."\n\t\t".'</ul>'."\n\t\t".'<p class="options">'.implode(' ', $forum_page['ext_actions']).'</p>'."\n\t".'</div>';		$installed_count++;	}	if ($installed_count > 0)	{		echo "\t".implode("\n\t", $forum_page['ext_item'])."\n";	}	else	{?>		<div class="ct-box info-box">			<p><?php echo $lang_admin_ext['No installed extensions'] ?></p>		</div><?php	}?>	</div><?php	($hook = get_hook('aex_section_manage_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}
<?php/** * Group management page. * * Allows administrators to control group permissions. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', '../');require FORUM_ROOT.'include/common.php';require FORUM_ROOT.'include/common_admin.php';($hook = get_hook('agr_start')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN)	message($lang_common['No permission']);// Load the admin.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_common.php';require FORUM_ROOT.'lang/'.$forum_user['language'].'/admin_groups.php';// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		($hook = get_hook('agr_add_group_form_submitted')) ? eval($hook) : null;		$base_group = intval($_POST['base_group']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$base_group		);		($hook = get_hook('agr_add_group_qr_get_base_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		$mode = 'add';	}	else	// We are editing a group	{		($hook = get_hook('agr_edit_group_form_submitted')) ? eval($hook) : null;		$group_id = intval($_GET['edit_group']);		if ($group_id < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'g.*',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g.g_id='.$group_id		);		($hook = get_hook('agr_edit_group_qr_get_group')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$group = $forum_db->fetch_assoc($result);		if (!$group)			message($lang_common['Bad request']);		$mode = 'edit';	}	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$mode == 'edit' ? $lang_admin_groups['Edit group heading'] : $lang_admin_groups['Add group heading']	);	($hook = get_hook('agr_add_edit_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_add_edit_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Group settings heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div id="req-msg" class="req-warn ct-box error-box">			<p class="important"><?php printf($lang_admin_common['Required warn'], '<em>'.$lang_admin_common['Required'].'</em>') ?></p>		</div>		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups'])) ?>" />				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; if ($mode == 'add'): ?>				<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>			</div>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group title head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Group title legend'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_group_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Group title label'] ?></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo forum_htmlencode($group['g_title']); ?>" required /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_user_title')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['User title label'] ?></span> <small><?php echo $lang_admin_groups['User title help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="user_title" size="25" maxlength="50" value="<?php echo forum_htmlencode($group['g_user_title']) ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_basic_details_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php	($hook = get_hook('agr_add_edit_group_basic_details_fieldset_end')) ? eval($hook) : null;	// The rest of the form is for non-admin groups only	if ($group['g_id'] != FORUM_ADMIN)	{		// Reset fieldset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group perms head'] ?></span></h3>			</div><?php if ($mode == 'edit' && $forum_config['o_default_user_group'] == $group['g_id']): ?>				<div class="ct-box">					<p class="warn"><?php echo $lang_admin_groups['Moderator default group'] ?></p>				</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_permissions_fieldset')) ? eval($hook) : null; ?>				<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">					<legend class="group-legend"><strong><?php echo $lang_admin_groups['Permissions'] ?></strong></legend><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): if ($mode != 'edit' || $forum_config['o_default_user_group'] != $group['g_id']): ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['Mod permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_moderate_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow moderate label'] ?> <?php echo $lang_admin_groups['Allow moderate help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_profiles_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit profiles label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_edit_userbane_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod edit username label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_change_pass_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod change pass label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_mod_ban_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow mod bans label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_mod_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_mod_permissions_fieldset_end')) ? eval($hook) : null; endif; endif; ?>					<fieldset class="mf-set set<?php echo ++$forum_page['item_count'] ?>">						<legend><span><?php echo $lang_admin_groups['User permissions'] ?></span></legend>						<div class="mf-box"><?php ($hook = get_hook('agr_add_edit_group_pre_allow_read_board_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow read board label'] ?> <?php echo $lang_admin_groups['Allow read board help'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_view_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow view users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_replies_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post replies label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_post_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow post topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_edit_posts_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow edit posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_posts_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete posts label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_delete_topics_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow delete topics label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_set_user_title_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow set user title label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_allow_search_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow use search label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_search_users_checkbox')) ? eval($hook) : null; ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow search users label'] ?></label>							</div><?php ($hook = get_hook('agr_add_edit_group_pre_allow_send_email_checkbox')) ? eval($hook) : null; if ($group['g_id'] != FORUM_GUEST): ?>							<div class="mf-item">								<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> /></span>								<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo $lang_admin_groups['Allow send email label'] ?></label>							</div><?php endif; ($hook = get_hook('agr_add_edit_group_pre_user_permissions_fieldset_end')) ? eval($hook) : null; ?>						</div>					</fieldset><?php ($hook = get_hook('agr_add_edit_group_user_permissions_fieldset_end')) ? eval($hook) : null; ?>				</fieldset><?php		// Reset counter		$forum_page['group_count'] = $forum_page['item_count'] = 0;?>			<div class="content-head">				<h3 class="hn"><span><?php echo $lang_admin_groups['Group flood head'] ?></span></h3>			</div><?php ($hook = get_hook('agr_add_edit_group_pre_flood_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Restrictions'] ?></span></legend><?php ($hook = get_hook('agr_add_edit_group_pre_post_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" /></span>					</div>				</div><?php ($hook = get_hook('agr_add_edit_group_pre_search_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Search interval label'] ?></span> <small><?php echo $lang_admin_groups['Search interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" /></span>					</div>				</div><?php		($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null;		// The rest of the form is for non-guest groups only		if ($group['g_id'] != FORUM_GUEST)		{?>				<?php ($hook = get_hook('agr_add_edit_group_pre_email_interval')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box text">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Email flood interval label'] ?></span> <small><?php echo $lang_admin_groups['Email flood interval help'] ?></small></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" /></span>					</div>				</div><?php		}		($hook = get_hook('agr_add_edit_group_pre_flood_fieldset_end')) ? eval($hook) : null;?>			</fieldset><?php		($hook = get_hook('agr_add_edit_group_flood_fieldset_end')) ? eval($hook) : null;	}?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_edit_group" value=" <?php echo $lang_admin_groups['Update group'] ?> " /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_add_edit_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == FORUM_ADMIN) ? true : false;	$title = forum_trim($_POST['req_title']);	$user_title = forum_trim($_POST['user_title']);	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = (isset($_POST['read_board']) && $_POST['read_board'] == '1') || $is_admin_group ? '1' : '0';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = (isset($_POST['post_replies']) && $_POST['post_replies'] == '1') || $is_admin_group ? '1' : '0';	$post_topics = (isset($_POST['post_topics']) && $_POST['post_topics'] == '1') || $is_admin_group ? '1' : '0';	$edit_posts = (isset($_POST['edit_posts']) && $_POST['edit_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_posts = (isset($_POST['delete_posts']) && $_POST['delete_posts'] == '1') || $is_admin_group ? '1' : '0';	$delete_topics = (isset($_POST['delete_topics']) && $_POST['delete_topics'] == '1') || $is_admin_group ? '1' : '0';	$set_title = (isset($_POST['set_title']) && $_POST['set_title'] == '1') || $is_admin_group ? '1' : '0';	$search = (isset($_POST['search']) && $_POST['search'] == '1') || $is_admin_group ? '1' : '0';	$search_users = (isset($_POST['search_users']) && $_POST['search_users'] == '1') || $is_admin_group ? '1' : '0';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = isset($_POST['post_flood']) ? intval($_POST['post_flood']) : '0';	$search_flood = isset($_POST['search_flood']) ? intval($_POST['search_flood']) : '0';	$email_flood = isset($_POST['email_flood']) ? intval($_POST['email_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter group message']);	$user_title = ($user_title != '') ? '\''.$forum_db->escape($user_title).'\'' : 'NULL';	($hook = get_hook('agr_add_edit_end_validation')) ? eval($hook) : null;	if ($_POST['mode'] == 'add')	{		($hook = get_hook('agr_add_add_group')) ? eval($hook) : null;		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\''		);		($hook = get_hook('agr_add_end_qr_check_add_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Insert the new group		$query = array(			'INSERT'	=> 'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood',			'INTO'		=> 'groups',			'VALUES'	=> '\''.$forum_db->escape($title).'\', '.$user_title.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood		);		($hook = get_hook('agr_add_end_qr_add_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$new_group_id = $forum_db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$query = array(			'SELECT'	=> 'fp.forum_id, fp.read_forum, fp.post_replies, fp.post_topics',			'FROM'		=> 'forum_perms AS fp',			'WHERE'		=> 'group_id='.intval($_POST['base_group'])		);		($hook = get_hook('agr_add_end_qr_get_group_forum_perms')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_forum_perm = $forum_db->fetch_assoc($result))		{			$query = array(				'INSERT'	=> 'group_id, forum_id, read_forum, post_replies, post_topics',				'INTO'		=> 'forum_perms',				'VALUES'	=> $new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics']			);			($hook = get_hook('agr_add_end_qr_add_group_forum_perms')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}	}	else	{		$group_id = intval($_POST['group_id']);		($hook = get_hook('agr_edit_end_edit_group')) ? eval($hook) : null;		// Make sure admins and guests don't get moderator privileges		if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)			$moderator = '0';		// Make sure the default group isn't assigned moderator privileges		if ($moderator == '1' && $forum_config['o_default_user_group'] == $group_id)			message($lang_admin_groups['Moderator default group']);		$query = array(			'SELECT'	=> 'COUNT(g.g_id)',			'FROM'		=> 'groups AS g',			'WHERE'		=> 'g_title=\''.$forum_db->escape($title).'\' AND g_id!='.$group_id		);		($hook = get_hook('agr_edit_end_qr_check_edit_group_title_collision')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != 0)			message(sprintf($lang_admin_groups['Already a group message'], forum_htmlencode($title)));		// Save changes		$query = array(			'UPDATE'	=> 'groups',			'SET'		=> 'g_title=\''.$forum_db->escape($title).'\', g_user_title='.$user_title.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood,			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_edit_end_qr_update_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// If the group doesn't have moderator privileges (it might have had before), remove its users from the moderator list in all forums		if (!$moderator)			clean_forum_moderators();	}	// Regenerate the quickjump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_quickjump_cache();	// Add flash message	$forum_flash->add_info((($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));	($hook = get_hook('agr_add_edit_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), (($_POST['mode'] == 'edit') ? $lang_admin_groups['Group edited'] : $lang_admin_groups['Group added']));}// Set default groupelse if (isset($_POST['set_default_group'])){	$group_id = intval($_POST['default_group']);	($hook = get_hook('agr_set_default_group_form_submitted')) ? eval($hook) : null;	// Make sure it's not the admin or guest groups	if ($group_id == FORUM_ADMIN || $group_id == FORUM_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	$query = array(		'SELECT'	=> 'COUNT(g.g_id)',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id='.$group_id.' AND g.g_moderator=0',		'LIMIT'		=> '1'	);	($hook = get_hook('agr_set_default_group_qr_get_group_moderation_status')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result) != 1)		message($lang_common['Bad request']);	$query = array(		'UPDATE'	=> 'config',		'SET'		=> 'conf_value='.$group_id,		'WHERE'		=> 'conf_name=\'o_default_user_group\''	);	($hook = get_hook('agr_set_default_group_qr_set_default_group')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require FORUM_ROOT.'include/cache.php';	generate_config_cache();	// Add flash message	$forum_flash->add_info($lang_admin_groups['Default group set']);	($hook = get_hook('agr_set_default_group_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Default group set']);}// Remove a groupelse if (isset($_GET['del_group'])){	$group_id = intval($_GET['del_group']);	if ($group_id <= FORUM_GUEST)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['del_group_cancel']))		redirect(forum_link($forum_url['admin_groups']), $lang_admin_common['Cancel redirect']);	// Make sure we don't remove the default group	if ($group_id == $forum_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default group']);	($hook = get_hook('agr_del_group_selected')) ? eval($hook) : null;	// Check if this group has any members	$query = array(		'SELECT'	=> 'g.g_title, COUNT(u.id)',		'FROM'		=> 'groups AS g',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'g.g_id='.$group_id,		'GROUP BY'	=> 'g.g_id, g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_group_member_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$group_info = $forum_db->fetch_row($result);	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$group_info || isset($_POST['del_group']))	{		($hook = get_hook('agr_del_group_form_submitted')) ? eval($hook) : null;		if (isset($_POST['del_group']))	// Move users		{			$query = array(				'UPDATE'	=> 'users',				'SET'		=> 'group_id='.intval($_POST['move_to_group']),				'WHERE'		=> 'group_id='.$group_id			);			($hook = get_hook('agr_del_group_qr_move_users')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Delete the group and any forum specific permissions		$query = array(			'DELETE'	=> 'groups',			'WHERE'		=> 'g_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$query = array(			'DELETE'	=> 'forum_perms',			'WHERE'		=> 'group_id='.$group_id		);		($hook = get_hook('agr_del_group_qr_delete_group_forum_perms')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		clean_forum_moderators();		// Regenerate the quickjump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/cache.php';		generate_quickjump_cache();		// Add flash message		$forum_flash->add_info($lang_admin_groups['Group removed']);		($hook = get_hook('agr_del_group_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['admin_groups']), $lang_admin_groups['Group removed']);	}	list($group_title, $num_members) = $group_info;	// Setup the form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),		array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),		array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])),		$lang_admin_groups['Remove group']	);	($hook = get_hook('agr_del_group_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE_SECTION', 'users');	define('FORUM_PAGE', 'admin-groups');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('agr_del_group_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php printf($lang_admin_groups['Remove group head'], forum_htmlencode($group_title), $num_members) ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?del_group=<?php echo $group_id ?>">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?del_group='.$group_id) ?>" />			</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group set<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Remove group legend'] ?></span></legend><?php ($hook = get_hook('agr_del_group_pre_move_to_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Move users to'] ?></span> <small><?php echo $lang_admin_groups['Remove group help'] ?></small></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_group"><?php	$query = array(		'SELECT'	=> 'g.g_id, g.g_title',		'FROM'		=> 'groups AS g',		'WHERE'		=> 'g.g_id!='.FORUM_GUEST.' AND g.g_id!='.$group_id,		'ORDER BY'	=> 'g.g_title'	);	($hook = get_hook('agr_del_group_qr_get_groups')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_group = $forum_db->fetch_assoc($result))	{		if ($cur_group['g_id'] == $forum_config['o_default_user_group'])	// Pre-select the default Members group			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_del_group_pre_del_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_del_group_del_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Remove group'] ?>" /></span>				<span class="cancel"><input type="submit" name="del_group_cancel" value="<?php echo $lang_admin_common['Cancel'] ?>" /></span>			</div>		</form>	</div><?php	($hook = get_hook('agr_del_group_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Setup the form$forum_page['item_count'] = $forum_page['fld_count'] = $forum_page['group_count'] = 0;// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),	array($lang_admin_common['Users'], forum_link($forum_url['admin_users'])),	array($lang_admin_common['Groups'], forum_link($forum_url['admin_groups'])));($hook = get_hook('agr_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE_SECTION', 'users');define('FORUM_PAGE', 'admin-groups');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();($hook = get_hook('agr_main_output_start')) ? eval($hook) : null;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Add group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_add_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Add group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_add_base_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Base new group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="base_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST,	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_allowed_base_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result))	echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].($cur_group['g_id'] == $forum_config['o_default_user_group'] ? '" selected="selected">' : '">').forum_htmlencode($cur_group['g_title']).'</option>'."\n";?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_add_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_add_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="add_group" value="<?php echo $lang_admin_groups['Add group'] ?> " /></span>			</div>		</form>	</div><?php	// Reset fieldset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Default group heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo forum_link($forum_url['admin_groups']) ?>?action=foo">			<div class="hidden">				<input type="hidden" name="csrf_token" value="<?php echo generate_form_token(forum_link($forum_url['admin_groups']).'?action=foo') ?>" />			</div><?php ($hook = get_hook('agr_pre_default_group_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><span><?php echo $lang_admin_groups['Default group legend'] ?></span></legend><?php ($hook = get_hook('agr_pre_default_group')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_admin_groups['Default group label'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="default_group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'WHERE'		=> 'g_id>'.FORUM_GUEST.' AND g_moderator=0',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_groups')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);while ($cur_group = $forum_db->fetch_assoc($result)){	if ($cur_group['g_id'] == $forum_config['o_default_user_group'])		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";	else		echo "\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.forum_htmlencode($cur_group['g_title']).'</option>'."\n";}?>						</select></span>					</div>				</div><?php ($hook = get_hook('agr_pre_default_group_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('agr_default_group_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit"><input type="submit" name="set_default_group" value="<?php echo $lang_admin_groups['Set default'] ?>" /></span>			</div>		</form>	</div><?php	// Reset counter	$forum_page['group_count'] = $forum_page['item_count'] = 0;?>	<div class="main-subhead">		<h2 class="hn"><span><?php echo $lang_admin_groups['Existing groups heading'] ?></span></h2>	</div>	<div class="main-content main-frm">		<div class="ct-box">			<p><?php echo $lang_admin_groups['Existing groups intro'] ?></p>		</div>		<div class="ct-group"><?php$query = array(	'SELECT'	=> 'g.g_id, g.g_title',	'FROM'		=> 'groups AS g',	'ORDER BY'	=> 'g.g_title');($hook = get_hook('agr_qr_get_group_list')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$forum_page['item_num'] = 0;while ($cur_group = $forum_db->fetch_assoc($result)){	$forum_page['group_options'] = array(		'edit' => '<span class="first-item"><a href="'.forum_link($forum_url['admin_groups']).'?edit_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Edit group'].'</a></span>'	);	if ($cur_group['g_id'] > FORUM_GUEST)	{		if ($cur_group['g_id'] != $forum_config['o_default_user_group'])			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['admin_groups']).'?del_group='.$cur_group['g_id'].'">'.$lang_admin_groups['Remove group'].'</a></span>';		else			$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove default'].'</span>';	}	else		$forum_page['group_options']['remove'] = '<span'.((empty($forum_page['group_options'])) ? ' class="first-item"' : '').'>'.$lang_admin_groups['Cannot remove group'].'</span>';	($hook = get_hook('agr_edit_group_row_pre_output')) ? eval($hook) : null;?>			<div class="ct-set set<?php echo ++$forum_page['item_count'] ?>">				<div class="ct-box">					<h3 class="ct-legend hn"><span><?php echo forum_htmlencode($cur_group['g_title']) ?> <?php echo ($cur_group['g_id'] == $forum_config['o_default_user_group']) ? $lang_admin_groups['default'] : '' ?></span></h3>					<p class="options"><?php echo implode(' ', $forum_page['group_options']) ?></p>				</div>			</div><?php	($hook = get_hook('agr_edit_group_row_post_output')) ? eval($hook) : null;}?>		</div>	</div><?php($hook = get_hook('agr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php// Language definitions used in various scripts$lang_misc = array('Mark read redirect'		=>	'All topics and forums have been marked as read.','Mark forum read redirect'	=>	'All topics in the specified forum have been marked as read.',// Send e-mail'Form e-mail disabled'		=>	'The user you are trying to send an email to has disabled form email.','Form e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your message can be sent:','No e-mail subject'			=>	'You must enter a subject.','No e-mail message'			=>	'You must enter a message.','Too long e-mail message'	=>	'Your message length is %s bytes. This exceeds the %s bytes limit.','Email flood'				=>	'At least %s seconds have to pass between sent emails. Please wait a while and try sending again.','E-mail sent redirect'		=>	'Email sent.','E-mail subject'			=>	'Subject','E-mail message'			=>	'Message','E-mail disclosure note'	=>	'<strong>Important!</strong> When you send an email using this form your email address will be disclosed to the recipient.','Write e-mail'				=>	'Compose email','Send forum e-mail'			=>	'Send email to %s via the forum',// Report'No reason'					=>	'You must enter a reason.','Report flood'				=>	'At least %s seconds have to pass between reports. Please wait a while and try sending again.','Report redirect'			=>	'Post reported.','Report post'				=>	'Report post','Reason'					=>	'Reason','Reason help'				=>	'Enter a short reason why you are reporting this post.','Too long reason'			=>	'Your report length is %s bytes. This exceeds the %s bytes limit.','Report errors'				=>	'<strong>Warning!</strong> The following errors must be corrected before your report can be sent:',// Subscriptions'Already subscribed'		=>	'You are already subscribed to this topic.','Subscribe redirect'		=>	'Your subscription has been added.','Not subscribed'			=>	'You are not subscribed to this topic.','Unsubscribe redirect'		=>	'Your subscription has been removed.',// General forum and topic moderation'Moderate forum'			=>	'Moderate forum','Select'					=>	'Select',	// the header of a column of checkboxes'Move'						=>	'Move','Merge'						=>	'Merge','Open'						=>  'Open','Close'						=>  'Close','Select all'				=>	'Select all',// Hostname lookup'Hostname lookup'			=>	'The IP address is: %1$s<br />The host name is: %2$s<br /><br />%3$s','Show more users'			=>	'Show more users for this IP',// Moderate forum'Moderate forum head'		=>	'Moderate: %s','Topics'					=>	'Topics','Move topic'				=>	'Move topic','Move topics'				=>	'Move topics','Merge topics'				=>	'Merge topics','Delete topics'				=>	'Delete topics','Delete topic'				=>	'Delete topic','To new forum'				=>	'to a new forum','Move to'					=>	'Destination forum','Nowhere to move'			=>	'There are no forums into which you can move topics.','Leave redirect'			=>	'Leave a redirect topic in the forum from which the topic was moved.','Leave redirects'			=>	'Leave redirect topics in the forum from which topics were moved.','Leave merge redirects'		=>	'Leave redirect topics for those topics which were merged.','Move topic redirect'		=>	'Topic moved.','Move topics redirect'		=>	'Topics moved.','Merge topics redirect'		=>	'Topics merged.','Delete topic comply'		=>	'Are you sure you want to delete the selected topic?','Delete topics comply'		=>	'Are you sure you want to delete all the selected topics?','Delete topic redirect'		=>	'Topic deleted.','Delete topics redirect'	=>	'Topics deleted.','Open topic redirect'		=>	'Topic opened.','Open topics redirect'		=>	'Topics opened.','Close topic redirect'		=>	'Topic closed.','Close topics redirect'		=>	'Topics closed.','No topics selected'		=>	'You must select at least one topic.','Stick topic redirect'		=>	'Topic is now sticky.','Unstick topic redirect'	=>	'Topic no longer sticky.','Merge error'				=>	'You should select more than 1 topic to merge.',// Moderate topic'Posts'						=>	'Posts','Delete posts'				=>	'Delete selected posts','Split posts'				=>	'Split selected posts','Delete whole topic'		=>	'Delete whole topic','Moderate topic head'		=>	'Moderate topic: %s','New subject'				=>	'New topic subject:','Select post'				=>	'Select post', // Label for checkbox'Confirm post delete'		=>	'Confirm deletion of all selected posts','Confirm topic delete'		=>	'Confirm deletion of all selected topics','Confirm topic split'		=>	'Confirm splitting of all selected posts into a new topic','Confirm topic merge'		=>	'Confirm merging of all selected topics into one topic','Confirm post split'		=>	'Confirm splitting of all selected posts','Delete posts redirect'		=>	'Posts deleted.','Split posts redirect'		=>	'Posts split into a new topic.','No posts selected'			=>	'You must select at least one post.');
<?php/** * Provides various mass-moderation tools to moderators. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */if (!defined('FORUM_ROOT'))	define('FORUM_ROOT', './');require FORUM_ROOT.'include/common.php';($hook = get_hook('mr_start')) ? eval($hook) : null;// Load the misc.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/misc.php';// This particular function doesn't require forum-based moderator access. It can be used// by all moderators and admins.if (isset($_GET['get_host'])){	if (!$forum_user['is_admmod'])		message($lang_common['No permission']);	($hook = get_hook('mr_view_ip_selected')) ? eval($hook) : null;	// Is get_host an IP address or a post ID?	if (preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_GET['get_host']) || preg_match('/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/', $_GET['get_host']))		$ip = $_GET['get_host'];	else	{		$get_host = intval($_GET['get_host']);		if ($get_host < 1)			message($lang_common['Bad request']);		$query = array(			'SELECT'	=> 'p.poster_ip',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.id='.$get_host		);		($hook = get_hook('mr_view_ip_qr_get_poster_ip')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$ip = $forum_db->result($result);		if (!$ip)			message($lang_common['Bad request']);	}	($hook = get_hook('mr_view_ip_pre_output')) ? eval($hook) : null;	message(sprintf($lang_misc['Hostname lookup'], $ip, @gethostbyaddr($ip), '<a href="'.forum_link($forum_url['admin_users']).'?show_users='.$ip.'">'.$lang_misc['Show more users'].'</a>'));}// All other functions require moderator/admin access$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($fid < 1)	message($lang_common['Bad request']);// Get some info about the forum we're moderating$query = array(	'SELECT'	=> 'f.forum_name, f.redirect_url, f.num_topics, f.moderators, f.sort_by',	'FROM'		=> 'forums AS f',	'JOINS'		=> array(		array(			'LEFT JOIN'		=> 'forum_perms AS fp',			'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'		)	),	'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid);($hook = get_hook('mr_qr_get_forum_data')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);$cur_forum = $forum_db->fetch_assoc($result);if (!$cur_forum)	message($lang_common['Bad request']);// Make sure we're not trying to moderate a redirect forumif ($cur_forum['redirect_url'] != '')	message($lang_common['Bad request']);// Setup the array of moderators$mods_array = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();($hook = get_hook('mr_pre_permission_check')) ? eval($hook) : null;if ($forum_user['g_id'] != FORUM_ADMIN && ($forum_user['g_moderator'] != '1' || !array_key_exists($forum_user['username'], $mods_array)))	message($lang_common['No permission']);// Get topic/forum tracking dataif (!$forum_user['is_guest'])	$tracked_topics = get_tracked_topics();// Did someone click a cancel button?if (isset($_POST['cancel']))	redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);// All topic moderation features require a topic id in GETif (isset($_GET['tid'])){	($hook = get_hook('mr_post_actions_selected')) ? eval($hook) : null;	$tid = intval($_GET['tid']);	if ($tid < 1)		message($lang_common['Bad request']);	// Fetch some info about the topic	$query = array(		'SELECT'	=> 't.subject, t.poster, t.first_post_id, t.posted, t.num_replies',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$tid.' AND t.moved_to IS NULL'	);	($hook = get_hook('mr_post_actions_qr_get_topic_info')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$cur_topic = $forum_db->fetch_assoc($result);	if (!$cur_topic)		message($lang_common['Bad request']);	// User pressed the cancel button	if (isset($_POST['delete_posts_cancel']))		redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['Cancel redirect']);	// Delete one or more posts	if (isset($_POST['delete_posts']) || isset($_POST['delete_posts_comply']))	{		($hook = get_hook('mr_delete_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['delete_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			($hook = get_hook('mr_confirm_delete_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_delete_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			// Delete the posts			$query = array(				'DELETE'	=> 'posts',				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_delete_posts_qr_delete_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($posts);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Delete posts redirect']);			($hook = get_hook('mr_confirm_delete_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_misc['Delete posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Delete posts']		);		($hook = get_hook('mr_confirm_delete_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_delete_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Delete posts'] ?></strong></legend><?php ($hook = get_hook('mr_confirm_delete_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm post delete'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_delete_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_delete_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_posts_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_delete_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	else if (isset($_POST['split_posts']) || isset($_POST['split_posts_comply']))	{		($hook = get_hook('mr_split_posts_form_submitted')) ? eval($hook) : null;		$posts = isset($_POST['posts']) && !empty($_POST['posts']) ? $_POST['posts'] : array();		$posts = array_map('intval', (is_array($posts) ? $posts : explode(',', $posts)));		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['split_posts_comply']))		{			if (!isset($_POST['req_confirm']))				redirect(forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject']))), $lang_common['No confirm redirect']);			// Load the post.php language file			require FORUM_ROOT.'lang/'.$forum_user['language'].'/post.php';			($hook = get_hook('mr_confirm_split_posts_form_submitted')) ? eval($hook) : null;			// Verify that the post IDs are valid			$query = array(				'SELECT'	=> 'COUNT(p.id)',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id IN('.implode(',', $posts).') AND p.id!='.$cur_topic['first_post_id'].' AND p.topic_id='.$tid			);			($hook = get_hook('mr_confirm_split_posts_qr_verify_post_ids')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			if ($forum_db->result($result) != count($posts))				message($lang_common['Bad request']);			$new_subject = isset($_POST['new_subject']) ? forum_trim($_POST['new_subject']) : '';			if ($new_subject == '')				message($lang_post['No subject']);			else if (utf8_strlen($new_subject) > 70)				message($lang_post['Too long subject']);			// Get data from the new first post			$query = array(				'SELECT'	=> 'p.id, p.poster, p.posted',				'FROM'		=> 'posts AS p',				'WHERE'		=> 'p.id = '.min($posts)			);			($hook = get_hook('mr_confirm_split_posts_qr_get_first_post_data')) ? eval($hook) : null;			$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);			$first_post_data = $forum_db->fetch_assoc($result);			// Create the new topic			$query = array(				'INSERT'	=> 'poster, subject, posted, first_post_id, forum_id',				'INTO'		=> 'topics',				'VALUES'	=> '\''.$forum_db->escape($first_post_data['poster']).'\', \''.$forum_db->escape($new_subject).'\', '.$first_post_data['posted'].', '.$first_post_data['id'].', '.$fid			);			($hook = get_hook('mr_confirm_split_posts_qr_add_topic')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			$new_tid = $forum_db->insert_id();			// Move the posts to the new topic			$query = array(				'UPDATE'	=> 'posts',				'SET'		=> 'topic_id='.$new_tid,				'WHERE'		=> 'id IN('.implode(',', $posts).')'			);			($hook = get_hook('mr_confirm_split_posts_qr_move_posts')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);			// Sync last post data for the old topic, the new topic, and the forum itself			sync_topic($new_tid);			sync_topic($tid);			sync_forum($fid);			$forum_flash->add_info($lang_misc['Split posts redirect']);			($hook = get_hook('mr_confirm_split_posts_pre_redirect')) ? eval($hook) : null;			redirect(forum_link($forum_url['topic'], array($new_tid, sef_friendly($new_subject))), $lang_misc['Split posts redirect']);		}		// Setup form		$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;		$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));		$forum_page['hidden_fields'] = array(			'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',			'posts'			=> '<input type="hidden" name="posts" value="'.implode(',', $posts).'" />'		);		// Setup breadcrumbs		$forum_page['crumbs'] = array(			array($forum_config['o_board_title'], forum_link($forum_url['index'])),			array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),			array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),			$lang_misc['Split posts']		);		($hook = get_hook('mr_confirm_split_posts_pre_header_load')) ? eval($hook) : null;		define('FORUM_PAGE', 'dialogue');		require FORUM_ROOT.'header.php';		// START SUBST - <!-- forum_main -->		ob_start();		($hook = get_hook('mr_confirm_split_posts_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm post split'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Split posts'] ?></strong></legend>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>"><?php ($hook = get_hook('mr_confirm_split_posts_pre_subject')) ? eval($hook) : null; ?>					<div class="sf-box text required">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['New subject'] ?> <em><?php echo $lang_common['Required'] ?></em></span></label><br />						<span class="fld-input"><input type="text" id="fld<?php echo $forum_page['fld_count'] ?>" name="new_subject" value="" size="70" maxlength="70" /></span>					</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_confirm_checkbox')) ? eval($hook) : null; ?>					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $lang_misc['Confirm topic split'] ?>.</label>					</div>				</div><?php ($hook = get_hook('mr_confirm_split_posts_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_confirm_split_posts_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="split_posts_comply" value="<?php echo $lang_common['Split'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php		$forum_id = $fid;		($hook = get_hook('mr_confirm_split_posts_end')) ? eval($hook) : null;		$tpl_temp = forum_trim(ob_get_contents());		$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);		ob_end_clean();		// END SUBST - <!-- forum_main -->		require FORUM_ROOT.'footer.php';	}	// Show the moderate topic view	// Load the viewtopic.php language file	require FORUM_ROOT.'lang/'.$forum_user['language'].'/topic.php';	// Used to disable the Split and Delete buttons if there are no replies to this topic	$forum_page['button_status'] = ($cur_topic['num_replies'] == 0) ? ' disabled="disabled"' : '';	// Determine the post offset (based on $_GET['p'])	$forum_page['num_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);	$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : intval($_GET['p']);	$forum_page['start_from'] = $forum_user['disp_posts'] * ($forum_page['page'] - 1);	$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_posts']), ($cur_topic['num_replies'] + 1));	$forum_page['items_info'] = generate_items_info($lang_misc['Posts'], ($forum_page['start_from'] + 1), ($cur_topic['num_replies'] + 1));	// Generate paging links	$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_topic'], $lang_common['Paging separator'], array($fid, $tid)).'</p>';	// Navigation links for header and page numbering for title/meta description	if ($forum_page['page'] < $forum_page['num_pages'])	{		$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], $forum_page['num_pages'], array($fid, $tid)).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';		$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] + 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';	}	if ($forum_page['page'] > 1)	{		$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_topic'], $forum_url['page'], ($forum_page['page'] - 1), array($fid, $tid)).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';		$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_topic'], array($fid, $tid)).'" title="'.$lang_common['Page'].' 1" />';	}	if ($forum_config['o_censoring'] == '1')		$cur_topic['subject'] = censor_words($cur_topic['subject']);	// Setup form	$forum_page['form_action'] = forum_link($forum_url['moderate_topic'], array($fid, $tid));	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($cur_topic['subject'], forum_link($forum_url['topic'], array($tid, sef_friendly($cur_topic['subject'])))),		$lang_topic['Moderate topic']	);	// Setup main heading	$forum_page['main_title'] = sprintf($lang_misc['Moderate topic head'], forum_htmlencode($cur_topic['subject']));	$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-post-actions-form">'.$lang_misc['Select all'].'</span></span>';	if ($forum_page['num_pages'] > 1)		$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);	($hook = get_hook('mr_post_actions_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'modtopic');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_post_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-post-actions-form" class="newform" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-content main-topic">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	if (!defined('FORUM_PARSER_LOADED'))		require FORUM_ROOT.'include/parser.php';	$forum_page['item_count'] = 0;	// Keep track of post numbers	// Retrieve the posts (and their respective poster)	$query = array(		'SELECT'	=> 'u.title, u.num_posts, g.g_id, g.g_user_title, p.id, p.poster, p.poster_id, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by',		'FROM'		=> 'posts AS p',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'users AS u',				'ON'			=> 'u.id=p.poster_id'			),			array(				'INNER JOIN'	=> 'groups AS g',				'ON'			=> 'g.g_id=u.group_id'			)		),		'WHERE'		=> 'p.topic_id='.$tid,		'ORDER BY'	=> 'p.id',		'LIMIT'		=> $forum_page['start_from'].','.$forum_user['disp_posts']	);	($hook = get_hook('mr_post_actions_qr_get_posts')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	while ($cur_post = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_post_actions_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		$forum_page['post_ident'] = array();		$forum_page['message'] = array();		$forum_page['user_ident'] = array();		$cur_post['username'] = $cur_post['poster'];		// Generate the post heading		$forum_page['post_ident']['num'] = '<span class="post-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span>';		if ($cur_post['poster_id'] > 1)			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), (($forum_user['g_view_users'] == '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>')).'</span>';		else			$forum_page['post_ident']['byline'] = '<span class="post-byline">'.sprintf((($cur_post['id'] == $cur_topic['first_post_id']) ? $lang_topic['Topic byline'] : $lang_topic['Reply byline']), '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</span>';		$forum_page['post_ident']['link'] = '<span class="post-link"><a class="permalink" rel="bookmark" title="'.$lang_topic['Permalink post'].'" href="'.forum_link($forum_url['post'], $cur_post['id']).'">'.format_time($cur_post['posted']).'</a></span>';		($hook = get_hook('mr_row_pre_item_ident_merge')) ? eval($hook) : null;		// Generate the checkbox field		if ($cur_post['id'] != $cur_topic['first_post_id'])			$forum_page['item_select'] = '<p class="item-select"><input type="checkbox" id="fld'.$cur_post['id'].'" name="posts[]" value="'.$cur_post['id'].'" /> <label for="fld'.$cur_post['id'].'">'.$lang_misc['Select post'].' '.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</label></p>';		// Generate author identification		$forum_page['author_ident']['username'] = '<li class="username">'.(($cur_post['poster_id'] > '1') ? '<a title="'.sprintf($lang_topic['Go to profile'], forum_htmlencode($cur_post['username'])).'" href="'.forum_link($forum_url['user'], $cur_post['poster_id']).'">'.forum_htmlencode($cur_post['username']).'</a>' : '<strong>'.forum_htmlencode($cur_post['username']).'</strong>').'</li>';		$forum_page['author_ident']['usertitle'] = '<li class="usertitle"><span>'.get_title($cur_post).'</span></li>';		// Give the post some class		$forum_page['item_status'] = array(			'post',			($forum_page['item_count'] % 2 != 0) ? 'odd' : 'even'		);		if ($forum_page['item_count'] == 1)			$forum_page['item_status']['firstpost'] = 'firstpost';		if (($forum_page['start_from'] + $forum_page['item_count']) == $forum_page['finish_at'])			$forum_page['item_status']['lastpost'] = 'lastpost';		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_status']['topicpost'] = 'topicpost';		else			$forum_page['item_status']['replypost'] = 'replypost';		// Generate the post title		if ($cur_post['id'] == $cur_topic['first_post_id'])			$forum_page['item_subject'] = sprintf($lang_topic['Topic title'], $cur_topic['subject']);		else			$forum_page['item_subject'] = sprintf($lang_topic['Reply title'], $cur_topic['subject']);		$forum_page['item_subject'] = forum_htmlencode($forum_page['item_subject']);		// Perform the main parsing of the message (BBCode, smilies, censor words etc)		$forum_page['message']['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);		if ($cur_post['edited'] != '')			$forum_page['message']['edited'] = '<p class="lastedit"><em>'.sprintf($lang_topic['Last edited'], forum_htmlencode($cur_post['edited_by']), format_time($cur_post['edited'])).'</em></p>';		($hook = get_hook('mr_post_actions_row_pre_display')) ? eval($hook) : null;?>			<div class="<?php echo implode(' ', $forum_page['item_status']) ?>">				<div id="p<?php echo $cur_post['id'] ?>" class="posthead">					<h3 class="hn post-ident"><?php echo implode(' ', $forum_page['post_ident']) ?></h3><?php ($hook = get_hook('mr_post_actions_pre_item_select')) ? eval($hook) : null; ?><?php if (isset($forum_page['item_select'])) echo "\t\t\t\t".$forum_page['item_select']."\n" ?><?php ($hook = get_hook('mr_post_actions_new_post_head_option')) ? eval($hook) : null; ?>				</div>				<div class="postbody">					<div class="post-author">						<ul class="author-ident">							<?php echo implode("\n\t\t\t\t\t\t", $forum_page['author_ident'])."\n" ?>						</ul><?php ($hook = get_hook('mr_post_actions_new_user_ident_data')) ? eval($hook) : null; ?>					</div>					<div class="post-entry">						<h4 class="entry-title"><?php echo $forum_page['item_subject'] ?></h4>						<div class="entry-content">							<?php echo implode("\n\t\t\t\t\t\t\t", $forum_page['message'])."\n" ?>						</div><?php ($hook = get_hook('mr_post_actions_new_post_entry_data')) ? eval($hook) : null; ?>					</div>				</div>			</div><?php	}?>	</div><?php$forum_page['mod_options'] = array(	'del_posts'		=> '<span class="submit first-item"><input type="submit" name="delete_posts" value="'.$lang_misc['Delete posts'].'" /></span>',	'split_posts'	=> '<span class="submit"><input type="submit" name="split_posts" value="'.$lang_misc['Split posts'].'" /></span>',	'del_topic'		=> '<span><a href="'.forum_link($forum_url['delete'], $cur_topic['first_post_id']).'">'.$lang_misc['Delete whole topic'].'</a></span>');($hook = get_hook('mr_post_actions_pre_mod_options')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php	$forum_id = $fid;	// Init JS helper for select-all	$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));	($hook = get_hook('mr_post_actions_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Move one or more topicsif (isset($_REQUEST['move_topics']) || isset($_POST['move_topics_to'])){	if (isset($_POST['move_topics_to']))	{		($hook = get_hook('mr_confirm_move_topics_form_submitted')) ? eval($hook) : null;		$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? explode(',', $_POST['topics']) : array();		$topics = array_map('intval', $topics);		$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;		if (empty($topics) || $move_to_forum < 1)			message($lang_common['Bad request']);		// Fetch the forum name for the forum we're moving to		$query = array(			'SELECT'	=> 'f.forum_name',			'FROM'		=> 'forums AS f',			'WHERE'		=> 'f.id='.$move_to_forum		);		($hook = get_hook('mr_confirm_move_topics_qr_get_move_to_forum_name')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$move_to_forum_name = $forum_db->result($result);		if (!$move_to_forum_name)			message($lang_common['Bad request']);		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_move_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Delete any redirect topics if there are any (only if we moved/copied the topic back to where it where it was once moved from)		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'forum_id='.$move_to_forum.' AND moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_delete_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Move the topic(s)		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'forum_id='.$move_to_forum,			'WHERE'		=> 'id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_move_topics_qr_move_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))		{			foreach ($topics as $cur_topic)			{				// Fetch info for the redirect topic				$query = array(					'SELECT'	=> 't.poster, t.subject, t.posted, t.last_post',					'FROM'		=> 'topics AS t',					'WHERE'		=> 't.id='.$cur_topic				);				($hook = get_hook('mr_confirm_move_topics_qr_get_redirect_topic_data')) ? eval($hook) : null;				$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);				$moved_to = $forum_db->fetch_assoc($result);				// Create the redirect topic				$query = array(					'INSERT'	=> 'poster, subject, posted, last_post, moved_to, forum_id',					'INTO'		=> 'topics',					'VALUES'	=> '\''.$forum_db->escape($moved_to['poster']).'\', \''.$forum_db->escape($moved_to['subject']).'\', '.$moved_to['posted'].', '.$moved_to['last_post'].', '.$cur_topic.', '.$fid				);				($hook = get_hook('mr_confirm_move_topics_qr_add_redirect_topic')) ? eval($hook) : null;				$forum_db->query_build($query) or error(__FILE__, __LINE__);			}		}		sync_forum($fid);			// Synchronize the forum FROM which the topic was moved		sync_forum($move_to_forum);	// Synchronize the forum TO which the topic was moved		$forum_page['redirect_msg'] = (count($topics) > 1) ? $lang_misc['Move topics redirect'] : $lang_misc['Move topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_confirm_move_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($move_to_forum, sef_friendly($move_to_forum_name))), $forum_page['redirect_msg']);	}	if (isset($_POST['move_topics']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		if (count($topics) == 1)		{			$topics = $topics[0];			$action = 'single';		}		else			$action = 'multiple';	}	else	{		$topics = intval($_GET['move_topics']);		if ($topics < 1)			message($lang_common['Bad request']);		$action = 'single';	}	if ($action == 'single')	{		// Fetch the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topics		);		($hook = get_hook('mr_move_topics_qr_get_topic_to_move_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}	}	// Get forums we can move the post into	$query = array(		'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name',		'FROM'		=> 'categories AS c',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'forums AS f',				'ON'			=> 'c.id=f.cat_id'			),			array(				'LEFT JOIN'		=> 'forum_perms AS fp',				'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$forum_user['g_id'].')'			)		),		'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL AND f.id!='.$fid,		'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'	);	($hook = get_hook('mr_move_topics_qr_get_target_forums')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_list = array();	while ($cur_sel_forum = $forum_db->fetch_assoc($result))	{		$forum_list[] = $cur_sel_forum;	}	if (empty($forum_list))	{		message($lang_misc['Nowhere to move']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.($action == 'single' ? $topics : implode(',', $topics)).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'][] = array($forum_config['o_board_title'], forum_link($forum_url['index']));	$forum_page['crumbs'][] = array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))));	if ($action == 'single')		$forum_page['crumbs'][] = array($subject, forum_link($forum_url['topic'], array($topics, sef_friendly($subject))));	else		$forum_page['crumbs'][] = array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid));	$forum_page['crumbs'][] = ($action == 'single') ? $lang_misc['Move topic'] : $lang_misc['Move topics'];	//Setup main heading	$forum_page['main_title'] = end($forum_page['crumbs']).' '.$lang_misc['To new forum'];	($hook = get_hook('mr_move_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_move_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo end($forum_page['crumbs']).' '.$lang_misc['To new forum'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Move topic'] ?></strong></legend><?php ($hook = get_hook('mr_move_topics_pre_move_to_forum')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box select">						<label for="fld<?php echo ++$forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Move to'] ?></span></label><br />						<span class="fld-input"><select id="fld<?php echo $forum_page['fld_count'] ?>" name="move_to_forum"><?php	$forum_page['cur_category'] = 0;	foreach ($forum_list as $cur_forum)	{		if ($cur_forum['cid'] != $forum_page['cur_category'])	// A new category since last iteration?		{			if ($forum_page['cur_category'])				echo "\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";			$forum_page['cur_category'] = $cur_forum['cid'];		}		if ($cur_forum['fid'] != $fid)			echo "\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.forum_htmlencode($cur_forum['forum_name']).'</option>'."\n";	}?>						</optgroup>						</select></span>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1"<?php if ($action == 'single') echo ' checked="checked"' ?> /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><?php echo ($action == 'single') ? $lang_misc['Leave redirect'] : $lang_misc['Leave redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_move_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_move_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="move_topics_to" value="<?php echo $lang_misc['Move'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_move_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Merge topicselse if (isset($_POST['merge_topics']) || isset($_POST['merge_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	if (count($topics) == 1)		message($lang_misc['Merge error']);	if (isset($_POST['merge_topics_comply']))	{		($hook = get_hook('mr_confirm_merge_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id), MIN(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.moved_to IS NULL AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_merge_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		list($num_topics, $merge_to_tid) = $forum_db->fetch_row($result);		if ($num_topics != count($topics))			message($lang_common['Bad request']);		// Make any redirect topics point to our new, merged topic		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'moved_to='.$merge_to_tid,			'WHERE'		=> 'moved_to IN('.implode(',', $topics).')'		);		// Should we create redirect topics?		if (isset($_POST['with_redirect']))			$query['WHERE'] .= ' OR (id IN('.implode(',', $topics).') AND id != '.$merge_to_tid.')';		($hook = get_hook('mr_confirm_merge_topics_qr_fix_redirect_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Merge the posts into the topic		$query = array(			'UPDATE'	=> 'posts',			'SET'		=> 'topic_id='.$merge_to_tid,			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_merge_topics_qr_merge_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).') AND topic_id != '.$merge_to_tid		);		($hook = get_hook('mr_confirm_merge_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (!isset($_POST['with_redirect']))		{			// Delete the topics that have been merged			$query = array(				'DELETE'	=> 'topics',				'WHERE'		=> 'id IN('.implode(',', $topics).') AND id != '.$merge_to_tid			);			($hook = get_hook('mr_confirm_merge_topics_qr_delete_merged_topics')) ? eval($hook) : null;			$forum_db->query_build($query) or error(__FILE__, __LINE__);		}		// Synchronize the topic we merged to and the forum where the topics were merged		sync_topic($merge_to_tid);		sync_forum($fid);		$forum_flash->add_info($lang_misc['Merge topics redirect']);		($hook = get_hook('mr_confirm_merge_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_misc['Merge topics redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] = 0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$lang_misc['Merge topics']	);	($hook = get_hook('mr_merge_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_merge_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic merge'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $lang_misc['Merge topics'] ?></strong></legend><?php ($hook = get_hook('mr_merge_topics_pre_redirect_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo (++$forum_page['fld_count']) ?>" name="with_redirect" value="1" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_misc['Redirect topic'] ?></span> <?php echo $lang_misc['Leave merge redirects'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_merge_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_merge_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="merge_topics_comply" value="<?php echo $lang_misc['Merge'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_merge_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Delete one or more topicselse if (isset($_REQUEST['delete_topics']) || isset($_POST['delete_topics_comply'])){	$topics = isset($_POST['topics']) && !empty($_POST['topics']) ? $_POST['topics'] : array();	$topics = array_map('intval', (is_array($topics) ? $topics : explode(',', $topics)));	if (empty($topics))		message($lang_misc['No topics selected']);	$multi = count($topics) > 1;	if (isset($_POST['delete_topics_comply']))	{		if (!isset($_POST['req_confirm']))			redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $lang_common['Cancel redirect']);		($hook = get_hook('mr_confirm_delete_topics_form_submitted')) ? eval($hook) : null;		// Verify that the topic IDs are valid		$query = array(			'SELECT'	=> 'COUNT(t.id)',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id IN('.implode(',', $topics).') AND t.forum_id='.$fid		);		($hook = get_hook('mr_confirm_delete_topics_qr_verify_topic_ids')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		if ($forum_db->result($result) != count($topics))			message($lang_common['Bad request']);		// Create an array of forum IDs that need to be synced		$forum_ids = array($fid);		$query = array(			'SELECT'	=> 't.forum_id',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_forums_to_sync')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($row = $forum_db->fetch_row($result))			$forum_ids[] = $row[0];		// Delete the topics and any redirect topics		$query = array(			'DELETE'	=> 'topics',			'WHERE'		=> 'id IN('.implode(',', $topics).') OR moved_to IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Delete any subscriptions		$query = array(			'DELETE'	=> 'subscriptions',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_subscriptions')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		// Create a list of the post ID's in the deleted topic and strip the search index		$query = array(			'SELECT'	=> 'p.id',			'FROM'		=> 'posts AS p',			'WHERE'		=> 'p.topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_get_deleted_posts')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$post_ids = array();		while ($row = $forum_db->fetch_row($result))			$post_ids[] = $row[0];		// Strip the search index provided we're not just deleting redirect topics		if (!empty($post_ids))		{			if (!defined('FORUM_SEARCH_IDX_FUNCTIONS_LOADED'))				require FORUM_ROOT.'include/search_idx.php';			strip_search_index($post_ids);		}		// Delete posts		$query = array(			'DELETE'	=> 'posts',			'WHERE'		=> 'topic_id IN('.implode(',', $topics).')'		);		($hook = get_hook('mr_confirm_delete_topics_qr_delete_topic_posts')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		foreach ($forum_ids as $cur_forum_id)			sync_forum($cur_forum_id);		$forum_flash->add_info($multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);		($hook = get_hook('mr_confirm_delete_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name']))), $multi ? $lang_misc['Delete topics redirect'] : $lang_misc['Delete topic redirect']);	}	// Setup form	$forum_page['group_count'] = $forum_page['item_count'] = $forum_page['fld_count'] =0;	$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);	$forum_page['hidden_fields'] = array(		'csrf_token'	=> '<input type="hidden" name="csrf_token" value="'.generate_form_token($forum_page['form_action']).'" />',		'topics'		=> '<input type="hidden" name="topics" value="'.implode(',', $topics).'" />'	);	// Setup breadcrumbs	$forum_page['crumbs'] = array(		array($forum_config['o_board_title'], forum_link($forum_url['index'])),		array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),		array($lang_misc['Moderate forum'], forum_link($forum_url['moderate_forum'], $fid)),		$multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topic']	);	($hook = get_hook('mr_delete_topics_pre_header_load')) ? eval($hook) : null;	define('FORUM_PAGE', 'dialogue');	require FORUM_ROOT.'header.php';	// START SUBST - <!-- forum_main -->	ob_start();	($hook = get_hook('mr_delete_topics_output_start')) ? eval($hook) : null;?>	<div class="main-head">		<h2 class="hn"><span><?php echo $lang_misc['Confirm topic delete'] ?></span></h2>	</div>	<div class="main-content main-frm">		<form class="frm-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">			<div class="hidden">				<?php echo implode("\n\t\t\t\t", $forum_page['hidden_fields'])."\n" ?>			</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset')) ? eval($hook) : null; ?>			<fieldset class="frm-group group<?php echo ++$forum_page['group_count'] ?>">				<legend class="group-legend"><strong><?php echo $multi ? $lang_misc['Delete topics'] : $lang_misc['Delete topics'] ?></strong></legend><?php ($hook = get_hook('mr_delete_topics_pre_confirm_checkbox')) ? eval($hook) : null; ?>				<div class="sf-set set<?php echo ++$forum_page['item_count'] ?>">					<div class="sf-box checkbox">						<span class="fld-input"><input type="checkbox" id="fld<?php echo ++$forum_page['fld_count'] ?>" name="req_confirm" value="1" checked="checked" /></span>						<label for="fld<?php echo $forum_page['fld_count'] ?>"><span><?php echo $lang_common['Please confirm'] ?></span> <?php echo $multi ? $lang_misc['Delete topics comply'] : $lang_misc['Delete topic comply'] ?></label>					</div>				</div><?php ($hook = get_hook('mr_delete_topics_pre_fieldset_end')) ? eval($hook) : null; ?>			</fieldset><?php ($hook = get_hook('mr_delete_topics_fieldset_end')) ? eval($hook) : null; ?>			<div class="frm-buttons">				<span class="submit primary"><input type="submit" name="delete_topics_comply" value="<?php echo $lang_common['Delete'] ?>" /></span>				<span class="cancel"><input type="submit" name="cancel" value="<?php echo $lang_common['Cancel'] ?>" formnovalidate /></span>			</div>		</form>	</div><?php	$forum_id = $fid;	($hook = get_hook('mr_delete_topics_end')) ? eval($hook) : null;	$tpl_temp = forum_trim(ob_get_contents());	$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);	ob_end_clean();	// END SUBST - <!-- forum_main -->	require FORUM_ROOT.'footer.php';}// Open or close one or more topicselse if (isset($_REQUEST['open']) || isset($_REQUEST['close'])){	$action = (isset($_REQUEST['open'])) ? 0 : 1;	($hook = get_hook('mr_open_close_topic_selected')) ? eval($hook) : null;	// There could be an array of topic ID's in $_POST	if (isset($_POST['open']) || isset($_POST['close']))	{		$topics = isset($_POST['topics']) && is_array($_POST['topics']) ? $_POST['topics'] : array();		$topics = array_map('intval', $topics);		if (empty($topics))			message($lang_misc['No topics selected']);		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id IN('.implode(',', $topics).') AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_multi_topics_qr_open_close_topics')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		if (count($topics) == 1)			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		else			$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topics redirect'] : $lang_misc['Open topics redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_multi_topics_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['moderate_forum'], $fid), $forum_page['redirect_msg']);	}	// Or just one in $_GET	else	{		$topic_id = ($action) ? intval($_GET['close']) : intval($_GET['open']);		if ($topic_id < 1)			message($lang_common['Bad request']);		// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.		// If it's in GET, we need to make sure it's valid.		if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token(($action ? 'close' : 'open').$topic_id)))			csrf_confirm_form();		// Get the topic subject		$query = array(			'SELECT'	=> 't.subject',			'FROM'		=> 'topics AS t',			'WHERE'		=> 't.id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_get_subject')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$subject = $forum_db->result($result);		if (!$subject)		{			message($lang_common['Bad request']);		}		$query = array(			'UPDATE'	=> 'topics',			'SET'		=> 'closed='.$action,			'WHERE'		=> 'id='.$topic_id.' AND forum_id='.$fid		);		($hook = get_hook('mr_open_close_single_topic_qr_open_close_topic')) ? eval($hook) : null;		$forum_db->query_build($query) or error(__FILE__, __LINE__);		$forum_page['redirect_msg'] = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		$forum_flash->add_info($forum_page['redirect_msg']);		($hook = get_hook('mr_open_close_single_topic_pre_redirect')) ? eval($hook) : null;		redirect(forum_link($forum_url['topic'], array($topic_id, sef_friendly($subject))), $forum_page['redirect_msg']);	}}// Stick a topicelse if (isset($_GET['stick'])){	$stick = intval($_GET['stick']);	if ($stick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('stick'.$stick)))		csrf_confirm_form();	($hook = get_hook('mr_stick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=1',		'WHERE'		=> 'id='.$stick.' AND forum_id='.$fid	);	($hook = get_hook('mr_stick_topic_qr_stick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Stick topic redirect']);	($hook = get_hook('mr_stick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($stick, sef_friendly($subject))), $lang_misc['Stick topic redirect']);}// Unstick a topicelse if (isset($_GET['unstick'])){	$unstick = intval($_GET['unstick']);	if ($unstick < 1)		message($lang_common['Bad request']);	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.	// If it's in GET, we need to make sure it's valid.	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('unstick'.$unstick)))		csrf_confirm_form();	($hook = get_hook('mr_unstick_topic_selected')) ? eval($hook) : null;	// Get the topic subject	$query = array(		'SELECT'	=> 't.subject',		'FROM'		=> 'topics AS t',		'WHERE'		=> 't.id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_get_subject')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$subject = $forum_db->result($result);	if (!$subject)	{		message($lang_common['Bad request']);	}	$query = array(		'UPDATE'	=> 'topics',		'SET'		=> 'sticky=0',		'WHERE'		=> 'id='.$unstick.' AND forum_id='.$fid	);	($hook = get_hook('mr_unstick_topic_qr_unstick_topic')) ? eval($hook) : null;	$forum_db->query_build($query) or error(__FILE__, __LINE__);	$forum_flash->add_info($lang_misc['Unstick topic redirect']);	($hook = get_hook('mr_unstick_topic_pre_redirect')) ? eval($hook) : null;	redirect(forum_link($forum_url['topic'], array($unstick, sef_friendly($subject))), $lang_misc['Unstick topic redirect']);}($hook = get_hook('mr_new_action')) ? eval($hook) : null;// No specific forum moderation action was specified in the query string, so we'll display the moderate forum view// If forum is emptyif ($cur_forum['num_topics'] == 0)	message($lang_common['Bad request']);// Load the viewforum.php language filerequire FORUM_ROOT.'lang/'.$forum_user['language'].'/forum.php';// Determine the topic offset (based on $_GET['p'])$forum_page['num_pages'] = ceil($cur_forum['num_topics'] / $forum_user['disp_topics']);$forum_page['page'] = (!isset($_GET['p']) || !is_numeric($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $forum_page['num_pages']) ? 1 : $_GET['p'];$forum_page['start_from'] = $forum_user['disp_topics'] * ($forum_page['page'] - 1);$forum_page['finish_at'] = min(($forum_page['start_from'] + $forum_user['disp_topics']), ($cur_forum['num_topics']));$forum_page['items_info'] = generate_items_info($lang_misc['Topics'], ($forum_page['start_from'] + 1), $cur_forum['num_topics']);// Select topics$query = array(	'SELECT'	=> 't.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to',	'FROM'		=> 'topics AS t',	'WHERE'		=> 'forum_id='.$fid,	'ORDER BY'	=> 't.sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 't.posted' : 't.last_post').' DESC',	'LIMIT'		=>	$forum_page['start_from'].', '.$forum_user['disp_topics']);// With "has posted" indicationif (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1'){	$query['SELECT'] .= ', COALESCE(p.id, 0) AS has_posted';	$query['JOINS'][]	= array(		'LEFT JOIN'		=> 'posts AS p',		'ON'			=> '(p.poster_id='.$forum_user['id'].' AND p.topic_id=t.id)'	);	// Must have same columns as in prev SELECT	$query['GROUP BY'] = 'p.id, t.id, t.poster, t.subject, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to';	($hook = get_hook('mr_qr_get_has_posted')) ? eval($hook) : null;}($hook = get_hook('mr_qr_get_topics')) ? eval($hook) : null;$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);// Generate paging links$forum_page['page_post']['paging'] = '<p class="paging"><span class="pages">'.$lang_common['Pages'].'</span> '.paginate($forum_page['num_pages'], $forum_page['page'], $forum_url['moderate_forum'], $lang_common['Paging separator'], $fid).'</p>';// Navigation links for header and page numbering for title/meta descriptionif ($forum_page['page'] < $forum_page['num_pages']){	$forum_page['nav']['last'] = '<link rel="last" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], $forum_page['num_pages'], $fid).'" title="'.$lang_common['Page'].' '.$forum_page['num_pages'].'" />';	$forum_page['nav']['next'] = '<link rel="next" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] + 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] + 1).'" />';}if ($forum_page['page'] > 1){	$forum_page['nav']['prev'] = '<link rel="prev" href="'.forum_sublink($forum_url['moderate_forum'], $forum_url['page'], ($forum_page['page'] - 1), $fid).'" title="'.$lang_common['Page'].' '.($forum_page['page'] - 1).'" />';	$forum_page['nav']['first'] = '<link rel="first" href="'.forum_link($forum_url['moderate_forum'], $fid).'" title="'.$lang_common['Page'].' 1" />';}// Setup form$forum_page['fld_count'] = 0;$forum_page['form_action'] = forum_link($forum_url['moderate_forum'], $fid);// Setup breadcrumbs$forum_page['crumbs'] = array(	array($forum_config['o_board_title'], forum_link($forum_url['index'])),	array($cur_forum['forum_name'], forum_link($forum_url['forum'], array($fid, sef_friendly($cur_forum['forum_name'])))),	sprintf($lang_misc['Moderate forum head'], forum_htmlencode($cur_forum['forum_name'])));// Setup main headingif ($forum_page['num_pages'] > 1)	$forum_page['main_head_pages'] = sprintf($lang_common['Page info'], $forum_page['page'], $forum_page['num_pages']);$forum_page['main_head_options']['select_all'] = '<span '.(empty($forum_page['main_head_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';$forum_page['main_foot_options']['select_all'] = '<span '.(empty($forum_page['main_foot_options']) ? ' class="first-item"' : '').'><span class="select-all js_link" data-check-form="mr-topic-actions-form">'.$lang_misc['Select all'].'</span></span>';($hook = get_hook('mr_topic_actions_pre_header_load')) ? eval($hook) : null;define('FORUM_PAGE', 'modforum');require FORUM_ROOT.'header.php';// START SUBST - <!-- forum_main -->ob_start();$forum_page['item_header'] = array();$forum_page['item_header']['subject']['title'] = '<strong class="subject-title">'.$lang_forum['Topics'].'</strong>';if ($forum_config['o_topic_views'] == '1')	$forum_page['item_header']['info']['views'] = '<strong class="info-views">'.$lang_forum['views'].'</strong>';$forum_page['item_header']['info']['replies'] = '<strong class="info-replies">'.$lang_forum['replies'].'</strong>';$forum_page['item_header']['info']['lastpost'] = '<strong class="info-lastpost">'.$lang_forum['last post'].'</strong>';($hook = get_hook('mr_topic_actions_output_start')) ? eval($hook) : null;?>	<div class="main-head"><?php	if (!empty($forum_page['main_head_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_head_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div>	<form id="mr-topic-actions-form" method="post" accept-charset="utf-8" action="<?php echo $forum_page['form_action'] ?>">	<div class="main-subhead">		<p class="item-summary<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>"><span><?php printf($lang_forum['Forum subtitle'], implode(' ', $forum_page['item_header']['subject']), implode(', ', $forum_page['item_header']['info'])) ?></span></p>	</div>	<div id="forum<?php echo $fid ?>" class="main-content main-forum<?php echo ($forum_config['o_topic_views'] == '1') ? ' forum-views' : ' forum-noview' ?>">		<div class="hidden">			<input type="hidden" name="csrf_token" value="<?php echo generate_form_token($forum_page['form_action']) ?>" />		</div><?php	$forum_page['item_count'] = 0;	while ($cur_topic = $forum_db->fetch_assoc($result))	{		($hook = get_hook('mr_topic_actions_row_loop_start')) ? eval($hook) : null;		++$forum_page['item_count'];		// Start from scratch		$forum_page['item_subject'] = $forum_page['item_body'] = $forum_page['item_status'] = $forum_page['item_nav'] = $forum_page['item_title'] = $forum_page['item_title_status'] = array();		if ($forum_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		$forum_page['item_subject']['starter'] = '<span class="item-starter">'.sprintf($lang_forum['Topic starter'], forum_htmlencode($cur_topic['poster'])).'</span>';		if ($cur_topic['moved_to'] != null)		{			$forum_page['item_status']['moved'] = 'moved';			$forum_page['item_title']['link'] = '<span class="item-status"><em class="moved">'.sprintf($lang_forum['Item status'], $lang_forum['Moved']).'</em></span> <a href="'.forum_link($forum_url['topic'], array($cur_topic['moved_to'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a>';			// Combine everything to produce the Topic heading			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> <strong>'.$forum_page['item_title']['link'].'</strong></h3>';			($hook = get_hook('mr_topic_actions_moved_row_pre_item_subject_merge')) ? eval($hook) : null;			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><span class="label">'.$lang_forum['No views info'].'</span></li>';			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><span class="label">'.$lang_forum['No replies info'].'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['No lastpost info'].'</span></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_moved_row_pre_output')) ? eval($hook) : null;		}		else		{			$forum_page['ghost_topic'] = false;			// First assemble the Topic heading			// Should we display the dot or not? :)			if (!$forum_user['is_guest'] && $forum_config['o_show_dot'] == '1' && $cur_topic['has_posted'] > 0)			{				$forum_page['item_title']['posted'] = '<span class="posted-mark">'.$lang_forum['You posted indicator'].'</span>';				$forum_page['item_status']['posted'] = 'posted';			}			if ($cur_topic['sticky'] == '1')			{				$forum_page['item_title_status']['sticky'] = '<em class="sticky">'.$lang_forum['Sticky'].'</em>';				$forum_page['item_status']['sticky'] = 'sticky';			}			if ($cur_topic['closed'] == '1')			{				$forum_page['item_title_status']['closed'] = '<em class="closed">'.$lang_forum['Closed'].'</em>';				$forum_page['item_status']['closed'] = 'closed';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_status_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_title_status']))				$forum_page['item_title']['status'] = '<span class="item-status">'.sprintf($lang_forum['Item status'], implode(', ', $forum_page['item_title_status'])).'</span>';			$forum_page['item_title']['link'] = '<strong><a href="'.forum_link($forum_url['topic'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.forum_htmlencode($cur_topic['subject']).'</a></strong>';			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_title_merge')) ? eval($hook) : null;			$forum_page['item_body']['subject']['title'] = '<h3 class="hn"><span class="item-num">'.forum_number_format($forum_page['start_from'] + $forum_page['item_count']).'</span> '.implode(' ', $forum_page['item_title']).'</h3>';			if (empty($forum_page['item_status']))				$forum_page['item_status']['normal'] = 'normal';			$forum_page['item_pages'] = ceil(($cur_topic['num_replies'] + 1) / $forum_user['disp_posts']);			if ($forum_page['item_pages'] > 1)				$forum_page['item_nav']['pages'] = '<span>'.$lang_forum['Pages'].'&#160;</span>'.paginate($forum_page['item_pages'], -1, $forum_url['topic'], $lang_common['Page separator'], array($cur_topic['id'], sef_friendly($cur_topic['subject'])));			// Does this topic contain posts we haven't read? If so, tag it accordingly.			if (!$forum_user['is_guest'] && $cur_topic['last_post'] > $forum_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$fid]) || $tracked_topics['forums'][$fid] < $cur_topic['last_post']))			{				$forum_page['item_nav']['new'] = '<em class="item-newposts"><a href="'.forum_link($forum_url['topic_new_posts'], array($cur_topic['id'], sef_friendly($cur_topic['subject']))).'">'.$lang_forum['New posts'].'</a></em>';				$forum_page['item_status']['new'] = 'new';			}			($hook = get_hook('mr_topic_loop_normal_topic_pre_item_nav_merge')) ? eval($hook) : null;			if (!empty($forum_page['item_nav']))				$forum_page['item_subject']['nav'] = '<span class="item-nav">'.sprintf($lang_forum['Topic navigation'], implode('&#160;&#160;', $forum_page['item_nav'])).'</span>';			// Assemble the Topic subject			$forum_page['item_body']['info']['replies'] = '<li class="info-replies"><strong>'.forum_number_format($cur_topic['num_replies']).'</strong> <span class="label">'.(($cur_topic['num_replies'] == 1) ? $lang_forum['Reply'] : $lang_forum['Replies']).'</span></li>';			if ($forum_config['o_topic_views'] == '1')				$forum_page['item_body']['info']['views'] = '<li class="info-views"><strong>'.forum_number_format($cur_topic['num_views']).'</strong> <span class="label">'.(($cur_topic['num_views'] == 1) ? $lang_forum['View'] : $lang_forum['Views']).'</span></li>';			$forum_page['item_body']['info']['lastpost'] = '<li class="info-lastpost"><span class="label">'.$lang_forum['Last post'].'</span> <strong><a href="'.forum_link($forum_url['post'], $cur_topic['last_post_id']).'">'.format_time($cur_topic['last_post']).'</a></strong> <cite>'.sprintf($lang_forum['by poster'], forum_htmlencode($cur_topic['last_poster'])).'</cite></li>';			$forum_page['item_body']['info']['select'] = '<li class="info-select"><input id="fld'.++$forum_page['fld_count'].'" type="checkbox" name="topics[]" value="'.$cur_topic['id'].'" /> <label for="fld'.$forum_page['fld_count'].'">'.sprintf($lang_forum['Select topic'], forum_htmlencode($cur_topic['subject'])).'</label></li>';			($hook = get_hook('mr_topic_actions_normal_row_pre_output')) ? eval($hook) : null;		}		$forum_page['item_body']['subject']['desc'] = '<p>'.implode(' ', $forum_page['item_subject']).'</p>';		($hook = get_hook('mr_topic_actions_row_pre_item_status_merge')) ? eval($hook) : null;		$forum_page['item_style'] = (($forum_page['item_count'] % 2 != 0) ? ' odd' : ' even').(($forum_page['item_count'] == 1) ? ' main-first-item' : '').((!empty($forum_page['item_status'])) ? ' '.implode(' ', $forum_page['item_status']) : '');		($hook = get_hook('mr_topic_actions_row_pre_display')) ? eval($hook) : null;?>			<div id="topic<?php echo $cur_topic['id'] ?>" class="main-item<?php echo $forum_page['item_style'] ?>">				<span class="icon <?php echo implode(' ', $forum_page['item_status']) ?>"><!-- --></span>				<div class="item-subject">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['subject'])."\n" ?>				</div>				<ul class="item-info">					<?php echo implode("\n\t\t\t\t\t", $forum_page['item_body']['info'])."\n" ?>				</ul>			</div><?php	}?>	</div><?php	($hook = get_hook('mr_topic_actions_post_topic_list')) ? eval($hook) : null;	// Setup moderator control buttons	$forum_page['mod_options'] = array(		'mod_move'		=> '<span class="submit first-item"><input type="submit" name="move_topics" value="'.$lang_misc['Move'].'" /></span>',		'mod_delete'	=> '<span class="submit"><input type="submit" name="delete_topics" value="'.$lang_common['Delete'].'" /></span>',		'mod_merge'		=> '<span class="submit"><input type="submit" name="merge_topics" value="'.$lang_misc['Merge'].'" /></span>',		'mod_open'		=> '<span class="submit"><input type="submit" name="open" value="'.$lang_misc['Open'].'" /></span>',		'mod_close'		=> '<span class="submit"><input type="submit" name="close" value="'.$lang_misc['Close'].'" /></span>'	);	($hook = get_hook('mr_topic_actions_pre_mod_option_output')) ? eval($hook) : null;?>	<div class="main-options mod-options gen-content">		<p class="options"><?php echo implode(' ', $forum_page['mod_options']) ?></p>	</div>	</form>	<div class="main-foot"><?php	if (!empty($forum_page['main_foot_options']))		echo "\n\t\t".'<p class="options">'.implode(' ', $forum_page['main_foot_options']).'</p>';?>		<h2 class="hn"><span><?php echo $forum_page['items_info'] ?></span></h2>	</div><?php$forum_id = $fid;// Init JS helper for select-all$forum_loader->add_js('PUNBB.common.addLoadEvent(PUNBB.common.initToggleCheckboxes);', array('type' => 'inline'));($hook = get_hook('mr_end')) ? eval($hook) : null;$tpl_temp = forum_trim(ob_get_contents());$tpl_main = str_replace('<!-- forum_main -->', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <!-- forum_main -->require FORUM_ROOT.'footer.php';
<?php/** * Loads functions used in dealing with email addresses and email sending. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;//// Validate an e-mail address//function is_valid_email($email){	$return = ($hook = get_hook('em_fn_is_valid_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	if (strlen($email) > 80)		return false;	return preg_match('/^(([^<>()[\]\\.,;:\s@"\']+(\.[^<>()[\]\\.,;:\s@"\']+)*)|("[^"\']+"))@((\[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\])|(([a-zA-Z\d\-]+\.)+[a-zA-Z]{2,}))$/', $email);}//// Check if $email is banned//function is_banned_email($email){	global $forum_db, $forum_bans;	$return = ($hook = get_hook('em_fn_is_banned_email_start')) ? eval($hook) : null;	if ($return != null)		return $return;	foreach ($forum_bans as $cur_ban)	{		if ($cur_ban['email'] != '' &&			($email == $cur_ban['email'] ||			(strpos($cur_ban['email'], '@') === false && stristr($email, '@'.$cur_ban['email']))))			return true;	}	return false;}//// Wrapper for PHP's mail()//function forum_mail($to, $subject, $message, $reply_to_email = '', $reply_to_name = ''){	global $forum_config, $lang_common;	// Default sender address	$from_name = sprintf($lang_common['Forum mailer'], $forum_config['o_board_title']);	$from_email = $forum_config['o_webmaster_email'];	($hook = get_hook('em_fn_forum_mail_start')) ? eval($hook) : null;	// Do a little spring cleaning	$to = forum_trim(preg_replace('#[\n\r]+#s', '', $to));	$subject = forum_trim(preg_replace('#[\n\r]+#s', '', $subject));	$from_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $from_email));	$from_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $from_name)));	$reply_to_email = forum_trim(preg_replace('#[\n\r:]+#s', '', $reply_to_email));	$reply_to_name = forum_trim(preg_replace('#[\n\r:]+#s', '', str_replace('"', '', $reply_to_name)));	// Set up some headers to take advantage of UTF-8	$from = "=?UTF-8?B?".base64_encode($from_name)."?=".' <'.$from_email.'>';	$subject = "=?UTF-8?B?".base64_encode($subject)."?=";	$headers = 'From: '.$from."\r\n".'Date: '.gmdate('r')."\r\n".'MIME-Version: 1.0'."\r\n".'Content-transfer-encoding: 8bit'."\r\n".'Content-type: text/plain; charset=utf-8'."\r\n".'X-Mailer: PunBB Mailer';	// If we specified a reply-to email, we deal with it here	if (!empty($reply_to_email))	{		$reply_to = "=?UTF-8?B?".base64_encode($reply_to_name)."?=".' <'.$reply_to_email.'>';		$headers .= "\r\n".'Reply-To: '.$reply_to;	}	// Make sure all linebreaks are CRLF in message (and strip out any NULL bytes)	$message = str_replace(array("\n", "\0"), array("\r\n", ''), forum_linebreaks($message));	($hook = get_hook('em_fn_forum_mail_pre_send')) ? eval($hook) : null;	if ($forum_config['o_smtp_host'] != '')		smtp_mail($to, $subject, $message, $headers);	else	{		// Change the linebreaks used in the headers according to OS		if (strtoupper(substr(PHP_OS, 0, 3)) == 'MAC')			$headers = str_replace("\r\n", "\r", $headers);		else if (strtoupper(substr(PHP_OS, 0, 3)) != 'WIN')			$headers = str_replace("\r\n", "\n", $headers);		mail($to, $subject, $message, $headers);	}}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function server_parse($socket, $expected_response){	$server_response = '';	while (substr($server_response, 3, 1) != ' ')	{		if (!($server_response = fgets($socket, 256)))			error('Couldn\'t get mail server response codes. Please contact the forum administrator.', __FILE__, __LINE__);	}	if (!(substr($server_response, 0, 3) == $expected_response))		error('Unable to send e-mail. Please contact the forum administrator with the following error message reported by the SMTP server: "'.$server_response.'"', __FILE__, __LINE__);}//// This function was originally a part of the phpBB Group forum software phpBB2 (http://www.phpbb.com).// They deserve all the credit for writing it. I made small modifications for it to suit PunBB and it's coding standards.//function smtp_mail($to, $subject, $message, $headers = ''){	global $forum_config;	$recipients = explode(',', $to);	// Sanitize the message	$message = str_replace("\r\n.", "\r\n..", $message);	$message = (substr($message, 0, 1) == '.' ? '.'.$message : $message);	// Are we using port 25 or a custom port?	if (strpos($forum_config['o_smtp_host'], ':') !== false)		list($smtp_host, $smtp_port) = explode(':', $forum_config['o_smtp_host']);	else	{		$smtp_host = $forum_config['o_smtp_host'];		$smtp_port = 25;	}	if ($forum_config['o_smtp_ssl'] == '1')		$smtp_host = 'ssl://'.$smtp_host;	if (!($socket = fsockopen($smtp_host, $smtp_port, $errno, $errstr, 15)))		error('Could not connect to smtp host "'.$forum_config['o_smtp_host'].'" ('.$errno.') ('.$errstr.').', __FILE__, __LINE__);	server_parse($socket, '220');	if ($forum_config['o_smtp_user'] != '' && $forum_config['o_smtp_pass'] != '')	{		fwrite($socket, 'EHLO '.$smtp_host."\r\n");		server_parse($socket, '250');		fwrite($socket, 'AUTH LOGIN'."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_user'])."\r\n");		server_parse($socket, '334');		fwrite($socket, base64_encode($forum_config['o_smtp_pass'])."\r\n");		server_parse($socket, '235');	}	else	{		fwrite($socket, 'HELO '.$smtp_host."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'MAIL FROM: <'.$forum_config['o_webmaster_email'].'>'."\r\n");	server_parse($socket, '250');	foreach ($recipients as $email)	{		fwrite($socket, 'RCPT TO: <'.$email.'>'."\r\n");		server_parse($socket, '250');	}	fwrite($socket, 'DATA'."\r\n");	server_parse($socket, '354');	fwrite($socket, 'Subject: '.$subject."\r\n".'To: <'.implode('>, <', $recipients).'>'."\r\n".$headers."\r\n\r\n".$message."\r\n");	fwrite($socket, '.'."\r\n");	server_parse($socket, '250');	fwrite($socket, 'QUIT'."\r\n");	fclose($socket);	return true;}define('FORUM_EMAIL_FUNCTIONS_LOADED', 1);
<?php/** * Outputs the header used by most forum pages. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Send no-cache headersheader('Expires: Thu, 21 Jul 1977 07:30:00 GMT');	// When yours truly first set eyes on this world! :)header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');header('Cache-Control: post-check=0, pre-check=0', false);header('Pragma: no-cache');		// For HTTP/1.0 compability// Send the Content-type header in case the web server is setup to send something elseheader('Content-type: text/html; charset=utf-8');// Load the main templateif (substr(FORUM_PAGE, 0, 5) == 'admin'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/admin.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/admin.tpl';}else if (FORUM_PAGE == 'help'){	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/help.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/help.tpl';}else{	if (file_exists(FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl'))		$tpl_path = FORUM_ROOT.'style/'.$forum_user['style'].'/main.tpl';	else		$tpl_path = FORUM_ROOT.'include/template/main.tpl';}($hook = get_hook('hd_pre_template_loaded')) ? eval($hook) : null;$tpl_main = file_get_contents($tpl_path);($hook = get_hook('hd_template_loaded')) ? eval($hook) : null;// START SUBST - <!-- forum_include "*" -->while (preg_match('#<!-- ?forum_include "([^/\\\\]*?)" ?-->#', $tpl_main, $cur_include)){	if (!file_exists(FORUM_ROOT.'include/user/'.$cur_include[1]))		error('Unable to process user include &lt;!-- forum_include "'.forum_htmlencode($cur_include[1]).'" --&gt; from template main.tpl. There is no such file in folder /include/user/', __FILE__, __LINE__);	ob_start();	include FORUM_ROOT.'include/user/'.$cur_include[1];	$tpl_temp = ob_get_contents();	$tpl_main = str_replace($cur_include[0], $tpl_temp, $tpl_main);	ob_end_clean();}// END SUBST - <!-- forum_include "*" -->// START SUBST - <!-- forum_local -->$tpl_main = str_replace('<!-- forum_local -->', 'lang="'.$lang_common['lang_identifier'].'" dir="'.$lang_common['lang_direction'].'"', $tpl_main);// END SUBST - <!-- forum_local -->// START SUBST - <!-- forum_head -->// Is this a page that we want search index spiders to index?if (!defined('FORUM_ALLOW_INDEX'))	$forum_head['robots'] = '<meta name="ROBOTS" content="NOINDEX, FOLLOW" />';else	$forum_head['descriptions'] = '<meta name="description" content="'.generate_crumbs(true).$lang_common['Title separator'].forum_htmlencode($forum_config['o_board_desc']).'" />';// Should we output a MicroID? http://microid.org/if (strpos(FORUM_PAGE, 'profile') === 0)	$forum_head['microid'] = '<meta name="microid" content="mailto+http:sha1:'.sha1(sha1('mailto:'.$user['email']).sha1(forum_link($forum_url['user'], $id))).'" />';$forum_head['title'] = '<title>'.generate_crumbs(true).'</title>';// Should we output feed links?if (FORUM_PAGE == 'index'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['index_rss']).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['index_atom']).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewforum'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['forum_rss'], $id).'" title="RSS" />';	$forum_head['atom'] = '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['forum_atom'], $id).'" title="ATOM" />';}else if (FORUM_PAGE == 'viewtopic'){	$forum_head['rss'] = '<link rel="alternate" type="application/rss+xml" href="'.forum_link($forum_url['topic_rss'], $id).'" title="RSS" />';	$forum_head['atom'] =  '<link rel="alternate" type="application/atom+xml" href="'.forum_link($forum_url['topic_atom'], $id).'" title="ATOM" />';}$forum_head['top'] = '<link rel="top" href="'.$base_url.'" title="'.$lang_common['Forum index'].'" />';// If there are more than two breadcrumbs, add the "up" link (second last)if (count($forum_page['crumbs']) > 2)	$forum_head['up'] = '<link rel="up" href="'.$forum_page['crumbs'][count($forum_page['crumbs']) - 2][1].'" title="'.forum_htmlencode($forum_page['crumbs'][count($forum_page['crumbs']) - 2][0]).'" />';// If there are other page navigation links (first, next, prev and last)if (!empty($forum_page['nav']))	$forum_head['nav'] = implode("\n", $forum_page['nav']);$forum_head['search'] = '<link rel="search" href="'.forum_link($forum_url['search']).'" title="'.$lang_common['Search'].'" />';$forum_head['author'] = '<link rel="author" href="'.forum_link($forum_url['users']).'" title="'.$lang_common['User list'].'" />';ob_start();// Include stylesheetsrequire FORUM_ROOT.'style/'.$forum_user['style'].'/'.$forum_user['style'].'.php';$head_temp = forum_trim(ob_get_contents());$num_temp = 0;foreach (explode("\n", $head_temp) as $style_temp)	$forum_head['style'.$num_temp++] = $style_temp;ob_end_clean();($hook = get_hook('hd_head')) ? eval($hook) : null;// Render CSS from forum_loader$tmp_head = implode("\n", $forum_head).$forum_loader->render_css();$tpl_main = str_replace('<!-- forum_head -->', $tmp_head, $tpl_main);unset($forum_head, $tmp_head);// END SUBST - <!-- forum_head -->// START SUBST OF COMMON ELEMENTS// Setup array of general elements$gen_elements = array();// Forum page id and classesif (!defined('FORUM_PAGE_TYPE')){	if (substr(FORUM_PAGE, 0, 5) == 'admin')		define('FORUM_PAGE_TYPE', 'admin-page');	else	{		if (!empty($forum_page['page_post']))			define('FORUM_PAGE_TYPE', 'paged-page');		else if (!empty($forum_page['main_menu']))			define('FORUM_PAGE_TYPE', 'menu-page');		else			define('FORUM_PAGE_TYPE', 'basic-page');	}}$gen_elements['<!-- forum_page -->'] = 'id="brd-'.FORUM_PAGE.'" class="brd-page '.FORUM_PAGE_TYPE.'"';// Skip link$gen_elements['<!-- forum_skip -->'] = '<p id="brd-access"><a href="#brd-main">'.$lang_common['Skip to content'].'</a></p>';// Forum Title$gen_elements['<!-- forum_title -->'] = '<p id="brd-title"><a href="'.forum_link($forum_url['index']).'">'.forum_htmlencode($forum_config['o_board_title']).'</a></p>';// Forum Description$gen_elements['<!-- forum_desc -->'] = ($forum_config['o_board_desc'] != '') ? '<p id="brd-desc">'.forum_htmlencode($forum_config['o_board_desc']).'</p>' : '';// Main Navigation$gen_elements['<!-- forum_navlinks -->'] = '<ul>'."\n\t\t".generate_navlinks()."\n\t".'</ul>';// Announcement$gen_elements['<!-- forum_announcement -->'] = ($forum_config['o_announcement'] == '1' && $forum_user['g_read_board'] == '1') ? '<div id="brd-announcement" class="gen-content">'.($forum_config['o_announcement_heading'] != '' ? "\n\t".'<h1 class="hn"><span>'.$forum_config['o_announcement_heading'].'</span></h1>' : '')."\n\t".'<div class="content">'.$forum_config['o_announcement_message'].'</div>'."\n".'</div>'."\n" : '';// Flash messages$gen_elements['<!-- forum_messages -->'] = '<div id="brd-messages" class="brd">'.$forum_flash->show(true).'</div>'."\n";// Maintenance Warning$gen_elements['<!-- forum_maint -->'] = ($forum_user['g_id'] == FORUM_ADMIN && $forum_config['o_maintenance'] == '1') ? '<p id="maint-alert" class="warn">'.sprintf($lang_common['Maintenance warning'], '<a href="'.forum_link($forum_url['admin_settings_maintenance']).'">'.$lang_common['Maintenance mode'].'</a>').'</p>' : '';($hook = get_hook('hd_gen_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($gen_elements), array_values($gen_elements), $tpl_main);unset($gen_elements);// END SUBST OF COMMON ELEMENTS// START SUBST VISIT ELEMENTS$visit_elements = array();if ($forum_user['is_guest'])	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.$lang_common['Not logged in'].'</span> <span>'.$lang_common['Login nag'].'</span></p>';else	$visit_elements['<!-- forum_welcome -->'] = '<p id="welcome"><span>'.sprintf($lang_common['Logged in as'], '<strong>'.forum_htmlencode($forum_user['username']).'</strong>').'</span> <span>'.sprintf($lang_common['Last visit'], format_time($forum_user['last_visit'])).'</span></p>';if ($forum_user['g_read_board'] == '1' && $forum_user['g_search'] == '1'){	$visit_links = array();	if (!$forum_user['is_guest'])		$visit_links['newposts'] = '<span id="visit-new"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_new']).'" title="'.$lang_common['New posts title'].'">'.$lang_common['New posts'].'</a></span>';	$visit_links['recent'] = '<span id="visit-recent"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_recent']).'" title="'.$lang_common['Active topics title'].'">'.$lang_common['Active topics'].'</a></span>';	$visit_links['unanswered'] = '<span id="visit-unanswered"'.(empty($visit_links) ? ' class="first-item"' : '').'><a href="'.forum_link($forum_url['search_unanswered']).'" title="'.$lang_common['Unanswered topics title'].'">'.$lang_common['Unanswered topics'].'</a></span>';}$visit_elements['<!-- forum_visit -->'] = (!empty($visit_links)) ? '<p id="visit-links" class="options">'.implode(' ', $visit_links).'</p>' : '';($hook = get_hook('hd_visit_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($visit_elements), array_values($visit_elements), $tpl_main);unset($visit_elements);// END SUBST VISIT ELEMENTS// START SUBST - <!-- forum_admod -->$admod_links = array();// We only need to run this query for mods/admins if there will actually be reports to look atif ($forum_user['is_admmod'] && $forum_config['o_report_method'] != 1){	$query = array(		'SELECT'	=> 'COUNT(r.id)',		'FROM'		=> 'reports AS r',		'WHERE'		=> 'r.zapped IS NULL',	);	($hook = get_hook('hd_qr_get_unread_reports_count')) ? eval($hook) : null;	$result_header = $forum_db->query_build($query) or error(__FILE__, __LINE__);	if ($forum_db->result($result_header))		$admod_links['reports'] = '<span id="reports"><a href="'.forum_link($forum_url['admin_reports']).'">'.$lang_common['New reports'].'</a></span>';}if ($forum_user['g_id'] == FORUM_ADMIN){	$alert_items = array();	// Warn the admin that maintenance mode is enabled	if ($forum_config['o_maintenance'] == '1')		$alert_items['maintenance'] = '<p id="maint-alert" class="warn">'.$lang_common['Maintenance alert'].'</p>';	if ($forum_config['o_check_for_updates'] == '1')	{		if ($forum_updates['fail'])			$alert_items['update_fail'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.$lang_common['Updates failed'].'</p>';		else if (isset($forum_updates['version']) && isset($forum_updates['hotfix']))			$alert_items['update_version_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version n hf'], $forum_updates['version'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';		else if (isset($forum_updates['version']))			$alert_items['update_version'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates version'], $forum_updates['version']).'</p>';		else if (isset($forum_updates['hotfix']))			$alert_items['update_hotfix'] = '<p><strong>'.$lang_common['Updates'].'</strong> '.sprintf($lang_common['Updates hf'], forum_link($forum_url['admin_extensions_hotfixes'])).'</p>';	}	// Warn the admin that their version of the database is newer than the version supported by the code	// NOTE: Why is it done on any page, but shown in admin section only.	if ($forum_config['o_database_revision'] > FORUM_DB_REVISION)		$alert_items['newer_database'] = '<p><strong>'.$lang_common['Database mismatch'].'</strong> '.$lang_common['Database mismatch alert'].'</p>';	if (!empty($alert_items))		$admod_links['alert'] = '<span id="alert"><a href="'.forum_link($forum_url['admin_index']).'"><strong>'.$lang_common['New alerts'].'</strong></a></span>';	($hook = get_hook('hd_alert')) ? eval($hook) : null;}$tpl_main = str_replace('<!-- forum_admod -->', (!empty($admod_links)) ? '<p id="brd-admod">'.implode(' ', $admod_links).'</p>' : '', $tpl_main);// END SUBST - <!-- forum_admod -->// MAIN SECTION INTERFACE ELEMENT SUBSTITUTION$main_elements = array();// Top breadcrumbs$main_elements['<!-- forum_crumbs_top -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-top" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Bottom breadcrumbs$main_elements['<!-- forum_crumbs_end -->'] = (FORUM_PAGE != 'index') ? '<div id="brd-crumbs-end" class="crumbs">'."\n\t".'<p>'.generate_crumbs(false).'</p>'."\n".'</div>' : '';// Main section heading$main_elements['<!-- forum_main_title -->'] =  '<h1 class="main-title">'.((isset($forum_page['main_title'])) ? $forum_page['main_title'] : forum_htmlencode(is_array($last_crumb = end($forum_page['crumbs'])) ? reset($last_crumb) : $last_crumb)).(isset($forum_page['main_head_pages']) ? ' <small>'.$forum_page['main_head_pages'].'</small>' : '').'</h1>'."\n";// Top pagination and post links$main_elements['<!-- forum_main_pagepost_top -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-top" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Bottom pagination and postlink$main_elements['<!-- forum_main_pagepost_end -->'] = (!empty($forum_page['page_post'])) ? '<div id="brd-pagepost-end" class="main-pagepost gen-content">'."\n\t".implode("\n\t", $forum_page['page_post'])."\n".'</div>' : '';// Main section menu e.g. profile menu$main_elements['<!-- forum_main_menu -->'] = (!empty($forum_page['main_menu'])) ? '<div class="main-menu gen-content">'."\n\t".'<ul>'."\n\t\t".implode("\n\t\t", $forum_page['main_menu'])."\n\t".'</ul>'."\n".'</div>' : '';// Main section menu e.g. profile menuif (substr(FORUM_PAGE, 0, 5) == 'admin' && FORUM_PAGE_TYPE != 'paged'){	$main_elements['<!-- forum_admin_menu -->'] = '<div class="admin-menu gen-content">'."\n\t".'<ul>'."\n\t\t".generate_admin_menu(false)."\n\t".'</ul>'."\n".'</div>';	$forum_page['admin_sub'] = generate_admin_menu(true);		$main_elements['<!-- forum_admin_submenu -->'] = ($forum_page['admin_sub'] != '') ? '<div class="admin-submenu gen-content">'."\n\t".'<ul>'."\n\t\t".$forum_page['admin_sub']."\n\t".'</ul>'."\n".'</div>' : '';}($hook = get_hook('hd_main_elements')) ? eval($hook) : null;$tpl_main = str_replace(array_keys($main_elements),  array_values($main_elements), $tpl_main);unset($main_elements);// END MAIN SECTION INTERFACE ELEMENT SUBSTITUTION($hook = get_hook('hd_end')) ? eval($hook) : null;if (!defined('FORUM_HEADER'))	define('FORUM_HEADER', 1);
<?php$lang_profile = array(// Navigation and sections'Profile redirect'			=>	'Profile updated.','Instructions'				=>	'You will be redirected back to this page','Update profile'			=>	'Update profile',// Administration stuff'User delete redirect'		=>	'User deleted.','Section admin'				=>	'Administration','Delete user'				=>	'Delete user','Delete warning'			=>	'<strong>Warning!</strong> Once deleted a user and/or their posts cannot be restored.','Delete posts info'			=>	'<strong>Warning!</strong> If you choose not to delete this user\'s posts they can only be deleted manually at a later time.','Delete posts'				=>	'Delete posts','Delete posts label'		=>	'Delete any posts and topics %s has made.','Group membership redirect'	=>	'Group membership updated.','Moderate forums redirect'	=>	'Forum moderator rights updated.','Ban redirect'				=>	'Redirecting','Ban user'					=>	'Ban user','Ban user info'				=>	'Ban this user via the administration console.','Delete user info'			=>	'Permanently delete this user and, optionally, all their posts.','User management'			=>	'User management','Group membership'			=>	'Group membership','User group'				=>	'Assign user to group','Moderator assignment'		=>	'Moderator assignment','Cannot delete admin'		=>	'Administrators cannot be deleted. In order to delete this user, you must first move him/her to a different user group.','Update groups'				=>	'Update user group','Update forums'				=>	'Update moderator assignment',// Avatar stuff'Avatar welcome'			=>	'Set an avatar image to enhance your forum identity','Avatar welcome user'		=>	'Set an avatar image to enhance  %s\'s forum identity','Avatar deleted redirect'	=>	'Avatar deleted.','Avatars disabled'			=>	'The administrator has disabled avatar support.','No file'					=>	'You did not select a file for upload.','Too large ini'				=>	'The selected file was too large to upload. The server didn\'t allow the upload.','Partial upload'			=>	'The selected file was only partially uploaded. Please try again.','No tmp directory'			=>	'PHP was unable to save the uploaded file to a temporary location.','Bad type'					=>	'The file you tried to upload is not of an allowed type. Allowed file types are gif, jpeg and png.','Too large'					=>	'The file you tried to upload is larger than the maximum allowed %s bytes.','Move failed'				=>	'The server was unable to save the uploaded file. Please contact the forum administrator at %s.','Too wide or high'			=>	'The file you tried to upload is wider and/or higher than the maximum allowed %sx%s pixels.','Unknown failure'			=>	'An unknown error occurred. Please try again.','Avatar'					=>	'Avatar','Current avatar'			=>	'Current avatar','No avatar info'			=>	'No avatar is currently uploaded.','Avatar info replace'		=>	'Uploading a new avatar will replace your existing avatar.','Avatar info none'			=>	'To display an avatar you first need to upload one.','Avatar info type'			=>	'The allowed image file types are gif, jpeg and png.','Avatar info size'			=>	'The maximum image size allowed is %sx%s pixels and %s bytes (%s KB).','Delete avatar info'		=>	'Delete avatar to stop displaying any avatar.','Upload avatar file'		=>	'Upload avatar file','Avatar upload help'		=>	'Select file then update your profile to install.','No upload warn'			=>	'<strong>IMPORTANT! </strong> You must choose a file to upload before updating your profile.',// About and Identity sections'Users profile'				=>	'%s\'s profile','Section about'				=>	'Introduction','Profile welcome'			=>	'Welcome to your profile','Profile welcome user'		=>	'Welcome to %s\'s profile','Identity welcome'			=>	'Modify your personal and contact details','Identity welcome user'		=>	'Modify %s\'s personal and contact details','View your posts'			=>	'View all your posts','View your topics'			=>	'View all your topics','View user posts'			=>	'View all %s\'s posts','View user topics'			=>	'View all %s\'s topics','View your subscriptions'	=>	'View all your subscriptions','View user subscriptions'	=>	'View all %s\'s subscriptions','Realname'					=>	'Real name','Location'					=>	'Location','From'						=>	'From','Registered'				=>	'Registered','Website'					=>	'Website','Facebook'					=>	'Facebook','Twitter'					=>	'Twitter','LinkedIn'					=>	'LinkedIn','Skype'						=>	'Skype','IP'						=>	'IP','Note'						=>	'Note','Posts'						=>	'Posts','Last post'					=>	'Last post','Last visit'				=> 	'Last visit','Send forum e-mail'			=>	'Send forum email','Contact info'				=>	'Contact information','Jabber'					=>	'Jabber','ICQ'						=>	'ICQ','MSN'						=>	'MSN Messenger','AOL IM'					=>	'AOL IM','Forbidden title'			=>	'The title you entered contains a forbidden word. You must choose a different title.','Bad ICQ'					=>	'You entered an invalid ICQ UIN.','Yahoo'						=>	'Yahoo! Messenger','Posts and topics'			=>	'Posts and topics','Private info'				=>	'Private information','Current signature'			=>	'Current signature','Section identity'			=>	'Identity','Section settings'			=>	'Settings','Section avatar'			=>	'Avatar','Section signature'			=>	'Signature','Signature info'			=>	'Your signature will appear at the foot of your posts. It can contain almost anything such as your favourite quote or star sign. It\'s up to you!','Personal legend'			=>	'Personal details','Title'						=>	'Title','Leave blank'				=>	'Leave blank to use forum default.','Edit count'				=>	'Edit post count','Admin note'				=>	'Admin note','Contact legend'			=>	'Contact details','Contact messengers legend'	=>	'Contact messengers details','Name or Url'				=>	'Enter the url or username',// Settings section'Local settings'			=>	'Local settings','Settings welcome'			=>	'Modify your localization, display and email settings','Settings welcome user'		=>	'Modify %s\'s localization, display and email settings','Timezone info'				=>	'Must be set for correct time display.','Time format'				=>  'Time format','Default'					=>  'default','Date format'				=>  'Date format','Display settings'			=>	'Display settings','Styles'					=>	'Available styles','Image display'				=>	'Image display','Show avatars'				=>	'Show user avatars in posts.','Show images sigs'			=>	'Show images in user signatures.','Show images'				=>	'Show images in posts.','Show sigs'					=>	'Show user signatures in posts.','Show smilies'				=>	'Show smilies as graphic icons.','Signature display'			=>	'Signature display','Pagination settings'		=>	'Pagination settings','Topics per page'			=>	'Topics per page','Posts per page'			=>	'Posts per page','E-mail and sub settings'	=>	'Email and subscription settings','Subscription settings'		=>	'Subscription settings','Notify full'				=>	'Include a plain text copy of posts in subscription emails.','Subscribe by default'		=>	'Subscribe to topics by default when posting.','UTC-12:00'					=>	'(UTC-12:00) International Date Line West','UTC-11:00'					=>	'(UTC-11:00) Niue, Samoa','UTC-10:00'					=>	'(UTC-10:00) Hawaii-Aleutian, Cook Island','UTC-09:30'					=>	'(UTC-09:30) Marquesas Islands','UTC-09:00'					=>	'(UTC-09:00) Alaska, Gambier Island','UTC-08:00'					=>	'(UTC-08:00) Pacific','UTC-07:00'					=>	'(UTC-07:00) Mountain','UTC-06:00'					=>	'(UTC-06:00) Central','UTC-05:00'					=>	'(UTC-05:00) Eastern','UTC-04:00'					=>	'(UTC-04:00) Atlantic','UTC-03:30'					=>	'(UTC-03:30) Newfoundland','UTC-03:00'					=>	'(UTC-03:00) Amazon, Central Greenland','UTC-02:00'					=>	'(UTC-02:00) Mid-Atlantic','UTC-01:00'					=>	'(UTC-01:00) Azores, Cape Verde, Eastern Greenland','UTC'						=>	'(UTC) Western European, Greenwich','UTC+01:00'					=>	'(UTC+01:00) Central European, West African','UTC+02:00'					=>	'(UTC+02:00) Eastern European, Central African','UTC+03:00'					=>	'(UTC+03:00) Moscow, Eastern African','UTC+03:30'					=>	'(UTC+03:30) Iran','UTC+04:00'					=>	'(UTC+04:00) Gulf, Samara','UTC+04:30'					=>	'(UTC+04:30) Afghanistan','UTC+05:00'					=>	'(UTC+05:00) Pakistan, Yekaterinburg','UTC+05:30'					=>	'(UTC+05:30) India, Sri Lanka','UTC+05:45'					=>	'(UTC+05:45) Nepal','UTC+06:00'					=>	'(UTC+06:00) Bangladesh, Bhutan, Novosibirsk','UTC+06:30'					=>	'(UTC+06:30) Cocos Islands, Myanmar','UTC+07:00'					=>	'(UTC+07:00) Indochina, Krasnoyarsk','UTC+08:00'					=>	'(UTC+08:00) Greater China, Australian Western, Irkutsk','UTC+08:45'					=>	'(UTC+08:45) Southeastern Western Australia','UTC+09:00'					=>	'(UTC+09:00) Japan, Korea, Chita','UTC+09:30'					=>	'(UTC+09:30) Australian Central','UTC+10:00'					=>	'(UTC+10:00) Australian Eastern, Vladivostok','UTC+10:30'					=>	'(UTC+10:30) Lord Howe','UTC+11:00'					=>	'(UTC+11:00) Solomon Island, Magadan','UTC+11:30'					=>	'(UTC+11:30) Norfolk Island','UTC+12:00'					=>	'(UTC+12:00) New Zealand, Fiji, Kamchatka','UTC+12:45'					=>	'(UTC+12:45) Chatham Islands','UTC+13:00'					=>	'(UTC+13:00) Tonga, Phoenix Islands','UTC+14:00'					=>	'(UTC+14:00) Line Islands',// Change Password stuff'Change pass errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your password can be updated:','Pass logout'				=>	'A user is currently logged in. Please logout and try again.','Pass key bad'				=>	'The specified password activation key was incorrect or has expired. Please re-request a new password. If that fails, contact the forum administrator at %s.','Pass updated'				=>	'Password updated. Login with your new password.','Change your password'		=>	'Change your password','Change user password'		=>	'Change %s\'s password','Old password'				=>	'Old password','Old password help'			=>	'You must enter your existing password.','New password'				=>	'New password','Confirm new password'		=>	'Confirm new password','Wrong old password'		=>	'The old password you entered was incorrect.','Pass updated redirect'		=>	'Password updated.',// Change E-mail stuff'Change e-mail errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your email address can be updated:','E-mail key bad'			=>	'The specified email activation key was incorrect or has expired. Please re-request change of email address. If that fails, contact the forum administrator at %s.','E-mail updated'			=>	'Your email address has been updated.','E-mail updated redirect'	=>	'Your email address has been updated.','Wrong password'			=>	'The password you entered was incorrect.','Activate e-mail sent'		=>	'An email has been sent to the specified address with instructions on how to activate the new email address. If it doesn\'t arrive you can contact the forum administrator at %s.','Change your e-mail'		=>	'Change your email address','Change user e-mail'		=>	'Change %s\'s email address','New e-mail'				=>	'New email address',// Signatures'Sig welcome'				=>	'Create or modify a signature for display in your posts','Sig welcome user'			=>	'Create or modify a signature for display in %s\'s posts','Signatures disabled'		=>	'The administrator has disabled signatures support.','Sig too long'				=>	'Signatures cannot be longer than %1$s characters. Please reduce your signature by %2$s characters.','Sig too many lines'		=>	'Signatures cannot have more than %s lines.','Signature'					=>	'Signature','Compose signature'			=>	'Compose signature','Sig max size'				=>	'Maximum size %s characters long and %s lines high.',// Registration stuff (some of these also used by profile)'No new regs'				=>	'This forum is not accepting new registrations.','Reg cancel redirect'		=>	'Registration cancelled.','Agreement'					=>	'Agreement','Agreement label'			=>	'I agree to the rules set out above and wish to register.','Agree'						=>	'Agree','Registration flood'		=>	'A new user was registered with the same IP address as you within the last hour. To prevent registration flooding, at least an hour has to pass between registrations from the same IP. Sorry for the inconvenience.','Pass too short'			=>	'Passwords must be at least 4 characters long. Please choose another (longer) password.','Pass not match'			=>	'Passwords do not match.','E-mail not match'			=>	'Email addresses do not match.','Banned e-mail'				=>	'The email address you entered is banned in this forum. Please choose another email address.','Dupe e-mail'				=>	'Someone else is already registered with that email address. Please choose another email address.','Reg e-mail'				=>	'Thank you for registering. An email has been sent to the specified address with instructions on how to activate your new account. If it doesn\'t arrive you can contact the forum administrator at %s.','Reg complete'				=>	'Registration complete. Logging in and redirecting','Register errors'			=>	'<strong>Warning!</strong> The following errors must be corrected before you can register:','E-mail info'				=>	'<strong>Important!</strong> An email will be sent to your new address with an activation link. You must click the link in the email you receive to activate the new address. You must therefore ensure that you enter a valid and current email address.','Reg e-mail info'			=>	'<strong>Important!</strong> An email with an activation link will be sent to the address you provide. You must click the link in the email in order to activate your new account. It must be done in 72 hours after registration, or else your account will be deleted.','Register at'				=>	'Register at %s','Register intro'			=>	'Registration enables you to use features not available when browsing the board as a guest. The fields below only make up a small part of all the settings you can alter in your profile. If you have any questions regarding this forum you should ask an administrator. Please complete the form below in order to register.','Username'					=>	'Username','Username help'				=>	'Between 2 and 25 characters.','Password'					=>	'Password','Password help'				=>	'Minimum 4 characters. Case sensitive.','Confirm password'			=>	'Confirm password','Confirm password help'		=>	'Re-enter your password exactly as before.','E-mail'					=>	'Email','E-mail help'				=>	'A current valid email address.','Confirm e-mail'			=>	'Confirm email','Confirm e-mail help'		=>	'Re-enter your email address exactly as before.','Optional legend'			=>	'Optional settings','Language'					=>	'Language','Timezone'					=>	'Your timezone','DST label'					=>	'Daylight saving time (advance times by 1 hour).','E-mail settings'			=>	'Email settings','E-mail setting 1'			=>	'Display your email address to other users.','E-mail setting 2'			=>	'Hide your email address but allow email via the forum.','E-mail setting 3'			=>	'Hide your email address and disallow email via the forum.','Reg rules head'			=>	'You must agree to the forum rules set out below in order to register.','Register'					=>	'Register', // Registration button text// Form validation stuff'Profile update errors'		=>	'<strong>Warning!</strong> The following errors must be corrected before your profile can be updated:','Username BBCode'			=>	'Usernames may not contain any of the text formatting tags (BBCode) that the forum uses. Please choose another username.','Username IP'				=>	'Usernames may not be in the form of an IP address. Please choose another username.','Username censor'			=>	'The username you entered contains one or more censored words. Please choose a different username.','Username dupe'				=>	'Someone is already registered with the username %s. The username you entered is too similar. The username must differ from that by at least one alphanumerical character (a-z or 0-9). Please choose another username.','Username guest'			=>	'The username guest is reserved. Please choose another username.','Username reserved chars'	=>	'Usernames may not contain all the characters \', " and [ or ] at once. Please choose another username.','Username too long'			=>	'Usernames must not be more than 25 characters long. Please choose another (shorter) username.','Username too short'		=>	'Usernames must be at least 2 characters long. Please choose another (longer) username.','Signature quote/code'		=>	'The quote and code BBCodes are not allowed in signatures.','Invalid e-mail'			=>	'The email address you entered is invalid.','Signature quote/code/list'	=>	'Signature may not contain of the text formatting tags (BBCode) [quote], [code] or [list]. Please choose another tags or delete it.',);
<?php/** * Caching functions. * * This file contains all of the functions used to generate the cache files used by the site. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure no one attempts to run this script "directly"if (!defined('FORUM'))	exit;// Safe create or write of cache files// Use LOCKfunction write_cache_file($file, $content){	$tmp_file = tempnam(FORUM_CACHE_DIR, md5($file.time().uniqid()));	if (!$tmp_file)	{		return false;	}	$fh = @/**/fopen($tmp_file, 'wb');	if (!$fh)	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	// Write	fwrite($fh, $content);	fclose($fh);	// Rename TMP to file	if (!@/**/rename($tmp_file, $file))	{		// Unlink TMP		if (file_exists($tmp_file))		{			unlink($tmp_file);		}		return false;	}	return true;}//// Generate the config cache PHP script//function generate_config_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_config_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the forum config from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'config AS c'	);	($hook = get_hook('ch_fn_generate_config_cache_qr_get_config')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_config_item = $forum_db->fetch_row($result))		$output[$cur_config_item[0]] = $cur_config_item[1];	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_config.php', '<?php'."\n\n".'define(\'FORUM_CONFIG_LOADED\', 1);'."\n\n".'$forum_config = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the bans cache PHP script//function generate_bans_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_bans_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the ban list from the DB	$query = array(		'SELECT'	=> 'b.*, u.username AS ban_creator_username',		'FROM'		=> 'bans AS b',		'JOINS'		=> array(			array(				'LEFT JOIN'		=> 'users AS u',				'ON'			=> 'u.id=b.ban_creator'			)		),		'ORDER BY'	=> 'b.id'	);	($hook = get_hook('ch_fn_generate_bans_cache_qr_get_bans')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_ban = $forum_db->fetch_assoc($result))		$output[] = $cur_ban;	// Output ban list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_bans.php', '<?php'."\n\n".'define(\'FORUM_BANS_LOADED\', 1);'."\n\n".'$forum_bans = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write bans cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the ranks cache PHP script//function generate_ranks_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_ranks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the rank list from the DB	$query = array(		'SELECT'	=> 'r.*',		'FROM'		=> 'ranks AS r',		'ORDER BY'	=> 'r.min_posts'	);	($hook = get_hook('ch_fn_generate_ranks_cache_qr_get_ranks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_rank = $forum_db->fetch_assoc($result))		$output[] = $cur_rank;	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ranks.php', '<?php'."\n\n".'define(\'FORUM_RANKS_LOADED\', 1);'."\n\n".'$forum_ranks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write ranks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the forum stats cache PHP script//function generate_stats_cache(){	global $forum_db;	$stats = array();	$return = ($hook = get_hook('ch_fn_generate_stats_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Collect some statistics from the database	$query = array(		'SELECT'	=> 'COUNT(u.id) - 1',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_user_count')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['total_users'] = $forum_db->result($result);	// Get last registered user info	$query = array(		'SELECT'	=> 'u.id, u.username',		'FROM'		=> 'users AS u',		'WHERE'		=> 'u.group_id != '.FORUM_UNVERIFIED,		'ORDER BY'	=> 'u.registered DESC',		'LIMIT'		=> '1'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_newest_user')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$stats['last_user'] = $forum_db->fetch_assoc($result);	// Get num topics and posts	$query = array(		'SELECT'	=> 'SUM(f.num_topics), SUM(f.num_posts)',		'FROM'		=> 'forums AS f'	);	($hook = get_hook('ch_fn_generate_stats_cache_qr_get_post_stats')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	list($stats['total_topics'], $stats['total_posts']) = $forum_db->fetch_row($result);	$stats['cached'] = time();	// Output ranks list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_stats.php', '<?php'."\n\n".'if (!defined(\'FORUM_STATS_LOADED\')) define(\'FORUM_STATS_LOADED\', 1);'."\n\n".'$forum_stats = '.var_export($stats, true).';'."\n\n".'?>'))	{		error('Unable to write stats cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}	unset($stats);}//// Generate the censor cache PHP script//function generate_censors_cache(){	global $forum_db;	$return = ($hook = get_hook('ch_fn_generate_censors_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the censor list from the DB	$query = array(		'SELECT'	=> 'c.*',		'FROM'		=> 'censoring AS c',		'ORDER BY'	=> 'c.search_for'	);	($hook = get_hook('ch_fn_generate_censors_cache_qr_get_censored_words')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_censor = $forum_db->fetch_assoc($result))		$output[] = $cur_censor;	// Output censors list as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_censors.php', '<?php'."\n\n".'define(\'FORUM_CENSORS_LOADED\', 1);'."\n\n".'$forum_censors = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write censor cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate quickjump cache PHP scripts//function generate_quickjump_cache($group_id = false){	global $forum_db, $lang_common, $forum_url, $forum_config, $forum_user, $base_url;	$return = ($hook = get_hook('ch_fn_generate_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);'."\n".'$forum_id = isset($forum_id) ? $forum_id : 0;'."\n\n".'?>';		$output .= '<form id="qjump" method="get" accept-charset="utf-8" action="'.$base_url.'/viewforum.php">'."\n\t".'<div class="frm-fld frm-select">'."\n\t\t".'<label for="qjump-select"><span><?php echo $lang_common[\'Jump to\'] ?>'.'</span></label><br />'."\n\t\t".'<span class="frm-input"><select id="qjump-select" name="id">'."\n";		// Get the list of categories and forums from the DB		$query = array(			'SELECT'	=> 'c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url',			'FROM'		=> 'categories AS c',			'JOINS'		=> array(				array(					'INNER JOIN'	=> 'forums AS f',					'ON'			=> 'c.id=f.cat_id'				),				array(					'LEFT JOIN'		=> 'forum_perms AS fp',					'ON'			=> '(fp.forum_id=f.id AND fp.group_id='.$group_id.')'				)			),			'WHERE'		=> 'fp.read_forum IS NULL OR fp.read_forum=1',			'ORDER BY'	=> 'c.disp_position, c.id, f.disp_position'		);		($hook = get_hook('ch_fn_generate_quickjump_cache_qr_get_cats_and_forums')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		$forums = array();		while ($cur_forum = $forum_db->fetch_assoc($result))		{			$forums[] = $cur_forum;		}		$cur_category = 0;		$forum_count = 0;		$sef_friendly_names = array();		foreach ($forums as $cur_forum)		{			($hook = get_hook('ch_fn_generate_quickjump_cache_forum_loop_start')) ? eval($hook) : null;			if ($cur_forum['cid'] != $cur_category)	// A new category since last iteration?			{				if ($cur_category)					$output .= "\t\t\t".'</optgroup>'."\n";				$output .= "\t\t\t".'<optgroup label="'.forum_htmlencode($cur_forum['cat_name']).'">'."\n";				$cur_category = $cur_forum['cid'];			}			$sef_friendly_names[$cur_forum['fid']] = sef_friendly($cur_forum['forum_name']);			$redirect_tag = ($cur_forum['redirect_url'] != '') ? ' &gt;&gt;&gt;' : '';			$output .= "\t\t\t\t".'<option value="'.$cur_forum['fid'].'"<?php echo ($forum_id == '.$cur_forum['fid'].') ? \' selected="selected"\' : \'\' ?>>'.forum_htmlencode($cur_forum['forum_name']).$redirect_tag.'</option>'."\n";			$forum_count++;		}		$output .= "\t\t\t".'</optgroup>'."\n\t\t".'</select>'."\n\t\t".'<input type="submit" id="qjump-submit" value="<?php echo $lang_common[\'Go\'] ?>" /></span>'."\n\t".'</div>'."\n".'</form>'."\n";		$output .= '<script type="text/javascript">'."\n\t\t".'var forum_quickjump_url = "'.forum_link($forum_url['forum']).'";'."\n\t\t".'var sef_friendly_url_array = new Array('.count($forums).');';		foreach ($sef_friendly_names as $forum_id => $forum_name)			$output .= "\n\t".'sef_friendly_url_array['.$forum_id.'] = "'.forum_htmlencode($forum_name).'";';		$output .= "\n".'</script>'."\n";		if ($forum_count < 2)			$output = '<?php'."\n\n".'if (!defined(\'FORUM\')) exit;'."\n".'define(\'FORUM_QJ_LOADED\', 1);';		// Output quickjump as PHP code		if (!write_cache_file(FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php', $output))		{			error('Unable to write quickjump cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);		}	}}//// Clean quickjump cache PHP scripts//function clean_quickjump_cache($group_id = false){	global $forum_db;	$return = ($hook = get_hook('ch_fn_clean_quickjump_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	$groups = array();	// If a group_id was supplied, we generate the quickjump cache for that group only	if ($group_id !== false)		$groups[0] = $group_id;	else	{		// A group_id was not supplied, so we generate the quickjump cache for all groups		$query = array(			'SELECT'	=> 'g.g_id',			'FROM'		=> 'groups AS g'		);		($hook = get_hook('ch_fn_clean_quickjump_cache_qr_get_groups')) ? eval($hook) : null;		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);		while ($cur_group = $forum_db->fetch_row($result))		{			$groups[] = $cur_group[0];		}	}	// Loop through the groups in $groups and output the cache for each of them	foreach ($groups as $group_id)	{		// Output quickjump as PHP code		$qj_cache_file = FORUM_CACHE_DIR.'cache_quickjump_'.$group_id.'.php';		if (file_exists($qj_cache_file))		{			unlink($qj_cache_file);		}	}}//// Generate the hooks cache PHP script//function generate_hooks_cache(){	global $forum_db, $forum_config, $base_url;	$return = ($hook = get_hook('ch_fn_generate_hooks_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get the hooks from the DB	$query = array(		'SELECT'	=> 'eh.id, eh.code, eh.extension_id, e.dependencies',		'FROM'		=> 'extension_hooks AS eh',		'JOINS'		=> array(			array(				'INNER JOIN'	=> 'extensions AS e',				'ON'			=> 'e.id=eh.extension_id'			)		),		'WHERE'		=> 'e.disabled=0',		'ORDER BY'	=> 'eh.priority, eh.installed'	);	($hook = get_hook('ch_fn_generate_hooks_cache_qr_get_hooks')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$output = array();	while ($cur_hook = $forum_db->fetch_assoc($result))	{		$load_ext_info = '$GLOBALS[\'ext_info_stack\'][] = array('."\n".			'\'id\'				=> \''.$cur_hook['extension_id'].'\','."\n".			'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_hook['extension_id'].'\','."\n".			'\'dependencies\'	=> array ('."\n";		$dependencies = explode('|', substr($cur_hook['dependencies'], 1, -1));		foreach ($dependencies as $cur_dependency)		{			// This happens if there are no dependencies because explode ends up returning an array with one empty element			if (empty($cur_dependency))				continue;			$load_ext_info .= '\''.$cur_dependency.'\'	=> array('."\n".				'\'id\'				=> \''.$cur_dependency.'\','."\n".				'\'path\'			=> FORUM_ROOT.\'extensions/'.$cur_dependency.'\','."\n".				'\'url\'			=> $GLOBALS[\'base_url\'].\'/extensions/'.$cur_dependency.'\'),'."\n";		}		$load_ext_info .= ')'."\n".');'."\n".'$ext_info = $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$unload_ext_info = 'array_pop($GLOBALS[\'ext_info_stack\']);'."\n".'$ext_info = empty($GLOBALS[\'ext_info_stack\']) ? array() : $GLOBALS[\'ext_info_stack\'][count($GLOBALS[\'ext_info_stack\']) - 1];';		$output[$cur_hook['id']][] = $load_ext_info."\n\n".$cur_hook['code']."\n\n".$unload_ext_info."\n";	}	// Output hooks as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_hooks.php', '<?php'."\n\n".'define(\'FORUM_HOOKS_LOADED\', 1);'."\n\n".'$forum_hooks = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write hooks cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}//// Generate the updates cache PHP script//function generate_updates_cache(){	global $forum_db, $forum_config;	$return = ($hook = get_hook('ch_fn_generate_updates_cache_start')) ? eval($hook) : null;	if ($return != null)		return;	// Get a list of installed hotfix extensions	$query = array(		'SELECT'	=> 'e.id',		'FROM'		=> 'extensions AS e',		'WHERE'		=> 'e.id LIKE \'hotfix_%\''	);	($hook = get_hook('ch_fn_generate_updates_cache_qr_get_hotfixes')) ? eval($hook) : null;	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);	$hotfixes = array();	while ($cur_ext_hotfix_id = $forum_db->fetch_row($result))	{		$hotfixes[] = urlencode($cur_ext_hotfix_id[0]);	}	// Contact the punbb.informer.com updates service	$result = get_remote_file('http://punbb.informer.com/update/?type=xml&version='.urlencode($forum_config['o_cur_version']).'&hotfixes='.implode(',', $hotfixes), 8);	// Make sure we got everything we need	if ($result != null && strpos($result['content'], '</updates>') !== false)	{		if (!defined('FORUM_XML_FUNCTIONS_LOADED'))			require FORUM_ROOT.'include/xml.php';		$output = xml_to_array(forum_trim($result['content']));		$output = current($output);		if (!empty($output['hotfix']) && is_array($output['hotfix']) && !is_array(current($output['hotfix'])))			$output['hotfix'] = array($output['hotfix']);		$output['cached'] = time();		$output['fail'] = false;	}	else	// If the update check failed, set the fail flag		$output = array('cached' => time(), 'fail' => true);	// This hook could potentially (and responsibly) be used by an extension to do its own little update check	($hook = get_hook('ch_fn_generate_updates_cache_write')) ? eval($hook) : null;	// Output update status as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_updates.php', '<?php'."\n\n".'if (!defined(\'FORUM_UPDATES_LOADED\')) define(\'FORUM_UPDATES_LOADED\', 1);'."\n\n".'$forum_updates = '.var_export($output, true).';'."\n\n".'?>'))	{		error('Unable to write updates cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}function generate_ext_versions_cache($inst_exts, $repository_urls, $repository_url_by_extension){	$forum_ext_last_versions = array();	$forum_ext_repos = array();	foreach (array_unique(array_merge($repository_urls, $repository_url_by_extension)) as $url)	{		//Get repository timestamp		$remote_file = get_remote_file( $url.'/timestamp', 2);		$repository_timestamp = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);		unset($remote_file);		if (!is_numeric($repository_timestamp))			continue;		if (!isset( $forum_ext_repos[ $url ][ 'timestamp' ] ))			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		if ($forum_ext_repos[ $url ][ 'timestamp' ] <= $repository_timestamp)		{			foreach ($inst_exts as $ext)			{				$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastversion', 2);				$version = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);				unset($remote_file);				if (empty($version) || !preg_match('~^[0-9a-zA-Z\. +-]+$~u', $version))					continue;				$forum_ext_repos[ $url ][ 'extension_versions' ][ $ext['id'] ] = $version;				//If key with current extension exist in array, compare it with version in rep-ry				if (!isset($forum_ext_last_versions[ $ext['id'] ]) || ( version_compare($forum_ext_last_versions[ $ext['id'] ][ 'version' ], $version, '<') ) )				{					$forum_ext_last_versions[ $ext['id'] ] = array('version' => $version, 'repo_url' => $url);					$remote_file = get_remote_file($url.'/'.$ext['id'].'/lastchanges', 2);					$last_changes = empty($remote_file['content']) ? '' : forum_trim($remote_file['content']);					unset($remote_file);					if ( !empty($last_changes) )						$forum_ext_last_versions[ $ext['id'] ][ 'changes' ] = $last_changes;				}			}			//Write timestamp to cache			$forum_ext_repos[ $url ][ 'timestamp' ] = $repository_timestamp;		}	}	if (array_keys($forum_ext_last_versions) != array_keys($inst_exts))		foreach ($inst_exts as $ext)			if ( !in_array($ext['id'], array_keys($forum_ext_last_versions)) )				$forum_ext_last_versions[$ext['id']] = array('version' => $ext['version'], 'repo_url' => '', 'changes' => '');	($hook = get_hook('ch_generate_ext_versions_cache_check_repository')) ? eval($hook) : null;	// Output config as PHP code	if (!write_cache_file(FORUM_CACHE_DIR.'cache_ext_version_notifications.php', '<?php'."\n\n".'if (!defined(\'FORUM_EXT_VERSIONS_LOADED\')) define(\'FORUM_EXT_VERSIONS_LOADED\', 1);'."\n\n".'$forum_ext_repos = '.var_export($forum_ext_repos, true).';'."\n\n".' $forum_ext_last_versions = '.var_export($forum_ext_last_versions, true).";\n\n".'$forum_ext_versions_update_cache = '.time().";\n\n".'?>'))	{		error('Unable to write configuration cache file to cache directory. Please make sure PHP has write access to the directory \'cache\'.', __FILE__, __LINE__);	}}define('FORUM_CACHE_FUNCTIONS_LOADED', 1);
<?php/** * A database layer class that relies on the MySQLi PHP extension. * * @copyright (C) 2008-2011 PunBB, partially based on code (C) 2008-2009 FluxBB.org * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher * @package PunBB */// Make sure we have built in support for MySQLif (!function_exists('mysqli_connect'))	exit('This PHP environment doesn\'t have Improved MySQL (mysqli) support built in. Improved MySQL support is required if you want to use a MySQL 4.1 (or later) database to run this forum. Consult the PHP documentation for further assistance.');class DBLayer{	var $prefix;	var $link_id;	var $query_result;	var $saved_queries = array();	var $num_queries = 0;	var $datatype_transformations = array(		'/^SERIAL$/'	=>	'INT(10) UNSIGNED AUTO_INCREMENT'	);	function DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, $foo)	{		$this->prefix = $db_prefix;		// Was a custom port supplied with $db_host?		if (strpos($db_host, ':') !== false)			list($db_host, $db_port) = explode(':', $db_host);		if (isset($db_port))			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name, $db_port);		else			$this->link_id = @mysqli_connect($db_host, $db_username, $db_password, $db_name);		if (!$this->link_id)			error('Unable to connect to MySQL and select database.<br/>MySQL reported: '.mysqli_connect_error(), __FILE__, __LINE__);		// Setup the client-server character set (UTF-8)		if (!defined('FORUM_NO_SET_NAMES'))			$this->set_names('utf8');		return $this->link_id;	}	function start_transaction()	{		return;	}	function end_transaction()	{		return;	}	function query($sql, $unbuffered = false)	{		if (strlen($sql) > 140000)			exit('Insane query. Aborting.');		if (defined('FORUM_SHOW_QUERIES'))			$q_start = forum_microtime();		$this->query_result = @mysqli_query($this->link_id, $sql);		if ($this->query_result)		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, sprintf('%.5f', forum_microtime() - $q_start));			++$this->num_queries;			return $this->query_result;		}		else		{			if (defined('FORUM_SHOW_QUERIES'))				$this->saved_queries[] = array($sql, 0);			return false;		}	}	function query_build($query, $return_query_string = false, $unbuffered = false)	{		$sql = '';		if (isset($query['SELECT']))		{			$sql = 'SELECT '.$query['SELECT'].' FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['FROM'];			if (isset($query['JOINS']))			{				foreach ($query['JOINS'] as $cur_join)					$sql .= ' '.key($cur_join).' '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).current($cur_join).' ON '.$cur_join['ON'];			}			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];			if (!empty($query['GROUP BY']))				$sql .= ' GROUP BY '.$query['GROUP BY'];			if (!empty($query['HAVING']))				$sql .= ' HAVING '.$query['HAVING'];			if (!empty($query['ORDER BY']))				$sql .= ' ORDER BY '.$query['ORDER BY'];			if (!empty($query['LIMIT']))				$sql .= ' LIMIT '.$query['LIMIT'];		}		else if (isset($query['INSERT']))		{			$sql = 'INSERT INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['INSERT']))				$sql .= ' ('.$query['INSERT'].')';			if (is_array($query['VALUES']))				$sql .= ' VALUES('.implode('),(', $query['VALUES']).')';			else				$sql .= ' VALUES('.$query['VALUES'].')';		}		else if (isset($query['UPDATE']))		{			$query['UPDATE'] = (isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['UPDATE'];			$sql = 'UPDATE '.$query['UPDATE'].' SET '.$query['SET'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['DELETE']))		{			$sql = 'DELETE FROM '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['DELETE'];			if (!empty($query['WHERE']))				$sql .= ' WHERE '.$query['WHERE'];		}		else if (isset($query['REPLACE']))		{			$sql = 'REPLACE INTO '.(isset($query['PARAMS']['NO_PREFIX']) ? '' : $this->prefix).$query['INTO'];			if (!empty($query['REPLACE']))				$sql .= ' ('.$query['REPLACE'].')';			$sql .= ' VALUES('.$query['VALUES'].')';		}		return ($return_query_string) ? $sql : $this->query($sql, $unbuffered);	}	function result($query_id = 0, $row = 0, $col = 0)	{		if ($query_id)		{			if ($row)				@mysqli_data_seek($query_id, $row);			$cur_row = @mysqli_fetch_row($query_id);			return $cur_row[$col];		}		else			return false;	}	function fetch_assoc($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_assoc($query_id) : false;	}	function fetch_row($query_id = 0)	{		return ($query_id) ? @mysqli_fetch_row($query_id) : false;	}	function num_rows($query_id = 0)	{		return ($query_id) ? @mysqli_num_rows($query_id) : false;	}	function affected_rows()	{		return ($this->link_id) ? @mysqli_affected_rows($this->link_id) : false;	}	function insert_id()	{		return ($this->link_id) ? @mysqli_insert_id($this->link_id) : false;	}	function get_num_queries()	{		return $this->num_queries;	}	function get_saved_queries()	{		return $this->saved_queries;	}	function free_result($query_id = false)	{		return ($query_id) ? @mysqli_free_result($query_id) : false;	}	function escape($str)	{		return is_array($str) ? '' : mysqli_real_escape_string($this->link_id, $str);	}	function error()	{		$result['error_sql'] = @current(@end($this->saved_queries));		$result['error_no'] = @mysqli_errno($this->link_id);		$result['error_msg'] = @mysqli_error($this->link_id);		return $result;	}	function close()	{		if ($this->link_id)		{			if ($this->query_result)				@mysqli_free_result($this->query_result);			return @mysqli_close($this->link_id);		}		else			return false;	}	function set_names($names)	{		return $this->query('SET NAMES \''.$this->escape($names).'\'');	}	function get_version()	{		$result = $this->query('SELECT VERSION()');		return array(			'name'		=> 'MySQL Improved',			'version'	=> preg_replace('/^([^-]+).*$/', '\\1', $this->result($result))		);	}	function table_exists($table_name, $no_prefix = false)	{		$result = $this->query('SHOW TABLES LIKE \''.($no_prefix ? '' : $this->prefix).$this->escape($table_name).'\'');		return $this->num_rows($result) > 0;	}	function field_exists($table_name, $field_name, $no_prefix = false)	{		$result = $this->query('SHOW COLUMNS FROM '.($no_prefix ? '' : $this->prefix).$table_name.' LIKE \''.$this->escape($field_name).'\'');		return $this->num_rows($result) > 0;	}	function index_exists($table_name, $index_name, $no_prefix = false)	{		$exists = false;		$result = $this->query('SHOW INDEX FROM '.($no_prefix ? '' : $this->prefix).$table_name);		while ($cur_index = $this->fetch_assoc($result))		{			if ($cur_index['Key_name'] == ($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name)			{				$exists = true;				break;			}		}		return $exists;	}	function create_table($table_name, $schema, $no_prefix = false)	{		if ($this->table_exists($table_name, $no_prefix))			return;		$query = 'CREATE TABLE '.($no_prefix ? '' : $this->prefix).$table_name." (\n";		// Go through every schema element and add it to the query		foreach ($schema['FIELDS'] as $field_name => $field_data)		{			$field_data['datatype'] = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_data['datatype']);			$query .= $field_name.' '.$field_data['datatype'];			if (isset($field_data['collation']))				$query .= 'CHARACTER SET utf8 COLLATE utf8_'.$field_data['collation'];			if (!$field_data['allow_null'])				$query .= ' NOT NULL';			if (isset($field_data['default']))				$query .= ' DEFAULT '.$field_data['default'];			$query .= ",\n";		}		// If we have a primary key, add it		if (isset($schema['PRIMARY KEY']))			$query .= 'PRIMARY KEY ('.implode(',', $schema['PRIMARY KEY']).'),'."\n";		// Add unique keys		if (isset($schema['UNIQUE KEYS']))		{			foreach ($schema['UNIQUE KEYS'] as $key_name => $key_fields)				$query .= 'UNIQUE KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$key_name.'('.implode(',', $key_fields).'),'."\n";		}		// Add indexes		if (isset($schema['INDEXES']))		{			foreach ($schema['INDEXES'] as $index_name => $index_fields)				$query .= 'KEY '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.'('.implode(',', $index_fields).'),'."\n";		}		// We remove the last two characters (a newline and a comma) and add on the ending		$query = substr($query, 0, strlen($query) - 2)."\n".') ENGINE = '.(isset($schema['ENGINE']) ? $schema['ENGINE'] : 'MyISAM').' CHARACTER SET utf8';		$this->query($query) or error(__FILE__, __LINE__);	}	function drop_table($table_name, $no_prefix = false)	{		if (!$this->table_exists($table_name, $no_prefix))			return;		$this->query('DROP TABLE '.($no_prefix ? '' : $this->prefix).$table_name) or error(__FILE__, __LINE__);	}	function add_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if ($this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function alter_field($table_name, $field_name, $field_type, $allow_null, $default_value = null, $after_field = null, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$field_type = preg_replace(array_keys($this->datatype_transformations), array_values($this->datatype_transformations), $field_type);		if ($default_value !== null && !is_int($default_value) && !is_float($default_value))			$default_value = '\''.$this->escape($default_value).'\'';		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' MODIFY '.$field_name.' '.$field_type.($allow_null ? ' ' : ' NOT NULL').($default_value !== null ? ' DEFAULT '.$default_value : ' ').($after_field != null ? ' AFTER '.$after_field : '')) or error(__FILE__, __LINE__);	}	function drop_field($table_name, $field_name, $no_prefix = false)	{		if (!$this->field_exists($table_name, $field_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP '.$field_name) or error(__FILE__, __LINE__);	}	function add_index($table_name, $index_name, $index_fields, $unique = false, $no_prefix = false)	{		if ($this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' ADD '.($unique ? 'UNIQUE ' : '').'INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name.' ('.implode(',', $index_fields).')') or error(__FILE__, __LINE__);	}	function drop_index($table_name, $index_name, $no_prefix = false)	{		if (!$this->index_exists($table_name, $index_name, $no_prefix))			return;		$this->query('ALTER TABLE '.($no_prefix ? '' : $this->prefix).$table_name.' DROP INDEX '.($no_prefix ? '' : $this->prefix).$table_name.'_'.$index_name) or error(__FILE__, __LINE__);	}}
