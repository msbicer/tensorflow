<?php/** * @package     Joomla.Administrator * @subpackage  com_banners * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;JHtml::addIncludePath(JPATH_COMPONENT . '/helpers/html');JHtml::_('behavior.tooltip');JHtml::_('behavior.multiselect');JHtml::_('behavior.modal', 'a.modal');JHtml::_('formbehavior.chosen', 'select');$user		= JFactory::getUser();$userId		= $user->get('id');$listOrder	= $this->escape($this->state->get('list.ordering'));$listDirn	= $this->escape($this->state->get('list.direction'));$sortFields = $this->getSortFields();?><script type="text/javascript">	Joomla.orderTable = function()	{		table = document.getElementById("sortTable");		direction = document.getElementById("directionTable");		order = table.options[table.selectedIndex].value;		if (order != '<?php echo $listOrder; ?>')		{			dirn = 'asc';		}		else		{			dirn = direction.options[direction.selectedIndex].value;		}		Joomla.tableOrdering(order, dirn, '');	}</script><form action="<?php echo JRoute::_('index.php?option=com_banners&view=tracks'); ?>" method="post" name="adminForm" id="adminForm"><?php if (!empty( $this->sidebar)) : ?>    <div id="j-sidebar-container" class="span2">      <?php echo $this->sidebar; ?>    </div>      <div id="j-main-container" class="span10">  <?php else : ?>    <div id="j-main-container">  <?php endif;?>  	<div id="filter-bar" class="btn-toolbar">  		<div class="filter-search btn-group pull-left">  			<label class="filter-hide-lbl" for="filter_begin"><?php echo JText::_('COM_BANNERS_BEGIN_LABEL'); ?></label>  			<?php echo JHtml::_('calendar', $this->state->get('filter.begin'), 'filter_begin', 'filter_begin', '%Y-%m-%d', array('size' => 10, 'onchange' => "this.form.fireEvent('submit');this.form.submit()"));?>  		</div>  		<div class="filter-search btn-group pull-left">  			<label class="filter-hide-lbl" for="filter_end"><?php echo JText::_('COM_BANNERS_END_LABEL'); ?></label>  			<?php echo JHtml::_('calendar', $this->state->get('filter.end'), 'filter_end', 'filter_end', '%Y-%m-%d', array('size' => 10, 'onchange' => "this.form.fireEvent('submit');this.form.submit()"));?>  		</div>  		<div class="btn-group pull-right hidden-phone">  			<label for="limit" class="element-invisible"><?php echo JText::_('JFIELD_PLG_SEARCH_SEARCHLIMIT_DESC');?></label>  			<?php echo $this->pagination->getLimitBox(); ?>  		</div>  		<div class="btn-group pull-right hidden-phone">  			<label for="directionTable" class="element-invisible"><?php echo JText::_('JFIELD_ORDERING_DESC');?></label>  			<select name="directionTable" id="directionTable" class="input-medium" onchange="Joomla.orderTable()">  				<option value=""><?php echo JText::_('JFIELD_ORDERING_DESC');?></option>  				<option value="asc" <?php if ($listDirn == 'asc') echo 'selected="selected"'; ?>><?php echo JText::_('JGLOBAL_ORDER_ASCENDING');?></option>  				<option value="desc" <?php if ($listDirn == 'desc') echo 'selected="selected"'; ?>><?php echo JText::_('JGLOBAL_ORDER_DESCENDING');?></option>  			</select>  		</div>  		<div class="btn-group pull-right">  			<label for="sortTable" class="element-invisible"><?php echo JText::_('JGLOBAL_SORT_BY');?></label>  			<select name="sortTable" id="sortTable" class="input-medium" onchange="Joomla.orderTable()">  				<option value=""><?php echo JText::_('JGLOBAL_SORT_BY');?></option>  				<?php echo JHtml::_('select.options', $sortFields, 'value', 'text', $listOrder);?>  			</select>  		</div>  	</div>  	<div class="clearfix"> </div>  	<table class="table table-striped">  		<thead>  			<tr>  				<th class="title">  					<?php echo JText::_('COM_BANNERS_HEADING_NAME');?>  				</th>  				<th width="20%" class="nowrap">  					<?php echo JText::_('COM_BANNERS_HEADING_CLIENT');?>  				</th>  				<th width="10%" class="nowrap hidden-phone">  					<?php echo JText::_('COM_BANNERS_HEADING_TYPE');?>  				</th>  				<th width="10%" class="nowrap hidden-phone">  					<?php echo JText::_('COM_BANNERS_HEADING_COUNT');?>  				</th>  				<th width="10%" class="nowrap hidden-phone">  					<?php echo JText::_('JDATE');?>  				</th>  			</tr>  		</thead>  		<tfoot>  			<tr>  				<td colspan="6">  					<?php echo $this->pagination->getListFooter(); ?>  				</td>  			</tr>  		</tfoot>  		<tbody>  		<?php foreach ($this->items as $i => $item) :?>  			<tr class="row<?php echo $i % 2; ?>">  				<td>  					<?php echo $item->name;?>  					<div class="small">  						<?php echo $item->category_title;?>  					</div>  				</td>  				<td>  					<?php echo $item->client_name;?>  				</td>  				<td class="small hidden-phone">  					<?php echo $item->track_type == 1 ? JText::_('COM_BANNERS_IMPRESSION') : JText::_('COM_BANNERS_CLICK');?>  				</td>  				<td class="hidden-phone">  					<?php echo $item->count;?>  				</td>  				<td class="hidden-phone">  					<?php echo JHtml::_('date', $item->track_date, JText::_('DATE_FORMAT_LC4').' H:i');?>  				</td>  			</tr>  		<?php endforeach; ?>  		</tbody>  	</table>    	<input type="hidden" name="task" value="" />  	<input type="hidden" name="boxchecked" value="0" />  	<input type="hidden" name="filter_order" value="<?php echo $listOrder; ?>" />  	<input type="hidden" name="filter_order_Dir" value="<?php echo $listDirn; ?>" />  	<?php echo JHtml::_('form.token'); ?>	</div></form>
<?php/** * @package     Joomla.Administrator * @subpackage  com_installer * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;if (!JFactory::getUser()->authorise('core.manage', 'com_installer')){	return JError::raiseWarning(404, JText::_('JERROR_ALERTNOAUTHOR'));}$controller	= JControllerLegacy::getInstance('Installer');$controller->execute(JFactory::getApplication()->input->get('task'));$controller->redirect();
<?php/** * @package     Joomla.Administrator * @subpackage  com_admin * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;/** * Script file of Joomla CMS * * @package     Joomla.Administrator * @subpackage  com_admin * @since       1.6.4 */class JoomlaInstallerScript{	/**	 * Method to update Joomla!	 *	 * @param   JInstallerFile    $installer    The class calling this method	 *	 * @return void	 */	public function update($installer)	{		$this->deleteUnexistingFiles();		$this->updateManifestCaches();		$this->updateDatabase();	}	protected function updateDatabase()	{		$db = JFactory::getDbo();		if (substr($db->name, 0, 5) == 'mysql')		{			$query = 'SHOW ENGINES';			$db->setQuery($query);			$results = $db->loadObjectList();			if ($db->getErrorNum())			{				echo JText::sprintf('JLIB_DATABASE_ERROR_FUNCTION_FAILED', $db->getErrorNum(), $db->getErrorMsg()) . '<br />';				return;			}			foreach ($results as $result)			{				if ($result->Support == 'DEFAULT')				{					$query = 'ALTER TABLE #__update_sites_extensions ENGINE = ' . $result->Engine;					$db->setQuery($query);					$db->execute();					if ($db->getErrorNum())					{						echo JText::sprintf('JLIB_DATABASE_ERROR_FUNCTION_FAILED', $db->getErrorNum(), $db->getErrorMsg()) . '<br />';						return;					}					break;				}			}		}	}	protected function updateManifestCaches()	{		$extensions = array();		// Components		//`type`, `element`, `folder`, `client_id`		$extensions[] = array('component', 'com_mailto', '', 0);		$extensions[] = array('component', 'com_wrapper', '', 0);		$extensions[] = array('component', 'com_admin', '', 1);		$extensions[] = array('component', 'com_banners', '', 1);		$extensions[] = array('component', 'com_cache', '', 1);		$extensions[] = array('component', 'com_categories', '', 1);		$extensions[] = array('component', 'com_checkin', '', 1);		$extensions[] = array('component', 'com_contact', '', 1);		$extensions[] = array('component', 'com_cpanel', '', 1);		$extensions[] = array('component', 'com_installer', '', 1);		$extensions[] = array('component', 'com_languages', '', 1);		$extensions[] = array('component', 'com_login', '', 1);		$extensions[] = array('component', 'com_media', '', 1);		$extensions[] = array('component', 'com_menus', '', 1);		$extensions[] = array('component', 'com_messages', '', 1);		$extensions[] = array('component', 'com_modules', '', 1);		$extensions[] = array('component', 'com_newsfeeds', '', 1);		$extensions[] = array('component', 'com_plugins', '', 1);		$extensions[] = array('component', 'com_search', '', 1);		$extensions[] = array('component', 'com_templates', '', 1);		$extensions[] = array('component', 'com_weblinks', '', 1);		$extensions[] = array('component', 'com_content', '', 1);		$extensions[] = array('component', 'com_config', '', 1);		$extensions[] = array('component', 'com_redirect', '', 1);		$extensions[] = array('component', 'com_users', '', 1);		$extensions[] = array('component', 'com_tags', '', 1);		// Libraries		$extensions[] = array('library', 'phpmailer', '', 0);		$extensions[] = array('library', 'simplepie', '', 0);		$extensions[] = array('library', 'phputf8', '', 0);		$extensions[] = array('library', 'joomla', '', 0);		// Modules site		// Site		$extensions[] = array('module', 'mod_articles_archive', '', 0);		$extensions[] = array('module', 'mod_articles_latest', '', 0);		$extensions[] = array('module', 'mod_articles_popular', '', 0);		$extensions[] = array('module', 'mod_banners', '', 0);		$extensions[] = array('module', 'mod_breadcrumbs', '', 0);		$extensions[] = array('module', 'mod_custom', '', 0);		$extensions[] = array('module', 'mod_feed', '', 0);		$extensions[] = array('module', 'mod_footer', '', 0);		$extensions[] = array('module', 'mod_login', '', 0);		$extensions[] = array('module', 'mod_menu', '', 0);		$extensions[] = array('module', 'mod_articles_news', '', 0);		$extensions[] = array('module', 'mod_random_image', '', 0);		$extensions[] = array('module', 'mod_related_items', '', 0);		$extensions[] = array('module', 'mod_search', '', 0);		$extensions[] = array('module', 'mod_stats', '', 0);		$extensions[] = array('module', 'mod_syndicate', '', 0);		$extensions[] = array('module', 'mod_users_latest', '', 0);		$extensions[] = array('module', 'mod_weblinks', '', 0);		$extensions[] = array('module', 'mod_whosonline', '', 0);		$extensions[] = array('module', 'mod_wrapper', '', 0);		$extensions[] = array('module', 'mod_articles_category', '', 0);		$extensions[] = array('module', 'mod_articles_categories', '', 0);		$extensions[] = array('module', 'mod_languages', '', 0);		$extensions[] = array('module', 'mod_tags_popular', '', 0);		$extensions[] = array('module', 'mod_tags_similar', '', 0);		// Administrator		$extensions[] = array('module', 'mod_custom', '', 1);		$extensions[] = array('module', 'mod_feed', '', 1);		$extensions[] = array('module', 'mod_latest', '', 1);		$extensions[] = array('module', 'mod_logged', '', 1);		$extensions[] = array('module', 'mod_login', '', 1);		$extensions[] = array('module', 'mod_menu', '', 1);		$extensions[] = array('module', 'mod_popular', '', 1);		$extensions[] = array('module', 'mod_quickicon', '', 1);		$extensions[] = array('module', 'mod_stats_admin', '', 1);		$extensions[] = array('module', 'mod_status', '', 1);		$extensions[] = array('module', 'mod_submenu', '', 1);		$extensions[] = array('module', 'mod_title', '', 1);		$extensions[] = array('module', 'mod_toolbar', '', 1);		$extensions[] = array('module', 'mod_multilangstatus', '', 1);		// Plug-ins		$extensions[] = array('plugin', 'gmail', 'authentication', 0);		$extensions[] = array('plugin', 'joomla', 'authentication', 0);		$extensions[] = array('plugin', 'ldap', 'authentication', 0);		$extensions[] = array('plugin', 'emailcloak', 'content', 0);		$extensions[] = array('plugin', 'loadmodule', 'content', 0);		$extensions[] = array('plugin', 'pagebreak', 'content', 0);		$extensions[] = array('plugin', 'pagenavigation', 'content', 0);		$extensions[] = array('plugin', 'vote', 'content', 0);		$extensions[] = array('plugin', 'codemirror', 'editors', 0);		$extensions[] = array('plugin', 'none', 'editors', 0);		$extensions[] = array('plugin', 'tinymce', 'editors', 0);		$extensions[] = array('plugin', 'article', 'editors-xtd', 0);		$extensions[] = array('plugin', 'image', 'editors-xtd', 0);		$extensions[] = array('plugin', 'pagebreak', 'editors-xtd', 0);		$extensions[] = array('plugin', 'readmore', 'editors-xtd', 0);		$extensions[] = array('plugin', 'categories', 'search', 0);		$extensions[] = array('plugin', 'contacts', 'search', 0);		$extensions[] = array('plugin', 'content', 'search', 0);		$extensions[] = array('plugin', 'newsfeeds', 'search', 0);		$extensions[] = array('plugin', 'weblinks', 'search', 0);		$extensions[] = array('plugin', 'languagefilter', 'system', 0);		$extensions[] = array('plugin', 'p3p', 'system', 0);		$extensions[] = array('plugin', 'cache', 'system', 0);		$extensions[] = array('plugin', 'debug', 'system', 0);		$extensions[] = array('plugin', 'log', 'system', 0);		$extensions[] = array('plugin', 'redirect', 'system', 0);		$extensions[] = array('plugin', 'remember', 'system', 0);		$extensions[] = array('plugin', 'sef', 'system', 0);		$extensions[] = array('plugin', 'logout', 'system', 0);		$extensions[] = array('plugin', 'contactcreator', 'user', 0);		$extensions[] = array('plugin', 'joomla', 'user', 0);		$extensions[] = array('plugin', 'profile', 'user', 0);		$extensions[] = array('plugin', 'joomla', 'extension', 0);		$extensions[] = array('plugin', 'joomla', 'content', 0);		$extensions[] = array('plugin', 'languagecode', 'system', 0);		$extensions[] = array('plugin', 'joomlaupdate', 'quickicon', 0);		$extensions[] = array('plugin', 'extensionupdate', 'quickicon', 0);		$extensions[] = array('plugin', 'recaptcha', 'captcha', 0);		$extensions[] = array('plugin', 'categories', 'finder', 0);		$extensions[] = array('plugin', 'contacts', 'finder', 0);		$extensions[] = array('plugin', 'content', 'finder', 0);		$extensions[] = array('plugin', 'newsfeeds', 'finder', 0);		$extensions[] = array('plugin', 'weblinks', 'finder', 0);		$extensions[] = array('plugin', 'tags', 'finder', 0);		// Templates		$extensions[] = array('template', 'beez3', '', 0);		$extensions[] = array('template', 'hathor', '', 1);		$extensions[] = array('template', 'protostar', '', 0);		$extensions[] = array('template', 'isis', '', 1);		// Languages		$extensions[] = array('language', 'en-GB', '', 0);		$extensions[] = array('language', 'en-GB', '', 1);		// Files		$extensions[] = array('file', 'joomla', '', 0);		// Packages		// None in core at this time		// Attempt to refresh manifest caches		$db = JFactory::getDbo();		$query = $db->getQuery(true)			->select('*')			->from('#__extensions');		foreach ($extensions as $extension)		{			$query->where('type=' . $db->quote($extension[0]) . ' AND element=' . $db->quote($extension[1]) . ' AND folder=' . $db->quote($extension[2]) . ' AND client_id=' . $extension[3], 'OR');		}		$db->setQuery($query);		$extensions = $db->loadObjectList();		$installer = new JInstaller;		// Check for a database error.		if ($db->getErrorNum())		{			echo JText::sprintf('JLIB_DATABASE_ERROR_FUNCTION_FAILED', $db->getErrorNum(), $db->getErrorMsg()) . '<br />';			return;		}		foreach ($extensions as $extension)		{			if (!$installer->refreshManifestCache($extension->extension_id))			{				echo JText::sprintf('FILES_JOOMLA_ERROR_MANIFEST', $extension->type, $extension->element, $extension->name, $extension->client_id) . '<br />';			}		}	}	public function deleteUnexistingFiles()	{		$files = array(			'/libraries/cms/cmsloader.php',			'/libraries/joomla/form/fields/templatestyle.php',			'/libraries/joomla/form/fields/user.php',			'/libraries/joomla/form/fields/menu.php',			'/libraries/joomla/form/fields/helpsite.php',			'/administrator/components/com_admin/sql/updates/mysql/1.7.0.sql',			'/administrator/components/com_admin/sql/updates/sqlsrv/2.5.2-2012-03-05.sql',			'/administrator/components/com_admin/sql/updates/sqlsrv/2.5.3-2012-03-13.sql',			'/administrator/components/com_admin/sql/updates/sqlsrv/index.html',			'/administrator/components/com_users/controllers/config.php',			'/administrator/language/en-GB/en-GB.plg_system_finder.ini',			'/administrator/language/en-GB/en-GB.plg_system_finder.sys.ini',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/advhr/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/advimage/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/advlink/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/advlist/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/autolink/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/autoresize/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/autosave/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/bbcode/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/contextmenu/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/directionality/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/emotions/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/fullpage/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/fullscreen/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/iespell/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/inlinepopups/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/insertdatetime/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/layer/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/lists/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/media/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/nonbreaking/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/noneditable/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/pagebreak/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/paste/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/preview/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/print/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/save/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/searchreplace/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/spellchecker/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/style/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/tabfocus/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/table/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/template/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/visualchars/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/wordcount/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/plugins/xhtmlxtras/editor_plugin_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/themes/advanced/editor_template_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/themes/simple/editor_template_src.js',			'/media/editors/tinymce/jscripts/tiny_mce/tiny_mce_src.js',			'/media/com_finder/images/calendar.png',			'/media/com_finder/images/mime/index.html',			'/media/com_finder/images/mime/pdf.png',			'/components/com_media/controller.php',			'/components/com_media/helpers/index.html',			'/components/com_media/helpers/media.php',			// Joomla 3.0			'/administrator/components/com_admin/sql/updates/mysql/1.7.0-2011-06-06-2.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.0-2011-06-06.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.0.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-15-2.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-15-3.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-15-4.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-15.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-17.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.1-2011-09-20.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.3-2011-10-15.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.3-2011-10-19.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.3-2011-11-10.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.4-2011-11-19.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.4-2011-11-23.sql',			'/administrator/components/com_admin/sql/updates/mysql/1.7.4-2011-12-12.sql',			'/administrator/components/com_admin/views/sysinfo/tmpl/default_navigation.php',			'/administrator/components/com_categories/config.xml',			'/administrator/components/com_categories/helpers/categoriesadministrator.php',			'/administrator/components/com_contact/elements/contact.php',			'/administrator/components/com_contact/elements/index.html',			'/administrator/components/com_content/elements/article.php',			'/administrator/components/com_content/elements/author.php',			'/administrator/components/com_content/elements/index.html',			'/administrator/components/com_installer/models/fields/client.php',			'/administrator/components/com_installer/models/fields/group.php',			'/administrator/components/com_installer/models/fields/index.html',			'/administrator/components/com_installer/models/fields/search.php',			'/administrator/components/com_installer/models/fields/type.php',			'/administrator/components/com_installer/models/forms/index.html',			'/administrator/components/com_installer/models/forms/manage.xml',			'/administrator/components/com_installer/views/install/tmpl/default_form.php',			'/administrator/components/com_installer/views/manage/tmpl/default_filter.php',			'/administrator/components/com_languages/views/installed/tmpl/default_ftp.php',			'/administrator/components/com_languages/views/installed/tmpl/default_navigation.php',			'/administrator/components/com_modules/models/fields/index.html',			'/administrator/components/com_modules/models/fields/moduleorder.php',			'/administrator/components/com_modules/models/fields/moduleposition.php',			'/administrator/components/com_newsfeeds/elements/index.html',			'/administrator/components/com_newsfeeds/elements/newsfeed.php',			'/administrator/components/com_templates/views/prevuuw/index.html',			'/administrator/components/com_templates/views/prevuuw/tmpl/default.php',			'/administrator/components/com_templates/views/prevuuw/tmpl/index.html',			'/administrator/components/com_templates/views/prevuuw/view.html.php',			'/administrator/includes/menu.php',			'/administrator/includes/router.php',			'/administrator/manifests/packages/pkg_joomla.xml',			'/administrator/modules/mod_submenu/helper.php',			'/administrator/templates/hathor/css/ie6.css',			'/administrator/templates/hathor/html/mod_submenu/index.html',			'/administrator/templates/hathor/html/mod_submenu/default.php',			'/components/com_media/controller.php',			'/components/com_media/helpers/index.html',			'/components/com_media/helpers/media.php',			'/includes/menu.php',			'/includes/pathway.php',			'/includes/router.php',			'/language/en-GB/en-GB.pkg_joomla.sys.ini',			'/libraries/cms/controller/index.html',			'/libraries/cms/controller/legacy.php',			'/libraries/cms/model/index.html',			'/libraries/cms/model/legacy.php',			'/libraries/cms/schema/changeitemmysql.php',			'/libraries/cms/schema/changeitemsqlazure.php',			'/libraries/cms/schema/changeitemsqlsrv.php',			'/libraries/cms/view/index.html',			'/libraries/cms/view/legacy.php',			'/libraries/joomla/application/application.php',			'/libraries/joomla/application/categories.php',			'/libraries/joomla/application/cli/daemon.php',			'/libraries/joomla/application/cli/index.html',			'/libraries/joomla/application/component/controller.php',			'/libraries/joomla/application/component/controlleradmin.php',			'/libraries/joomla/application/component/controllerform.php',			'/libraries/joomla/application/component/helper.php',			'/libraries/joomla/application/component/index.html',			'/libraries/joomla/application/component/model.php',			'/libraries/joomla/application/component/modeladmin.php',			'/libraries/joomla/application/component/modelform.php',			'/libraries/joomla/application/component/modelitem.php',			'/libraries/joomla/application/component/modellist.php',			'/libraries/joomla/application/component/view.php',			'/libraries/joomla/application/helper.php',			'/libraries/joomla/application/input.php',			'/libraries/joomla/application/input/cli.php',			'/libraries/joomla/application/input/cookie.php',			'/libraries/joomla/application/input/files.php',			'/libraries/joomla/application/input/index.html',			'/libraries/joomla/application/menu.php',			'/libraries/joomla/application/module/helper.php',			'/libraries/joomla/application/module/index.html',			'/libraries/joomla/application/pathway.php',			'/libraries/joomla/application/web/webclient.php',			'/libraries/joomla/base/node.php',			'/libraries/joomla/base/object.php',			'/libraries/joomla/base/observable.php',			'/libraries/joomla/base/observer.php',			'/libraries/joomla/base/tree.php',			'/libraries/joomla/cache/storage/eaccelerator.php',			'/libraries/joomla/cache/storage/helpers/helper.php',			'/libraries/joomla/cache/storage/helpers/index.html',			'/libraries/joomla/database/database/index.html',			'/libraries/joomla/database/database/mysql.php',			'/libraries/joomla/database/database/mysqlexporter.php',			'/libraries/joomla/database/database/mysqli.php',			'/libraries/joomla/database/database/mysqliexporter.php',			'/libraries/joomla/database/database/mysqliimporter.php',			'/libraries/joomla/database/database/mysqlimporter.php',			'/libraries/joomla/database/database/mysqliquery.php',			'/libraries/joomla/database/database/mysqlquery.php',			'/libraries/joomla/database/database/sqlazure.php',			'/libraries/joomla/database/database/sqlazurequery.php',			'/libraries/joomla/database/database/sqlsrv.php',			'/libraries/joomla/database/database/sqlsrvquery.php',			'/libraries/joomla/database/exception.php',			'/libraries/joomla/database/table.php',			'/libraries/joomla/database/table/asset.php',			'/libraries/joomla/database/table/category.php',			'/libraries/joomla/database/table/content.php',			'/libraries/joomla/database/table/extension.php',			'/libraries/joomla/database/table/index.html',			'/libraries/joomla/database/table/language.php',			'/libraries/joomla/database/table/menu.php',			'/libraries/joomla/database/table/menutype.php',			'/libraries/joomla/database/table/module.php',			'/libraries/joomla/database/table/session.php',			'/libraries/joomla/database/table/update.php',			'/libraries/joomla/database/table/user.php',			'/libraries/joomla/database/table/usergroup.php',			'/libraries/joomla/database/table/viewlevel.php',			'/libraries/joomla/database/tablenested.php',			'/libraries/joomla/environment/request.php',			'/libraries/joomla/environment/uri.php',			'/libraries/joomla/error/error.php',			'/libraries/joomla/error/exception.php',			'/libraries/joomla/error/index.html',			'/libraries/joomla/error/log.php',			'/libraries/joomla/error/profiler.php',			'/libraries/joomla/filesystem/archive.php',			'/libraries/joomla/filesystem/archive/bzip2.php',			'/libraries/joomla/filesystem/archive/gzip.php',			'/libraries/joomla/filesystem/archive/index.html',			'/libraries/joomla/filesystem/archive/tar.php',			'/libraries/joomla/filesystem/archive/zip.php',			'/libraries/joomla/form/fields/category.php',			'/libraries/joomla/form/fields/componentlayout.php',			'/libraries/joomla/form/fields/contentlanguage.php',			'/libraries/joomla/form/fields/editor.php',			'/libraries/joomla/form/fields/editors.php',			'/libraries/joomla/form/fields/media.php',			'/libraries/joomla/form/fields/menuitem.php',			'/libraries/joomla/form/fields/modulelayout.php',			'/libraries/joomla/html/editor.php',			'/libraries/joomla/html/html/access.php',			'/libraries/joomla/html/html/batch.php',			'/libraries/joomla/html/html/behavior.php',			'/libraries/joomla/html/html/category.php',			'/libraries/joomla/html/html/content.php',			'/libraries/joomla/html/html/contentlanguage.php',			'/libraries/joomla/html/html/date.php',			'/libraries/joomla/html/html/email.php',			'/libraries/joomla/html/html/form.php',			'/libraries/joomla/html/html/grid.php',			'/libraries/joomla/html/html/image.php',			'/libraries/joomla/html/html/index.html',			'/libraries/joomla/html/html/jgrid.php',			'/libraries/joomla/html/html/list.php',			'/libraries/joomla/html/html/menu.php',			'/libraries/joomla/html/html/number.php',			'/libraries/joomla/html/html/rules.php',			'/libraries/joomla/html/html/select.php',			'/libraries/joomla/html/html/sliders.php',			'/libraries/joomla/html/html/string.php',			'/libraries/joomla/html/html/tabs.php',			'/libraries/joomla/html/html/tel.php',			'/libraries/joomla/html/html/user.php',			'/libraries/joomla/html/pagination.php',			'/libraries/joomla/html/pane.php',			'/libraries/joomla/html/parameter.php',			'/libraries/joomla/html/parameter/element.php',			'/libraries/joomla/html/parameter/element/calendar.php',			'/libraries/joomla/html/parameter/element/category.php',			'/libraries/joomla/html/parameter/element/componentlayouts.php',			'/libraries/joomla/html/parameter/element/contentlanguages.php',			'/libraries/joomla/html/parameter/element/editors.php',			'/libraries/joomla/html/parameter/element/filelist.php',			'/libraries/joomla/html/parameter/element/folderlist.php',			'/libraries/joomla/html/parameter/element/helpsites.php',			'/libraries/joomla/html/parameter/element/hidden.php',			'/libraries/joomla/html/parameter/element/imagelist.php',			'/libraries/joomla/html/parameter/element/index.html',			'/libraries/joomla/html/parameter/element/languages.php',			'/libraries/joomla/html/parameter/element/list.php',			'/libraries/joomla/html/parameter/element/menu.php',			'/libraries/joomla/html/parameter/element/menuitem.php',			'/libraries/joomla/html/parameter/element/modulelayouts.php',			'/libraries/joomla/html/parameter/element/password.php',			'/libraries/joomla/html/parameter/element/radio.php',			'/libraries/joomla/html/parameter/element/spacer.php',			'/libraries/joomla/html/parameter/element/sql.php',			'/libraries/joomla/html/parameter/element/templatestyle.php',			'/libraries/joomla/html/parameter/element/text.php',			'/libraries/joomla/html/parameter/element/textarea.php',			'/libraries/joomla/html/parameter/element/timezones.php',			'/libraries/joomla/html/parameter/element/usergroup.php',			'/libraries/joomla/html/parameter/index.html',			'/libraries/joomla/html/toolbar.php',			'/libraries/joomla/html/toolbar/button.php',			'/libraries/joomla/html/toolbar/button/confirm.php',			'/libraries/joomla/html/toolbar/button/custom.php',			'/libraries/joomla/html/toolbar/button/help.php',			'/libraries/joomla/html/toolbar/button/index.html',			'/libraries/joomla/html/toolbar/button/link.php',			'/libraries/joomla/html/toolbar/button/popup.php',			'/libraries/joomla/html/toolbar/button/separator.php',			'/libraries/joomla/html/toolbar/button/standard.php',			'/libraries/joomla/html/toolbar/index.html',			'/libraries/joomla/image/filters/brightness.php',			'/libraries/joomla/image/filters/contrast.php',			'/libraries/joomla/image/filters/edgedetect.php',			'/libraries/joomla/image/filters/emboss.php',			'/libraries/joomla/image/filters/grayscale.php',			'/libraries/joomla/image/filters/index.html',			'/libraries/joomla/image/filters/negate.php',			'/libraries/joomla/image/filters/sketchy.php',			'/libraries/joomla/image/filters/smooth.php',			'/libraries/joomla/language/help.php',			'/libraries/joomla/language/latin_transliterate.php',			'/libraries/joomla/log/logexception.php',			'/libraries/joomla/log/loggers/database.php',			'/libraries/joomla/log/loggers/echo.php',			'/libraries/joomla/log/loggers/formattedtext.php',			'/libraries/joomla/log/loggers/index.html',			'/libraries/joomla/log/loggers/messagequeue.php',			'/libraries/joomla/log/loggers/syslog.php',			'/libraries/joomla/log/loggers/w3c.php',			'/libraries/joomla/methods.php',			'/libraries/joomla/session/storage/eaccelerator.php',			'/libraries/joomla/string/stringnormalize.php',			'/libraries/joomla/utilities/date.php',			'/libraries/joomla/utilities/simplecrypt.php',			'/libraries/joomla/utilities/simplexml.php',			'/libraries/joomla/utilities/string.php',			'/libraries/joomla/utilities/xmlelement.php',			'/media/plg_quickicon_extensionupdate/extensionupdatecheck.js',			'/media/plg_quickicon_joomlaupdate/jupdatecheck.js',			// Joomla! 3.1			'/libraries/joomla/form/rules/boolean.php',			'/libraries/joomla/form/rules/color.php',			'/libraries/joomla/form/rules/email.php',			'/libraries/joomla/form/rules/equals.php',			'/libraries/joomla/form/rules/index.html',			'/libraries/joomla/form/rules/options.php',			'/libraries/joomla/form/rules/rules.php',			'/libraries/joomla/form/rules/tel.php',			'/libraries/joomla/form/rules/url.php',			'/libraries/joomla/form/rules/username.php',			'/libraries/joomla/installer/adapters/component.php',			'/libraries/joomla/installer/adapters/file.php',			'/libraries/joomla/installer/adapters/index.html',			'/libraries/joomla/installer/adapters/language.php',			'/libraries/joomla/installer/adapters/library.php',			'/libraries/joomla/installer/adapters/module.php',			'/libraries/joomla/installer/adapters/package.php',			'/libraries/joomla/installer/adapters/plugin.php',			'/libraries/joomla/installer/adapters/template.php',			'/libraries/joomla/installer/extension.php',			'/libraries/joomla/installer/helper.php',			'/libraries/joomla/installer/index.html',			'/libraries/joomla/installer/librarymanifest.php',			'/libraries/joomla/installer/packagemanifest.php',			'/media/system/css/mooRainbow.css',			'/media/system/js/mooRainbow-uncompressed.js',			'/media/system/js/mooRainbow.js',			'/media/system/js/swf-uncompressed.js',			'/media/system/js/swf.js',			'/media/system/js/uploader-uncompressed.js',			'/media/system/js/uploader.js',			'/media/system/swf/index.html',			'/media/system/swf/uploader.swf',		);		// TODO There is an issue while deleting folders using the ftp mode		$folders = array(			'/administrator/components/com_admin/sql/updates/sqlsrv',			'/media/com_finder/images/mime',			'/media/com_finder/images',			'/components/com_media/helpers',			// Joomla 3.0			'/administrator/components/com_contact/elements',			'/administrator/components/com_content/elements',			'/administrator/components/com_installer/models/fields',			'/administrator/components/com_installer/models/forms',			'/administrator/components/com_modules/models/fields',			'/administrator/components/com_newsfeeds/elements',			'/administrator/components/com_templates/views/prevuuw/tmpl',			'/administrator/components/com_templates/views/prevuuw',			'/libraries/cms/controller',			'/libraries/cms/model',			'/libraries/cms/view',			'/libraries/joomla/application/cli',			'/libraries/joomla/application/component',			'/libraries/joomla/application/input',			'/libraries/joomla/application/module',			'/libraries/joomla/cache/storage/helpers',			'/libraries/joomla/database/table',			'/libraries/joomla/database/database',			'/libraries/joomla/error',			'/libraries/joomla/filesystem/archive',			'/libraries/joomla/html/html',			'/libraries/joomla/html/toolbar',			'/libraries/joomla/html/toolbar/button',			'/libraries/joomla/html/parameter',			'/libraries/joomla/html/parameter/element',			'/libraries/joomla/image/filters',			'/libraries/joomla/log/loggers',			// Joomla! 3.1			'/libraries/joomla/form/rules',			'/libraries/joomla/installer/adapters',			'/libraries/joomla/installer',			'/media/system/swf/',		);		jimport('joomla.filesystem.file');		foreach ($files as $file)		{			if (JFile::exists(JPATH_ROOT . $file) && !JFile::delete(JPATH_ROOT . $file))			{				echo JText::sprintf('FILES_JOOMLA_ERROR_FILE_FOLDER', $file) . '<br />';			}		}		jimport('joomla.filesystem.folder');		foreach ($folders as $folder)		{			if (JFolder::exists(JPATH_ROOT . $folder) && !JFolder::delete(JPATH_ROOT . $folder))			{				echo JText::sprintf('FILES_JOOMLA_ERROR_FILE_FOLDER', $folder) . '<br />';			}		}	}}
<?php/** * @package     Joomla.Administrator * @subpackage  com_banners * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('JPATH_BASE') or die;JFormHelper::loadFieldClass('list');require_once __DIR__ . '/../../helpers/banners.php';/** * Bannerclient Field class for the Joomla Framework. * * @package     Joomla.Administrator * @subpackage  com_banners * @since       1.6 */class JFormFieldBannerClient extends JFormFieldList{	/**	 * The form field type.	 *	 * @var		string	 * @since   1.6	 */	protected $type = 'BannerClient';	/**	 * Method to get the field options.	 *	 * @return  array  The field option objects.	 * @since   1.6	 */	public function getOptions()	{		return BannersHelper::getClientOptions();	}}
<?php/** * @package     Joomla.Libraries * @subpackage  HTML * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE */defined('JPATH_BASE') or die;/** * Utility class for categories * * @package     Joomla.Libraries * @subpackage  HTML * @since       1.5 */abstract class JHtmlCategory{	/**	 * Cached array of the category items.	 *	 * @var    array	 * @since  1.5	 */	protected static $items = array();	/**	 * Returns an array of categories for the given extension.	 *	 * @param   string  $extension  The extension option e.g. com_something.	 * @param   array   $config     An array of configuration options. By default, only	 *                              published and unpublished categories are returned.	 *	 * @return  array	 *	 * @since   1.5	 */	public static function options($extension, $config = array('filter.published' => array(0, 1)))	{		$hash = md5($extension . '.' . serialize($config));		if (!isset(self::$items[$hash]))		{			$config = (array) $config;			$db = JFactory::getDbo();			$query = $db->getQuery(true)				->select('a.id, a.title, a.level')				->from('#__categories AS a')				->where('a.parent_id > 0');			// Filter on extension.			$query->where('extension = ' . $db->quote($extension));			// Filter on the published state			if (isset($config['filter.published']))			{				if (is_numeric($config['filter.published']))				{					$query->where('a.published = ' . (int) $config['filter.published']);				}				elseif (is_array($config['filter.published']))				{					JArrayHelper::toInteger($config['filter.published']);					$query->where('a.published IN (' . implode(',', $config['filter.published']) . ')');				}			}			// Filter on the language			if (isset($config['filter.language']))			{				if (is_string($config['filter.language']))				{					$query->where('a.language = ' . $db->quote($config['filter.language']));				}				elseif (is_array($config['filter.language']))				{					foreach ($config['filter.language'] as &$language)					{						$language = $db->quote($language);					}					$query->where('a.language IN (' . implode(',', $config['filter.language']) . ')');				}			}			$query->order('a.lft');			$db->setQuery($query);			$items = $db->loadObjectList();			// Assemble the list options.			self::$items[$hash] = array();			foreach ($items as &$item)			{				$repeat = ($item->level - 1 >= 0) ? $item->level - 1 : 0;				$item->title = str_repeat('- ', $repeat) . $item->title;				self::$items[$hash][] = JHtml::_('select.option', $item->id, $item->title);			}		}		return self::$items[$hash];	}	/**	 * Returns an array of categories for the given extension.	 *	 * @param   string  $extension  The extension option.	 * @param   array   $config     An array of configuration options. By default, only published and unpublished categories are returned.	 *	 * @return  array   Categories for the extension	 *	 * @since   1.6	 */	public static function categories($extension, $config = array('filter.published' => array(0, 1)))	{		$hash = md5($extension . '.' . serialize($config));		if (!isset(self::$items[$hash]))		{			$config = (array) $config;			$db = JFactory::getDbo();			$query = $db->getQuery(true)				->select('a.id, a.title, a.level, a.parent_id')				->from('#__categories AS a')				->where('a.parent_id > 0');			// Filter on extension.			$query->where('extension = ' . $db->quote($extension));			// Filter on the published state			if (isset($config['filter.published']))			{				if (is_numeric($config['filter.published']))				{					$query->where('a.published = ' . (int) $config['filter.published']);				}				elseif (is_array($config['filter.published']))				{					JArrayHelper::toInteger($config['filter.published']);					$query->where('a.published IN (' . implode(',', $config['filter.published']) . ')');				}			}			$query->order('a.lft');			$db->setQuery($query);			$items = $db->loadObjectList();			// Assemble the list options.			self::$items[$hash] = array();			foreach ($items as &$item)			{				$repeat = ($item->level - 1 >= 0) ? $item->level - 1 : 0;				$item->title = str_repeat('- ', $repeat) . $item->title;				self::$items[$hash][] = JHtml::_('select.option', $item->id, $item->title);			}			// Special "Add to root" option:			self::$items[$hash][] = JHtml::_('select.option', '1', JText::_('JLIB_HTML_ADD_TO_ROOT'));		}		return self::$items[$hash];	}}
<?php/** * @package     Joomla.Administrator * @subpackage  Templates.protostar * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;$app   = JFactory::getApplication();$doc   = JFactory::getDocument();$this->language = $doc->language;$this->direction = $doc->direction;// Add JavaScript FrameworksJHtml::_('bootstrap.framework');// Add Stylesheets$doc->addStyleSheet('templates/'.$this->template.'/css/template.css');// Load optional rtl Bootstrap css and Bootstrap bugfixesJHtmlBootstrap::loadCss($includeMaincss = false, $this->direction);?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php echo $this->language; ?>" lang="<?php echo $this->language; ?>" dir="<?php echo $this->direction; ?>"><head><jdoc:include type="head" /><!--[if lt IE 9]>	<script src="<?php echo $this->baseurl ?>/media/jui/js/html5.js"></script><![endif]--></head><body class="contentpane modal">	<jdoc:include type="message" />	<jdoc:include type="component" /></body></html>
<?php/** * @package     Joomla.Administrator * @subpackage  com_modules * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('JPATH_BASE') or die;JFormHelper::loadFieldClass('text');/** * Supports a modal article picker. * * @package     Joomla.Administrator * @subpackage  com_modules * @since       1.6 */class JFormFieldModulePosition extends JFormFieldText{	/**	 * The form field type.	 *	 * @var		string	 * @since   1.6	 */	protected $type = 'ModulePosition';	/**	 * Method to get the field input markup.	 *	 * @return  string	The field input markup.	 *	 * @since   1.6	 */	protected function getInput()	{		// Get the client id.		$clientId = $this->element['client_id'];		if (!isset($clientId))		{			$clientName = $this->element['client'];			if (isset($clientName))			{				$client = JApplicationHelper::getClientInfo($clientName, true);				$clientId = $client->id;			}		}		if (!isset($clientId) && $this->form instanceof JForm)		{			$clientId = $this->form->getValue('client_id');		}		$clientId = (int) $clientId;		// Load the modal behavior script.		JHtml::_('behavior.modal', 'a.modal');		// Build the script.		$script = array();		$script[] = '	function jSelectPosition_' . $this->id . '(name) {';		$script[] = '		document.id("' . $this->id . '").value = name;';		$script[] = '		SqueezeBox.close();';		$script[] = '	}';		// Add the script to the document head.		JFactory::getDocument()->addScriptDeclaration(implode("\n", $script));		// Setup variables for display.		$html = array();		$link = 'index.php?option=com_modules&view=positions&layout=modal&tmpl=component&function=jSelectPosition_' . $this->id . '&amp;client_id=' . $clientId;		// The current user display field.		$html[] = '<div class="input-append">';		$html[] = parent::getInput()			. '<a class="btn modal" title="' . JText::_('COM_MODULES_CHANGE_POSITION_TITLE') . '"  href="' . $link . '" rel="{handler: \'iframe\', size: {x: 800, y: 450}}">'			. '<i class="icon-screenshot"></i> '			. JText::_('COM_MODULES_CHANGE_POSITION_BUTTON') . '</a>';		$html[] = '</div>';		return implode("\n", $html);	}}
<?php/** * @package     Joomla.Administrator * @subpackage  com_finder * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE */defined('_JEXEC') or die;jimport('joomla.filesystem.file');/** * Indexer class supporting MySQL(i) for the Finder indexer package. * * The indexer class provides the core functionality of the Finder * search engine. It is responsible for adding and updating the * content links table; extracting and scoring tokens; and maintaining * all referential information for the content. * * Note: All exceptions thrown from within this class should be caught * by the controller. * * @package     Joomla.Administrator * @subpackage  com_finder * @since       3.0 */class FinderIndexerDriverMysql extends FinderIndexer{	/**	 * Method to index a content item.	 *	 * @param   FinderIndexerResult  $item    The content item to index.	 * @param   string               $format  The format of the content. [optional]	 *	 * @return  integer  The ID of the record in the links table.	 *	 * @since   3.0	 * @throws  Exception on database error.	 */	public function index($item, $format = 'html')	{		// Mark beforeIndexing in the profiler.		static::$profiler ? static::$profiler->mark('beforeIndexing') : null;		$db = JFactory::getDbo();		$nd = $db->getNullDate();		// Check if the item is in the database.		$query = $db->getQuery(true)			->select($db->quoteName('link_id') . ', ' . $db->quoteName('md5sum'))			->from($db->quoteName('#__finder_links'))			->where($db->quoteName('url') . ' = ' . $db->quote($item->url));		// Load the item  from the database.		$db->setQuery($query);		$link = $db->loadObject();		// Get the indexer state.		$state = static::getState();		// Get the signatures of the item.		$curSig = static::getSignature($item);		$oldSig = isset($link->md5sum) ? $link->md5sum : null;		// Get the other item information.		$linkId = empty($link->link_id) ? null : $link->link_id;		$isNew = empty($link->link_id) ? true : false;		// Check the signatures. If they match, the item is up to date.		if (!$isNew && $curSig == $oldSig)		{			return $linkId;		}		/*		 * If the link already exists, flush all the term maps for the item.		 * Maps are stored in 16 tables so we need to iterate through and flush		 * each table one at a time.		 */		if (!$isNew)		{			for ($i = 0; $i <= 15; $i++)			{				// Flush the maps for the link.				$query->clear()					->delete($db->quoteName('#__finder_links_terms' . dechex($i)))					->where($db->quoteName('link_id') . ' = ' . (int) $linkId);				$db->setQuery($query);				$db->execute();			}			// Remove the taxonomy maps.			FinderIndexerTaxonomy::removeMaps($linkId);		}		// Mark afterUnmapping in the profiler.		static::$profiler ? static::$profiler->mark('afterUnmapping') : null;		// Perform cleanup on the item data.		$item->publish_start_date = (int) $item->publish_start_date != 0 ? $item->publish_start_date : $nd;		$item->publish_end_date = (int) $item->publish_end_date != 0 ? $item->publish_end_date : $nd;		$item->start_date = (int) $item->start_date != 0 ? $item->start_date : $nd;		$item->end_date = (int) $item->end_date != 0 ? $item->end_date : $nd;		// Prepare the item description.		$item->description = FinderIndexerHelper::parse($item->summary);		/*		 * Now, we need to enter the item into the links table. If the item		 * already exists in the database, we need to use an UPDATE query.		 * Otherwise, we need to use an INSERT to get the link id back.		 */		if ($isNew)		{			$columnsArray = array(				$db->quoteName('url'), $db->quoteName('route'), $db->quoteName('title'), $db->quoteName('description'),				$db->quoteName('indexdate'), $db->quoteName('published'), $db->quoteName('state'), $db->quoteName('access'),				$db->quoteName('language'), $db->quoteName('type_id'), $db->quoteName('object'), $db->quoteName('publish_start_date'),				$db->quoteName('publish_end_date'), $db->quoteName('start_date'), $db->quoteName('end_date'), $db->quoteName('list_price'),				$db->quoteName('sale_price')			);			// Insert the link.			$query->clear()				->insert($db->quoteName('#__finder_links'))				->columns($columnsArray)				->values(				$db->quote($item->url) . ', '				. $db->quote($item->route) . ', '				. $db->quote($item->title) . ', '				. $db->quote($item->description) . ', '				. $query->currentTimestamp() . ', '				. '1, '				. (int) $item->state . ', '				. (int) $item->access . ', '				. $db->quote($item->language) . ', '				. (int) $item->type_id . ', '				. $db->quote(serialize($item)) . ', '				. $db->quote($item->publish_start_date) . ', '				. $db->quote($item->publish_end_date) . ', '				. $db->quote($item->start_date) . ', '				. $db->quote($item->end_date) . ', '				. (double) ($item->list_price ? $item->list_price : 0) . ', '				. (double) ($item->sale_price ? $item->sale_price : 0)			);			$db->setQuery($query);			$db->execute();			// Get the link id.			$linkId = (int) $db->insertid();		}		else		{			// Update the link.			$query->clear()				->update($db->quoteName('#__finder_links'))				->set($db->quoteName('route') . ' = ' . $db->quote($item->route))				->set($db->quoteName('title') . ' = ' . $db->quote($item->title))				->set($db->quoteName('description') . ' = ' . $db->quote($item->description))				->set($db->quoteName('indexdate') . ' = ' . $query->currentTimestamp())				->set($db->quoteName('state') . ' = ' . (int) $item->state)				->set($db->quoteName('access') . ' = ' . (int) $item->access)				->set($db->quoteName('language') . ' = ' . $db->quote($item->language))				->set($db->quoteName('type_id') . ' = ' . (int) $item->type_id)				->set($db->quoteName('object') . ' = ' . $db->quote(serialize($item)))				->set($db->quoteName('publish_start_date') . ' = ' . $db->quote($item->publish_start_date))				->set($db->quoteName('publish_end_date') . ' = ' . $db->quote($item->publish_end_date))				->set($db->quoteName('start_date') . ' = ' . $db->quote($item->start_date))				->set($db->quoteName('end_date') . ' = ' . $db->quote($item->end_date))				->set($db->quoteName('list_price') . ' = ' . (double) ($item->list_price ? $item->list_price : 0))				->set($db->quoteName('sale_price') . ' = ' . (double) ($item->sale_price ? $item->sale_price : 0))				->where('link_id = ' . (int) $linkId);			$db->setQuery($query);			$db->execute();		}		// Set up the variables we will need during processing.		$tokens = array();		$count = 0;		// Mark afterLinking in the profiler.		static::$profiler ? static::$profiler->mark('afterLinking') : null;		// Truncate the tokens tables.		$db->truncateTable('#__finder_tokens');		// Truncate the tokens aggregate table.		$db->truncateTable('#__finder_tokens_aggregate');		/*		 * Process the item's content. The items can customize their		 * processing instructions to define extra properties to process		 * or rearrange how properties are weighted.		 */		foreach ($item->getInstructions() as $group => $properties)		{			// Iterate through the properties of the group.			foreach ($properties as $property)			{				// Check if the property exists in the item.				if (empty($item->$property))				{					continue;				}				// Tokenize the property.				if (is_array($item->$property))				{					// Tokenize an array of content and add it to the database.					foreach ($item->$property as $ip)					{						// If the group is path, we need to a few extra processing						// steps to strip the extension and convert slashes and dashes						// to spaces.						if ($group === static::PATH_CONTEXT)						{							$ip = JFile::stripExt($ip);							$ip = str_replace('/', ' ', $ip);							$ip = str_replace('-', ' ', $ip);						}						// Tokenize a string of content and add it to the database.						$count += $this->tokenizeToDB($ip, $group, $item->language, $format);						// Check if we're approaching the memory limit of the token table.						if ($count > static::$state->options->get('memory_table_limit', 30000))						{							$this->toggleTables(false);						}					}				}				else				{					// If the group is path, we need to a few extra processing					// steps to strip the extension and convert slashes and dashes					// to spaces.					if ($group === static::PATH_CONTEXT)					{						$item->$property = JFile::stripExt($item->$property);						$item->$property = str_replace('/', ' ', $item->$property);						$item->$property = str_replace('-', ' ', $item->$property);					}					// Tokenize a string of content and add it to the database.					$count += $this->tokenizeToDB($item->$property, $group, $item->language, $format);					// Check if we're approaching the memory limit of the token table.					if ($count > static::$state->options->get('memory_table_limit', 30000))					{						$this->toggleTables(false);					}				}			}		}		/*		 * Process the item's taxonomy. The items can customize their		 * taxonomy mappings to define extra properties to map.		 */		foreach ($item->getTaxonomy() as $branch => $nodes)		{			// Iterate through the nodes and map them to the branch.			foreach ($nodes as $node)			{				// Add the node to the tree.				$nodeId = FinderIndexerTaxonomy::addNode($branch, $node->title, $node->state, $node->access);				// Add the link => node map.				FinderIndexerTaxonomy::addMap($linkId, $nodeId);				// Tokenize the node title and add them to the database.				$count += $this->tokenizeToDB($node->title, static::META_CONTEXT, $item->language, $format);			}		}		// Mark afterProcessing in the profiler.		static::$profiler ? static::$profiler->mark('afterProcessing') : null;		/*		 * At this point, all of the item's content has been parsed, tokenized		 * and inserted into the #__finder_tokens table. Now, we need to		 * aggregate all the data into that table into a more usable form. The		 * aggregated data will be inserted into #__finder_tokens_aggregate		 * table.		 */		$query	= 'INSERT INTO ' . $db->quoteName('#__finder_tokens_aggregate') .				' (' . $db->quoteName('term_id') .				', ' . $db->quoteName('term') .				', ' . $db->quoteName('stem') .				', ' . $db->quoteName('common') .				', ' . $db->quoteName('phrase') .				', ' . $db->quoteName('term_weight') .				', ' . $db->quoteName('context') .				', ' . $db->quoteName('context_weight') .				', ' . $db->quoteName('language') . ')' .				' SELECT' .				' t.term_id, t1.term, t1.stem, t1.common, t1.phrase, t1.weight, t1.context, ' .				' ROUND( t1.weight * COUNT( t2.term ) * %F, 8 ) AS context_weight, t1.language' .				' FROM (' .				'   SELECT DISTINCT t1.term, t1.stem, t1.common, t1.phrase, t1.weight, t1.context, t1.language' .				'   FROM ' . $db->quoteName('#__finder_tokens') . ' AS t1' .				'   WHERE t1.context = %d' .				' ) AS t1' .				' JOIN ' . $db->quoteName('#__finder_tokens') . ' AS t2 ON t2.term = t1.term' .				' LEFT JOIN ' . $db->quoteName('#__finder_terms') . ' AS t ON t.term = t1.term' .				' WHERE t2.context = %d' .				' GROUP BY t1.term' .				' ORDER BY t1.term DESC';		// Iterate through the contexts and aggregate the tokens per context.		foreach ($state->weights as $context => $multiplier)		{			// Run the query to aggregate the tokens for this context..			$db->setQuery(sprintf($query, $multiplier, $context, $context));			$db->execute();		}		// Mark afterAggregating in the profiler.		static::$profiler ? static::$profiler->mark('afterAggregating') : null;		/*		 * When we pulled down all of the aggregate data, we did a LEFT JOIN		 * over the terms table to try to find all the term ids that		 * already exist for our tokens. If any of the rows in the aggregate		 * table have a term of 0, then no term record exists for that		 * term so we need to add it to the terms table.		 */		$db->setQuery(			'INSERT IGNORE INTO ' . $db->quoteName('#__finder_terms') .			' (' . $db->quoteName('term') .			', ' . $db->quoteName('stem') .			', ' . $db->quoteName('common') .			', ' . $db->quoteName('phrase') .			', ' . $db->quoteName('weight') .			', ' . $db->quoteName('soundex') .			', ' . $db->quoteName('language') . ')' .			' SELECT ta.term, ta.stem, ta.common, ta.phrase, ta.term_weight, SOUNDEX(ta.term), ta.language' .			' FROM ' . $db->quoteName('#__finder_tokens_aggregate') . ' AS ta' .			' WHERE ta.term_id = 0' .			' GROUP BY ta.term'		);		$db->execute();		/*		 * Now, we just inserted a bunch of new records into the terms table		 * so we need to go back and update the aggregate table with all the		 * new term ids.		 */		$query = $db->getQuery(true)			->update($db->quoteName('#__finder_tokens_aggregate') . ' AS ta')			->join('INNER', $db->quoteName('#__finder_terms') . ' AS t ON t.term = ta.term')			->set('ta.term_id = t.term_id')			->where('ta.term_id = 0');		$db->setQuery($query);		$db->execute();		// Mark afterTerms in the profiler.		static::$profiler ? static::$profiler->mark('afterTerms') : null;		/*		 * After we've made sure that all of the terms are in the terms table		 * and the aggregate table has the correct term ids, we need to update		 * the links counter for each term by one.		 */		$query->clear()			->update($db->quoteName('#__finder_terms') . ' AS t')			->join('INNER', $db->quoteName('#__finder_tokens_aggregate') . ' AS ta ON ta.term_id = t.term_id')			->set('t.' . $db->quoteName('links') . ' = t.links + 1');		$db->setQuery($query);		$db->execute();		// Mark afterTerms in the profiler.		static::$profiler ? static::$profiler->mark('afterTerms') : null;		/*		 * Before we can insert all of the mapping rows, we have to figure out		 * which mapping table the rows need to be inserted into. The mapping		 * table for each term is based on the first character of the md5 of		 * the first character of the term. In php, it would be expressed as		 * substr(md5(substr($token, 0, 1)), 0, 1)		 */		$query->clear()			->update($db->quoteName('#__finder_tokens_aggregate'))			->set($db->quoteName('map_suffix') . ' = SUBSTR(MD5(SUBSTR(' . $db->quoteName('term') . ', 1, 1)), 1, 1)');		$db->setQuery($query);		$db->execute();		/*		 * At this point, the aggregate table contains a record for each		 * term in each context. So, we're going to pull down all of that		 * data while grouping the records by term and add all of the		 * sub-totals together to arrive at the final total for each token for		 * this link. Then, we insert all of that data into the appropriate		 * mapping table.		 */		for ($i = 0; $i <= 15; $i++)		{			// Get the mapping table suffix.			$suffix = dechex($i);			/*			 * We have to run this query 16 times, one for each link => term			 * mapping table.			 */			$db->setQuery(				'INSERT INTO ' . $db->quoteName('#__finder_links_terms' . $suffix) .				' (' . $db->quoteName('link_id') .				', ' . $db->quoteName('term_id') .				', ' . $db->quoteName('weight') . ')' .				' SELECT ' . (int) $linkId . ', ' . $db->quoteName('term_id') . ',' .				' ROUND(SUM(' . $db->quoteName('context_weight') . '), 8)' .				' FROM ' . $db->quoteName('#__finder_tokens_aggregate') .				' WHERE ' . $db->quoteName('map_suffix') . ' = ' . $db->quote($suffix) .				' GROUP BY ' . $db->quoteName('term') .				' ORDER BY ' . $db->quoteName('term') . ' DESC'			);			$db->execute();		}		// Mark afterMapping in the profiler.		static::$profiler ? static::$profiler->mark('afterMapping') : null;		// Update the signature.		$query->clear()			->update($db->quoteName('#__finder_links'))			->set($db->quoteName('md5sum') . ' = ' . $db->quote($curSig))			->where($db->quoteName('link_id') . ' = ' . $db->quote($linkId));		$db->setQuery($query);		$db->execute();		// Mark afterSigning in the profiler.		static::$profiler ? static::$profiler->mark('afterSigning') : null;		// Truncate the tokens tables.		$db->truncateTable('#__finder_tokens');		// Truncate the tokens aggregate table.		$db->truncateTable('#__finder_tokens_aggregate');		// Toggle the token tables back to memory tables.		$this->toggleTables(true);		// Mark afterTruncating in the profiler.		static::$profiler ? static::$profiler->mark('afterTruncating') : null;		return $linkId;	}	/**	 * Method to remove a link from the index.	 *	 * @param   integer  $linkId  The id of the link.	 *	 * @return  boolean  True on success.	 *	 * @since   2.5	 * @throws  Exception on database error.	 */	public function remove($linkId)	{		$db = JFactory::getDbo();		$query = $db->getQuery(true);		// Get the indexer state.		$state = static::getState();		// Update the link counts and remove the mapping records.		for ($i = 0; $i <= 15; $i++)		{			// Update the link counts for the terms.			$query->update($db->quoteName('#__finder_terms') . ' AS t')				->join('INNER', $db->quoteName('#__finder_links_terms' . dechex($i)) . ' AS m ON m.term_id = t.term_id')				->set('t.links = t.links - 1')				->where('m.link_id = ' . $db->quote((int) $linkId));			$db->setQuery($query);			$db->execute();			// Remove all records from the mapping tables.			$query->clear()				->delete($db->quoteName('#__finder_links_terms' . dechex($i)))				->where($db->quoteName('link_id') . ' = ' . (int) $linkId);			$db->setQuery($query);			$db->execute();		}		// Delete all orphaned terms.		$query->clear()			->delete($db->quoteName('#__finder_terms'))			->where($db->quoteName('links') . ' <= 0');		$db->setQuery($query);		$db->execute();		// Delete the link from the index.		$query->clear()			->delete($db->quoteName('#__finder_links'))			->where($db->quoteName('link_id') . ' = ' . $db->quote((int) $linkId));		$db->setQuery($query);		$db->execute();		// Remove the taxonomy maps.		FinderIndexerTaxonomy::removeMaps($linkId);		// Remove the orphaned taxonomy nodes.		FinderIndexerTaxonomy::removeOrphanNodes();		return true;	}	/**	 * Method to optimize the index. We use this method to remove unused terms	 * and any other optimizations that might be necessary.	 *	 * @return  boolean  True on success.	 *	 * @since   3.0	 * @throws  Exception on database error.	 */	public function optimize()	{		// Get the database object.		$db = JFactory::getDbo();		$query = $db->getQuery(true);		// Delete all orphaned terms.		$query->delete($db->quoteName('#__finder_terms'))			->where($db->quoteName('links') . ' <= 0');		$db->setQuery($query);		$db->execute();		// Optimize the links table.		$db->setQuery('OPTIMIZE TABLE ' . $db->quoteName('#__finder_links'));		$db->execute();		for ($i = 0; $i <= 15; $i++)		{			// Optimize the terms mapping table.			$db->setQuery('OPTIMIZE TABLE ' . $db->quoteName('#__finder_links_terms' . dechex($i)));			$db->execute();		}		// Optimize the terms mapping table.		$db->setQuery('OPTIMIZE TABLE ' . $db->quoteName('#__finder_links_terms'));		$db->execute();		// Remove the orphaned taxonomy nodes.		FinderIndexerTaxonomy::removeOrphanNodes();		// Optimize the taxonomy mapping table.		$db->setQuery('OPTIMIZE TABLE ' . $db->quoteName('#__finder_taxonomy_map'));		$db->execute();		return true;	}	/**	 * Method to add a set of tokens to the database.	 *	 * @param   mixed  $tokens   An array or single FinderIndexerToken object.	 * @param   mixed  $context  The context of the tokens. See context constants. [optional]	 *	 * @return  integer  The number of tokens inserted into the database.	 *	 * @since   3.0	 * @throws  Exception on database error.	 */	protected function addTokensToDB($tokens, $context = '')	{		// Get the database object.		$db = JFactory::getDbo();		$query = $db->getQuery(true);		// Force tokens to an array.		$tokens = is_array($tokens) ? $tokens : array($tokens);		// Count the number of token values.		$values = 0;		// Insert the tokens into the database.		$query->insert($db->quoteName('#__finder_tokens'))			->columns(				array(					$db->quoteName('term'),					$db->quoteName('stem'),					$db->quoteName('common'),					$db->quoteName('phrase'),					$db->quoteName('weight'),					$db->quoteName('context'),					$db->quoteName('language')				)			);		// Iterate through the tokens to create SQL value sets.		foreach ($tokens as $token)		{			$query->values(				$db->quote($token->term) . ', '					. $db->quote($token->stem) . ', '					. (int) $token->common . ', '					. (int) $token->phrase . ', '					. (float) $token->weight . ', '					. (int) $context . ', '					. $db->quote($token->language)			);			$values++;		}		$db->setQuery($query);		$db->execute();		return $values;	}	/**	 * Method to switch the token tables from Memory tables to MyISAM tables	 * when they are close to running out of memory.	 *	 * @param   boolean  $memory  Flag to control how they should be toggled.	 *	 * @return  boolean  True on success.	 *	 * @since   3.0	 * @throws  Exception on database error.	 */	protected function toggleTables($memory)	{		static $state;		// Get the database adapter.		$db = JFactory::getDbo();		// Check if we are setting the tables to the Memory engine.		if ($memory === true && $state !== true)		{			// Set the tokens table to Memory.			$db->setQuery('ALTER TABLE ' . $db->quoteName('#__finder_tokens') . ' ENGINE = MEMORY');			$db->execute();			// Set the tokens aggregate table to Memory.			$db->setQuery('ALTER TABLE ' . $db->quoteName('#__finder_tokens_aggregate') . ' ENGINE = MEMORY');			$db->execute();			// Set the internal state.			$state = $memory;		}		// We must be setting the tables to the MyISAM engine.		elseif ($memory === false && $state !== false)		{			// Set the tokens table to MyISAM.			$db->setQuery('ALTER TABLE ' . $db->quoteName('#__finder_tokens') . ' ENGINE = MYISAM');			$db->execute();			// Set the tokens aggregate table to MyISAM.			$db->setQuery('ALTER TABLE ' . $db->quoteName('#__finder_tokens_aggregate') . ' ENGINE = MYISAM');			$db->execute();			// Set the internal state.			$state = $memory;		}		return true;	}}
<?php/** * @package     Joomla.Administrator * @subpackage  com_installer * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;/** * Extension Manager Install Model * * @package     Joomla.Administrator * @subpackage  com_installer * @since       1.5 */class InstallerModelInstall extends JModelLegacy{	/**	 * @var object JTable object	 */	protected $_table = null;	/**	 * @var object JTable object	 */	protected $_url = null;	/**	 * Model context string.	 *	 * @var		string	 */	protected $_context = 'com_installer.install';	/**	 * Method to auto-populate the model state.	 *	 * Note. Calling getState in this method will result in recursion.	 *	 * @return  void	 *	 * @since   1.6	 */	protected function populateState()	{		$app = JFactory::getApplication('administrator');		$this->setState('message', $app->getUserState('com_installer.message'));		$this->setState('extension_message', $app->getUserState('com_installer.extension_message'));		$app->setUserState('com_installer.message', '');		$app->setUserState('com_installer.extension_message', '');		// Recall the 'Install from Directory' path.		$path = $app->getUserStateFromRequest($this->_context . '.install_directory', 'install_directory', $app->getCfg('tmp_path'));		$this->setState('install.directory', $path);		parent::populateState();	}	/**	 * Install an extension from either folder, url or upload.	 *	 * @return  boolean result of install	 *	 * @since   1.5	 */	public function install()	{		$this->setState('action', 'install');		// Set FTP credentials, if given.		JClientHelper::setCredentialsFromRequest('ftp');		$app = JFactory::getApplication();		switch ($app->input->getWord('installtype'))		{			case 'folder':				// Remember the 'Install from Directory' path.				$app->getUserStateFromRequest($this->_context . '.install_directory', 'install_directory');				$package = $this->_getPackageFromFolder();				break;			case 'upload':				$package = $this->_getPackageFromUpload();				break;			case 'url':				$package = $this->_getPackageFromUrl();				break;			default:				$app->setUserState('com_installer.message', JText::_('COM_INSTALLER_NO_INSTALL_TYPE_FOUND'));				return false;				break;		}		// Was the package unpacked?		if (!$package)		{			$app->setUserState('com_installer.message', JText::_('COM_INSTALLER_UNABLE_TO_FIND_INSTALL_PACKAGE'));			return false;		}		// Get an installer instance		$installer = JInstaller::getInstance();		// Install the package		if (!$installer->install($package['dir']))		{			// There was an error installing the package			$msg = JText::sprintf('COM_INSTALLER_INSTALL_ERROR', JText::_('COM_INSTALLER_TYPE_TYPE_' . strtoupper($package['type'])));			$result = false;		}		else		{			// Package installed sucessfully			$msg = JText::sprintf('COM_INSTALLER_INSTALL_SUCCESS', JText::_('COM_INSTALLER_TYPE_TYPE_' . strtoupper($package['type'])));			$result = true;		}		// Set some model state values		$app	= JFactory::getApplication();		$app->enqueueMessage($msg);		$this->setState('name', $installer->get('name'));		$this->setState('result', $result);		$app->setUserState('com_installer.message', $installer->message);		$app->setUserState('com_installer.extension_message', $installer->get('extension_message'));		$app->setUserState('com_installer.redirect_url', $installer->get('redirect_url'));		// Cleanup the install files		if (!is_file($package['packagefile']))		{			$config = JFactory::getConfig();			$package['packagefile'] = $config->get('tmp_path') . '/' . $package['packagefile'];		}		JInstallerHelper::cleanupInstall($package['packagefile'], $package['extractdir']);		return $result;	}	/**	 * Works out an installation package from a HTTP upload	 *	 * @return package definition or false on failure	 */	protected function _getPackageFromUpload()	{		// Get the uploaded file information		$userfile = JRequest::getVar('install_package', null, 'files', 'array');		// Make sure that file uploads are enabled in php		if (!(bool) ini_get('file_uploads'))		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_WARNINSTALLFILE'));			return false;		}		// Make sure that zlib is loaded so that the package can be unpacked		if (!extension_loaded('zlib'))		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_WARNINSTALLZLIB'));			return false;		}		// If there is no uploaded file, we have a problem...		if (!is_array($userfile))		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_NO_FILE_SELECTED'));			return false;		}		// Check if there was a problem uploading the file.		if ($userfile['error'] || $userfile['size'] < 1)		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_WARNINSTALLUPLOADERROR'));			return false;		}		// Build the appropriate paths		$config		= JFactory::getConfig();		$tmp_dest	= $config->get('tmp_path') . '/' . $userfile['name'];		$tmp_src	= $userfile['tmp_name'];		// Move uploaded file		jimport('joomla.filesystem.file');		$uploaded = JFile::upload($tmp_src, $tmp_dest);		// Unpack the downloaded package file		$package = JInstallerHelper::unpack($tmp_dest);		return $package;	}	/**	 * Install an extension from a directory	 *	 * @return  array  Package details or false on failure	 *	 * @since   1.5	 */	protected function _getPackageFromFolder()	{		$input = JFactory::getApplication()->input;		// Get the path to the package to install		$p_dir = $input->getString('install_directory');		$p_dir = JPath::clean($p_dir);		// Did you give us a valid directory?		if (!is_dir($p_dir))		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_PLEASE_ENTER_A_PACKAGE_DIRECTORY'));			return false;		}		// Detect the package type		$type = JInstallerHelper::detectType($p_dir);		// Did you give us a valid package?		if (!$type)		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_PATH_DOES_NOT_HAVE_A_VALID_PACKAGE'));			return false;		}		$package['packagefile'] = null;		$package['extractdir'] = null;		$package['dir'] = $p_dir;		$package['type'] = $type;		return $package;	}	/**	 * Install an extension from a URL	 *	 * @return  Package details or false on failure	 *	 * @since   1.5	 */	protected function _getPackageFromUrl()	{		$input = JFactory::getApplication()->input;		// Get the URL of the package to install		$url = $input->getString('install_url');		// Did you give us a URL?		if (!$url)		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_ENTER_A_URL'));			return false;		}		// Download the package at the URL given		$p_file = JInstallerHelper::downloadPackage($url);		// Was the package downloaded?		if (!$p_file)		{			JError::raiseWarning('', JText::_('COM_INSTALLER_MSG_INSTALL_INVALID_URL'));			return false;		}		$config   = JFactory::getConfig();		$tmp_dest = $config->get('tmp_path');		// Unpack the downloaded package file		$package = JInstallerHelper::unpack($tmp_dest . '/' . $p_file);		return $package;	}}
<?php/** * @package     Joomla.Administrator * @subpackage  com_redirect * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;// Include the component HTML helpers.JHtml::addIncludePath(JPATH_COMPONENT.'/helpers/html');JHtml::_('bootstrap.tooltip');JHtml::_('behavior.multiselect');JHtml::_('formbehavior.chosen', 'select');$user		= JFactory::getUser();$listOrder	= $this->escape($this->state->get('list.ordering'));$listDirn	= $this->escape($this->state->get('list.direction'));?><form action="<?php echo JRoute::_('index.php?option=com_redirect&view=links'); ?>" method="post" name="adminForm" id="adminForm"><?php if (!empty( $this->sidebar)) : ?>	<div id="j-sidebar-container" class="span2">		<?php echo $this->sidebar; ?>	</div>	<div id="j-main-container" class="span10"><?php else : ?>	<div id="j-main-container"><?php endif;?>		<div id="filter-bar" class="btn-toolbar">			<div class="filter-search btn-group pull-left">				<input type="text" name="filter_search" id="filter_search" placeholder="<?php echo JText::_('COM_REDIRECT_SEARCH_LINKS'); ?>" value="<?php echo $this->escape($this->state->get('filter.search')); ?>" title="<?php echo JText::_('COM_REDIRECT_SEARCH_LINKS'); ?>" />			</div>			<div class="btn-group pull-left">				<button class="btn hasTooltip" type="submit" title="<?php echo JText::_('JSEARCH_FILTER_SUBMIT'); ?>"><i class="icon-search"></i></button>				<button class="btn hasTooltip" type="button" title="<?php echo JText::_('JSEARCH_FILTER_CLEAR'); ?>" onclick="document.id('filter_search').value='';this.form.submit();"><i class="icon-remove"></i></button>			</div>			<div class="btn-group pull-right hidden-phone">				<label for="limit" class="element-invisible"><?php echo JText::_('JFIELD_PLG_SEARCH_SEARCHLIMIT_DESC'); ?></label>				<?php echo $this->pagination->getLimitBox(); ?>			</div>		</div>		<div class="clearfix"> </div>		<table class="table table-striped">			<thead>				<tr>					<th width="20">						<input type="checkbox" name="checkall-toggle" value="" title="<?php echo JText::_('JGLOBAL_CHECK_ALL'); ?>" onclick="Joomla.checkAll(this)" />					</th>					<th class="title">						<?php echo JHtml::_('grid.sort', 'COM_REDIRECT_HEADING_OLD_URL', 'a.old_url', $listDirn, $listOrder); ?>					</th>					<th width="30%" class="nowrap">						<?php echo JHtml::_('grid.sort', 'COM_REDIRECT_HEADING_NEW_URL', 'a.new_url', $listDirn, $listOrder); ?>					</th>					<th width="30%" class="nowrap">						<?php echo JHtml::_('grid.sort', 'COM_REDIRECT_HEADING_REFERRER', 'a.referer', $listDirn, $listOrder); ?>					</th>					<th width="10%" class="nowrap">						<?php echo JHtml::_('grid.sort', 'COM_REDIRECT_HEADING_CREATED_DATE', 'a.created_date', $listDirn, $listOrder); ?>					</th>					<th width="1%" class="nowrap center">						<?php echo JHtml::_('grid.sort', 'JGRID_HEADING_ID', 'a.id', $listDirn, $listOrder); ?>					</th>				</tr>			</thead>			<tfoot>				<tr>					<td colspan="7">						<?php echo $this->pagination->getListFooter(); ?>						<p class="footer-tip">							<?php if ($this->enabled) : ?>								<span class="enabled"><?php echo JText::_('COM_REDIRECT_PLUGIN_ENABLED'); ?></span>							<?php else : ?>								<span class="disabled"><?php echo JText::_('COM_REDIRECT_PLUGIN_DISABLED'); ?></span>							<?php endif; ?>						</p>					</td>				</tr>			</tfoot>			<tbody>			<?php foreach ($this->items as $i => $item) :				$canCreate = $user->authorise('core.create',     'com_redirect');				$canEdit   = $user->authorise('core.edit',       'com_redirect');				$canChange = $user->authorise('core.edit.state', 'com_redirect');				?>				<tr class="row<?php echo $i % 2; ?>">					<td class="center">						<?php echo JHtml::_('grid.id', $i, $item->id); ?>					</td>					<td>						<?php echo JHtml::_('redirect.published', $item->published, $i); ?>						<?php if ($canEdit) : ?>							<a href="<?php echo JRoute::_('index.php?option=com_redirect&task=link.edit&id='.$item->id);?>" title="<?php echo $this->escape($item->old_url); ?>">								<?php echo $this->escape(str_replace(JURI::root(), '', $item->old_url)); ?></a>						<?php else : ?>								<?php echo $this->escape(str_replace(JURI::root(), '', $item->old_url)); ?>						<?php endif; ?>					</td>					<td class="small">						<?php echo $this->escape($item->new_url); ?>					</td>					<td class="small">						<?php echo $this->escape($item->referer); ?>					</td>					<td class="small">						<?php echo JHtml::_('date', $item->created_date, JText::_('DATE_FORMAT_LC4')); ?>					</td>					<td class="center">						<?php echo (int) $item->id; ?>					</td>				</tr>				<?php endforeach; ?>			</tbody>		</table>		<?php if (!empty($this->items)) : ?>			<?php echo $this->loadTemplate('addform'); ?>		<?php endif; ?>		<input type="hidden" name="task" value="" />		<input type="hidden" name="boxchecked" value="0" />		<input type="hidden" name="filter_order" value="<?php echo $listOrder; ?>" />		<input type="hidden" name="filter_order_Dir" value="<?php echo $listDirn; ?>" />		<?php echo JHtml::_('form.token'); ?>	</div></form>
<?php/** * @package     Joomla.Administrator * @subpackage  com_templates * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;/** * Template styles list controller class. * * @package     Joomla.Administrator * @subpackage  com_templates * @since       1.6 */class TemplatesControllerStyles extends JControllerAdmin{	/**	 * Method to clone and existing template style.	 */	public function duplicate()	{		// Check for request forgeries		JSession::checkToken() or jexit(JText::_('JINVALID_TOKEN'));		$pks = $this->input->post->get('cid', array(), 'array');		try		{			if (empty($pks))			{				throw new Exception(JText::_('COM_TEMPLATES_NO_TEMPLATE_SELECTED'));			}			JArrayHelper::toInteger($pks);			$model = $this->getModel();			$model->duplicate($pks);			$this->setMessage(JText::_('COM_TEMPLATES_SUCCESS_DUPLICATED'));		}		catch (Exception $e)		{			JError::raiseWarning(500, $e->getMessage());		}		$this->setRedirect('index.php?option=com_templates&view=styles');	}	/**	 * Proxy for getModel.	 *	 * @since   1.6	 */	public function getModel($name = 'Style', $prefix = 'TemplatesModel', $config = array())	{		$model = parent::getModel($name, $prefix, array('ignore_request' => true));		return $model;	}	/**	 * Method to set the home template for a client.	 *	 * @since   1.6	 */	public function setDefault()	{		// Check for request forgeries		JSession::checkToken() or jexit(JText::_('JINVALID_TOKEN'));		$pks = $this->input->post->get('cid', array(), 'array');		try		{			if (empty($pks))			{				throw new Exception(JText::_('COM_TEMPLATES_NO_TEMPLATE_SELECTED'));			}			JArrayHelper::toInteger($pks);			// Pop off the first element.			$id = array_shift($pks);			$model = $this->getModel();			$model->setHome($id);			$this->setMessage(JText::_('COM_TEMPLATES_SUCCESS_HOME_SET'));		}		catch (Exception $e)		{			JError::raiseWarning(500, $e->getMessage());		}		$this->setRedirect('index.php?option=com_templates&view=styles');	}	/**	 * Method to unset the default template for a client and for a language	 *	 * @since   1.6	 */	public function unsetDefault()	{		// Check for request forgeries		JSession::checkToken('request') or jexit(JText::_('JINVALID_TOKEN'));		$pks = $this->input->get->get('cid', array(), 'array');		JArrayHelper::toInteger($pks);		try		{			if (empty($pks))			{				throw new Exception(JText::_('COM_TEMPLATES_NO_TEMPLATE_SELECTED'));			}			// Pop off the first element.			$id = array_shift($pks);			$model = $this->getModel();			$model->unsetHome($id);			$this->setMessage(JText::_('COM_TEMPLATES_SUCCESS_HOME_UNSET'));		}		catch (Exception $e)		{			JError::raiseWarning(500, $e->getMessage());		}		$this->setRedirect('index.php?option=com_templates&view=styles');	}}
<?php/** * @package     Joomla.Site * @subpackage  com_content * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;// Create shortcut$urls = json_decode($this->item->urls);// Create shortcuts to some parameters.$params = $this->item->params;if ($urls && (!empty($urls->urla) || !empty($urls->urlb) || !empty($urls->urlc))) :?><div class="content-links">	<ul class="nav nav-tabs nav-stacked">		<?php			$urlarray = array(			array($urls->urla, $urls->urlatext, $urls->targeta, 'a'),			array($urls->urlb, $urls->urlbtext, $urls->targetb, 'b'),			array($urls->urlc, $urls->urlctext, $urls->targetc, 'c')			);			foreach ($urlarray as $url) :				$link = $url[0];				$label = $url[1];				$target = $url[2];				$id = $url[3];				if ( ! $link) :					continue;				endif;				// If no label is present, take the link				$label = ($label) ? $label : $link;				// If no target is present, use the default				$target = $target ? $target : $params->get('target'.$id);				?>			<li class="content-links-<?php echo $id; ?>">				<?php					// Compute the correct link					switch ($target)					{						case 1:							// open in a new window							echo '<a href="'. htmlspecialchars($link) .'" target="_blank"  rel="nofollow">'.								htmlspecialchars($label) .'</a>';							break;						case 2:							// open in a popup window							$attribs = 'toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=600,height=600';							echo "<a href=\"" . htmlspecialchars($link) . "\" onclick=\"window.open(this.href, 'targetWindow', '".$attribs."'); return false;\">".								htmlspecialchars($label).'</a>';							break;						case 3:							// open in a modal window							JHtml::_('behavior.modal', 'a.modal'); ?>							<a class="modal" href="<?php echo htmlspecialchars($link); ?>"  rel="{handler: 'iframe', size: {x:600, y:600}}">								<?php echo htmlspecialchars($label) . ' </a>';							break;						default:							// open in parent window							echo '<a href="'.  htmlspecialchars($link) . '" rel="nofollow">'.								htmlspecialchars($label) . ' </a>';							break;					}				?>				</li>		<?php endforeach; ?>	</ul></div><?php endif; ?>
<?php/** * @package     Joomla.Administrator * @subpackage  Templates.protostar * * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license     GNU General Public License version 2 or later; see LICENSE.txt */defined('_JEXEC') or die;// Getting params from template$params = JFactory::getApplication()->getTemplate(true)->params;$app = JFactory::getApplication();$doc = JFactory::getDocument();$this->language = $doc->language;$this->direction = $doc->direction;// Detecting Active Variables$option   = $app->input->getCmd('option', '');$view     = $app->input->getCmd('view', '');$layout   = $app->input->getCmd('layout', '');$task     = $app->input->getCmd('task', '');$itemid   = $app->input->getCmd('Itemid', '');$sitename = $app->getCfg('sitename');if($task == "edit" || $layout == "form" ){	$fullWidth = 1;}else{	$fullWidth = 0;}// Add JavaScript FrameworksJHtml::_('bootstrap.framework');// Add current user information$user = JFactory::getUser();// Logo fileif ($params->get('logoFile')){	$logo = JURI::root() . $params->get('logoFile');}else{	$logo = $this->baseurl . "/templates/" . $this->template . "/images/logo.png";}?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php echo $this->language; ?>" lang="<?php echo $this->language; ?>" dir="<?php echo $this->direction; ?>"><head>	<title><?php echo $this->title; ?> <?php echo $this->error->getMessage();?></title>	<meta name="viewport" content="width=device-width, initial-scale=1.0">	<meta http-equiv="content-type" content="text/html; charset=utf-8" />	<meta name="language" content="<?php echo $this->language; ?>" />	<link rel="stylesheet" href="<?php echo $this->baseurl ?>/templates/<?php echo $this->template; ?>/css/template.css" type="text/css" />	<?php		$debug = JFactory::getConfig()->get('debug_lang');		if ((defined('JDEBUG') && JDEBUG) || $debug)		{	?>		<link rel="stylesheet" href="<?php echo $this->baseurl ?>/media/cms/css/debug.css" type="text/css" />	<?php		}	?>	<?php	// If Right-to-Left	if ($this->direction == 'rtl')	{	?>		<link rel="stylesheet" href="<?php echo $this->baseurl ?>/media/jui/css/bootstrap-rtl.css" type="text/css" />	<?php	}	// Use of Google Font	if ($params->get('googleFont'))	{	?>		<link href='http://fonts.googleapis.com/css?family=<?php echo $params->get('googleFontName');?>' rel='stylesheet' type='text/css'>	<?php	}	?>	<link href="<?php echo $this->baseurl ?>/templates/<?php echo $this->template; ?>/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />	<?php	// Template color	if ($params->get('templateColor'))	{	?>	<style type="text/css">		body.site		{			border-top: 3px solid <?php echo $params->get('templateColor');?>;			background-color: <?php echo $params->get('templateBackgroundColor');?>		}		a		{			color: <?php echo $params->get('templateColor');?>;		}		.navbar-inner, .nav-list > .active > a, .nav-list > .active > a:hover, .dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .active > a:hover, .nav-pills > .active > a, .nav-pills > .active > a:hover		{			background: <?php echo $params->get('templateColor');?>;		}		.navbar-inner		{			-moz-box-shadow: 0 1px 3px rgba(0, 0, 0, .25), inset 0 -1px 0 rgba(0, 0, 0, .1), inset 0 30px 10px rgba(0, 0, 0, .2);			-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, .25), inset 0 -1px 0 rgba(0, 0, 0, .1), inset 0 30px 10px rgba(0, 0, 0, .2);			box-shadow: 0 1px 3px rgba(0, 0, 0, .25), inset 0 -1px 0 rgba(0, 0, 0, .1), inset 0 30px 10px rgba(0, 0, 0, .2);		}	</style>	<?php	}	?>	<!--[if lt IE 9]>		<script src="<?php echo $this->baseurl ?>/media/jui/js/html5.js"></script>	<![endif]--></head><body class="site <?php echo $option	. ' view-' . $view	. ($layout ? ' layout-' . $layout : ' no-layout')	. ($task ? ' task-' . $task : ' no-task')	. ($itemid ? ' itemid-' . $itemid : '')	. ($params->get('fluidContainer') ? ' fluid' : '');?>">	<!-- Body -->	<div class="body">		<div class="container<?php echo ($params->get('fluidContainer') ? '-fluid' : '');?>">			<!-- Header -->			<div class="header">				<div class="header-inner clearfix">					<a class="brand pull-left" href="<?php echo $this->baseurl; ?>">						<img src="<?php echo $logo;?>" alt="<?php echo $sitename; ?>" />					</a>					<div class="header-search pull-right">						<?php						// Display position-0 modules						$this->searchmodules = JModuleHelper::getModules('position-0');						foreach ($this->searchmodules as $searchmodule)						{							$output = JModuleHelper::renderModule($searchmodule, array('style' => 'none'));							$params = new JRegistry;							$params->loadString($searchmodule->params);							echo $output;						}						?>					</div>				</div>			</div>			<div class="navigation">				<?php				// Display position-1 modules				$this->navmodules = JModuleHelper::getModules('position-1');				foreach ($this->navmodules as $navmodule)				{					$output = JModuleHelper::renderModule($navmodule, array('style' => 'none'));					$params = new JRegistry;					$params->loadString($navmodule->params);					echo $output;				}				?>			</div>			<!-- Banner -->			<div class="banner">				<jdoc:include type="modules" name="banner" style="xhtml" />			</div>			<div class="row-fluid">				<div id="content" class="span12">					<!-- Begin Content -->					<h1 class="page-header"><?php echo JText::_('JERROR_LAYOUT_PAGE_NOT_FOUND'); ?></h1>					<div class="well">						<div class="row-fluid">							<div class="span6">								<p><strong><?php echo JText::_('JERROR_LAYOUT_ERROR_HAS_OCCURRED_WHILE_PROCESSING_YOUR_REQUEST'); ?></strong></p>								<p><?php echo JText::_('JERROR_LAYOUT_NOT_ABLE_TO_VISIT'); ?></p>								<ul>									<li><?php echo JText::_('JERROR_LAYOUT_AN_OUT_OF_DATE_BOOKMARK_FAVOURITE'); ?></li>									<li><?php echo JText::_('JERROR_LAYOUT_MIS_TYPED_ADDRESS'); ?></li>									<li><?php echo JText::_('JERROR_LAYOUT_SEARCH_ENGINE_OUT_OF_DATE_LISTING'); ?></li>									<li><?php echo JText::_('JERROR_LAYOUT_YOU_HAVE_NO_ACCESS_TO_THIS_PAGE'); ?></li>								</ul>							</div>							<div class="span6">								<?php if (JModuleHelper::getModule('search')) : ?>									<p><strong><?php echo JText::_('JERROR_LAYOUT_SEARCH'); ?></strong></p>									<p><?php echo JText::_('JERROR_LAYOUT_SEARCH_PAGE'); ?></p>									<?php										$module = JModuleHelper::getModule('search');										echo JModuleHelper::renderModule($module);									?>								<?php endif; ?>								<p><?php echo JText::_('JERROR_LAYOUT_GO_TO_THE_HOME_PAGE'); ?></p>								<p><a href="<?php echo $this->baseurl; ?>/index.php" class="btn"><i class="icon-home"></i> <?php echo JText::_('JERROR_LAYOUT_HOME_PAGE'); ?></a></p>							</div>						</div>						<hr />						<p><?php echo JText::_('JERROR_LAYOUT_PLEASE_CONTACT_THE_SYSTEM_ADMINISTRATOR'); ?></p>						<blockquote>							<span class="label label-inverse"><?php echo $this->error->getCode(); ?></span> <?php echo $this->error->getMessage();?>						</blockquote>					</div>					<!-- End Content -->				</div>			</div>		</div>	</div>	<!-- Footer -->	<div class="footer">		<div class="container<?php echo ($params->get('fluidContainer') ? '-fluid' : '');?>">			<hr />			<jdoc:include type="modules" name="footer" style="none" />			<p class="pull-right"><a href="#top" id="back-top"><?php echo JText::_('TPL_PROTOSTAR_BACKTOTOP'); ?></a></p>			<p>&copy; <?php echo $sitename; ?> <?php echo date('Y');?></p>		</div>	</div>	<jdoc:include type="modules" name="debug" style="none" /></body></html>
