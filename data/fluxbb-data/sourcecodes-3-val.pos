<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Fetch some info about the post, the topic and the forum$result = $db->query('SELECT f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.first_post_id, t.closed, p.posted, p.poster, p.poster_id, p.message, p.hide_smilies FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_post = $db->fetch_assoc($result);if ($pun_config['o_censoring'] == '1')	$cur_post['subject'] = censor_words($cur_post['subject']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;$is_topic_post = ($id == $cur_post['first_post_id']) ? true : false;// Do we have permission to edit this post?if (($pun_user['g_delete_posts'] == '0' ||	($pun_user['g_delete_topics'] == '0' && $is_topic_post) ||	$cur_post['poster_id'] != $pun_user['id'] ||	$cur_post['closed'] == '1') &&	!$is_admmod)	message($lang_common['No permission'], false, '403 Forbidden');// Load the delete.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/delete.php';if (isset($_POST['delete'])){	if ($is_admmod)		confirm_referrer('delete.php');	require PUN_ROOT.'include/search_idx.php';	if ($is_topic_post)	{		// Delete the topic and all of its posts		delete_topic($cur_post['tid']);		update_forum($cur_post['fid']);		redirect('viewforum.php?id='.$cur_post['fid'], $lang_delete['Topic del redirect']);	}	else	{		// Delete just this one post		delete_post($id, $cur_post['tid']);		update_forum($cur_post['fid']);		// Redirect towards the previous post		$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['tid'].' AND id < '.$id.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());		$post_id = $db->result($result);		redirect('viewtopic.php?pid='.$post_id.'#p'.$post_id, $lang_delete['Post del redirect']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_delete['Delete post']);define ('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';require PUN_ROOT.'include/parser.php';$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?pid=<?php echo $id ?>#p<?php echo $id ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_delete['Delete post'] ?></strong></li>		</ul>	</div></div><div class="blockform">	<h2><span><?php echo $lang_delete['Delete post'] ?></span></h2>	<div class="box">		<form method="post" action="delete.php?id=<?php echo $id ?>">			<div class="inform">				<div class="forminfo">					<h3><span><?php printf($is_topic_post ? $lang_delete['Topic by'] : $lang_delete['Reply by'], '<strong>'.pun_htmlspecialchars($cur_post['poster']).'</strong>', format_time($cur_post['posted'])) ?></span></h3>					<p><?php echo ($is_topic_post) ? '<strong>'.$lang_delete['Topic warning'].'</strong>' : '<strong>'.$lang_delete['Warning'].'</strong>' ?><br /><?php echo $lang_delete['Delete info'] ?></p>				</div>			</div>			<p class="buttons"><input type="submit" name="delete" value="<?php echo $lang_delete['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><div id="postreview">	<div class="blockpost">		<div class="box">			<div class="inbox">				<div class="postbody">					<div class="postleft">						<dl>							<dt><strong><?php echo pun_htmlspecialchars($cur_post['poster']) ?></strong></dt>							<dd><span><?php echo format_time($cur_post['posted']) ?></span></dd>						</dl>					</div>					<div class="postright">						<div class="postmsg">							<?php echo $cur_post['message']."\n" ?>						</div>					</div>				</div>				<div class="clearer"></div>			</div>		</div>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if ($pun_user['g_id'] != PUN_ADMIN)	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_censoring.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_groups.php';// Fetch all groups$result = $db->query('SELECT * FROM '.$db->prefix.'groups ORDER BY g_id') or error('Unable to fetch user groups', __FILE__, __LINE__, $db->error());$groups = array();while ($cur_group = $db->fetch_assoc($result))	$groups[$cur_group['g_id']] = $cur_group;// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		$base_group = intval($_POST['base_group']);		$group = $groups[$base_group];		$mode = 'add';	}	else // We are editing a group	{		$group_id = intval($_GET['edit_group']);		if ($group_id < 1 || !isset($groups[$group_id]))			message($lang_common['Bad request']);		$group = $groups[$group_id];		$mode = 'edit';	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);	$required_fields = array('req_title' => $lang_admin_groups['Group title label']);	$focus_element = array('groups2', 'req_title');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Group settings head'] ?></span></h2>		<div class="box">			<form id="groups2" method="post" action="admin_groups.php" onsubmit="return process_form(this)">				<p class="submittop"><input type="submit" name="add_edit_group" value="<?php echo $lang_admin_common['Save'] ?>" /></p>				<div class="inform">					<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>					<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; ?><?php if ($mode == 'add'): ?>					<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>					<fieldset>						<legend><?php echo $lang_admin_groups['Group settings subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_groups['Group settings info'] ?></p>							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['Group title label'] ?></th>									<td>										<input type="text" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo pun_htmlspecialchars($group['g_title']); ?>" tabindex="1" />									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User title label'] ?></th>									<td>										<input type="text" name="user_title" size="25" maxlength="50" value="<?php echo pun_htmlspecialchars($group['g_user_title']) ?>" tabindex="2" />										<span><?php printf($lang_admin_groups['User title help'], ($group['g_id'] != PUN_GUEST ? $lang_common['Member'] : $lang_common['Guest'])) ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_ADMIN): if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Promote users label'] ?></th>									<td>										<select name="promote_next_group" tabindex="3">											<option value="0"><?php echo $lang_admin_groups['Disable promotion'] ?></option><?phpforeach ($groups as $cur_group){	if (($cur_group['g_id'] != $group['g_id'] || $mode == 'add') && $cur_group['g_id'] != PUN_ADMIN && $cur_group['g_id'] != PUN_GUEST)	{		if ($cur_group['g_id'] == $group['g_promote_next_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<input type="text" name="promote_min_posts" size="5" maxlength="10" value="<?php echo pun_htmlspecialchars($group['g_promote_min_posts']) ?>" tabindex="4" />										<span><?php printf($lang_admin_groups['Promote users help'], $lang_admin_groups['Disable promotion']) ?></span>									</td>								</tr><?php if ($mode != 'edit' || $pun_config['o_default_user_group'] != $group['g_id']): ?>								<tr>									<th scope="row"> <?php echo $lang_admin_groups['Mod privileges label'] ?></th>									<td>										<label class="conl"><input type="radio" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> tabindex="5" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="moderator" value="0"<?php if ($group['g_moderator'] == '0') echo ' checked="checked"' ?> tabindex="6" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Mod privileges help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Edit profile label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> tabindex="7" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_edit_users" value="0"<?php if ($group['g_mod_edit_users'] == '0') echo ' checked="checked"' ?> tabindex="8" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Edit profile help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Rename users label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> tabindex="9" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_rename_users" value="0"<?php if ($group['g_mod_rename_users'] == '0') echo ' checked="checked"' ?> tabindex="10" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Rename users help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Change passwords label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> tabindex="11" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_change_passwords" value="0"<?php if ($group['g_mod_change_passwords'] == '0') echo ' checked="checked"' ?> tabindex="12" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Change passwords help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Ban users label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> tabindex="13" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_ban_users" value="0"<?php if ($group['g_mod_ban_users'] == '0') echo ' checked="checked"' ?> tabindex="14" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Ban users help'] ?></span>									</td>								</tr><?php endif; endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Read board label'] ?></th>									<td>										<label class="conl"><input type="radio" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> tabindex="15" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="read_board" value="0"<?php if ($group['g_read_board'] == '0') echo ' checked="checked"' ?> tabindex="16" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Read board help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['View user info label'] ?></th>									<td>										<label class="conl"><input type="radio" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> tabindex="17" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="view_users" value="0"<?php if ($group['g_view_users'] == '0') echo ' checked="checked"' ?> tabindex="18" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['View user info help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post replies label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> tabindex="19" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_replies" value="0"<?php if ($group['g_post_replies'] == '0') echo ' checked="checked"' ?> tabindex="20" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post replies help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post topics label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> tabindex="21" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_topics" value="0"<?php if ($group['g_post_topics'] == '0') echo ' checked="checked"' ?> tabindex="22" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post topics help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Edit posts label'] ?></th>									<td>										<label class="conl"><input type="radio" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> tabindex="23" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="edit_posts" value="0"<?php if ($group['g_edit_posts'] == '0') echo ' checked="checked"' ?> tabindex="24" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Edit posts help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Delete posts label'] ?></th>									<td>										<label class="conl"><input type="radio" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> tabindex="25" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="delete_posts" value="0"<?php if ($group['g_delete_posts'] == '0') echo ' checked="checked"' ?> tabindex="26" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Delete posts help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Delete topics label'] ?></th>									<td>										<label class="conl"><input type="radio" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> tabindex="27" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="delete_topics" value="0"<?php if ($group['g_delete_topics'] == '0') echo ' checked="checked"' ?> tabindex="28" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Delete topics help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post links label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_links" value="1"<?php if ($group['g_post_links'] == '1') echo ' checked="checked"' ?> tabindex="29" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_links" value="0"<?php if ($group['g_post_links'] == '0') echo ' checked="checked"' ?> tabindex="30" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post links help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Set own title label'] ?></th>									<td>										<label class="conl"><input type="radio" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> tabindex="31" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="set_title" value="0"<?php if ($group['g_set_title'] == '0') echo ' checked="checked"' ?> tabindex="32" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Set own title help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User search label'] ?></th>									<td>										<label class="conl"><input type="radio" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> tabindex="33" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="search" value="0"<?php if ($group['g_search'] == '0') echo ' checked="checked"' ?> tabindex="34" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['User search help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User list search label'] ?></th>									<td>										<label class="conl"><input type="radio" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> tabindex="35" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="search_users" value="0"<?php if ($group['g_search_users'] == '0') echo ' checked="checked"' ?> tabindex="36" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['User list search help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Send e-mails label'] ?></th>									<td>										<label class="conl"><input type="radio" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> tabindex="37" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="send_email" value="0"<?php if ($group['g_send_email'] == '0') echo ' checked="checked"' ?> tabindex="38" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Send e-mails help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post flood label'] ?></th>									<td>										<input type="text" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" tabindex="39" />										<span><?php echo $lang_admin_groups['Post flood help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Search flood label'] ?></th>									<td>										<input type="text" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" tabindex="40" />										<span><?php echo $lang_admin_groups['Search flood help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['E-mail flood label'] ?></th>									<td>										<input type="text" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" tabindex="41" />										<span><?php echo $lang_admin_groups['E-mail flood help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Report flood label'] ?></th>									<td>										<input type="text" name="report_flood" size="5" maxlength="4" value="<?php echo $group['g_report_flood'] ?>" tabindex="42" />										<span><?php echo $lang_admin_groups['Report flood help'] ?></span>									</td>								</tr><?php endif; endif; ?>							</table><?php if ($group['g_moderator'] == '1' ): ?>							<p class="warntext"><?php echo $lang_admin_groups['Moderator info'] ?></p><?php endif; ?>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="add_edit_group" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="43" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	confirm_referrer('admin_groups.php');	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == PUN_ADMIN) ? true : false;	$title = pun_trim($_POST['req_title']);	$user_title = pun_trim($_POST['user_title']);	$promote_min_posts = isset($_POST['promote_min_posts']) ? intval($_POST['promote_min_posts']) : '0';	if (isset($_POST['promote_next_group']) &&			isset($groups[$_POST['promote_next_group']]) &&			!in_array($_POST['promote_next_group'], array(PUN_ADMIN, PUN_GUEST)) &&			(!isset($_POST['group_id']) || $_POST['promote_next_group'] != $_POST['group_id']))		$promote_next_group = $_POST['promote_next_group'];	else		$promote_next_group = '0';	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = isset($_POST['read_board']) ? intval($_POST['read_board']) : '1';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = isset($_POST['post_replies']) ? intval($_POST['post_replies']) : '1';	$post_topics = isset($_POST['post_topics']) ? intval($_POST['post_topics']) : '1';	$edit_posts = isset($_POST['edit_posts']) ? intval($_POST['edit_posts']) : ($is_admin_group) ? '1' : '0';	$delete_posts = isset($_POST['delete_posts']) ? intval($_POST['delete_posts']) : ($is_admin_group) ? '1' : '0';	$delete_topics = isset($_POST['delete_topics']) ? intval($_POST['delete_topics']) : ($is_admin_group) ? '1' : '0';	$post_links = isset($_POST['post_links']) ? intval($_POST['post_links']) : '1';	$set_title = isset($_POST['set_title']) ? intval($_POST['set_title']) : ($is_admin_group) ? '1' : '0';	$search = isset($_POST['search']) ? intval($_POST['search']) : '1';	$search_users = isset($_POST['search_users']) ? intval($_POST['search_users']) : '1';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = (isset($_POST['post_flood']) && $_POST['post_flood'] >= 0) ? intval($_POST['post_flood']) : '0';	$search_flood = (isset($_POST['search_flood']) && $_POST['search_flood'] >= 0) ? intval($_POST['search_flood']) : '0';	$email_flood = (isset($_POST['email_flood']) && $_POST['email_flood'] >= 0) ? intval($_POST['email_flood']) : '0';	$report_flood = (isset($_POST['report_flood']) && $_POST['report_flood'] >= 0) ? intval($_POST['report_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter title message']);	$user_title = ($user_title != '') ? '\''.$db->escape($user_title).'\'' : 'NULL';	if ($_POST['mode'] == 'add')	{		$result = $db->query('SELECT 1 FROM '.$db->prefix.'groups WHERE g_title=\''.$db->escape($title).'\'') or error('Unable to check group title collision', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message(sprintf($lang_admin_groups['Title already exists message'], pun_htmlspecialchars($title)));		$db->query('INSERT INTO '.$db->prefix.'groups (g_title, g_user_title, g_promote_min_posts, g_promote_next_group, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_post_links, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES(\''.$db->escape($title).'\', '.$user_title.', '.$promote_min_posts.', '.$promote_next_group.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$post_links.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood.', '.$report_flood.')') or error('Unable to add group', __FILE__, __LINE__, $db->error());		$new_group_id = $db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$result = $db->query('SELECT forum_id, read_forum, post_replies, post_topics FROM '.$db->prefix.'forum_perms WHERE group_id='.intval($_POST['base_group'])) or error('Unable to fetch group forum permission list', __FILE__, __LINE__, $db->error());		while ($cur_forum_perm = $db->fetch_assoc($result))			$db->query('INSERT INTO '.$db->prefix.'forum_perms (group_id, forum_id, read_forum, post_replies, post_topics) VALUES('.$new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics'].')') or error('Unable to insert group forum permissions', __FILE__, __LINE__, $db->error());	}	else	{		$result = $db->query('SELECT 1 FROM '.$db->prefix.'groups WHERE g_title=\''.$db->escape($title).'\' AND g_id!='.intval($_POST['group_id'])) or error('Unable to check group title collision', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message(sprintf($lang_admin_groups['Title already exists message'], pun_htmlspecialchars($title)));		$db->query('UPDATE '.$db->prefix.'groups SET g_title=\''.$db->escape($title).'\', g_user_title='.$user_title.', g_promote_min_posts='.$promote_min_posts.', g_promote_next_group='.$promote_next_group.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_post_links='.$post_links.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood.', g_report_flood='.$report_flood.' WHERE g_id='.intval($_POST['group_id'])) or error('Unable to update group', __FILE__, __LINE__, $db->error());	}	// Regenerate the quick jump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	$group_id = $_POST['mode'] == 'add' ? $new_group_id : intval($_POST['group_id']);	generate_quickjump_cache($group_id);	if ($_POST['mode'] == 'edit')		redirect('admin_groups.php', $lang_admin_groups['Group edited redirect']);	else		redirect('admin_groups.php', $lang_admin_groups['Group added redirect']);}// Set default groupelse if (isset($_POST['set_default_group'])){	confirm_referrer('admin_groups.php');	$group_id = intval($_POST['default_group']);	// Make sure it's not the admin or guest groups	if ($group_id == PUN_ADMIN || $group_id == PUN_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	if ($groups[$group_id]['g_moderator'] != 0)		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'config SET conf_value='.$group_id.' WHERE conf_name=\'o_default_user_group\'') or error('Unable to update board config', __FILE__, __LINE__, $db->error());	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_config_cache();	redirect('admin_groups.php', $lang_admin_groups['Default group redirect']);}// Remove a groupelse if (isset($_GET['del_group'])){	confirm_referrer('admin_groups.php');	$group_id = isset($_POST['group_to_delete']) ? intval($_POST['group_to_delete']) : intval($_GET['del_group']);	if ($group_id < 5)		message($lang_common['Bad request']);	// Make sure we don't remove the default group	if ($group_id == $pun_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default message']);	// Check if this group has any members	$result = $db->query('SELECT g.g_title, COUNT(u.id) FROM '.$db->prefix.'groups AS g INNER JOIN '.$db->prefix.'users AS u ON g.g_id=u.group_id WHERE g.g_id='.$group_id.' GROUP BY g.g_id, g_title') or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$db->num_rows($result) || isset($_POST['del_group']))	{		if (isset($_POST['del_group_comply']) || isset($_POST['del_group']))		{			if (isset($_POST['del_group']))			{				$move_to_group = intval($_POST['move_to_group']);				$db->query('UPDATE '.$db->prefix.'users SET group_id='.$move_to_group.' WHERE group_id='.$group_id) or error('Unable to move users into group', __FILE__, __LINE__, $db->error());			}			// Delete the group and any forum specific permissions			$db->query('DELETE FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to delete group', __FILE__, __LINE__, $db->error());			$db->query('DELETE FROM '.$db->prefix.'forum_perms WHERE group_id='.$group_id) or error('Unable to delete group forum permissions', __FILE__, __LINE__, $db->error());			// Don't let users be promoted to this group			$db->query('UPDATE '.$db->prefix.'groups SET g_promote_next_group=0 WHERE g_promote_next_group='.$group_id) or error('Unable to remove group as promotion target', __FILE__, __LINE__, $db->error());			redirect('admin_groups.php', $lang_admin_groups['Group removed redirect']);		}		else		{			$result = $db->query('SELECT g_title FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group title', __FILE__, __LINE__, $db->error());			$group_title = $db->result($result);			$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);			define('PUN_ACTIVE_PAGE', 'admin');			require PUN_ROOT.'header.php';			generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Group delete head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_groups.php?del_group=<?php echo $group_id ?>">				<div class="inform">				<input type="hidden" name="group_to_delete" value="<?php echo $group_id ?>" />					<fieldset>						<legend><?php echo $lang_admin_groups['Confirm delete subhead'] ?></legend>						<div class="infldset">							<p><?php printf($lang_admin_groups['Confirm delete info'], pun_htmlspecialchars($group_title)) ?></p>							<p class="warntext"><?php echo $lang_admin_groups['Confirm delete warn'] ?></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="del_group_comply" value="<?php echo $lang_admin_common['Delete'] ?>" tabindex="1" /><a href="javascript:history.go(-1)" tabindex="2"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php			require PUN_ROOT.'footer.php';		}	}	list($group_title, $group_members) = $db->fetch_row($result);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Delete group head'] ?></span></h2>		<div class="box">			<form id="groups" method="post" action="admin_groups.php?del_group=<?php echo $group_id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Move users subhead'] ?></legend>						<div class="infldset">							<p><?php printf($lang_admin_groups['Move users info'], pun_htmlspecialchars($group_title), forum_number_format($group_members)) ?></p>							<label><?php echo $lang_admin_groups['Move users label'] ?>							<select name="move_to_group"><?php	$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id!='.PUN_GUEST.' AND g_id!='.$group_id.' ORDER BY g_title') or error('Unable to fetch user group list', __FILE__, __LINE__, $db->error());	while ($cur_group = $db->fetch_assoc($result))	{		if ($cur_group['g_id'] == PUN_MEMBER) // Pre-select the pre-defined Members group			echo "\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}?>							</select>							<br /></label>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Delete group'] ?>" /><a href="javascript:history.go(-1)"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);define('PUN_ACTIVE_PAGE', 'admin');require PUN_ROOT.'header.php';generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Add groups head'] ?></span></h2>		<div class="box">			<form id="groups" method="post" action="admin_groups.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Add group subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['New group label'] ?><div><input type="submit" name="add_group" value="<?php echo $lang_admin_common['Add'] ?>" tabindex="2" /></div></th>									<td>										<select id="base_group" name="base_group" tabindex="1"><?phpforeach ($groups as $cur_group){	if ($cur_group['g_id'] != PUN_ADMIN && $cur_group['g_id'] != PUN_GUEST)	{		if ($cur_group['g_id'] == $pun_config['o_default_user_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<span><?php echo $lang_admin_groups['New group help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Default group subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['Default group label'] ?><div><input type="submit" name="set_default_group" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="4" /></div></th>									<td>										<select id="default_group" name="default_group" tabindex="3"><?phpforeach ($groups as $cur_group){	if ($cur_group['g_id'] > PUN_GUEST && $cur_group['g_moderator'] == 0)	{		if ($cur_group['g_id'] == $pun_config['o_default_user_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<span><?php echo $lang_admin_groups['Default group help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div>		<h2 class="block2"><span><?php echo $lang_admin_groups['Existing groups head'] ?></span></h2>		<div class="box">			<div class="fakeform">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Edit groups subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_groups['Edit groups info'] ?></p>							<table cellspacing="0"><?php$cur_index = 5;foreach ($groups as $cur_group)	echo "\t\t\t\t\t\t\t\t".'<tr><th scope="row"><a href="admin_groups.php?edit_group='.$cur_group['g_id'].'" tabindex="'.$cur_index++.'">'.$lang_admin_groups['Edit link'].'</a>'.(($cur_group['g_id'] > PUN_MEMBER) ? ' | <a href="admin_groups.php?del_group='.$cur_group['g_id'].'" tabindex="'.$cur_index++.'">'.$lang_admin_groups['Delete link'].'</a>' : '').'</th><td>'.pun_htmlspecialchars($cur_group['g_title']).'</td></tr>'."\n";?>							</table>						</div>					</fieldset>				</div>			</div>		</div>	</div>	<div class="clearer"></div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */if (isset($_GET['action']))	define('PUN_QUIET_VISIT', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// Load the misc.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/misc.php';$action = isset($_GET['action']) ? $_GET['action'] : null;if ($action == 'rules'){	if ($pun_config['o_rules'] == '0' || ($pun_user['is_guest'] && $pun_user['g_read_board'] == '0' && $pun_config['o_regs_allow'] == '0'))		message($lang_common['Bad request']);	// Load the register.php language file	require PUN_ROOT.'lang/'.$pun_user['language'].'/register.php';	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_register['Forum rules']);	define('PUN_ACTIVE_PAGE', 'rules');	require PUN_ROOT.'header.php';?><div id="rules" class="block">	<div class="hd"><h2><span><?php echo $lang_register['Forum rules'] ?></span></h2></div>	<div class="box">		<div id="rules-block" class="inbox">			<div class="usercontent"><?php echo $pun_config['o_rules_message'] ?></div>		</div>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'markread'){	if ($pun_user['is_guest'])		message($lang_common['No permission'], false, '403 Forbidden');	$db->query('UPDATE '.$db->prefix.'users SET last_visit='.$pun_user['logged'].' WHERE id='.$pun_user['id']) or error('Unable to update user last visit data', __FILE__, __LINE__, $db->error());	// Reset tracked topics	set_tracked_topics(null);	redirect('index.php', $lang_misc['Mark read redirect']);}// Mark the topics/posts in a forum as read?else if ($action == 'markforumread'){	if ($pun_user['is_guest'])		message($lang_common['No permission'], false, '403 Forbidden');	$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;	if ($fid < 1)		message($lang_common['Bad request']);	$tracked_topics = get_tracked_topics();	$tracked_topics['forums'][$fid] = time();	set_tracked_topics($tracked_topics);	redirect('viewforum.php?id='.$fid, $lang_misc['Mark forum read redirect']);}else if (isset($_GET['email'])){	if ($pun_user['is_guest'] || $pun_user['g_send_email'] == '0')		message($lang_common['No permission'], false, '403 Forbidden');	$recipient_id = intval($_GET['email']);	if ($recipient_id < 2)		message($lang_common['Bad request']);	$result = $db->query('SELECT username, email, email_setting FROM '.$db->prefix.'users WHERE id='.$recipient_id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if (!$db->num_rows($result))		message($lang_common['Bad request']);	list($recipient, $recipient_email, $email_setting) = $db->fetch_row($result);	if ($email_setting == 2 && !$pun_user['is_admmod'])		message($lang_misc['Form email disabled']);	if (isset($_POST['form_sent']))	{		// Clean up message and subject from POST		$subject = pun_trim($_POST['req_subject']);		$message = pun_trim($_POST['req_message']);		if ($subject == '')			message($lang_misc['No email subject']);		else if ($message == '')			message($lang_misc['No email message']);		else if (pun_strlen($message) > PUN_MAX_POSTSIZE)			message($lang_misc['Too long email message']);		if ($pun_user['last_email_sent'] != '' && (time() - $pun_user['last_email_sent']) < $pun_user['g_email_flood'] && (time() - $pun_user['last_email_sent']) >= 0)			message(sprintf($lang_misc['Email flood'], $pun_user['g_email_flood'], $pun_user['g_email_flood'] - (time() - $pun_user['last_email_sent'])));		// Load the "form email" template		$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/form_email.tpl'));		// The first row contains the subject		$first_crlf = strpos($mail_tpl, "\n");		$mail_subject = pun_trim(substr($mail_tpl, 8, $first_crlf-8));		$mail_message = pun_trim(substr($mail_tpl, $first_crlf));		$mail_subject = str_replace('<mail_subject>', $subject, $mail_subject);		$mail_message = str_replace('<sender>', $pun_user['username'], $mail_message);		$mail_message = str_replace('<board_title>', $pun_config['o_board_title'], $mail_message);		$mail_message = str_replace('<mail_message>', $message, $mail_message);		$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);		require_once PUN_ROOT.'include/email.php';		pun_mail($recipient_email, $mail_subject, $mail_message, $pun_user['email'], $pun_user['username']);		$db->query('UPDATE '.$db->prefix.'users SET last_email_sent='.time().' WHERE id='.$pun_user['id']) or error('Unable to update user', __FILE__, __LINE__, $db->error());		redirect(pun_htmlspecialchars($_POST['redirect_url']), $lang_misc['Email sent redirect']);	}	// Try to determine if the data in HTTP_REFERER is valid (if not, we redirect to the user's profile after the email is sent)	if (!empty($_SERVER['HTTP_REFERER']))	{		$referrer = parse_url($_SERVER['HTTP_REFERER']);		// Remove www subdomain if it exists		if (strpos($referrer['host'], 'www.') === 0)			$referrer['host'] = substr($referrer['host'], 4);		// Make sure the path component exists		if (!isset($referrer['path']))			$referrer['path'] = '';		$valid = parse_url(get_base_url());		// Remove www subdomain if it exists		if (strpos($valid['host'], 'www.') === 0)			$valid['host'] = substr($valid['host'], 4);		// Make sure the path component exists		if (!isset($valid['path']))			$valid['path'] = '';		if ($referrer['host'] == $valid['host'] && preg_match('%^'.preg_quote($valid['path'], '%').'/(.*?)\.php%i', $referrer['path']))			$redirect_url = $_SERVER['HTTP_REFERER'];	}	if (!isset($redirect_url))		$redirect_url = 'profile.php?id='.$recipient_id;	else if (preg_match('%viewtopic\.php\?pid=(\d+)$%', $redirect_url, $matches))		$redirect_url .= '#p'.$matches[1];	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Send email to'].' '.pun_htmlspecialchars($recipient));	$required_fields = array('req_subject' => $lang_misc['Email subject'], 'req_message' => $lang_misc['Email message']);	$focus_element = array('email', 'req_subject');	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div id="emailform" class="blockform">	<h2><span><?php echo $lang_misc['Send email to'] ?> <?php echo pun_htmlspecialchars($recipient) ?></span></h2>	<div class="box">		<form id="email" method="post" action="misc.php?email=<?php echo $recipient_id ?>" onsubmit="this.submit.disabled=true;if(process_form(this)){return true;}else{this.submit.disabled=false;return false;}">			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Write email'] ?></legend>					<div class="infldset txtarea">						<input type="hidden" name="form_sent" value="1" />						<input type="hidden" name="redirect_url" value="<?php echo pun_htmlspecialchars($redirect_url) ?>" />						<label class="required"><strong><?php echo $lang_misc['Email subject'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input class="longinput" type="text" name="req_subject" size="75" maxlength="70" tabindex="1" /><br /></label>						<label class="required"><strong><?php echo $lang_misc['Email message'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<textarea name="req_message" rows="10" cols="75" tabindex="2"></textarea><br /></label>						<p><?php echo $lang_misc['Email disclosure note'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" tabindex="3" accesskey="s" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if (isset($_GET['report'])){	if ($pun_user['is_guest'])		message($lang_common['No permission']);	$post_id = intval($_GET['report']);	if ($post_id < 1)		message($lang_common['Bad request']);	if (isset($_POST['form_sent']))	{		// Clean up reason from POST		$reason = pun_linebreaks(pun_trim($_POST['req_reason']));		if ($reason == '')			message($lang_misc['No reason']);		else if (strlen($reason) > 65535) // TEXT field can only hold 65535 bytes			message($lang_misc['Reason too long']);		if ($pun_user['last_report_sent'] != '' && (time() - $pun_user['last_report_sent']) < $pun_user['g_report_flood'] && (time() - $pun_user['last_report_sent']) >= 0)			message(sprintf($lang_misc['Report flood'], $pun_user['g_report_flood'], $pun_user['g_report_flood'] - (time() - $pun_user['last_report_sent'])));		// Get the topic ID		$result = $db->query('SELECT topic_id FROM '.$db->prefix.'posts WHERE id='.$post_id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request']);		$topic_id = $db->result($result);		// Get the subject and forum ID		$result = $db->query('SELECT subject, forum_id FROM '.$db->prefix.'topics WHERE id='.$topic_id) or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request']);		list($subject, $forum_id) = $db->fetch_row($result);		// Should we use the internal report handling?		if ($pun_config['o_report_method'] == '0' || $pun_config['o_report_method'] == '2')			$db->query('INSERT INTO '.$db->prefix.'reports (post_id, topic_id, forum_id, reported_by, created, message) VALUES('.$post_id.', '.$topic_id.', '.$forum_id.', '.$pun_user['id'].', '.time().', \''.$db->escape($reason).'\')' ) or error('Unable to create report', __FILE__, __LINE__, $db->error());		// Should we email the report?		if ($pun_config['o_report_method'] == '1' || $pun_config['o_report_method'] == '2')		{			// We send it to the complete mailing-list in one swoop			if ($pun_config['o_mailing_list'] != '')			{				// Load the "new report" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/new_report.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_subject = str_replace('<forum_id>', $forum_id, $mail_subject);				$mail_subject = str_replace('<topic_subject>', $subject, $mail_subject);				$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);				$mail_message = str_replace('<post_url>', get_base_url().'/viewtopic.php?pid='.$post_id.'#p'.$post_id, $mail_message);				$mail_message = str_replace('<reason>', $reason, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				require PUN_ROOT.'include/email.php';				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		$db->query('UPDATE '.$db->prefix.'users SET last_report_sent='.time().' WHERE id='.$pun_user['id']) or error('Unable to update user', __FILE__, __LINE__, $db->error());		redirect('viewforum.php?id='.$forum_id, $lang_misc['Report redirect']);	}	// Fetch some info about the post, the topic and the forum	$result = $db->query('SELECT f.id AS fid, f.forum_name, t.id AS tid, t.subject FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$post_id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	if (!$db->num_rows($result))		message($lang_common['Bad request']);	$cur_post = $db->fetch_assoc($result);	if ($pun_config['o_censoring'] == '1')		$cur_post['subject'] = censor_words($cur_post['subject']);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Report post']);	$required_fields = array('req_reason' => $lang_misc['Reason']);	$focus_element = array('report', 'req_reason');	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?pid=<?php echo $post_id ?>#p<?php echo $post_id ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_misc['Report post'] ?></strong></li>		</ul>	</div></div><div id="reportform" class="blockform">	<h2><span><?php echo $lang_misc['Report post'] ?></span></h2>	<div class="box">		<form id="report" method="post" action="misc.php?report=<?php echo $post_id ?>" onsubmit="this.submit.disabled=true;if(process_form(this)){return true;}else{this.submit.disabled=false;return false;}">			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Reason desc'] ?></legend>					<div class="infldset txtarea">						<input type="hidden" name="form_sent" value="1" />						<label class="required"><strong><?php echo $lang_misc['Reason'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><textarea name="req_reason" rows="5" cols="60"></textarea><br /></label>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" accesskey="s" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'subscribe'){	if ($pun_user['is_guest'])		message($lang_common['No permission']);	$topic_id = isset($_GET['tid']) ? intval($_GET['tid']) : 0;	$forum_id = isset($_GET['fid']) ? intval($_GET['fid']) : 0;	if ($topic_id < 1 && $forum_id < 1)		message($lang_common['Bad request']);	if ($topic_id)	{		if ($pun_config['o_topic_subscriptions'] != '1')			message($lang_common['No permission']);		// Make sure the user can view the topic		$result = $db->query('SELECT 1 FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$topic_id.' AND t.moved_to IS NULL') or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request']);		$result = $db->query('SELECT 1 FROM '.$db->prefix.'topic_subscriptions WHERE user_id='.$pun_user['id'].' AND topic_id='.$topic_id) or error('Unable to fetch subscription info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message($lang_misc['Already subscribed topic']);		$db->query('INSERT INTO '.$db->prefix.'topic_subscriptions (user_id, topic_id) VALUES('.$pun_user['id'].' ,'.$topic_id.')') or error('Unable to add subscription', __FILE__, __LINE__, $db->error());		redirect('viewtopic.php?id='.$topic_id, $lang_misc['Subscribe redirect']);	}	if ($forum_id)	{		if ($pun_config['o_forum_subscriptions'] != '1')			message($lang_common['No permission']);		// Make sure the user can view the forum		$result = $db->query('SELECT 1 FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$forum_id) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request']);		$result = $db->query('SELECT 1 FROM '.$db->prefix.'forum_subscriptions WHERE user_id='.$pun_user['id'].' AND forum_id='.$forum_id) or error('Unable to fetch subscription info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message($lang_misc['Already subscribed forum']);		$db->query('INSERT INTO '.$db->prefix.'forum_subscriptions (user_id, forum_id) VALUES('.$pun_user['id'].' ,'.$forum_id.')') or error('Unable to add subscription', __FILE__, __LINE__, $db->error());		redirect('viewforum.php?id='.$forum_id, $lang_misc['Subscribe redirect']);	}}else if ($action == 'unsubscribe'){	if ($pun_user['is_guest'])		message($lang_common['No permission']);	$topic_id = isset($_GET['tid']) ? intval($_GET['tid']) : 0;	$forum_id = isset($_GET['fid']) ? intval($_GET['fid']) : 0;	if ($topic_id < 1 && $forum_id < 1)		message($lang_common['Bad request']);	if ($topic_id)	{		if ($pun_config['o_topic_subscriptions'] != '1')			message($lang_common['No permission']);		$result = $db->query('SELECT 1 FROM '.$db->prefix.'topic_subscriptions WHERE user_id='.$pun_user['id'].' AND topic_id='.$topic_id) or error('Unable to fetch subscription info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_misc['Not subscribed topic']);		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE user_id='.$pun_user['id'].' AND topic_id='.$topic_id) or error('Unable to remove subscription', __FILE__, __LINE__, $db->error());		redirect('viewtopic.php?id='.$topic_id, $lang_misc['Unsubscribe redirect']);	}	if ($forum_id)	{		if ($pun_config['o_forum_subscriptions'] != '1')			message($lang_common['No permission']);		$result = $db->query('SELECT 1 FROM '.$db->prefix.'forum_subscriptions WHERE user_id='.$pun_user['id'].' AND forum_id='.$forum_id) or error('Unable to fetch subscription info', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_misc['Not subscribed forum']);		$db->query('DELETE FROM '.$db->prefix.'forum_subscriptions WHERE user_id='.$pun_user['id'].' AND forum_id='.$forum_id) or error('Unable to remove subscription', __FILE__, __LINE__, $db->error());		redirect('viewforum.php?id='.$forum_id, $lang_misc['Unsubscribe redirect']);	}}else	message($lang_common['Bad request']);
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// If we are logged in, we shouldn't be hereif (!$pun_user['is_guest']){	header('Location: index.php');	exit;}// Load the register.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/register.php';// Load the register.php/profile.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/prof_reg.php';if ($pun_config['o_regs_allow'] == '0')	message($lang_register['No new regs']);// User pressed the cancel buttonif (isset($_GET['cancel']))	redirect('index.php', $lang_register['Reg cancel redirect']);else if ($pun_config['o_rules'] == '1' && !isset($_GET['agree']) && !isset($_POST['form_sent'])){	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_register['Register'], $lang_register['Forum rules']);	define('PUN_ACTIVE_PAGE', 'register');	require PUN_ROOT.'header.php';?><div id="rules" class="blockform">	<div class="hd"><h2><span><?php echo $lang_register['Forum rules'] ?></span></h2></div>	<div class="box">		<form method="get" action="register.php">			<div class="inform">				<fieldset>					<legend><?php echo $lang_register['Rules legend'] ?></legend>					<div class="infldset">						<div class="usercontent"><?php echo $pun_config['o_rules_message'] ?></div>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="agree" value="<?php echo $lang_register['Agree'] ?>" /> <input type="submit" name="cancel" value="<?php echo $lang_register['Cancel'] ?>" /></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	// Check that someone from this IP didn't register a user within the last hour (DoS prevention)	$result = $db->query('SELECT 1 FROM '.$db->prefix.'users WHERE registration_ip=\''.$db->escape(get_remote_address()).'\' AND registered>'.(time() - 3600)) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))		message($lang_register['Registration flood']);	$username = pun_trim($_POST['req_user']);	$email1 = strtolower(pun_trim($_POST['req_email1']));	if ($pun_config['o_regs_verify'] == '1')	{		$email2 = strtolower(pun_trim($_POST['req_email2']));		$password1 = random_pass(8);		$password2 = $password1;	}	else	{		$password1 = pun_trim($_POST['req_password1']);		$password2 = pun_trim($_POST['req_password2']);	}	// Validate username and passwords	check_username($username);	if (pun_strlen($password1) < 4)		$errors[] = $lang_prof_reg['Pass too short'];	else if ($password1 != $password2)		$errors[] = $lang_prof_reg['Pass not match'];	// Validate email	require PUN_ROOT.'include/email.php';	if (!is_valid_email($email1))		$errors[] = $lang_common['Invalid email'];	else if ($pun_config['o_regs_verify'] == '1' && $email1 != $email2)		$errors[] = $lang_register['Email not match'];	// Check if it's a banned email address	if (is_banned_email($email1))	{		if ($pun_config['p_allow_banned_email'] == '0')			$errors[] = $lang_prof_reg['Banned email'];		$banned_email = true; // Used later when we send an alert email	}	else		$banned_email = false;	// Check if someone else already has registered with that email address	$dupe_list = array();	$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE email=\''.$db->escape($email1).'\'') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		if ($pun_config['p_allow_dupe_email'] == '0')			$errors[] = $lang_prof_reg['Dupe email'];		while ($cur_dupe = $db->fetch_assoc($result))			$dupe_list[] = $cur_dupe['username'];	}	// Make sure we got a valid language string	if (isset($_POST['language']))	{		$language = preg_replace('%[\.\\\/]%', '', $_POST['language']);		if (!file_exists(PUN_ROOT.'lang/'.$language.'/common.php'))			message($lang_common['Bad request']);	}	else		$language = $pun_config['o_default_lang'];	$timezone = round($_POST['timezone'], 1);	$dst = isset($_POST['dst']) ? '1' : '0';	$email_setting = intval($_POST['email_setting']);	if ($email_setting < 0 || $email_setting > 2)		$email_setting = $pun_config['o_default_email_setting'];	// Did everything go according to plan?	if (empty($errors))	{		// Insert the new user into the database. We do this now to get the last inserted ID for later use		$now = time();		$intial_group_id = ($pun_config['o_regs_verify'] == '0') ? $pun_config['o_default_user_group'] : PUN_UNVERIFIED;		$password_hash = pun_hash($password1);		// Add the user		$db->query('INSERT INTO '.$db->prefix.'users (username, group_id, password, email, email_setting, timezone, dst, language, style, registered, registration_ip, last_visit) VALUES(\''.$db->escape($username).'\', '.$intial_group_id.', \''.$password_hash.'\', \''.$db->escape($email1).'\', '.$email_setting.', '.$timezone.' , '.$dst.', \''.$db->escape($language).'\', \''.$pun_config['o_default_style'].'\', '.$now.', \''.$db->escape(get_remote_address()).'\', '.$now.')') or error('Unable to create user', __FILE__, __LINE__, $db->error());		$new_uid = $db->insert_id();		// If the mailing list isn't empty, we may need to send out some alerts		if ($pun_config['o_mailing_list'] != '')		{			// If we previously found out that the email was banned			if ($banned_email)			{				// Load the "banned email register" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/banned_email_register.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $username, $mail_message);				$mail_message = str_replace('<email>', $email1, $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$new_uid, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}			// If we previously found out that the email was a dupe			if (!empty($dupe_list))			{				// Load the "dupe email register" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/dupe_email_register.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $username, $mail_message);				$mail_message = str_replace('<dupe_list>', implode(', ', $dupe_list), $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$new_uid, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}			// Should we alert people on the admin mailing list that a new user has registered?			if ($pun_config['o_regs_report'] == '1')			{				// Load the "new user" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/new_user.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $username, $mail_message);				$mail_message = str_replace('<base_url>', get_base_url().'/', $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$new_uid, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Must the user verify the registration or do we log him/her in right now?		if ($pun_config['o_regs_verify'] == '1')		{			// Load the "welcome" template			$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/welcome.tpl'));			// The first row contains the subject			$first_crlf = strpos($mail_tpl, "\n");			$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));			$mail_message = trim(substr($mail_tpl, $first_crlf));			$mail_subject = str_replace('<board_title>', $pun_config['o_board_title'], $mail_subject);			$mail_message = str_replace('<base_url>', get_base_url().'/', $mail_message);			$mail_message = str_replace('<username>', $username, $mail_message);			$mail_message = str_replace('<password>', $password1, $mail_message);			$mail_message = str_replace('<login_url>', get_base_url().'/login.php', $mail_message);			$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);			pun_mail($email1, $mail_subject, $mail_message);			message($lang_register['Reg email'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.', true);		}		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		pun_setcookie($new_uid, $password_hash, time() + $pun_config['o_timeout_visit']);		redirect('index.php', $lang_register['Reg complete']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_register['Register']);$required_fields = array('req_user' => $lang_common['Username'], 'req_password1' => $lang_common['Password'], 'req_password2' => $lang_prof_reg['Confirm pass'], 'req_email1' => $lang_common['Email'], 'req_email2' => $lang_common['Email'].' 2');$focus_element = array('register', 'req_user');define('PUN_ACTIVE_PAGE', 'register');require PUN_ROOT.'header.php';$timezone = isset($timezone) ? $timezone : $pun_config['o_default_timezone'];$dst = isset($dst) ? $dst : $pun_config['o_default_dst'];$email_setting = isset($email_setting) ? $email_setting : $pun_config['o_default_email_setting'];// If there are errors, we display themif (!empty($errors)){?><div id="posterror" class="block">	<h2><span><?php echo $lang_register['Registration errors'] ?></span></h2>	<div class="box">		<div class="inbox error-info">			<p><?php echo $lang_register['Registration errors info'] ?></p>			<ul class="error-list"><?php	foreach ($errors as $cur_error)		echo "\t\t\t\t".'<li><strong>'.$cur_error.'</strong></li>'."\n";?>			</ul>		</div>	</div></div><?php}?><div id="regform" class="blockform">	<h2><span><?php echo $lang_register['Register'] ?></span></h2>	<div class="box">		<form id="register" method="post" action="register.php?action=register" onsubmit="this.register.disabled=true;if(process_form(this)){return true;}else{this.register.disabled=false;return false;}">			<div class="inform">				<div class="forminfo">					<h3><?php echo $lang_common['Important information'] ?></h3>					<p><?php echo $lang_register['Desc 1'] ?></p>					<p><?php echo $lang_register['Desc 2'] ?></p>				</div>				<fieldset>					<legend><?php echo $lang_register['Username legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<label class="required"><strong><?php echo $lang_common['Username'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="text" name="req_user" value="<?php if (isset($_POST['req_user'])) echo pun_htmlspecialchars($_POST['req_user']); ?>" size="25" maxlength="25" /><br /></label>					</div>				</fieldset>			</div><?php if ($pun_config['o_regs_verify'] == '0'): ?>			<div class="inform">				<fieldset>					<legend><?php echo $lang_register['Pass legend'] ?></legend>					<div class="infldset">						<label class="conl required"><strong><?php echo $lang_common['Password'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="password" name="req_password1" value="<?php if (isset($_POST['req_password1'])) echo pun_htmlspecialchars($_POST['req_password1']); ?>" size="16" /><br /></label>						<label class="conl required"><strong><?php echo $lang_prof_reg['Confirm pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="password" name="req_password2" value="<?php if (isset($_POST['req_password2'])) echo pun_htmlspecialchars($_POST['req_password2']); ?>" size="16" /><br /></label>						<p class="clearb"><?php echo $lang_register['Pass info'] ?></p>					</div>				</fieldset>			</div><?php endif; ?>			<div class="inform">				<fieldset>					<legend><?php echo ($pun_config['o_regs_verify'] == '1') ? $lang_prof_reg['Email legend 2'] : $lang_prof_reg['Email legend'] ?></legend>					<div class="infldset"><?php if ($pun_config['o_regs_verify'] == '1'): ?>						<p><?php echo $lang_register['Email info'] ?></p><?php endif; ?>						<label class="required"><strong><?php echo $lang_common['Email'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="text" name="req_email1" value="<?php if (isset($_POST['req_email1'])) echo pun_htmlspecialchars($_POST['req_email1']); ?>" size="50" maxlength="80" /><br /></label><?php if ($pun_config['o_regs_verify'] == '1'): ?>						<label class="required"><strong><?php echo $lang_register['Confirm email'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="text" name="req_email2" value="<?php if (isset($_POST['req_email2'])) echo pun_htmlspecialchars($_POST['req_email2']); ?>" size="50" maxlength="80" /><br /></label><?php endif; ?>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_prof_reg['Localisation legend'] ?></legend>					<div class="infldset">						<p><?php echo $lang_prof_reg['Time zone info'] ?></p>						<label><?php echo $lang_prof_reg['Time zone']."\n" ?>						<br /><select id="time_zone" name="timezone">							<option value="-12"<?php if ($timezone == -12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-12:00'] ?></option>							<option value="-11"<?php if ($timezone == -11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-11:00'] ?></option>							<option value="-10"<?php if ($timezone == -10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-10:00'] ?></option>							<option value="-9.5"<?php if ($timezone == -9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:30'] ?></option>							<option value="-9"<?php if ($timezone == -9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:00'] ?></option>							<option value="-8.5"<?php if ($timezone == -8.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:30'] ?></option>							<option value="-8"<?php if ($timezone == -8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:00'] ?></option>							<option value="-7"<?php if ($timezone == -7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-07:00'] ?></option>							<option value="-6"<?php if ($timezone == -6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-06:00'] ?></option>							<option value="-5"<?php if ($timezone == -5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-05:00'] ?></option>							<option value="-4"<?php if ($timezone == -4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-04:00'] ?></option>							<option value="-3.5"<?php if ($timezone == -3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:30'] ?></option>							<option value="-3"<?php if ($timezone == -3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:00'] ?></option>							<option value="-2"<?php if ($timezone == -2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-02:00'] ?></option>							<option value="-1"<?php if ($timezone == -1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-01:00'] ?></option>							<option value="0"<?php if ($timezone == 0) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC'] ?></option>							<option value="1"<?php if ($timezone == 1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+01:00'] ?></option>							<option value="2"<?php if ($timezone == 2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+02:00'] ?></option>							<option value="3"<?php if ($timezone == 3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:00'] ?></option>							<option value="3.5"<?php if ($timezone == 3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:30'] ?></option>							<option value="4"<?php if ($timezone == 4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:00'] ?></option>							<option value="4.5"<?php if ($timezone == 4.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:30'] ?></option>							<option value="5"<?php if ($timezone == 5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:00'] ?></option>							<option value="5.5"<?php if ($timezone == 5.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:30'] ?></option>							<option value="5.75"<?php if ($timezone == 5.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:45'] ?></option>							<option value="6"<?php if ($timezone == 6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:00'] ?></option>							<option value="6.5"<?php if ($timezone == 6.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:30'] ?></option>							<option value="7"<?php if ($timezone == 7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+07:00'] ?></option>							<option value="8"<?php if ($timezone == 8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:00'] ?></option>							<option value="8.75"<?php if ($timezone == 8.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:45'] ?></option>							<option value="9"<?php if ($timezone == 9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:00'] ?></option>							<option value="9.5"<?php if ($timezone == 9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:30'] ?></option>							<option value="10"<?php if ($timezone == 10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:00'] ?></option>							<option value="10.5"<?php if ($timezone == 10.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:30'] ?></option>							<option value="11"<?php if ($timezone == 11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:00'] ?></option>							<option value="11.5"<?php if ($timezone == 11.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:30'] ?></option>							<option value="12"<?php if ($timezone == 12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:00'] ?></option>							<option value="12.75"<?php if ($timezone == 12.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:45'] ?></option>							<option value="13"<?php if ($timezone == 13) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+13:00'] ?></option>							<option value="14"<?php if ($timezone == 14) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+14:00'] ?></option>						</select>						<br /></label>						<div class="rbox">							<label><input type="checkbox" name="dst" value="1"<?php if ($dst == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['DST'] ?><br /></label>						</div><?php		$languages = forum_list_langs();		// Only display the language selection box if there's more than one language available		if (count($languages) > 1)		{?>							<label><?php echo $lang_prof_reg['Language'] ?>							<br /><select name="language"><?php			foreach ($languages as $temp)			{				if ($pun_config['o_default_lang'] == $temp)					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>							</select>							<br /></label><?php		}?>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_prof_reg['Privacy options legend'] ?></legend>					<div class="infldset">						<p><?php echo $lang_prof_reg['Email setting info'] ?></p>						<div class="rbox">							<label><input type="radio" name="email_setting" value="0"<?php if ($email_setting == '0') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 1'] ?><br /></label>							<label><input type="radio" name="email_setting" value="1"<?php if ($email_setting == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 2'] ?><br /></label>							<label><input type="radio" name="email_setting" value="2"<?php if ($email_setting == '2') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 3'] ?><br /></label>						</div>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="register" value="<?php echo $lang_register['Register'] ?>" /></p>		</form>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if (!$pun_user['is_admmod'])	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_users.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_users.php';// Show IP statistics for a certain user IDif (isset($_GET['ip_stats'])){	$ip_stats = intval($_GET['ip_stats']);	if ($ip_stats < 1)		message($lang_common['Bad request']);	// Fetch ip count	$result = $db->query('SELECT poster_ip, MAX(posted) AS last_used FROM '.$db->prefix.'posts WHERE poster_id='.$ip_stats.' GROUP BY poster_ip') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	$num_ips = $db->num_rows($result);	// Determine the ip offset (based on $_GET['p'])	$num_pages = ceil($num_ips / 50);	$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);	$start_from = 50 * ($p - 1);	// Generate paging links	$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'admin_users.php?ip_stats='.$ip_stats );	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users'], $lang_admin_users['Results head']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><div id="users1" class="blocktable">	<h2><span><?php echo $lang_admin_users['Results head'] ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_admin_users['Results IP address head'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_admin_users['Results last used head'] ?></th>					<th class="tc3" scope="col"><?php echo $lang_admin_users['Results times found head'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_admin_users['Results action head'] ?></th>				</tr>			</thead>			<tbody><?php	$result = $db->query('SELECT poster_ip, MAX(posted) AS last_used, COUNT(id) AS used_times FROM '.$db->prefix.'posts WHERE poster_id='.$ip_stats.' GROUP BY poster_ip ORDER BY last_used DESC LIMIT '.$start_from.', 50') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		while ($cur_ip = $db->fetch_assoc($result))		{?>				<tr>					<td class="tcl"><a href="moderate.php?get_host=<?php echo pun_htmlspecialchars($cur_ip['poster_ip']) ?>"><?php echo pun_htmlspecialchars($cur_ip['poster_ip']) ?></a></td>					<td class="tc2"><?php echo format_time($cur_ip['last_used']) ?></td>					<td class="tc3"><?php echo $cur_ip['used_times'] ?></td>					<td class="tcr"><a href="admin_users.php?show_users=<?php echo pun_htmlspecialchars($cur_ip['poster_ip']) ?>"><?php echo $lang_admin_users['Results find more link'] ?></a></td>				</tr><?php		}	}	else		echo "\t\t\t\t".'<tr><td class="tcl" colspan="4">'.$lang_admin_users['Results no posts found'].'</td></tr>'."\n";?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div><?php	require PUN_ROOT.'footer.php';}if (isset($_GET['show_users'])){	$ip = pun_trim($_GET['show_users']);	if (!@preg_match('%^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$%', $ip) && !@preg_match('%^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$%', $ip))		message($lang_admin_users['Bad IP message']);	// Fetch user count	$result = $db->query('SELECT DISTINCT poster_id, poster FROM '.$db->prefix.'posts WHERE poster_ip=\''.$db->escape($ip).'\'') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	$num_users = $db->num_rows($result);	// Determine the user offset (based on $_GET['p'])	$num_pages = ceil($num_users / 50);	$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);	$start_from = 50 * ($p - 1);	// Generate paging links	$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'admin_users.php?show_users='.$ip);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users'], $lang_admin_users['Results head']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><div id="users2" class="blocktable">	<h2><span><?php echo $lang_admin_users['Results head'] ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_admin_users['Results username head'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_admin_users['Results e-mail head'] ?></th>					<th class="tc3" scope="col"><?php echo $lang_admin_users['Results title head'] ?></th>					<th class="tc4" scope="col"><?php echo $lang_admin_users['Results posts head'] ?></th>					<th class="tc5" scope="col"><?php echo $lang_admin_users['Results admin note head'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_admin_users['Results actions head'] ?></th>				</tr>			</thead>			<tbody><?php	$result = $db->query('SELECT DISTINCT poster_id, poster FROM '.$db->prefix.'posts WHERE poster_ip=\''.$db->escape($ip).'\' ORDER BY poster ASC LIMIT '.$start_from.', 50') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	$num_posts = $db->num_rows($result);	if ($num_posts)	{		$posters = $poster_ids = array();		while ($cur_poster = $db->fetch_assoc($result))		{			$posters[] = $cur_poster;			$poster_ids[] = $cur_poster['poster_id'];		}		$result = $db->query('SELECT u.id, u.username, u.email, u.title, u.num_posts, u.admin_note, g.g_id, g.g_user_title FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE u.id>1 AND u.id IN('.implode(',', $poster_ids).')') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		$user_data = array();		while ($cur_user = $db->fetch_assoc($result))			$user_data[$cur_user['id']] = $cur_user;		// Loop through users and print out some info		foreach ($posters as $cur_poster)		{			if (isset($user_data[$cur_poster['poster_id']]))			{				$user_title = get_title($user_data[$cur_poster['poster_id']]);				$actions = '<a href="admin_users.php?ip_stats='.$user_data[$cur_poster['poster_id']]['id'].'">'.$lang_admin_users['Results view IP link'].'</a> | <a href="search.php?action=show_user_posts&amp;user_id='.$user_data[$cur_poster['poster_id']]['id'].'">'.$lang_admin_users['Results show posts link'].'</a>';?>				<tr>					<td class="tcl"><?php echo '<a href="profile.php?id='.$user_data[$cur_poster['poster_id']]['id'].'">'.pun_htmlspecialchars($user_data[$cur_poster['poster_id']]['username']).'</a>' ?></td>					<td class="tc2"><a href="mailto:<?php echo $user_data[$cur_poster['poster_id']]['email'] ?>"><?php echo $user_data[$cur_poster['poster_id']]['email'] ?></a></td>					<td class="tc3"><?php echo $user_title ?></td>					<td class="tc4"><?php echo forum_number_format($user_data[$cur_poster['poster_id']]['num_posts']) ?></td>					<td class="tc5"><?php echo ($user_data[$cur_poster['poster_id']]['admin_note'] != '') ? pun_htmlspecialchars($user_data[$cur_poster['poster_id']]['admin_note']) : '&#160;' ?></td>					<td class="tcr"><?php echo $actions ?></td>				</tr><?php			}			else			{?>				<tr>					<td class="tcl"><?php echo pun_htmlspecialchars($cur_poster['poster']) ?></td>					<td class="tc2">&#160;</td>					<td class="tc3"><?php echo $lang_admin_users['Results guest'] ?></td>					<td class="tc4">&#160;</td>					<td class="tc5">&#160;</td>					<td class="tcr">&#160;</td>				</tr><?php			}		}	}	else		echo "\t\t\t\t".'<tr><td class="tcl" colspan="6">'.$lang_admin_users['Results no IP found'].'</td></tr>'."\n";?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div><?php	require PUN_ROOT.'footer.php';}// Move multiple users to other user groupselse if (isset($_POST['move_users']) || isset($_POST['move_users_comply'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('admin_users.php');	if (isset($_POST['users']))	{		$user_ids = is_array($_POST['users']) ? array_keys($_POST['users']) : explode(',', $_POST['users']);		$user_ids = array_map('intval', $user_ids);		// Delete invalid IDs		$user_ids = array_diff($user_ids, array(0, 1));	}	else		$user_ids = array();	if (empty($user_ids))		message($lang_admin_users['No users selected']);	// Are we trying to batch move any admins?	$result = $db->query('SELECT COUNT(*) FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).') AND group_id='.PUN_ADMIN) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if ($db->result($result) > 0)		message($lang_admin_users['No move admins message']);	// Fetch all user groups	$all_groups = array();	$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id NOT IN ('.PUN_GUEST.','.PUN_ADMIN.') ORDER BY g_title ASC') or error('Unable to fetch groups', __FILE__, __LINE__, $db->error());	while ($row = $db->fetch_row($result))		$all_groups[$row[0]] = $row[1];	if (isset($_POST['move_users_comply']))	{		$new_group = isset($_POST['new_group']) && isset($all_groups[$_POST['new_group']]) ? $_POST['new_group'] : message($lang_admin_users['Invalid group message']);		// Is the new group a moderator group?		$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$new_group) or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());		$new_group_mod = $db->result($result);		// Fetch user groups		$user_groups = array();		$result = $db->query('SELECT id, group_id FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).')') or error('Unable to fetch user groups', __FILE__, __LINE__, $db->error());		while ($cur_user = $db->fetch_assoc($result))		{			if (!isset($user_groups[$cur_user['group_id']]))				$user_groups[$cur_user['group_id']] = array();			$user_groups[$cur_user['group_id']][] = $cur_user['id'];		}		// Are any users moderators?		$group_ids = array_keys($user_groups);		$result = $db->query('SELECT g_id, g_moderator FROM '.$db->prefix.'groups WHERE g_id IN ('.implode(',', $group_ids).')') or error('Unable to fetch group moderators', __FILE__, __LINE__, $db->error());		while ($cur_group = $db->fetch_assoc($result))		{			if ($cur_group['g_moderator'] == '0')				unset($user_groups[$cur_group['g_id']]);		}		if (!empty($user_groups) && $new_group != PUN_ADMIN && $new_group_mod != '1')		{			// Fetch forum list and clean up their moderator list			$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());			while ($cur_forum = $db->fetch_assoc($result))			{				$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				foreach ($user_groups as $group_users)					$cur_moderators = array_diff($cur_moderators, $group_users);				$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';				$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());			}		}		// Change user group		$db->query('UPDATE '.$db->prefix.'users SET group_id='.$new_group.' WHERE id IN ('.implode(',', $user_ids).')') or error('Unable to change user group', __FILE__, __LINE__, $db->error());		redirect('admin_users.php', $lang_admin_users['Users move redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users'], $lang_admin_users['Move users']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('users');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_users['Move users'] ?></span></h2>		<div class="box">			<form name="confirm_move_users" method="post" action="admin_users.php">				<input type="hidden" name="users" value="<?php echo implode(',', $user_ids) ?>" />				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_users['Move users subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_users['New group label'] ?></th>									<td>										<select name="new_group" tabindex="1"><?php foreach ($all_groups as $gid => $group) : ?>											<option value="<?php echo $gid ?>"><?php echo pun_htmlspecialchars($group) ?></option><?php endforeach; ?>										</select>										<span><?php echo $lang_admin_users['New group help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="move_users_comply" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="2" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}// Delete multiple userselse if (isset($_POST['delete_users']) || isset($_POST['delete_users_comply'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('admin_users.php');	if (isset($_POST['users']))	{		$user_ids = is_array($_POST['users']) ? array_keys($_POST['users']) : explode(',', $_POST['users']);		$user_ids = array_map('intval', $user_ids);		// Delete invalid IDs		$user_ids = array_diff($user_ids, array(0, 1));	}	else		$user_ids = array();	if (empty($user_ids))		message($lang_admin_users['No users selected']);	// Are we trying to delete any admins?	$result = $db->query('SELECT COUNT(*) FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).') AND group_id='.PUN_ADMIN) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if ($db->result($result) > 0)		message($lang_admin_users['No delete admins message']);	if (isset($_POST['delete_users_comply']))	{		// Fetch user groups		$user_groups = array();		$result = $db->query('SELECT id, group_id FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).')') or error('Unable to fetch user groups', __FILE__, __LINE__, $db->error());		while ($cur_user = $db->fetch_assoc($result))		{			if (!isset($user_groups[$cur_user['group_id']]))				$user_groups[$cur_user['group_id']] = array();			$user_groups[$cur_user['group_id']][] = $cur_user['id'];		}		// Are any users moderators?		$group_ids = array_keys($user_groups);		$result = $db->query('SELECT g_id, g_moderator FROM '.$db->prefix.'groups WHERE g_id IN ('.implode(',', $group_ids).')') or error('Unable to fetch group moderators', __FILE__, __LINE__, $db->error());		while ($cur_group = $db->fetch_assoc($result))		{			if ($cur_group['g_moderator'] == '0')				unset($user_groups[$cur_group['g_id']]);		}		// Fetch forum list and clean up their moderator list		$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());		while ($cur_forum = $db->fetch_assoc($result))		{			$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();			foreach ($user_groups as $group_users)				$cur_moderators = array_diff($cur_moderators, $group_users);			$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';			$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());		}		// Delete any subscriptions		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE user_id IN ('.implode(',', $user_ids).')') or error('Unable to delete topic subscriptions', __FILE__, __LINE__, $db->error());		$db->query('DELETE FROM '.$db->prefix.'forum_subscriptions WHERE user_id IN ('.implode(',', $user_ids).')') or error('Unable to delete forum subscriptions', __FILE__, __LINE__, $db->error());		// Remove them from the online list (if they happen to be logged in)		$db->query('DELETE FROM '.$db->prefix.'online WHERE user_id IN ('.implode(',', $user_ids).')') or error('Unable to remove users from online list', __FILE__, __LINE__, $db->error());		// Should we delete all posts made by these users?		if (isset($_POST['delete_posts']))		{			require PUN_ROOT.'include/search_idx.php';			@set_time_limit(0);			// Find all posts made by this user			$result = $db->query('SELECT p.id, p.topic_id, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id WHERE p.poster_id IN ('.implode(',', $user_ids).')') or error('Unable to fetch posts', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result))			{				while ($cur_post = $db->fetch_assoc($result))				{					// Determine whether this post is the "topic post" or not					$result2 = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['topic_id'].' ORDER BY posted LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());					if ($db->result($result2) == $cur_post['id'])						delete_topic($cur_post['topic_id']);					else						delete_post($cur_post['id'], $cur_post['topic_id']);					update_forum($cur_post['forum_id']);				}			}		}		else			// Set all their posts to guest			$db->query('UPDATE '.$db->prefix.'posts SET poster_id=1 WHERE poster_id IN ('.implode(',', $user_ids).')') or error('Unable to update posts', __FILE__, __LINE__, $db->error());		// Delete the users		$db->query('DELETE FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).')') or error('Unable to delete users', __FILE__, __LINE__, $db->error());		// Delete user avatars		foreach ($user_ids as $user_id)			delete_avatar($user_id);		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		redirect('admin_users.php', $lang_admin_users['Users delete redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users'], $lang_admin_users['Delete users']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('users');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_users['Delete users'] ?></span></h2>		<div class="box">			<form name="confirm_del_users" method="post" action="admin_users.php">				<input type="hidden" name="users" value="<?php echo implode(',', $user_ids) ?>" />				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_users['Confirm delete legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_users['Confirm delete info'] ?></p>							<div class="rbox">								<label><input type="checkbox" name="delete_posts" value="1" checked="checked" /><?php echo $lang_admin_users['Delete posts'] ?><br /></label>							</div>							<p class="warntext"><strong><?php echo $lang_admin_users['Delete warning'] ?></strong></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="delete_users_comply" value="<?php echo $lang_admin_users['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}// Ban multiple userselse if (isset($_POST['ban_users']) || isset($_POST['ban_users_comply'])){	if ($pun_user['g_id'] != PUN_ADMIN && ($pun_user['g_moderator'] != '1' || $pun_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('admin_users.php');	if (isset($_POST['users']))	{		$user_ids = is_array($_POST['users']) ? array_keys($_POST['users']) : explode(',', $_POST['users']);		$user_ids = array_map('intval', $user_ids);		// Delete invalid IDs		$user_ids = array_diff($user_ids, array(0, 1));	}	else		$user_ids = array();	if (empty($user_ids))		message($lang_admin_users['No users selected']);	// Are we trying to ban any admins?	$result = $db->query('SELECT COUNT(*) FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).') AND group_id='.PUN_ADMIN) or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());	if ($db->result($result) > 0)		message($lang_admin_users['No ban admins message']);	// Also, we cannot ban moderators	$result = $db->query('SELECT COUNT(*) FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON u.group_id=g.g_id WHERE g.g_moderator=1 AND u.id IN ('.implode(',', $user_ids).')') or error('Unable to fetch moderator group info', __FILE__, __LINE__, $db->error());	if ($db->result($result) > 0)		message($lang_admin_users['No ban mods message']);	if (isset($_POST['ban_users_comply']))	{		$ban_message = pun_trim($_POST['ban_message']);		$ban_expire = pun_trim($_POST['ban_expire']);		$ban_the_ip = isset($_POST['ban_the_ip']) ? intval($_POST['ban_the_ip']) : 0;		if ($ban_expire != '' && $ban_expire != 'Never')		{			$ban_expire = strtotime($ban_expire.' GMT');			if ($ban_expire == -1 || !$ban_expire)				message($lang_admin_users['Invalid date message'].' '.$lang_admin_users['Invalid date reasons']);			$diff = ($pun_user['timezone'] + $pun_user['dst']) * 3600;			$ban_expire -= $diff;			if ($ban_expire <= time())				message($lang_admin_users['Invalid date message'].' '.$lang_admin_users['Invalid date reasons']);		}		else			$ban_expire = 'NULL';		$ban_message = ($ban_message != '') ? '\''.$db->escape($ban_message).'\'' : 'NULL';		// Fetch user information		$user_info = array();		$result = $db->query('SELECT id, username, email, registration_ip FROM '.$db->prefix.'users WHERE id IN ('.implode(',', $user_ids).')') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		while ($cur_user = $db->fetch_assoc($result))			$user_info[$cur_user['id']] = array('username' => $cur_user['username'], 'email' => $cur_user['email'], 'ip' => $cur_user['registration_ip']);		// Overwrite the registration IP with one from the last post (if it exists)		if ($ban_the_ip != 0)		{			$result = $db->query('SELECT p.poster_id, p.poster_ip FROM '.$db->prefix.'posts AS p INNER JOIN (SELECT MAX(id) AS id FROM '.$db->prefix.'posts WHERE poster_id IN ('.implode(',', $user_ids).') GROUP BY poster_id) AS i ON p.id=i.id') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());			while ($cur_address = $db->fetch_assoc($result))				$user_info[$cur_address['poster_id']]['ip'] = $cur_address['poster_ip'];		}		// And insert the bans!		foreach ($user_ids as $user_id)		{			$ban_username = '\''.$db->escape($user_info[$user_id]['username']).'\'';			$ban_email = '\''.$db->escape($user_info[$user_id]['email']).'\'';			$ban_ip = ($ban_the_ip != 0) ? '\''.$db->escape($user_info[$user_id]['ip']).'\'' : 'NULL';			$db->query('INSERT INTO '.$db->prefix.'bans (username, ip, email, message, expire, ban_creator) VALUES('.$ban_username.', '.$ban_ip.', '.$ban_email.', '.$ban_message.', '.$ban_expire.', '.$pun_user['id'].')') or error('Unable to add ban', __FILE__, __LINE__, $db->error());		}		// Regenerate the bans cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_bans_cache();		redirect('admin_users.php', $lang_admin_users['Users banned redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Bans']);	$focus_element = array('bans2', 'ban_message');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('users');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_users['Ban users'] ?></span></h2>		<div class="box">			<form id="bans2" name="confirm_ban_users" method="post" action="admin_users.php">				<input type="hidden" name="users" value="<?php echo implode(',', $user_ids) ?>" />				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_users['Message expiry subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_users['Ban message label'] ?></th>									<td>										<input type="text" name="ban_message" size="50" maxlength="255" tabindex="1" />										<span><?php echo $lang_admin_users['Ban message help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Expire date label'] ?></th>									<td>										<input type="text" name="ban_expire" size="17" maxlength="10" tabindex="2" />										<span><?php echo $lang_admin_users['Expire date help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Ban IP label'] ?></th>									<td>										<label class="conl"><input type="radio" name="ban_the_ip" tabindex="3" value="1" checked="checked" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="ban_the_ip" tabindex="4" value="0" checked="checked" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_users['Ban IP help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="ban_users_comply" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="3" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}else if (isset($_GET['find_user'])){	$form = isset($_GET['form']) ? $_GET['form'] : array();	// trim() all elements in $form	$form = array_map('pun_trim', $form);	$conditions = $query_str = array();	$posts_greater = isset($_GET['posts_greater']) ? pun_trim($_GET['posts_greater']) : '';	$posts_less = isset($_GET['posts_less']) ? pun_trim($_GET['posts_less']) : '';	$last_post_after = isset($_GET['last_post_after']) ? pun_trim($_GET['last_post_after']) : '';	$last_post_before = isset($_GET['last_post_before']) ? pun_trim($_GET['last_post_before']) : '';	$last_visit_after = isset($_GET['last_visit_after']) ? pun_trim($_GET['last_visit_after']) : '';	$last_visit_before = isset($_GET['last_visit_before']) ? pun_trim($_GET['last_visit_before']) : '';	$registered_after = isset($_GET['registered_after']) ? pun_trim($_GET['registered_after']) : '';	$registered_before = isset($_GET['registered_before']) ? pun_trim($_GET['registered_before']) : '';	$order_by = isset($_GET['order_by']) && in_array($_GET['order_by'], array('username', 'email', 'num_posts', 'last_post', 'last_visit', 'registered')) ? $_GET['order_by'] : 'username';	$direction = isset($_GET['direction']) && $_GET['direction'] == 'DESC' ? 'DESC' : 'ASC';	$user_group = isset($_GET['user_group']) ? intval($_GET['user_group']) : -1;	$query_str[] = 'order_by='.$order_by;	$query_str[] = 'direction='.$direction;	$query_str[] = 'user_group='.$user_group;	if (preg_match('%[^0-9]%', $posts_greater.$posts_less))		message($lang_admin_users['Non numeric message']);	// Try to convert date/time to timestamps	if ($last_post_after != '')	{		$query_str[] = 'last_post_after='.$last_post_after;		$last_post_after = strtotime($last_post_after);		if ($last_post_after === false || $last_post_after == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.last_post>'.$last_post_after;	}	if ($last_post_before != '')	{		$query_str[] = 'last_post_before='.$last_post_before;		$last_post_before = strtotime($last_post_before);		if ($last_post_before === false || $last_post_before == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.last_post<'.$last_post_before;	}	if ($last_visit_after != '')	{		$query_str[] = 'last_visit_after='.$last_visit_after;		$last_visit_after = strtotime($last_visit_after);		if ($last_visit_after === false || $last_visit_after == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.last_visit>'.$last_visit_after;	}	if ($last_visit_before != '')	{		$query_str[] = 'last_visit_before='.$last_visit_before;		$last_visit_before = strtotime($last_visit_before);		if ($last_visit_before === false || $last_visit_before == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.last_visit<'.$last_visit_before;	}	if ($registered_after != '')	{		$query_str[] = 'registered_after='.$registered_after;		$registered_after = strtotime($registered_after);		if ($registered_after === false || $registered_after == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.registered>'.$registered_after;	}	if ($registered_before != '')	{		$query_str[] = 'registered_before='.$registered_before;		$registered_before = strtotime($registered_before);		if ($registered_before === false || $registered_before == -1)			message($lang_admin_users['Invalid date time message']);		$conditions[] = 'u.registered<'.$registered_before;	}	$like_command = ($db_type == 'pgsql') ? 'ILIKE' : 'LIKE';	foreach ($form as $key => $input)	{		if ($input != '' && in_array($key, array('username', 'email', 'title', 'realname', 'url', 'jabber', 'icq', 'msn', 'aim', 'yahoo', 'location', 'signature', 'admin_note')))		{			$conditions[] = 'u.'.$db->escape($key).' '.$like_command.' \''.$db->escape(str_replace('*', '%', $input)).'\'';			$query_str[] = 'form%5B'.$key.'%5D='.urlencode($input);		}	}	if ($posts_greater != '')	{		$query_str[] = 'posts_greater='.$posts_greater;		$conditions[] = 'u.num_posts>'.$posts_greater;	}	if ($posts_less != '')	{		$query_str[] = 'posts_less='.$posts_less;		$conditions[] = 'u.num_posts<'.$posts_less;	}	if ($user_group > -1)		$conditions[] = 'u.group_id='.$user_group;	// Fetch user count	$result = $db->query('SELECT COUNT(id) FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE u.id>1'.(!empty($conditions) ? ' AND '.implode(' AND ', $conditions) : '')) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	$num_users = $db->result($result);	// Determine the user offset (based on $_GET['p'])	$num_pages = ceil($num_users / 50);	$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);	$start_from = 50 * ($p - 1);	// Generate paging links	$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'admin_users.php?find_user=&amp;'.implode('&amp;', $query_str));	// Some helper variables for permissions	$can_delete = $can_move = $pun_user['g_id'] == PUN_ADMIN;	$can_ban = $pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && $pun_user['g_mod_ban_users'] == '1');	$can_action = ($can_delete || $can_ban || $can_move) && $num_users > 0;	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users'], $lang_admin_users['Results head']);	$page_head = array('js' => '<script type="text/javascript" src="common.js"></script>');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><form id="search-users-form" action="admin_users.php" method="post"><div id="users2" class="blocktable">	<h2><span><?php echo $lang_admin_users['Results head'] ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_admin_users['Results username head'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_admin_users['Results e-mail head'] ?></th>					<th class="tc3" scope="col"><?php echo $lang_admin_users['Results title head'] ?></th>					<th class="tc4" scope="col"><?php echo $lang_admin_users['Results posts head'] ?></th>					<th class="tc5" scope="col"><?php echo $lang_admin_users['Results admin note head'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_admin_users['Results actions head'] ?></th><?php if ($can_action): ?>					<th class="tcmod" scope="col"><?php echo $lang_admin_users['Select'] ?></th><?php endif; ?>				</tr>			</thead>			<tbody><?php	$result = $db->query('SELECT u.id, u.username, u.email, u.title, u.num_posts, u.admin_note, g.g_id, g.g_user_title FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE u.id>1'.(!empty($conditions) ? ' AND '.implode(' AND ', $conditions) : '').' ORDER BY '.$db->escape($order_by).' '.$db->escape($direction).' LIMIT '.$start_from.', 50') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		while ($user_data = $db->fetch_assoc($result))		{			$user_title = get_title($user_data);			// This script is a special case in that we want to display "Not verified" for non-verified users			if (($user_data['g_id'] == '' || $user_data['g_id'] == PUN_UNVERIFIED) && $user_title != $lang_common['Banned'])				$user_title = '<span class="warntext">'.$lang_admin_users['Not verified'].'</span>';			$actions = '<a href="admin_users.php?ip_stats='.$user_data['id'].'">'.$lang_admin_users['Results view IP link'].'</a> | <a href="search.php?action=show_user_posts&amp;user_id='.$user_data['id'].'">'.$lang_admin_users['Results show posts link'].'</a>';?>				<tr>					<td class="tcl"><?php echo '<a href="profile.php?id='.$user_data['id'].'">'.pun_htmlspecialchars($user_data['username']).'</a>' ?></td>					<td class="tc2"><a href="mailto:<?php echo $user_data['email'] ?>"><?php echo $user_data['email'] ?></a></td>					<td class="tc3"><?php echo $user_title ?></td>					<td class="tc4"><?php echo forum_number_format($user_data['num_posts']) ?></td>					<td class="tc5"><?php echo ($user_data['admin_note'] != '') ? pun_htmlspecialchars($user_data['admin_note']) : '&#160;' ?></td>					<td class="tcr"><?php echo $actions ?></td><?php if ($can_action): ?>					<td class="tcmod"><input type="checkbox" name="users[<?php echo $user_data['id'] ?>]" value="1" /></td><?php endif; ?>				</tr><?php		}	}	else		echo "\t\t\t\t".'<tr><td class="tcl" colspan="6">'.$lang_admin_users['No match'].'</td></tr>'."\n";?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p><?php if ($can_action): ?>			<p class="conr modbuttons"><a href="#" onclick="return select_checkboxes('search-users-form', this, '<?php echo $lang_admin_users['Unselect all'] ?>')"><?php echo $lang_admin_users['Select all'] ?></a> <?php if ($can_ban) : ?><input type="submit" name="ban_users" value="<?php echo $lang_admin_users['Ban'] ?>" /><?php endif; if ($can_delete) : ?><input type="submit" name="delete_users" value="<?php echo $lang_admin_users['Delete'] ?>" /><?php endif; if ($can_move) : ?><input type="submit" name="move_users" value="<?php echo $lang_admin_users['Change group'] ?>" /><?php endif; ?></p><?php endif; ?>		</div>		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_users.php"><?php echo $lang_admin_common['Users'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_users['Results head'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div></form><?php	require PUN_ROOT.'footer.php';}else{	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Users']);	$focus_element = array('find_user', 'form[username]');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('users');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_users['User search head'] ?></span></h2>		<div class="box">			<form id="find_user" method="get" action="admin_users.php">				<p class="submittop"><input type="submit" name="find_user" value="<?php echo $lang_admin_users['Submit search'] ?>" tabindex="1" /></p>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_users['User search subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_users['User search info'] ?></p>							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_users['Username label'] ?></th>									<td><input type="text" name="form[username]" size="25" maxlength="25" tabindex="2" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['E-mail address label'] ?></th>									<td><input type="text" name="form[email]" size="30" maxlength="80" tabindex="3" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Title label'] ?></th>									<td><input type="text" name="form[title]" size="30" maxlength="50" tabindex="4" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Real name label'] ?></th>									<td><input type="text" name="form[realname]" size="30" maxlength="40" tabindex="5" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Website label'] ?></th>									<td><input type="text" name="form[url]" size="35" maxlength="100" tabindex="6" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Jabber label'] ?></th>									<td><input type="text" name="form[jabber]" size="30" maxlength="75" tabindex="7" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['ICQ label'] ?></th>									<td><input type="text" name="form[icq]" size="12" maxlength="12" tabindex="8" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['MSN label'] ?></th>									<td><input type="text" name="form[msn]" size="30" maxlength="50" tabindex="9" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['AOL label'] ?></th>									<td><input type="text" name="form[aim]" size="20" maxlength="20" tabindex="10" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Yahoo label'] ?></th>									<td><input type="text" name="form[yahoo]" size="20" maxlength="20" tabindex="11" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Location label'] ?></th>									<td><input type="text" name="form[location]" size="30" maxlength="30" tabindex="12" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Signature label'] ?></th>									<td><input type="text" name="form[signature]" size="35" maxlength="512" tabindex="13" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Admin note label'] ?></th>									<td><input type="text" name="form[admin_note]" size="30" maxlength="30" tabindex="14" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Posts more than label'] ?></th>									<td><input type="text" name="posts_greater" size="5" maxlength="8" tabindex="15" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Posts less than label'] ?></th>									<td><input type="text" name="posts_less" size="5" maxlength="8" tabindex="16" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Last post after label'] ?></th>									<td><input type="text" name="last_post_after" size="24" maxlength="19" tabindex="17" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Last post before label'] ?></th>									<td><input type="text" name="last_post_before" size="24" maxlength="19" tabindex="18" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Last visit after label'] ?></th>									<td><input type="text" name="last_visit_after" size="24" maxlength="19" tabindex="17" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Last visit before label'] ?></th>									<td><input type="text" name="last_visit_before" size="24" maxlength="19" tabindex="18" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Registered after label'] ?></th>									<td><input type="text" name="registered_after" size="24" maxlength="19" tabindex="19" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Registered before label'] ?></th>									<td><input type="text" name="registered_before" size="24" maxlength="19" tabindex="20" />									<span><?php echo $lang_admin_users['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['Order by label'] ?></th>									<td>										<select name="order_by" tabindex="21">											<option value="username" selected="selected"><?php echo $lang_admin_users['Order by username'] ?></option>											<option value="email"><?php echo $lang_admin_users['Order by e-mail'] ?></option>											<option value="num_posts"><?php echo $lang_admin_users['Order by posts'] ?></option>											<option value="last_post"><?php echo $lang_admin_users['Order by last post'] ?></option>											<option value="last_visit"><?php echo $lang_admin_users['Order by last visit'] ?></option>											<option value="registered"><?php echo $lang_admin_users['Order by registered'] ?></option>										</select>&#160;&#160;&#160;<select name="direction" tabindex="22">											<option value="ASC" selected="selected"><?php echo $lang_admin_users['Ascending'] ?></option>											<option value="DESC"><?php echo $lang_admin_users['Descending'] ?></option>										</select>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_users['User group label'] ?></th>									<td>										<select name="user_group" tabindex="23">											<option value="-1" selected="selected"><?php echo $lang_admin_users['All groups'] ?></option>											<option value="0"><?php echo $lang_admin_users['Unverified users'] ?></option><?php	$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id!='.PUN_GUEST.' ORDER BY g_title') or error('Unable to fetch user group list', __FILE__, __LINE__, $db->error());	while ($cur_group = $db->fetch_assoc($result))		echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";?>										</select>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="find_user" value="<?php echo $lang_admin_users['Submit search'] ?>" tabindex="25" /></p>			</form>		</div>		<h2 class="block2"><span><?php echo $lang_admin_users['IP search head'] ?></span></h2>		<div class="box">			<form method="get" action="admin_users.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_users['IP search subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_users['IP address label'] ?><div><input type="submit" value="<?php echo $lang_admin_users['Find IP address'] ?>" tabindex="26" /></div></th>									<td><input type="text" name="show_users" size="18" maxlength="15" tabindex="24" />									<span><?php echo $lang_admin_users['IP address help'] ?></span></td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}
