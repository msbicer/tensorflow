<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Fetch some info about the post, the topic and the forum$result = $db->query('SELECT f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.first_post_id, t.closed, p.posted, p.poster, p.poster_id, p.message, p.hide_smilies FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_post = $db->fetch_assoc($result);if ($pun_config['o_censoring'] == '1')	$cur_post['subject'] = censor_words($cur_post['subject']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;$is_topic_post = ($id == $cur_post['first_post_id']) ? true : false;// Do we have permission to edit this post?if (($pun_user['g_delete_posts'] == '0' ||	($pun_user['g_delete_topics'] == '0' && $is_topic_post) ||	$cur_post['poster_id'] != $pun_user['id'] ||	$cur_post['closed'] == '1') &&	!$is_admmod)	message($lang_common['No permission'], false, '403 Forbidden');// Load the delete.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/delete.php';if (isset($_POST['delete'])){	if ($is_admmod)		confirm_referrer('delete.php');	require PUN_ROOT.'include/search_idx.php';	if ($is_topic_post)	{		// Delete the topic and all of its posts		delete_topic($cur_post['tid']);		update_forum($cur_post['fid']);		redirect('viewforum.php?id='.$cur_post['fid'], $lang_delete['Topic del redirect']);	}	else	{		// Delete just this one post		delete_post($id, $cur_post['tid']);		update_forum($cur_post['fid']);		// Redirect towards the previous post		$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['tid'].' AND id < '.$id.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());		$post_id = $db->result($result);		redirect('viewtopic.php?pid='.$post_id.'#p'.$post_id, $lang_delete['Post del redirect']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_delete['Delete post']);define ('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';require PUN_ROOT.'include/parser.php';$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?pid=<?php echo $id ?>#p<?php echo $id ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_delete['Delete post'] ?></strong></li>		</ul>	</div></div><div class="blockform">	<h2><span><?php echo $lang_delete['Delete post'] ?></span></h2>	<div class="box">		<form method="post" action="delete.php?id=<?php echo $id ?>">			<div class="inform">				<div class="forminfo">					<h3><span><?php printf($is_topic_post ? $lang_delete['Topic by'] : $lang_delete['Reply by'], '<strong>'.pun_htmlspecialchars($cur_post['poster']).'</strong>', format_time($cur_post['posted'])) ?></span></h3>					<p><?php echo ($is_topic_post) ? '<strong>'.$lang_delete['Topic warning'].'</strong>' : '<strong>'.$lang_delete['Warning'].'</strong>' ?><br /><?php echo $lang_delete['Delete info'] ?></p>				</div>			</div>			<p class="buttons"><input type="submit" name="delete" value="<?php echo $lang_delete['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><div id="postreview">	<div class="blockpost">		<div class="box">			<div class="inbox">				<div class="postbody">					<div class="postleft">						<dl>							<dt><strong><?php echo pun_htmlspecialchars($cur_post['poster']) ?></strong></dt>							<dd><span><?php echo format_time($cur_post['posted']) ?></span></dd>						</dl>					</div>					<div class="postright">						<div class="postmsg">							<?php echo $cur_post['message']."\n" ?>						</div>					</div>				</div>				<div class="clearer"></div>			</div>		</div>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if ($pun_user['g_id'] != PUN_ADMIN && ($pun_user['g_moderator'] != '1' || $pun_user['g_mod_ban_users'] == '0'))	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_bans.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_bans.php';// Add/edit a ban (stage 1)if (isset($_REQUEST['add_ban']) || isset($_GET['edit_ban'])){	if (isset($_GET['add_ban']) || isset($_POST['add_ban']))	{		// If the ID of the user to ban was provided through GET (a link from profile.php)		if (isset($_GET['add_ban']))		{			$user_id = intval($_GET['add_ban']);			if ($user_id < 2)				message($lang_common['Bad request']);			$result = $db->query('SELECT group_id, username, email FROM '.$db->prefix.'users WHERE id='.$user_id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result))				list($group_id, $ban_user, $ban_email) = $db->fetch_row($result);			else				message($lang_admin_bans['No user ID message']);		}		else // Otherwise the username is in POST		{			$ban_user = pun_trim($_POST['new_ban_user']);			if ($ban_user != '')			{				$result = $db->query('SELECT id, group_id, username, email FROM '.$db->prefix.'users WHERE username=\''.$db->escape($ban_user).'\' AND id>1') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());				if ($db->num_rows($result))					list($user_id, $group_id, $ban_user, $ban_email) = $db->fetch_row($result);				else					message($lang_admin_bans['No user message']);			}		}		// Make sure we're not banning an admin or moderator		if (isset($group_id))		{			if ($group_id == PUN_ADMIN)				message(sprintf($lang_admin_bans['User is admin message'], pun_htmlspecialchars($ban_user)));			$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());			$is_moderator_group = $db->result($result);			if ($is_moderator_group)				message(sprintf($lang_admin_bans['User is mod message'], pun_htmlspecialchars($ban_user)));		}		// If we have a $user_id, we can try to find the last known IP of that user		if (isset($user_id))		{			$result = $db->query('SELECT poster_ip FROM '.$db->prefix.'posts WHERE poster_id='.$user_id.' ORDER BY posted DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());			$ban_ip = ($db->num_rows($result)) ? $db->result($result) : '';			if ($ban_ip == '')			{				$result = $db->query('SELECT registration_ip FROM '.$db->prefix.'users WHERE id='.$user_id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());				$ban_ip = ($db->num_rows($result)) ? $db->result($result) : '';			}		}		$mode = 'add';	}	else // We are editing a ban	{		$ban_id = intval($_GET['edit_ban']);		if ($ban_id < 1)			message($lang_common['Bad request']);		$result = $db->query('SELECT username, ip, email, message, expire FROM '.$db->prefix.'bans WHERE id='.$ban_id) or error('Unable to fetch ban info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			list($ban_user, $ban_ip, $ban_email, $ban_message, $ban_expire) = $db->fetch_row($result);		else			message($lang_common['Bad request']);		$diff = ($pun_user['timezone'] + $pun_user['dst']) * 3600;		$ban_expire = ($ban_expire != '') ? gmdate('Y-m-d', $ban_expire + $diff) : '';		$mode = 'edit';	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Bans']);	$focus_element = array('bans2', 'ban_user');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('bans');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_bans['Ban advanced head'] ?></span></h2>		<div class="box">			<form id="bans2" method="post" action="admin_bans.php">				<div class="inform">				<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>				<input type="hidden" name="ban_id" value="<?php echo $ban_id ?>" /><?php endif; ?>				<fieldset>						<legend><?php echo $lang_admin_bans['Ban advanced subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_bans['Username label'] ?></th>									<td>										<input type="text" name="ban_user" size="25" maxlength="25" value="<?php if (isset($ban_user)) echo pun_htmlspecialchars($ban_user); ?>" tabindex="1" />										<span><?php echo $lang_admin_bans['Username help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['IP label'] ?></th>									<td>										<input type="text" name="ban_ip" size="45" maxlength="255" value="<?php if (isset($ban_ip)) echo pun_htmlspecialchars($ban_ip); ?>" tabindex="2" />										<span><?php echo $lang_admin_bans['IP help'] ?><?php if ($ban_user != '' && isset($user_id)) printf(' '.$lang_admin_bans['IP help link'], '<a href="admin_users.php?ip_stats='.$user_id.'">'.$lang_admin_common['here'].'</a>') ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['E-mail label'] ?></th>									<td>										<input type="text" name="ban_email" size="40" maxlength="80" value="<?php if (isset($ban_email)) echo $ban_email; ?>" tabindex="3" />										<span><?php echo $lang_admin_bans['E-mail help'] ?></span>									</td>								</tr>							</table>							<p class="topspace"><strong class="warntext"><?php echo $lang_admin_bans['Ban IP range info'] ?></strong></p>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_bans['Message expiry subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_bans['Ban message label'] ?></th>									<td>										<input type="text" name="ban_message" size="50" maxlength="255" value="<?php if (isset($ban_message)) echo pun_htmlspecialchars($ban_message); ?>" tabindex="4" />										<span><?php echo $lang_admin_bans['Ban message help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['Expire date label'] ?></th>									<td>										<input type="text" name="ban_expire" size="17" maxlength="10" value="<?php if (isset($ban_expire)) echo $ban_expire; ?>" tabindex="5" />										<span><?php echo $lang_admin_bans['Expire date help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="add_edit_ban" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="6" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}// Add/edit a ban (stage 2)else if (isset($_POST['add_edit_ban'])){	confirm_referrer('admin_bans.php');	$ban_user = pun_trim($_POST['ban_user']);	$ban_ip = pun_trim($_POST['ban_ip']);	$ban_email = strtolower(pun_trim($_POST['ban_email']));	$ban_message = pun_trim($_POST['ban_message']);	$ban_expire = pun_trim($_POST['ban_expire']);	if ($ban_user == '' && $ban_ip == '' && $ban_email == '')		message($lang_admin_bans['Must enter message']);	else if (strtolower($ban_user) == 'guest')		message($lang_admin_bans['Cannot ban guest message']);	// Make sure we're not banning an admin or moderator	if (!empty($ban_user))	{		$result = $db->query('SELECT group_id FROM '.$db->prefix.'users WHERE username=\''.$db->escape($ban_user).'\' AND id>1') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))		{			$group_id = $db->result($result);			if ($group_id == PUN_ADMIN)				message(sprintf($lang_admin_bans['User is admin message'], pun_htmlspecialchars($ban_user)));			$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());			$is_moderator_group = $db->result($result);			if ($is_moderator_group)				message(sprintf($lang_admin_bans['User is mod message'], pun_htmlspecialchars($ban_user)));		}	}	// Validate IP/IP range (it's overkill, I know)	if ($ban_ip != '')	{		$ban_ip = preg_replace('%\s{2,}%S', ' ', $ban_ip);		$addresses = explode(' ', $ban_ip);		$addresses = array_map('pun_trim', $addresses);		for ($i = 0; $i < count($addresses); ++$i)		{			if (strpos($addresses[$i], ':') !== false)			{				$octets = explode(':', $addresses[$i]);				for ($c = 0; $c < count($octets); ++$c)				{					$octets[$c] = ltrim($octets[$c], "0");					if ($c > 7 || (!empty($octets[$c]) && !ctype_xdigit($octets[$c])) || intval($octets[$c], 16) > 65535)						message($lang_admin_bans['Invalid IP message']);				}				$cur_address = implode(':', $octets);				$addresses[$i] = $cur_address;			}			else			{				$octets = explode('.', $addresses[$i]);				for ($c = 0; $c < count($octets); ++$c)				{					$octets[$c] = (strlen($octets[$c]) > 1) ? ltrim($octets[$c], "0") : $octets[$c];					if ($c > 3 || preg_match('%[^0-9]%', $octets[$c]) || intval($octets[$c]) > 255)						message($lang_admin_bans['Invalid IP message']);				}				$cur_address = implode('.', $octets);				$addresses[$i] = $cur_address;			}		}		$ban_ip = implode(' ', $addresses);	}	require PUN_ROOT.'include/email.php';	if ($ban_email != '' && !is_valid_email($ban_email))	{		if (!preg_match('%^[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$%', $ban_email))			message($lang_admin_bans['Invalid e-mail message']);	}	if ($ban_expire != '' && $ban_expire != 'Never')	{		$ban_expire = strtotime($ban_expire.' GMT');		if ($ban_expire == -1 || !$ban_expire)			message($lang_admin_bans['Invalid date message'].' '.$lang_admin_bans['Invalid date reasons']);		$diff = ($pun_user['timezone'] + $pun_user['dst']) * 3600;		$ban_expire -= $diff;		if ($ban_expire <= time())			message($lang_admin_bans['Invalid date message'].' '.$lang_admin_bans['Invalid date reasons']);	}	else		$ban_expire = 'NULL';	$ban_user = ($ban_user != '') ? '\''.$db->escape($ban_user).'\'' : 'NULL';	$ban_ip = ($ban_ip != '') ? '\''.$db->escape($ban_ip).'\'' : 'NULL';	$ban_email = ($ban_email != '') ? '\''.$db->escape($ban_email).'\'' : 'NULL';	$ban_message = ($ban_message != '') ? '\''.$db->escape($ban_message).'\'' : 'NULL';	if ($_POST['mode'] == 'add')		$db->query('INSERT INTO '.$db->prefix.'bans (username, ip, email, message, expire, ban_creator) VALUES('.$ban_user.', '.$ban_ip.', '.$ban_email.', '.$ban_message.', '.$ban_expire.', '.$pun_user['id'].')') or error('Unable to add ban', __FILE__, __LINE__, $db->error());	else		$db->query('UPDATE '.$db->prefix.'bans SET username='.$ban_user.', ip='.$ban_ip.', email='.$ban_email.', message='.$ban_message.', expire='.$ban_expire.' WHERE id='.intval($_POST['ban_id'])) or error('Unable to update ban', __FILE__, __LINE__, $db->error());	// Regenerate the bans cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_bans_cache();	if ($_POST['mode'] == 'edit')		redirect('admin_bans.php', $lang_admin_bans['Ban edited redirect']);	else		redirect('admin_bans.php', $lang_admin_bans['Ban added redirect']);}// Remove a banelse if (isset($_GET['del_ban'])){	confirm_referrer('admin_bans.php');	$ban_id = intval($_GET['del_ban']);	if ($ban_id < 1)		message($lang_common['Bad request']);	$db->query('DELETE FROM '.$db->prefix.'bans WHERE id='.$ban_id) or error('Unable to delete ban', __FILE__, __LINE__, $db->error());	// Regenerate the bans cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_bans_cache();	redirect('admin_bans.php', $lang_admin_bans['Ban removed redirect']);}// Find banselse if (isset($_GET['find_ban'])){	$form = isset($_GET['form']) ? $_GET['form'] : array();	// trim() all elements in $form	$form = array_map('pun_trim', $form);	$conditions = $query_str = array();	$expire_after = isset($_GET['expire_after']) ? pun_trim($_GET['expire_after']) : '';	$expire_before = isset($_GET['expire_before']) ? pun_trim($_GET['expire_before']) : '';	$order_by = isset($_GET['order_by']) && in_array($_GET['order_by'], array('username', 'ip', 'email', 'expire')) ? 'b.'.$_GET['order_by'] : 'b.username';	$direction = isset($_GET['direction']) && $_GET['direction'] == 'DESC' ? 'DESC' : 'ASC';	$query_str[] = 'order_by='.$order_by;	$query_str[] = 'direction='.$direction;	// Try to convert date/time to timestamps	if ($expire_after != '')	{		$query_str[] = 'expire_after='.$expire_after;		$expire_after = strtotime($expire_after);		if ($expire_after === false || $expire_after == -1)			message($lang_admin_bans['Invalid date message']);		$conditions[] = 'b.expire>'.$expire_after;	}	if ($expire_before != '')	{		$query_str[] = 'expire_before='.$expire_before;		$expire_before = strtotime($expire_before);		if ($expire_before === false || $expire_before == -1)			message($lang_admin_bans['Invalid date message']);		$conditions[] = 'b.expire<'.$expire_before;	}	$like_command = ($db_type == 'pgsql') ? 'ILIKE' : 'LIKE';	foreach ($form as $key => $input)	{		if ($input != '' && in_array($key, array('username', 'ip', 'email', 'message')))		{			$conditions[] = 'b.'.$db->escape($key).' '.$like_command.' \''.$db->escape(str_replace('*', '%', $input)).'\'';			$query_str[] = 'form%5B'.$key.'%5D='.urlencode($input);		}	}	// Fetch ban count	$result = $db->query('SELECT COUNT(id) FROM '.$db->prefix.'bans as b WHERE b.id>0'.(!empty($conditions) ? ' AND '.implode(' AND ', $conditions) : '')) or error('Unable to fetch ban list', __FILE__, __LINE__, $db->error());	$num_bans = $db->result($result);	// Determine the ban offset (based on $_GET['p'])	$num_pages = ceil($num_bans / 50);	$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);	$start_from = 50 * ($p - 1);	// Generate paging links	$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'admin_bans.php?find_ban=&amp;'.implode('&amp;', $query_str));	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Bans'], $lang_admin_bans['Results head']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_bans.php"><?php echo $lang_admin_common['Bans'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_bans['Results head'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><div id="bans1" class="blocktable">	<h2><span><?php echo $lang_admin_bans['Results head'] ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_admin_bans['Results username head'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_admin_bans['Results e-mail head'] ?></th>					<th class="tc3" scope="col"><?php echo $lang_admin_bans['Results IP address head'] ?></th>					<th class="tc4" scope="col"><?php echo $lang_admin_bans['Results expire head'] ?></th>					<th class="tc5" scope="col"><?php echo $lang_admin_bans['Results message head'] ?></th>					<th class="tc6" scope="col"><?php echo $lang_admin_bans['Results banned by head'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_admin_bans['Results actions head'] ?></th>				</tr>			</thead>			<tbody><?php	$result = $db->query('SELECT b.id, b.username, b.ip, b.email, b.message, b.expire, b.ban_creator, u.username AS ban_creator_username FROM '.$db->prefix.'bans AS b LEFT JOIN '.$db->prefix.'users AS u ON b.ban_creator=u.id WHERE b.id>0'.(!empty($conditions) ? ' AND '.implode(' AND ', $conditions) : '').' ORDER BY '.$db->escape($order_by).' '.$db->escape($direction).' LIMIT '.$start_from.', 50') or error('Unable to fetch ban list', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		while ($ban_data = $db->fetch_assoc($result))		{			$actions = '<a href="admin_bans.php?edit_ban='.$ban_data['id'].'">'.$lang_admin_common['Edit'].'</a> | <a href="admin_bans.php?del_ban='.$ban_data['id'].'">'.$lang_admin_common['Remove'].'</a>';			$expire = format_time($ban_data['expire'], true);?>				<tr>					<td class="tcl"><?php echo ($ban_data['username'] != '') ? pun_htmlspecialchars($ban_data['username']) : '&#160;' ?></td>					<td class="tc2"><?php echo ($ban_data['email'] != '') ? $ban_data['email'] : '&#160;' ?></td>					<td class="tc3"><?php echo ($ban_data['ip'] != '') ? pun_htmlspecialchars($ban_data['ip']) : '&#160;' ?></td>					<td class="tc4"><?php echo $expire ?></td>					<td class="tc5"><?php echo ($ban_data['message'] != '') ? pun_htmlspecialchars($ban_data['message']) : '&#160;' ?></td>					<td class="tc6"><?php echo ($ban_data['ban_creator_username'] != '') ? '<a href="profile.php?id='.$ban_data['ban_creator'].'">'.pun_htmlspecialchars($ban_data['ban_creator_username']).'</a>' : $lang_admin_bans['Unknown'] ?></td>					<td class="tcr"><?php echo $actions ?></td>				</tr><?php		}	}	else		echo "\t\t\t\t".'<tr><td class="tcl" colspan="7">'.$lang_admin_bans['No match'].'</td></tr>'."\n";?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<ul class="crumbs">			<li><a href="admin_index.php"><?php echo $lang_admin_common['Admin'].' '.$lang_admin_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="admin_bans.php"><?php echo $lang_admin_common['Bans'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_admin_bans['Results head'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div><?php	require PUN_ROOT.'footer.php';}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Bans']);$focus_element = array('bans', 'new_ban_user');define('PUN_ACTIVE_PAGE', 'admin');require PUN_ROOT.'header.php';generate_admin_menu('bans');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_bans['New ban head'] ?></span></h2>		<div class="box">			<form id="bans" method="post" action="admin_bans.php?action=more">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_bans['Add ban subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_bans['Username label'] ?><div><input type="submit" name="add_ban" value="<?php echo $lang_admin_common['Add'] ?>" tabindex="2" /></div></th>									<td>										<input type="text" name="new_ban_user" size="25" maxlength="25" tabindex="1" />										<span><?php echo $lang_admin_bans['Username advanced help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div>		<h2 class="block2"><span><?php echo $lang_admin_bans['Ban search head'] ?></span></h2>		<div class="box">			<form id="find_bans" method="get" action="admin_bans.php">				<p class="submittop"><input type="submit" name="find_ban" value="<?php echo $lang_admin_bans['Submit search'] ?>" tabindex="3" /></p>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_bans['Ban search subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_bans['Ban search info'] ?></p>							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_bans['Username label'] ?></th>									<td><input type="text" name="form[username]" size="25" maxlength="25" tabindex="4" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['IP label'] ?></th>									<td><input type="text" name="form[ip]" size="30" maxlength="255" tabindex="5" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['E-mail label'] ?></th>									<td><input type="text" name="form[email]" size="30" maxlength="80" tabindex="6" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['Message label'] ?></th>									<td><input type="text" name="form[message]" size="30" maxlength="255" tabindex="7" /></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['Expire after label'] ?></th>									<td><input type="text" name="expire_after" size="10" maxlength="10" tabindex="8" />									<span><?php echo $lang_admin_bans['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['Expire before label'] ?></th>									<td><input type="text" name="expire_before" size="10" maxlength="10" tabindex="9" />									<span><?php echo $lang_admin_bans['Date help'] ?></span></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_bans['Order by label'] ?></th>									<td>										<select name="order_by" tabindex="10">											<option value="username" selected="selected"><?php echo $lang_admin_bans['Order by username'] ?></option>											<option value="ip"><?php echo $lang_admin_bans['Order by ip'] ?></option>											<option value="email"><?php echo $lang_admin_bans['Order by e-mail'] ?></option>											<option value="expire"><?php echo $lang_admin_bans['Order by expire'] ?></option>										</select>&#160;&#160;&#160;<select name="direction" tabindex="11">											<option value="ASC" selected="selected"><?php echo $lang_admin_bans['Ascending'] ?></option>											<option value="DESC"><?php echo $lang_admin_bans['Descending'] ?></option>										</select>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="find_ban" value="<?php echo $lang_admin_bans['Submit search'] ?>" tabindex="12" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Fetch some info about the post, the topic and the forum$result = $db->query('SELECT f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.sticky, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_post = $db->fetch_assoc($result);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;$can_edit_subject = $id == $cur_post['first_post_id'];if ($pun_config['o_censoring'] == '1'){	$cur_post['subject'] = censor_words($cur_post['subject']);	$cur_post['message'] = censor_words($cur_post['message']);}// Do we have permission to edit this post?if (($pun_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $pun_user['id'] ||	$cur_post['closed'] == '1') &&	!$is_admmod)	message($lang_common['No permission'], false, '403 Forbidden');// Load the post.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/post.php';// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	if ($is_admmod)		confirm_referrer('edit.php');	// If it's a topic it must contain a subject	if ($can_edit_subject)	{		$subject = pun_trim($_POST['req_subject']);		if ($pun_config['o_censoring'] == '1')			$censored_subject = pun_trim(censor_words($subject));		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if ($pun_config['o_censoring'] == '1' && $censored_subject == '')			$errors[] = $lang_post['No subject after censoring'];		else if (pun_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($pun_config['p_subject_all_caps'] == '0' && is_all_uppercase($subject) && !$pun_user['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// Clean up message from POST	$message = pun_linebreaks(pun_trim($_POST['req_message']));	// Here we use strlen() not pun_strlen() as we want to limit the post to PUN_MAX_POSTSIZE bytes, not characters	if (strlen($message) > PUN_MAX_POSTSIZE)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(PUN_MAX_POSTSIZE));	else if ($pun_config['p_message_all_caps'] == '0' && is_all_uppercase($message) && !$pun_user['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($pun_config['p_message_bbcode'] == '1')	{		require PUN_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if (empty($errors))	{		if ($message == '')			$errors[] = $lang_post['No message'];		else if ($pun_config['o_censoring'] == '1')		{			// Censor message to see if that causes problems			$censored_message = pun_trim(censor_words($message));			if ($censored_message == '')				$errors[] = $lang_post['No message after censoring'];		}	}	$hide_smilies = isset($_POST['hide_smilies']) ? '1' : '0';	$stick_topic = isset($_POST['stick_topic']) ? '1' : '0';	if (!$is_admmod)		$stick_topic = $cur_post['sticky'];	// Replace four-byte characters (MySQL cannot handle them)	$message = strip_bad_multibyte_chars($message);	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		$edited_sql = (!isset($_POST['silent']) || !$is_admmod) ? ', edited='.time().', edited_by=\''.$db->escape($pun_user['username']).'\'' : '';		require PUN_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$db->query('UPDATE '.$db->prefix.'topics SET subject=\''.$db->escape($subject).'\', sticky='.$stick_topic.' WHERE id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']) or error('Unable to update topic', __FILE__, __LINE__, $db->error());			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$db->query('UPDATE '.$db->prefix.'posts SET message=\''.$db->escape($message).'\', hide_smilies='.$hide_smilies.$edited_sql.' WHERE id='.$id) or error('Unable to update post', __FILE__, __LINE__, $db->error());		redirect('viewtopic.php?pid='.$id.'#p'.$id, $lang_post['Edit redirect']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_post['Edit post']);$required_fields = array('req_subject' => $lang_common['Subject'], 'req_message' => $lang_common['Message']);$focus_element = array('edit', 'req_message');define('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';$cur_index = 1;?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?id=<?php echo $cur_post['tid'] ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_post['Edit post'] ?></strong></li>		</ul>	</div></div><?php// If there are errors, we display themif (!empty($errors)){?><div id="posterror" class="block">	<h2><span><?php echo $lang_post['Post errors'] ?></span></h2>	<div class="box">		<div class="inbox error-info">			<p><?php echo $lang_post['Post errors info'] ?></p>			<ul class="error-list"><?php	foreach ($errors as $cur_error)		echo "\t\t\t\t".'<li><strong>'.$cur_error.'</strong></li>'."\n";?>			</ul>		</div>	</div></div><?php}else if (isset($_POST['preview'])){	require_once PUN_ROOT.'include/parser.php';	$preview_message = parse_message($message, $hide_smilies);?><div id="postpreview" class="blockpost">	<h2><span><?php echo $lang_post['Post preview'] ?></span></h2>	<div class="box">		<div class="inbox">			<div class="postbody">				<div class="postright">					<div class="postmsg">						<?php echo $preview_message."\n" ?>					</div>				</div>			</div>		</div>	</div></div><?php}?><div id="editform" class="blockform">	<h2><span><?php echo $lang_post['Edit post'] ?></span></h2>	<div class="box">		<form id="edit" method="post" action="edit.php?id=<?php echo $id ?>&amp;action=edit" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_post['Edit post legend'] ?></legend>					<input type="hidden" name="form_sent" value="1" />					<div class="infldset txtarea"><?php if ($can_edit_subject): ?>						<label class="required"><strong><?php echo $lang_common['Subject'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input class="longinput" type="text" name="req_subject" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" value="<?php echo pun_htmlspecialchars(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" /><br /></label><?php endif; ?>						<label class="required"><strong><?php echo $lang_common['Message'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<textarea name="req_message" rows="20" cols="95" tabindex="<?php echo $cur_index++ ?>"><?php echo pun_htmlspecialchars(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea><br /></label>						<ul class="bblinks">							<li><span><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#url" onclick="window.open(this.href); return false;"><?php echo $lang_common['url tag'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1' && $pun_user['g_post_links'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a> <?php echo ($pun_config['o_smilies'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>						</ul>					</div>				</fieldset><?php$checkboxes = array();if ($can_edit_subject && $is_admmod){	if (isset($_POST['stick_topic']) || $cur_post['sticky'] == '1')		$checkboxes[] = '<label><input type="checkbox" name="stick_topic" value="1" checked="checked" tabindex="'.($cur_index++).'" />'.$lang_common['Stick topic'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="stick_topic" value="1" tabindex="'.($cur_index++).'" />'.$lang_common['Stick topic'].'<br /></label>';}if ($pun_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" checked="checked" tabindex="'.($cur_index++).'" />'.$lang_post['Hide smilies'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" tabindex="'.($cur_index++).'" />'.$lang_post['Hide smilies'].'<br /></label>';}if ($is_admmod){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$checkboxes[] = '<label><input type="checkbox" name="silent" value="1" tabindex="'.($cur_index++).'" checked="checked" />'.$lang_post['Silent edit'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="silent" value="1" tabindex="'.($cur_index++).'" />'.$lang_post['Silent edit'].'<br /></label>';}if (!empty($checkboxes)){?>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_common['Options'] ?></legend>					<div class="infldset">						<div class="rbox">							<?php echo implode("\n\t\t\t\t\t\t\t", $checkboxes)."\n" ?>						</div>					</div>				</fieldset><?php	}?>			</div>			<p class="buttons"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="s" /> <input type="submit" name="preview" value="<?php echo $lang_post['Preview'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="p" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if ($pun_user['g_id'] != PUN_ADMIN)	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_categories.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_categories.php';// Add a new categoryif (isset($_POST['add_cat'])){	confirm_referrer('admin_categories.php');	$new_cat_name = pun_trim($_POST['new_cat_name']);	if ($new_cat_name == '')		message($lang_admin_categories['Must enter name message']);	$db->query('INSERT INTO '.$db->prefix.'categories (cat_name) VALUES(\''.$db->escape($new_cat_name).'\')') or error('Unable to create category', __FILE__, __LINE__, $db->error());	redirect('admin_categories.php', $lang_admin_categories['Category added redirect']);}// Delete a categoryelse if (isset($_POST['del_cat']) || isset($_POST['del_cat_comply'])){	confirm_referrer('admin_categories.php');	$cat_to_delete = intval($_POST['cat_to_delete']);	if ($cat_to_delete < 1)		message($lang_common['Bad request']);	if (isset($_POST['del_cat_comply'])) // Delete a category with all forums and posts	{		@set_time_limit(0);		$result = $db->query('SELECT id FROM '.$db->prefix.'forums WHERE cat_id='.$cat_to_delete) or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());		$num_forums = $db->num_rows($result);		for ($i = 0; $i < $num_forums; ++$i)		{			$cur_forum = $db->result($result, $i);			// Prune all posts and topics			prune($cur_forum, 1, -1);			// Delete the forum			$db->query('DELETE FROM '.$db->prefix.'forums WHERE id='.$cur_forum) or error('Unable to delete forum', __FILE__, __LINE__, $db->error());		}		// Locate any "orphaned redirect topics" and delete them		$result = $db->query('SELECT t1.id FROM '.$db->prefix.'topics AS t1 LEFT JOIN '.$db->prefix.'topics AS t2 ON t1.moved_to=t2.id WHERE t2.id IS NULL AND t1.moved_to IS NOT NULL') or error('Unable to fetch redirect topics', __FILE__, __LINE__, $db->error());		$num_orphans = $db->num_rows($result);		if ($num_orphans)		{			for ($i = 0; $i < $num_orphans; ++$i)				$orphans[] = $db->result($result, $i);			$db->query('DELETE FROM '.$db->prefix.'topics WHERE id IN('.implode(',', $orphans).')') or error('Unable to delete redirect topics', __FILE__, __LINE__, $db->error());		}		// Delete the category		$db->query('DELETE FROM '.$db->prefix.'categories WHERE id='.$cat_to_delete) or error('Unable to delete category', __FILE__, __LINE__, $db->error());		// Regenerate the quick jump cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_quickjump_cache();		redirect('admin_categories.php', $lang_admin_categories['Category deleted redirect']);	}	else // If the user hasn't confirmed the delete	{		$result = $db->query('SELECT cat_name FROM '.$db->prefix.'categories WHERE id='.$cat_to_delete) or error('Unable to fetch category info', __FILE__, __LINE__, $db->error());		$cat_name = $db->result($result);		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Categories']);		define('PUN_ACTIVE_PAGE', 'admin');		require PUN_ROOT.'header.php';		generate_admin_menu('categories');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_categories['Delete category head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_categories.php">				<div class="inform">				<input type="hidden" name="cat_to_delete" value="<?php echo $cat_to_delete ?>" />					<fieldset>						<legend><?php echo $lang_admin_categories['Confirm delete subhead'] ?></legend>						<div class="infldset">							<p><?php printf($lang_admin_categories['Confirm delete info'], pun_htmlspecialchars($cat_name)) ?></p>							<p class="warntext"><?php echo $lang_admin_categories['Delete category warn'] ?></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="del_cat_comply" value="<?php echo $lang_admin_common['Delete'] ?>" /><a href="javascript:history.go(-1)"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php		require PUN_ROOT.'footer.php';	}}else if (isset($_POST['update'])) // Change position and name of the categories{	confirm_referrer('admin_categories.php');	$categories = $_POST['cat'];	if (empty($categories))		message($lang_common['Bad request']);	foreach ($categories as $cat_id => $cur_cat)	{		$cur_cat['name'] = pun_trim($cur_cat['name']);		$cur_cat['order'] = pun_trim($cur_cat['order']);		if ($cur_cat['name'] == '')			message($lang_admin_categories['Must enter name message']);		if ($cur_cat['order'] == '' || preg_match('%[^0-9]%', $cur_cat['order']))			message($lang_admin_categories['Must enter integer message']);		$db->query('UPDATE '.$db->prefix.'categories SET cat_name=\''.$db->escape($cur_cat['name']).'\', disp_position='.$cur_cat['order'].' WHERE id='.intval($cat_id)) or error('Unable to update category', __FILE__, __LINE__, $db->error());	}	// Regenerate the quick jump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_quickjump_cache();	redirect('admin_categories.php', $lang_admin_categories['Categories updated redirect']);}// Generate an array with all categories$result = $db->query('SELECT id, cat_name, disp_position FROM '.$db->prefix.'categories ORDER BY disp_position') or error('Unable to fetch category list', __FILE__, __LINE__, $db->error());$num_cats = $db->num_rows($result);for ($i = 0; $i < $num_cats; ++$i)	$cat_list[] = $db->fetch_assoc($result);$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Categories']);define('PUN_ACTIVE_PAGE', 'admin');require PUN_ROOT.'header.php';generate_admin_menu('categories');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_categories['Add categories head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_categories.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_categories['Add categories subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_categories['Add category label'] ?><div><input type="submit" name="add_cat" value="<?php echo $lang_admin_categories['Add new submit'] ?>" tabindex="2" /></div></th>									<td>										<input type="text" name="new_cat_name" size="35" maxlength="80" tabindex="1" />										<span><?php printf($lang_admin_categories['Add category help'], '<a href="admin_forums.php">'.$lang_admin_common['Forums'].'</a>') ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div><?php if ($num_cats): ?>		<h2 class="block2"><span><?php echo $lang_admin_categories['Delete categories head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_categories.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_categories['Delete categories subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_categories['Delete category label'] ?><div><input type="submit" name="del_cat" value="<?php echo $lang_admin_common['Delete'] ?>" tabindex="4" /></div></th>									<td>										<select name="cat_to_delete" tabindex="3"><?php	foreach ($cat_list as $cur_cat)		echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_cat['id'].'">'.pun_htmlspecialchars($cur_cat['cat_name']).'</option>'."\n";?>										</select>										<span><?php echo $lang_admin_categories['Delete category help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div><?php endif; ?><?php if ($num_cats): ?>		<h2 class="block2"><span><?php echo $lang_admin_categories['Edit categories head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_categories.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_categories['Edit categories subhead'] ?></legend>						<div class="infldset">							<table id="categoryedit" cellspacing="0" >							<thead>								<tr>									<th class="tcl" scope="col"><?php echo $lang_admin_categories['Category name label'] ?></th>									<th scope="col"><?php echo $lang_admin_categories['Category position label'] ?></th>								</tr>							</thead>							<tbody><?php	foreach ($cat_list as $cur_cat)	{?>								<tr>									<td class="tcl"><input type="text" name="cat[<?php echo $cur_cat['id'] ?>][name]" value="<?php echo pun_htmlspecialchars($cur_cat['cat_name']) ?>" size="35" maxlength="80" /></td>									<td><input type="text" name="cat[<?php echo $cur_cat['id'] ?>][order]" value="<?php echo $cur_cat['disp_position'] ?>" size="3" maxlength="3" /></td>								</tr><?php	}?>							</tbody>							</table>							<div class="fsetsubmit"><input type="submit" name="update" value="<?php echo $lang_admin_common['Update'] ?>" /></div>						</div>					</fieldset>				</div>			</form>		</div><?php endif; ?>	</div>	<div class="clearer"></div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// Include UTF-8 functionrequire PUN_ROOT.'include/utf8/substr_replace.php';require PUN_ROOT.'include/utf8/ucwords.php'; // utf8_ucwords needs utf8_substr_replacerequire PUN_ROOT.'include/utf8/strcasecmp.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$section = isset($_GET['section']) ? $_GET['section'] : null;$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 2)	message($lang_common['Bad request'], false, '404 Not Found');if ($action != 'change_pass' || !isset($_GET['key'])){	if ($pun_user['g_read_board'] == '0')		message($lang_common['No view'], false, '403 Forbidden');	else if ($pun_user['g_view_users'] == '0' && ($pun_user['is_guest'] || $pun_user['id'] != $id))		message($lang_common['No permission'], false, '403 Forbidden');}// Load the prof_reg.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/prof_reg.php';// Load the profile.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/profile.php';if ($action == 'change_pass'){	if (isset($_GET['key']))	{		// If the user is already logged in we shouldn't be here :)		if (!$pun_user['is_guest'])		{			header('Location: index.php');			exit;		}		$key = $_GET['key'];		$result = $db->query('SELECT * FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch new password', __FILE__, __LINE__, $db->error());		$cur_user = $db->fetch_assoc($result);		if ($key == '' || $key != $cur_user['activate_key'])			message($lang_profile['Pass key bad'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');		else		{			$db->query('UPDATE '.$db->prefix.'users SET password=\''.$cur_user['activate_string'].'\', activate_string=NULL, activate_key=NULL'.(!empty($cur_user['salt']) ? ', salt=NULL' : '').' WHERE id='.$id) or error('Unable to update password', __FILE__, __LINE__, $db->error());			message($lang_profile['Pass updated'], true);		}	}	// Make sure we are allowed to change this user's password	if ($pun_user['id'] != $id)	{		if (!$pun_user['is_admmod']) // A regular user trying to change another user's password?			message($lang_common['No permission'], false, '403 Forbidden');		else if ($pun_user['g_moderator'] == '1') // A moderator trying to change a user's password?		{			$result = $db->query('SELECT u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if (!$db->num_rows($result))				message($lang_common['Bad request'], false, '404 Not Found');			list($group_id, $is_moderator) = $db->fetch_row($result);			if ($pun_user['g_mod_edit_users'] == '0' || $pun_user['g_mod_change_passwords'] == '0' || $group_id == PUN_ADMIN || $is_moderator == '1')				message($lang_common['No permission'], false, '403 Forbidden');		}	}	if (isset($_POST['form_sent']))	{		if ($pun_user['is_admmod'])			confirm_referrer('profile.php');		$old_password = isset($_POST['req_old_password']) ? pun_trim($_POST['req_old_password']) : '';		$new_password1 = pun_trim($_POST['req_new_password1']);		$new_password2 = pun_trim($_POST['req_new_password2']);		if ($new_password1 != $new_password2)			message($lang_prof_reg['Pass not match']);		if (pun_strlen($new_password1) < 4)			message($lang_prof_reg['Pass too short']);		$result = $db->query('SELECT * FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch password', __FILE__, __LINE__, $db->error());		$cur_user = $db->fetch_assoc($result);		$authorized = false;		if (!empty($cur_user['password']))		{			$old_password_hash = pun_hash($old_password);			if ($cur_user['password'] == $old_password_hash || $pun_user['is_admmod'])				$authorized = true;		}		if (!$authorized)			message($lang_profile['Wrong pass']);		$new_password_hash = pun_hash($new_password1);		$db->query('UPDATE '.$db->prefix.'users SET password=\''.$new_password_hash.'\''.(!empty($cur_user['salt']) ? ', salt=NULL' : '').' WHERE id='.$id) or error('Unable to update password', __FILE__, __LINE__, $db->error());		if ($pun_user['id'] == $id)			pun_setcookie($pun_user['id'], $new_password_hash, time() + $pun_config['o_timeout_visit']);		redirect('profile.php?section=essentials&amp;id='.$id, $lang_profile['Pass updated redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Change pass']);	$required_fields = array('req_old_password' => $lang_profile['Old pass'], 'req_new_password1' => $lang_profile['New pass'], 'req_new_password2' => $lang_profile['Confirm new pass']);	$focus_element = array('change_pass', ((!$pun_user['is_admmod']) ? 'req_old_password' : 'req_new_password1'));	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Change pass'] ?></span></h2>	<div class="box">		<form id="change_pass" method="post" action="profile.php?action=change_pass&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<input type="hidden" name="form_sent" value="1" />				<fieldset>					<legend><?php echo $lang_profile['Change pass legend'] ?></legend>					<div class="infldset"><?php if (!$pun_user['is_admmod']): ?>						<label class="required"><strong><?php echo $lang_profile['Old pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_old_password" size="16" /><br /></label><?php endif; ?>						<label class="conl required"><strong><?php echo $lang_profile['New pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_new_password1" size="16" /><br /></label>						<label class="conl required"><strong><?php echo $lang_profile['Confirm new pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_new_password2" size="16" /><br /></label>						<p class="clearb"><?php echo $lang_profile['Pass info'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'change_email'){	// Make sure we are allowed to change this user's email	if ($pun_user['id'] != $id)	{		if (!$pun_user['is_admmod']) // A regular user trying to change another user's email?			message($lang_common['No permission'], false, '403 Forbidden');		else if ($pun_user['g_moderator'] == '1') // A moderator trying to change a user's email?		{			$result = $db->query('SELECT u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if (!$db->num_rows($result))				message($lang_common['Bad request'], false, '404 Not Found');			list($group_id, $is_moderator) = $db->fetch_row($result);			if ($pun_user['g_mod_edit_users'] == '0' || $group_id == PUN_ADMIN || $is_moderator == '1')				message($lang_common['No permission'], false, '403 Forbidden');		}	}	if (isset($_GET['key']))	{		$key = $_GET['key'];		$result = $db->query('SELECT activate_string, activate_key FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch activation data', __FILE__, __LINE__, $db->error());		list($new_email, $new_email_key) = $db->fetch_row($result);		if ($key == '' || $key != $new_email_key)			message($lang_profile['Email key bad'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');		else		{			$db->query('UPDATE '.$db->prefix.'users SET email=activate_string, activate_string=NULL, activate_key=NULL WHERE id='.$id) or error('Unable to update email address', __FILE__, __LINE__, $db->error());			message($lang_profile['Email updated'], true);		}	}	else if (isset($_POST['form_sent']))	{		if (pun_hash($_POST['req_password']) !== $pun_user['password'])			message($lang_profile['Wrong pass']);		require PUN_ROOT.'include/email.php';		// Validate the email address		$new_email = strtolower(pun_trim($_POST['req_new_email']));		if (!is_valid_email($new_email))			message($lang_common['Invalid email']);		// Check if it's a banned email address		if (is_banned_email($new_email))		{			if ($pun_config['p_allow_banned_email'] == '0')				message($lang_prof_reg['Banned email']);			else if ($pun_config['o_mailing_list'] != '')			{				// Load the "banned email change" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/banned_email_change.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);				$mail_message = str_replace('<email>', $new_email, $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$id, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Check if someone else already has registered with that email address		$result = $db->query('SELECT id, username FROM '.$db->prefix.'users WHERE email=\''.$db->escape($new_email).'\'') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))		{			if ($pun_config['p_allow_dupe_email'] == '0')				message($lang_prof_reg['Dupe email']);			else if ($pun_config['o_mailing_list'] != '')			{				while ($cur_dupe = $db->fetch_assoc($result))					$dupe_list[] = $cur_dupe['username'];				// Load the "dupe email change" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/dupe_email_change.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);				$mail_message = str_replace('<dupe_list>', implode(', ', $dupe_list), $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$id, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		$new_email_key = random_pass(8);		$db->query('UPDATE '.$db->prefix.'users SET activate_string=\''.$db->escape($new_email).'\', activate_key=\''.$new_email_key.'\' WHERE id='.$id) or error('Unable to update activation data', __FILE__, __LINE__, $db->error());		// Load the "activate email" template		$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/activate_email.tpl'));		// The first row contains the subject		$first_crlf = strpos($mail_tpl, "\n");		$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));		$mail_message = trim(substr($mail_tpl, $first_crlf));		$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);		$mail_message = str_replace('<base_url>', get_base_url(), $mail_message);		$mail_message = str_replace('<activation_url>', get_base_url().'/profile.php?action=change_email&id='.$id.'&key='.$new_email_key, $mail_message);		$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);		pun_mail($new_email, $mail_subject, $mail_message);		message($lang_profile['Activate email sent'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.', true);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Change email']);	$required_fields = array('req_new_email' => $lang_profile['New email'], 'req_password' => $lang_common['Password']);	$focus_element = array('change_email', 'req_new_email');	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Change email'] ?></span></h2>	<div class="box">		<form id="change_email" method="post" action="profile.php?action=change_email&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Email legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<label class="required"><strong><?php echo $lang_profile['New email'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="text" name="req_new_email" size="50" maxlength="80" /><br /></label>						<label class="required"><strong><?php echo $lang_common['Password'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="password" name="req_password" size="16" /><br /></label>						<p><?php echo $lang_profile['Email instructions'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="new_email" value="<?php echo $lang_common['Submit'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'upload_avatar' || $action == 'upload_avatar2'){	if ($pun_config['o_avatars'] == '0')		message($lang_profile['Avatars disabled']);	if ($pun_user['id'] != $id && !$pun_user['is_admmod'])		message($lang_common['No permission'], false, '403 Forbidden');	if (isset($_POST['form_sent']))	{		if (!isset($_FILES['req_file']))			message($lang_profile['No file']);		$uploaded_file = $_FILES['req_file'];		// Make sure the upload went smooth		if (isset($uploaded_file['error']))		{			switch ($uploaded_file['error'])			{				case 1: // UPLOAD_ERR_INI_SIZE				case 2: // UPLOAD_ERR_FORM_SIZE					message($lang_profile['Too large ini']);					break;				case 3: // UPLOAD_ERR_PARTIAL					message($lang_profile['Partial upload']);					break;				case 4: // UPLOAD_ERR_NO_FILE					message($lang_profile['No file']);					break;				case 6: // UPLOAD_ERR_NO_TMP_DIR					message($lang_profile['No tmp directory']);					break;				default:					// No error occured, but was something actually uploaded?					if ($uploaded_file['size'] == 0)						message($lang_profile['No file']);					break;			}		}		if (is_uploaded_file($uploaded_file['tmp_name']))		{			// Preliminary file check, adequate in most cases			$allowed_types = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');			if (!in_array($uploaded_file['type'], $allowed_types))				message($lang_profile['Bad type']);			// Make sure the file isn't too big			if ($uploaded_file['size'] > $pun_config['o_avatars_size'])				message($lang_profile['Too large'].' '.forum_number_format($pun_config['o_avatars_size']).' '.$lang_profile['bytes'].'.');			// Move the file to the avatar directory. We do this before checking the width/height to circumvent open_basedir restrictions			if (!@move_uploaded_file($uploaded_file['tmp_name'], PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp'))				message($lang_profile['Move failed'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');			list($width, $height, $type,) = @getimagesize(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');			// Determine type			if ($type == IMAGETYPE_GIF)				$extension = '.gif';			else if ($type == IMAGETYPE_JPEG)				$extension = '.jpg';			else if ($type == IMAGETYPE_PNG)				$extension = '.png';			else			{				// Invalid type				@unlink(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');				message($lang_profile['Bad type']);			}			// Now check the width/height			if (empty($width) || empty($height) || $width > $pun_config['o_avatars_width'] || $height > $pun_config['o_avatars_height'])			{				@unlink(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');				message($lang_profile['Too wide or high'].' '.$pun_config['o_avatars_width'].'x'.$pun_config['o_avatars_height'].' '.$lang_profile['pixels'].'.');			}			// Delete any old avatars and put the new one in place			delete_avatar($id);			@rename(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp', PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.$extension);			@chmod(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.$extension, 0644);		}		else			message($lang_profile['Unknown failure']);		redirect('profile.php?section=personality&amp;id='.$id, $lang_profile['Avatar upload redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Upload avatar']);	$required_fields = array('req_file' => $lang_profile['File']);	$focus_element = array('upload_avatar', 'req_file');	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Upload avatar'] ?></span></h2>	<div class="box">		<form id="upload_avatar" method="post" enctype="multipart/form-data" action="profile.php?action=upload_avatar2&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Upload avatar legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<input type="hidden" name="MAX_FILE_SIZE" value="<?php echo $pun_config['o_avatars_size'] ?>" />						<label class="required"><strong><?php echo $lang_profile['File'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input name="req_file" type="file" size="40" /><br /></label>						<p><?php echo $lang_profile['Avatar desc'].' '.$pun_config['o_avatars_width'].' x '.$pun_config['o_avatars_height'].' '.$lang_profile['pixels'].' '.$lang_common['and'].' '.forum_number_format($pun_config['o_avatars_size']).' '.$lang_profile['bytes'].' ('.file_size($pun_config['o_avatars_size']).').' ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="upload" value="<?php echo $lang_profile['Upload'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'delete_avatar'){	if ($pun_user['id'] != $id && !$pun_user['is_admmod'])		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	delete_avatar($id);	redirect('profile.php?section=personality&amp;id='.$id, $lang_profile['Avatar deleted redirect']);}else if (isset($_POST['update_group_membership'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	$new_group_id = intval($_POST['group_id']);	$db->query('UPDATE '.$db->prefix.'users SET group_id='.$new_group_id.' WHERE id='.$id) or error('Unable to change user group', __FILE__, __LINE__, $db->error());	// Regenerate the users info cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_users_info_cache();	$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$new_group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());	$new_group_mod = $db->result($result);	// If the user was a moderator or an administrator, we remove him/her from the moderator list in all forums as well	if ($new_group_id != PUN_ADMIN && $new_group_mod != '1')	{		$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());		while ($cur_forum = $db->fetch_assoc($result))		{			$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();			if (in_array($id, $cur_moderators))			{				$username = array_search($id, $cur_moderators);				unset($cur_moderators[$username]);				$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';				$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());			}		}	}	redirect('profile.php?section=admin&amp;id='.$id, $lang_profile['Group membership redirect']);}else if (isset($_POST['update_forums'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	// Get the username of the user we are processing	$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	$username = $db->result($result);	$moderator_in = (isset($_POST['moderator_in'])) ? array_keys($_POST['moderator_in']) : array();	// Loop through all forums	$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());	while ($cur_forum = $db->fetch_assoc($result))	{		$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();		// If the user should have moderator access (and he/she doesn't already have it)		if (in_array($cur_forum['id'], $moderator_in) && !in_array($id, $cur_moderators))		{			$cur_moderators[$username] = $id;			uksort($cur_moderators, 'utf8_strcasecmp');			$db->query('UPDATE '.$db->prefix.'forums SET moderators=\''.$db->escape(serialize($cur_moderators)).'\' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());		}		// If the user shouldn't have moderator access (and he/she already has it)		else if (!in_array($cur_forum['id'], $moderator_in) && in_array($id, $cur_moderators))		{			unset($cur_moderators[$username]);			$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';			$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());		}	}	redirect('profile.php?section=admin&amp;id='.$id, $lang_profile['Update forums redirect']);}else if (isset($_POST['ban'])){	if ($pun_user['g_id'] != PUN_ADMIN && ($pun_user['g_moderator'] != '1' || $pun_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission'], false, '403 Forbidden');	// Get the username of the user we are banning	$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch username', __FILE__, __LINE__, $db->error());	$username = $db->result($result);	// Check whether user is already banned	$result = $db->query('SELECT id FROM '.$db->prefix.'bans WHERE username = \''.$db->escape($username).'\' ORDER BY expire IS NULL DESC, expire DESC LIMIT 1') or error('Unable to fetch ban ID', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		$ban_id = $db->result($result);		redirect('admin_bans.php?edit_ban='.$ban_id.'&amp;exists', $lang_profile['Ban redirect']);	}	else		redirect('admin_bans.php?add_ban='.$id, $lang_profile['Ban redirect']);}else if (isset($_POST['delete_user']) || isset($_POST['delete_user_comply'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	// Get the username and group of the user we are deleting	$result = $db->query('SELECT group_id, username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	list($group_id, $username) = $db->fetch_row($result);	if ($group_id == PUN_ADMIN)		message($lang_profile['No delete admin message']);	if (isset($_POST['delete_user_comply']))	{		// If the user is a moderator or an administrator, we remove him/her from the moderator list in all forums as well		$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());		$group_mod = $db->result($result);		if ($group_id == PUN_ADMIN || $group_mod == '1')		{			$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());			while ($cur_forum = $db->fetch_assoc($result))			{				$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				if (in_array($id, $cur_moderators))				{					unset($cur_moderators[$username]);					$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';					$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());				}			}		}		// Delete any subscriptions		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE user_id='.$id) or error('Unable to delete topic subscriptions', __FILE__, __LINE__, $db->error());		$db->query('DELETE FROM '.$db->prefix.'forum_subscriptions WHERE user_id='.$id) or error('Unable to delete forum subscriptions', __FILE__, __LINE__, $db->error());		// Remove him/her from the online list (if they happen to be logged in)		$db->query('DELETE FROM '.$db->prefix.'online WHERE user_id='.$id) or error('Unable to remove user from online list', __FILE__, __LINE__, $db->error());		// Should we delete all posts made by this user?		if (isset($_POST['delete_posts']))		{			require PUN_ROOT.'include/search_idx.php';			@set_time_limit(0);			// Find all posts made by this user			$result = $db->query('SELECT p.id, p.topic_id, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id WHERE p.poster_id='.$id) or error('Unable to fetch posts', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result))			{				while ($cur_post = $db->fetch_assoc($result))				{					// Determine whether this post is the "topic post" or not					$result2 = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['topic_id'].' ORDER BY posted LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());					if ($db->result($result2) == $cur_post['id'])						delete_topic($cur_post['topic_id']);					else						delete_post($cur_post['id'], $cur_post['topic_id']);					update_forum($cur_post['forum_id']);				}			}		}		else			// Set all his/her posts to guest			$db->query('UPDATE '.$db->prefix.'posts SET poster_id=1 WHERE poster_id='.$id) or error('Unable to update posts', __FILE__, __LINE__, $db->error());		// Delete the user		$db->query('DELETE FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to delete user', __FILE__, __LINE__, $db->error());		// Delete user avatar		delete_avatar($id);		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		redirect('index.php', $lang_profile['User delete redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Confirm delete user']);	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Confirm delete user'] ?></span></h2>	<div class="box">		<form id="confirm_del_user" method="post" action="profile.php?id=<?php echo $id ?>">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Confirm delete legend'] ?></legend>					<div class="infldset">						<p><?php echo $lang_profile['Confirmation info'].' <strong>'.pun_htmlspecialchars($username).'</strong>.' ?></p>						<div class="rbox">							<label><input type="checkbox" name="delete_posts" value="1" checked="checked" /><?php echo $lang_profile['Delete posts'] ?><br /></label>						</div>						<p class="warntext"><strong><?php echo $lang_profile['Delete warning'] ?></strong></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="delete_user_comply" value="<?php echo $lang_profile['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if (isset($_POST['form_sent'])){	// Fetch the user group of the user we are editing	$result = $db->query('SELECT u.username, u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if (!$db->num_rows($result))		message($lang_common['Bad request'], false, '404 Not Found');	list($old_username, $group_id, $is_moderator) = $db->fetch_row($result);	if ($pun_user['id'] != $id &&																	// If we aren't the user (i.e. editing your own profile)		(!$pun_user['is_admmod'] ||																	// and we are not an admin or mod		($pun_user['g_id'] != PUN_ADMIN &&															// or we aren't an admin and ...		($pun_user['g_mod_edit_users'] == '0' ||													// mods aren't allowed to edit users		$group_id == PUN_ADMIN ||																	// or the user is an admin		$is_moderator))))																			// or the user is another mod		message($lang_common['No permission'], false, '403 Forbidden');	if ($pun_user['is_admmod'])		confirm_referrer('profile.php');	$username_updated = false;	// Validate input depending on section	switch ($section)	{		case 'essentials':		{			$form = array(				'timezone'		=> floatval($_POST['form']['timezone']),				'dst'			=> isset($_POST['form']['dst']) ? '1' : '0',				'time_format'	=> intval($_POST['form']['time_format']),				'date_format'	=> intval($_POST['form']['date_format']),			);			// Make sure we got a valid language string			if (isset($_POST['form']['language']))			{				$languages = forum_list_langs();				$form['language'] = pun_trim($_POST['form']['language']);				if (!in_array($form['language'], $languages))					message($lang_common['Bad request'], false, '404 Not Found');			}			if ($pun_user['is_admmod'])			{				$form['admin_note'] = pun_trim($_POST['admin_note']);				// Are we allowed to change usernames?				if ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && $pun_user['g_mod_rename_users'] == '1'))				{					$form['username'] = pun_trim($_POST['req_username']);					if ($form['username'] != $old_username)					{						// Check username						require PUN_ROOT.'lang/'.$pun_user['language'].'/register.php';						$errors = array();						check_username($form['username'], $id);						if (!empty($errors))							message($errors[0]);						$username_updated = true;					}				}				// We only allow administrators to update the post count				if ($pun_user['g_id'] == PUN_ADMIN)					$form['num_posts'] = intval($_POST['num_posts']);			}			if ($pun_config['o_regs_verify'] == '0' || $pun_user['is_admmod'])			{				require PUN_ROOT.'include/email.php';				// Validate the email address				$form['email'] = strtolower(pun_trim($_POST['req_email']));				if (!is_valid_email($form['email']))					message($lang_common['Invalid email']);			}			break;		}		case 'personal':		{			$form = array(				'realname'		=> isset($_POST['form']['realname']) ? pun_trim($_POST['form']['realname']) : '',				'url'			=> isset($_POST['form']['url']) ? pun_trim($_POST['form']['url']) : '',				'location'		=> isset($_POST['form']['location']) ? pun_trim($_POST['form']['location']) : '',			);			// Add http:// if the URL doesn't contain it already (while allowing https://, too)			if ($pun_user['g_post_links'] == '1')			{				if ($form['url'] != '')				{					$url = url_valid($form['url']);					if ($url === false)						message($lang_profile['Invalid website URL']);					$form['url'] = $url['url'];				}			}			else			{				if (!empty($form['url']))					message($lang_profile['Website not allowed']);				$form['url'] = '';			}			if ($pun_user['g_id'] == PUN_ADMIN)				$form['title'] = pun_trim($_POST['title']);			else if ($pun_user['g_set_title'] == '1')			{				$form['title'] = pun_trim($_POST['title']);				if ($form['title'] != '')				{					// A list of words that the title may not contain					// If the language is English, there will be some duplicates, but it's not the end of the world					$forbidden = array('member', 'moderator', 'administrator', 'banned', 'guest', utf8_strtolower($lang_common['Member']), utf8_strtolower($lang_common['Moderator']), utf8_strtolower($lang_common['Administrator']), utf8_strtolower($lang_common['Banned']), utf8_strtolower($lang_common['Guest']));					if (in_array(utf8_strtolower($form['title']), $forbidden))						message($lang_profile['Forbidden title']);				}			}			break;		}		case 'messaging':		{			$form = array(				'jabber'		=> pun_trim($_POST['form']['jabber']),				'icq'			=> pun_trim($_POST['form']['icq']),				'msn'			=> pun_trim($_POST['form']['msn']),				'aim'			=> pun_trim($_POST['form']['aim']),				'yahoo'			=> pun_trim($_POST['form']['yahoo']),			);			// If the ICQ UIN contains anything other than digits it's invalid			if (preg_match('%[^0-9]%', $form['icq']))				message($lang_prof_reg['Bad ICQ']);			break;		}		case 'personality':		{			$form = array();			// Clean up signature from POST			if ($pun_config['o_signatures'] == '1')			{				$form['signature'] = pun_linebreaks(pun_trim($_POST['signature']));				// Validate signature				if (pun_strlen($form['signature']) > $pun_config['p_sig_length'])					message(sprintf($lang_prof_reg['Sig too long'], $pun_config['p_sig_length'], pun_strlen($form['signature']) - $pun_config['p_sig_length']));				else if (substr_count($form['signature'], "\n") > ($pun_config['p_sig_lines']-1))					message(sprintf($lang_prof_reg['Sig too many lines'], $pun_config['p_sig_lines']));				else if ($form['signature'] && $pun_config['p_sig_all_caps'] == '0' && is_all_uppercase($form['signature']) && !$pun_user['is_admmod'])					$form['signature'] = utf8_ucwords(utf8_strtolower($form['signature']));				// Validate BBCode syntax				if ($pun_config['p_sig_bbcode'] == '1')				{					require PUN_ROOT.'include/parser.php';					$errors = array();					$form['signature'] = preparse_bbcode($form['signature'], $errors, true);					if(count($errors) > 0)						message('<ul><li>'.implode('</li><li>', $errors).'</li></ul>');				}			}			break;		}		case 'display':		{			$form = array(				'disp_topics'		=> pun_trim($_POST['form']['disp_topics']),				'disp_posts'		=> pun_trim($_POST['form']['disp_posts']),				'show_smilies'		=> isset($_POST['form']['show_smilies']) ? '1' : '0',				'show_img'			=> isset($_POST['form']['show_img']) ? '1' : '0',				'show_img_sig'		=> isset($_POST['form']['show_img_sig']) ? '1' : '0',				'show_avatars'		=> isset($_POST['form']['show_avatars']) ? '1' : '0',				'show_sig'			=> isset($_POST['form']['show_sig']) ? '1' : '0',			);			if ($form['disp_topics'] != '')			{				$form['disp_topics'] = intval($form['disp_topics']);				if ($form['disp_topics'] < 3)					$form['disp_topics'] = 3;				else if ($form['disp_topics'] > 75)					$form['disp_topics'] = 75;			}			if ($form['disp_posts'] != '')			{				$form['disp_posts'] = intval($form['disp_posts']);				if ($form['disp_posts'] < 3)					$form['disp_posts'] = 3;				else if ($form['disp_posts'] > 75)					$form['disp_posts'] = 75;			}			// Make sure we got a valid style string			if (isset($_POST['form']['style']))			{				$styles = forum_list_styles();				$form['style'] = pun_trim($_POST['form']['style']);				if (!in_array($form['style'], $styles))					message($lang_common['Bad request'], false, '404 Not Found');			}			break;		}		case 'privacy':		{			$form = array(				'email_setting'			=> intval($_POST['form']['email_setting']),				'notify_with_post'		=> isset($_POST['form']['notify_with_post']) ? '1' : '0',				'auto_notify'			=> isset($_POST['form']['auto_notify']) ? '1' : '0',			);			if ($form['email_setting'] < 0 || $form['email_setting'] > 2)				$form['email_setting'] = $pun_config['o_default_email_setting'];			break;		}		default:			message($lang_common['Bad request']);	}	// Single quotes around non-empty values and NULL for empty values	$temp = array();	foreach ($form as $key => $input)	{		$value = ($input !== '') ? '\''.$db->escape($input).'\'' : 'NULL';		$temp[] = $key.'='.$value;	}	if (empty($temp))		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'users SET '.implode(',', $temp).' WHERE id='.$id) or error('Unable to update profile', __FILE__, __LINE__, $db->error());	// If we changed the username we have to update some stuff	if ($username_updated)	{		$db->query('UPDATE '.$db->prefix.'bans SET username=\''.$db->escape($form['username']).'\' WHERE username=\''.$db->escape($old_username).'\'') or error('Unable to update bans', __FILE__, __LINE__, $db->error());		// If any bans were updated, we will need to know because the cache will need to be regenerated.		if ($db->affected_rows() > 0)			$bans_updated = true;		$db->query('UPDATE '.$db->prefix.'posts SET poster=\''.$db->escape($form['username']).'\' WHERE poster_id='.$id) or error('Unable to update posts', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'posts SET edited_by=\''.$db->escape($form['username']).'\' WHERE edited_by=\''.$db->escape($old_username).'\'') or error('Unable to update posts', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'topics SET poster=\''.$db->escape($form['username']).'\' WHERE poster=\''.$db->escape($old_username).'\'') or error('Unable to update topics', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'topics SET last_poster=\''.$db->escape($form['username']).'\' WHERE last_poster=\''.$db->escape($old_username).'\'') or error('Unable to update topics', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'forums SET last_poster=\''.$db->escape($form['username']).'\' WHERE last_poster=\''.$db->escape($old_username).'\'') or error('Unable to update forums', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'online SET ident=\''.$db->escape($form['username']).'\' WHERE ident=\''.$db->escape($old_username).'\'') or error('Unable to update online list', __FILE__, __LINE__, $db->error());		// If the user is a moderator or an administrator we have to update the moderator lists		$result = $db->query('SELECT group_id FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		$group_id = $db->result($result);		$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());		$group_mod = $db->result($result);		if ($group_id == PUN_ADMIN || $group_mod == '1')		{			$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());			while ($cur_forum = $db->fetch_assoc($result))			{				$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				if (in_array($id, $cur_moderators))				{					unset($cur_moderators[$old_username]);					$cur_moderators[$form['username']] = $id;					uksort($cur_moderators, 'utf8_strcasecmp');					$db->query('UPDATE '.$db->prefix.'forums SET moderators=\''.$db->escape(serialize($cur_moderators)).'\' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());				}			}		}		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		// Check if the bans table was updated and regenerate the bans cache when needed		if (isset($bans_updated))			generate_bans_cache();	}	redirect('profile.php?section='.$section.'&amp;id='.$id, $lang_profile['Profile redirect']);}$result = $db->query('SELECT u.username, u.email, u.title, u.realname, u.url, u.jabber, u.icq, u.msn, u.aim, u.yahoo, u.location, u.signature, u.disp_topics, u.disp_posts, u.email_setting, u.notify_with_post, u.auto_notify, u.show_smilies, u.show_img, u.show_img_sig, u.show_avatars, u.show_sig, u.timezone, u.dst, u.language, u.style, u.num_posts, u.last_post, u.registered, u.registration_ip, u.admin_note, u.date_format, u.time_format, u.last_visit, g.g_id, g.g_user_title, g.g_moderator FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$user = $db->fetch_assoc($result);$last_post = format_time($user['last_post']);if ($user['signature'] != ''){	require PUN_ROOT.'include/parser.php';	$parsed_signature = parse_signature($user['signature']);}// View or edit?if ($pun_user['id'] != $id &&																	// If we aren't the user (i.e. editing your own profile)	(!$pun_user['is_admmod'] ||																	// and we are not an admin or mod	($pun_user['g_id'] != PUN_ADMIN &&															// or we aren't an admin and ...	($pun_user['g_mod_edit_users'] == '0' ||													// mods aren't allowed to edit users	$user['g_id'] == PUN_ADMIN ||																// or the user is an admin	$user['g_moderator'] == '1'))))																// or the user is another mod{	$user_personal = array();	$user_personal[] = '<dt>'.$lang_common['Username'].'</dt>';	$user_personal[] = '<dd>'.pun_htmlspecialchars($user['username']).'</dd>';	$user_title_field = get_title($user);	$user_personal[] = '<dt>'.$lang_common['Title'].'</dt>';	$user_personal[] = '<dd>'.(($pun_config['o_censoring'] == '1') ? censor_words($user_title_field) : $user_title_field).'</dd>';	if ($user['realname'] != '')	{		$user_personal[] = '<dt>'.$lang_profile['Realname'].'</dt>';		$user_personal[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</dd>';	}	if ($user['location'] != '')	{		$user_personal[] = '<dt>'.$lang_profile['Location'].'</dt>';		$user_personal[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</dd>';	}	if ($user['url'] != '')	{		$user['url'] = pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['url']) : $user['url']);		$user_personal[] = '<dt>'.$lang_profile['Website'].'</dt>';		$user_personal[] = '<dd><span class="website"><a href="'.$user['url'].'" rel="nofollow">'.$user['url'].'</a></span></dd>';	}	if ($user['email_setting'] == '0' && !$pun_user['is_guest'] && $pun_user['g_send_email'] == '1')		$email_field = '<a href="mailto:'.$user['email'].'">'.$user['email'].'</a>';	else if ($user['email_setting'] == '1' && !$pun_user['is_guest'] && $pun_user['g_send_email'] == '1')		$email_field = '<a href="misc.php?email='.$id.'">'.$lang_common['Send email'].'</a>';	else		$email_field = '';	if ($email_field != '')	{		$user_personal[] = '<dt>'.$lang_common['Email'].'</dt>';		$user_personal[] = '<dd><span class="email">'.$email_field.'</span></dd>';	}	$user_messaging = array();	if ($user['jabber'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['Jabber'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</dd>';	}	if ($user['icq'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['ICQ'].'</dt>';		$user_messaging[] = '<dd>'.$user['icq'].'</dd>';	}	if ($user['msn'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['MSN'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</dd>';	}	if ($user['aim'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['AOL IM'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</dd>';	}	if ($user['yahoo'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['Yahoo'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</dd>';	}	$user_personality = array();	if ($pun_config['o_avatars'] == '1')	{		$avatar_field = generate_avatar_markup($id);		if ($avatar_field != '')		{			$user_personality[] = '<dt>'.$lang_profile['Avatar'].'</dt>';			$user_personality[] = '<dd>'.$avatar_field.'</dd>';		}	}	if ($pun_config['o_signatures'] == '1')	{		if (isset($parsed_signature))		{			$user_personality[] = '<dt>'.$lang_profile['Signature'].'</dt>';			$user_personality[] = '<dd><div class="postsignature postmsg">'.$parsed_signature.'</div></dd>';		}	}	$user_activity = array();	$posts_field = '';	if ($pun_config['o_show_post_count'] == '1' || $pun_user['is_admmod'])		$posts_field = forum_number_format($user['num_posts']);	if ($pun_user['g_search'] == '1')	{		$quick_searches = array();		if ($user['num_posts'] > 0)		{			$quick_searches[] = '<a href="search.php?action=show_user_topics&amp;user_id='.$id.'">'.$lang_profile['Show topics'].'</a>';			$quick_searches[] = '<a href="search.php?action=show_user_posts&amp;user_id='.$id.'">'.$lang_profile['Show posts'].'</a>';		}		if ($pun_user['is_admmod'] && $pun_config['o_topic_subscriptions'] == '1')			$quick_searches[] = '<a href="search.php?action=show_subscriptions&amp;user_id='.$id.'">'.$lang_profile['Show subscriptions'].'</a>';		if (!empty($quick_searches))			$posts_field .= (($posts_field != '') ? ' - ' : '').implode(' - ', $quick_searches);	}	if ($posts_field != '')	{		$user_activity[] = '<dt>'.$lang_common['Posts'].'</dt>';		$user_activity[] = '<dd>'.$posts_field.'</dd>';	}	if ($user['num_posts'] > 0)	{		$user_activity[] = '<dt>'.$lang_common['Last post'].'</dt>';		$user_activity[] = '<dd>'.$last_post.'</dd>';	}	$user_activity[] = '<dt>'.$lang_common['Registered'].'</dt>';	$user_activity[] = '<dd>'.format_time($user['registered'], true).'</dd>';	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), sprintf($lang_profile['Users profile'], pun_htmlspecialchars($user['username'])));	define('PUN_ALLOW_INDEX', 1);	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div id="viewprofile" class="block">	<h2><span><?php echo $lang_common['Profile'] ?></span></h2>	<div class="box">		<div class="fakeform">			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section personal'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_personal)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php if (!empty($user_messaging)): ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section messaging'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_messaging)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php endif; if (!empty($user_personality)): ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section personality'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_personality)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php endif; ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['User activity'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_activity)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div>		</div>	</div></div><?php	require PUN_ROOT.'footer.php';}else{	if (!$section || $section == 'essentials')	{		if ($pun_user['is_admmod'])		{			if ($pun_user['g_id'] == PUN_ADMIN || $pun_user['g_mod_rename_users'] == '1')				$username_field = '<label class="required"><strong>'.$lang_common['Username'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_username" value="'.pun_htmlspecialchars($user['username']).'" size="25" maxlength="25" /><br /></label>'."\n";			else				$username_field = '<p>'.sprintf($lang_profile['Username info'], pun_htmlspecialchars($user['username'])).'</p>'."\n";			$email_field = '<label class="required"><strong>'.$lang_common['Email'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_email" value="'.$user['email'].'" size="40" maxlength="80" /><br /></label><p><span class="email"><a href="misc.php?email='.$id.'">'.$lang_common['Send email'].'</a></span></p>'."\n";		}		else		{			$username_field = '<p>'.$lang_common['Username'].': '.pun_htmlspecialchars($user['username']).'</p>'."\n";			if ($pun_config['o_regs_verify'] == '1')				$email_field = '<p>'.sprintf($lang_profile['Email info'], $user['email'].' - <a href="profile.php?action=change_email&amp;id='.$id.'">'.$lang_profile['Change email'].'</a>').'</p>'."\n";			else				$email_field = '<label class="required"><strong>'.$lang_common['Email'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_email" value="'.$user['email'].'" size="40" maxlength="80" /><br /></label>'."\n";		}		$posts_field = '';		$posts_actions = array();		if ($pun_user['g_id'] == PUN_ADMIN)			$posts_field .= '<label>'.$lang_common['Posts'].'<br /><input type="text" name="num_posts" value="'.$user['num_posts'].'" size="8" maxlength="8" /><br /></label>';		else if ($pun_config['o_show_post_count'] == '1' || $pun_user['is_admmod'])			$posts_actions[] = sprintf($lang_profile['Posts info'], forum_number_format($user['num_posts']));		if ($pun_user['g_search'] == '1' || $pun_user['g_id'] == PUN_ADMIN)		{			$posts_actions[] = '<a href="search.php?action=show_user_topics&amp;user_id='.$id.'">'.$lang_profile['Show topics'].'</a>';			$posts_actions[] = '<a href="search.php?action=show_user_posts&amp;user_id='.$id.'">'.$lang_profile['Show posts'].'</a>';			if ($pun_config['o_topic_subscriptions'] == '1')				$posts_actions[] = '<a href="search.php?action=show_subscriptions&amp;user_id='.$id.'">'.$lang_profile['Show subscriptions'].'</a>';		}		$posts_field .= (!empty($posts_actions) ? '<p class="actions">'.implode(' - ', $posts_actions).'</p>' : '')."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section essentials']);		$required_fields = array('req_username' => $lang_common['Username'], 'req_email' => $lang_common['Email']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('essentials');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section essentials'] ?></span></h2>		<div class="box">			<form id="profile1" method="post" action="profile.php?section=essentials&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Username and pass legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<?php echo $username_field ?><?php if ($pun_user['id'] == $id || $pun_user['g_id'] == PUN_ADMIN || ($user['g_moderator'] == '0' && $pun_user['g_mod_change_passwords'] == '1')): ?>							<p class="actions"><span><a href="profile.php?action=change_pass&amp;id=<?php echo $id ?>"><?php echo $lang_profile['Change pass'] ?></a></span></p><?php endif; ?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Email legend'] ?></legend>						<div class="infldset">							<?php echo $email_field ?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Localisation legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_prof_reg['Time zone info'] ?></p>							<label><?php echo $lang_prof_reg['Time zone']."\n" ?>							<br /><select name="form[timezone]">								<option value="-12"<?php if ($user['timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-12:00'] ?></option>								<option value="-11"<?php if ($user['timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-11:00'] ?></option>								<option value="-10"<?php if ($user['timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-10:00'] ?></option>								<option value="-9.5"<?php if ($user['timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:30'] ?></option>								<option value="-9"<?php if ($user['timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:00'] ?></option>								<option value="-8.5"<?php if ($user['timezone'] == -8.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:30'] ?></option>								<option value="-8"<?php if ($user['timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:00'] ?></option>								<option value="-7"<?php if ($user['timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-07:00'] ?></option>								<option value="-6"<?php if ($user['timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-06:00'] ?></option>								<option value="-5"<?php if ($user['timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-05:00'] ?></option>								<option value="-4"<?php if ($user['timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-04:00'] ?></option>								<option value="-3.5"<?php if ($user['timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:30'] ?></option>								<option value="-3"<?php if ($user['timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:00'] ?></option>								<option value="-2"<?php if ($user['timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-02:00'] ?></option>								<option value="-1"<?php if ($user['timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-01:00'] ?></option>								<option value="0"<?php if ($user['timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC'] ?></option>								<option value="1"<?php if ($user['timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+01:00'] ?></option>								<option value="2"<?php if ($user['timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+02:00'] ?></option>								<option value="3"<?php if ($user['timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:00'] ?></option>								<option value="3.5"<?php if ($user['timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:30'] ?></option>								<option value="4"<?php if ($user['timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:00'] ?></option>								<option value="4.5"<?php if ($user['timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:30'] ?></option>								<option value="5"<?php if ($user['timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:00'] ?></option>								<option value="5.5"<?php if ($user['timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:30'] ?></option>								<option value="5.75"<?php if ($user['timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:45'] ?></option>								<option value="6"<?php if ($user['timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:00'] ?></option>								<option value="6.5"<?php if ($user['timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:30'] ?></option>								<option value="7"<?php if ($user['timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+07:00'] ?></option>								<option value="8"<?php if ($user['timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:00'] ?></option>								<option value="8.75"<?php if ($user['timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:45'] ?></option>								<option value="9"<?php if ($user['timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:00'] ?></option>								<option value="9.5"<?php if ($user['timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:30'] ?></option>								<option value="10"<?php if ($user['timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:00'] ?></option>								<option value="10.5"<?php if ($user['timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:30'] ?></option>								<option value="11"<?php if ($user['timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:00'] ?></option>								<option value="11.5"<?php if ($user['timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:30'] ?></option>								<option value="12"<?php if ($user['timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:00'] ?></option>								<option value="12.75"<?php if ($user['timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:45'] ?></option>								<option value="13"<?php if ($user['timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+13:00'] ?></option>								<option value="14"<?php if ($user['timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+14:00'] ?></option>							</select>							<br /></label>							<div class="rbox">								<label><input type="checkbox" name="form[dst]" value="1"<?php if ($user['dst'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['DST'] ?><br /></label>							</div>							<label><?php echo $lang_prof_reg['Time format'] ?>							<br /><select name="form[time_format]"><?php								foreach (array_unique($forum_time_formats) as $key => $time_format)								{									echo "\t\t\t\t\t\t\t\t".'<option value="'.$key.'"';									if ($user['time_format'] == $key)										echo ' selected="selected"';									echo '>'. format_time(time(), false, null, $time_format, true, true);									if ($key == 0)										echo ' ('.$lang_prof_reg['Default'].')';									echo "</option>\n";								}								?>							</select>							<br /></label>							<label><?php echo $lang_prof_reg['Date format'] ?>							<br /><select name="form[date_format]"><?php								foreach (array_unique($forum_date_formats) as $key => $date_format)								{									echo "\t\t\t\t\t\t\t\t".'<option value="'.$key.'"';									if ($user['date_format'] == $key)										echo ' selected="selected"';									echo '>'. format_time(time(), true, $date_format, null, false, true);									if ($key == 0)										echo ' ('.$lang_prof_reg['Default'].')';									echo "</option>\n";								}								?>							</select>							<br /></label><?php		$languages = forum_list_langs();		// Only display the language selection box if there's more than one language available		if (count($languages) > 1)		{?>							<label><?php echo $lang_prof_reg['Language'] ?>							<br /><select name="form[language]"><?php			foreach ($languages as $temp)			{				if ($user['language'] == $temp)					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>							</select>							<br /></label><?php		}?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['User activity'] ?></legend>						<div class="infldset">							<p><?php printf($lang_profile['Registered info'], format_time($user['registered'], true).(($pun_user['is_admmod']) ? ' (<a href="moderate.php?get_host='.pun_htmlspecialchars($user['registration_ip']).'">'.pun_htmlspecialchars($user['registration_ip']).'</a>)' : '')) ?></p>							<p><?php printf($lang_profile['Last post info'], $last_post) ?></p>							<p><?php printf($lang_profile['Last visit info'], format_time($user['last_visit'])) ?></p>							<?php echo $posts_field ?><?php if ($pun_user['is_admmod']): ?>							<label><?php echo $lang_profile['Admin note'] ?><br />							<input id="admin_note" type="text" name="admin_note" value="<?php echo pun_htmlspecialchars($user['admin_note']) ?>" size="30" maxlength="30" /><br /></label><?php endif; ?>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'personal')	{		if ($pun_user['g_set_title'] == '1')			$title_field = '<label>'.$lang_common['Title'].' <em>('.$lang_profile['Leave blank'].')</em><br /><input type="text" name="title" value="'.pun_htmlspecialchars($user['title']).'" size="30" maxlength="50" /><br /></label>'."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section personal']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('personal');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section personal'] ?></span></h2>		<div class="box">			<form id="profile2" method="post" action="profile.php?section=personal&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Personal details legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<label><?php echo $lang_profile['Realname'] ?><br /><input type="text" name="form[realname]" value="<?php echo pun_htmlspecialchars($user['realname']) ?>" size="40" maxlength="40" /><br /></label><?php if (isset($title_field)): ?>							<?php echo $title_field ?><?php endif; ?>							<label><?php echo $lang_profile['Location'] ?><br /><input type="text" name="form[location]" value="<?php echo pun_htmlspecialchars($user['location']) ?>" size="30" maxlength="30" /><br /></label><?php if ($pun_user['g_post_links'] == '1' || $pun_user['g_id'] == PUN_ADMIN) : ?>							<label><?php echo $lang_profile['Website'] ?><br /><input type="text" name="form[url]" value="<?php echo pun_htmlspecialchars($user['url']) ?>" size="50" maxlength="80" /><br /></label><?php endif; ?>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'messaging')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section messaging']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('messaging');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section messaging'] ?></span></h2>		<div class="box">			<form id="profile3" method="post" action="profile.php?section=messaging&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Contact details legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<label><?php echo $lang_profile['Jabber'] ?><br /><input id="jabber" type="text" name="form[jabber]" value="<?php echo pun_htmlspecialchars($user['jabber']) ?>" size="40" maxlength="75" /><br /></label>							<label><?php echo $lang_profile['ICQ'] ?><br /><input id="icq" type="text" name="form[icq]" value="<?php echo $user['icq'] ?>" size="12" maxlength="12" /><br /></label>							<label><?php echo $lang_profile['MSN'] ?><br /><input id="msn" type="text" name="form[msn]" value="<?php echo pun_htmlspecialchars($user['msn']) ?>" size="40" maxlength="50" /><br /></label>							<label><?php echo $lang_profile['AOL IM'] ?><br /><input id="aim" type="text" name="form[aim]" value="<?php echo pun_htmlspecialchars($user['aim']) ?>" size="20" maxlength="30" /><br /></label>							<label><?php echo $lang_profile['Yahoo'] ?><br /><input id="yahoo" type="text" name="form[yahoo]" value="<?php echo pun_htmlspecialchars($user['yahoo']) ?>" size="20" maxlength="30" /><br /></label>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'personality')	{		if ($pun_config['o_avatars'] == '0' && $pun_config['o_signatures'] == '0')			message($lang_common['Bad request']);		$avatar_field = '<span><a href="profile.php?action=upload_avatar&amp;id='.$id.'">'.$lang_profile['Change avatar'].'</a></span>';		$user_avatar = generate_avatar_markup($id);		if ($user_avatar)			$avatar_field .= ' <span><a href="profile.php?action=delete_avatar&amp;id='.$id.'">'.$lang_profile['Delete avatar'].'</a></span>';		else			$avatar_field = '<span><a href="profile.php?action=upload_avatar&amp;id='.$id.'">'.$lang_profile['Upload avatar'].'</a></span>';		if ($user['signature'] != '')			$signature_preview = '<p>'.$lang_profile['Sig preview'].'</p>'."\n\t\t\t\t\t\t\t".'<div class="postsignature postmsg">'."\n\t\t\t\t\t\t\t\t".'<hr />'."\n\t\t\t\t\t\t\t\t".$parsed_signature."\n\t\t\t\t\t\t\t".'</div>'."\n";		else			$signature_preview = '<p>'.$lang_profile['No sig'].'</p>'."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section personality']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('personality');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section personality'] ?></span></h2>		<div class="box">			<form id="profile4" method="post" action="profile.php?section=personality&amp;id=<?php echo $id ?>">				<div><input type="hidden" name="form_sent" value="1" /></div><?php if ($pun_config['o_avatars'] == '1'): ?>				<div class="inform">					<fieldset id="profileavatar">						<legend><?php echo $lang_profile['Avatar legend'] ?></legend>						<div class="infldset"><?php if ($user_avatar): ?>							<div class="useravatar"><?php echo $user_avatar ?></div><?php endif; ?>							<p><?php echo $lang_profile['Avatar info'] ?></p>							<p class="clearb actions"><?php echo $avatar_field ?></p>						</div>					</fieldset>				</div><?php endif; if ($pun_config['o_signatures'] == '1'): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Signature legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Signature info'] ?></p>							<div class="txtarea">								<label><?php printf($lang_profile['Sig max size'], forum_number_format($pun_config['p_sig_length']), $pun_config['p_sig_lines']) ?><br />								<textarea name="signature" rows="4" cols="65"><?php echo pun_htmlspecialchars($user['signature']) ?></textarea><br /></label>							</div>							<ul class="bblinks">								<li><span><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#url" onclick="window.open(this.href); return false;"><?php echo $lang_common['url tag'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1' && $pun_user['g_post_links'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1' && $pun_config['p_sig_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a> <?php echo ($pun_config['o_smilies_sig'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							</ul>							<?php echo $signature_preview ?>						</div>					</fieldset>				</div><?php endif; ?>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'display')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section display']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('display');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section display'] ?></span></h2>		<div class="box">			<form id="profile5" method="post" action="profile.php?section=display&amp;id=<?php echo $id ?>">				<div><input type="hidden" name="form_sent" value="1" /></div><?php		$styles = forum_list_styles();		// Only display the style selection box if there's more than one style available		if (count($styles) == 1)			echo "\t\t\t".'<div><input type="hidden" name="form[style]" value="'.$styles[0].'" /></div>'."\n";		else if (count($styles) > 1)		{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Style legend'] ?></legend>						<div class="infldset">							<label><?php echo $lang_profile['Styles'] ?><br />							<select name="form[style]"><?php			foreach ($styles as $temp)			{				if ($user['style'] == $temp)					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";				else					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";			}?>							</select>							<br /></label>						</div>					</fieldset>				</div><?php		}?><?php if ($pun_config['o_smilies'] == '1' || $pun_config['o_smilies_sig'] == '1' || $pun_config['o_signatures'] == '1' || $pun_config['o_avatars'] == '1' || ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1')): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Post display legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Post display info'] ?></p>							<div class="rbox"><?php if ($pun_config['o_smilies'] == '1' || $pun_config['o_smilies_sig'] == '1'): ?>								<label><input type="checkbox" name="form[show_smilies]" value="1"<?php if ($user['show_smilies'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show smilies'] ?><br /></label><?php endif; if ($pun_config['o_signatures'] == '1'): ?>								<label><input type="checkbox" name="form[show_sig]" value="1"<?php if ($user['show_sig'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show sigs'] ?><br /></label><?php endif; if ($pun_config['o_avatars'] == '1'): ?>								<label><input type="checkbox" name="form[show_avatars]" value="1"<?php if ($user['show_avatars'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show avatars'] ?><br /></label><?php endif; if ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1'): ?>								<label><input type="checkbox" name="form[show_img]" value="1"<?php if ($user['show_img'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show images'] ?><br /></label><?php endif; if ($pun_config['o_signatures'] == '1' && $pun_config['p_sig_bbcode'] == '1' && $pun_config['p_sig_img_tag'] == '1'): ?>								<label><input type="checkbox" name="form[show_img_sig]" value="1"<?php if ($user['show_img_sig'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show images sigs'] ?><br /></label><?php endif; ?>							</div>						</div>					</fieldset>				</div><?php endif; ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Pagination legend'] ?></legend>						<div class="infldset">							<label class="conl"><?php echo $lang_profile['Topics per page'] ?><br /><input type="text" name="form[disp_topics]" value="<?php echo $user['disp_topics'] ?>" size="6" maxlength="2" /><br /></label>							<label class="conl"><?php echo $lang_profile['Posts per page'] ?><br /><input type="text" name="form[disp_posts]" value="<?php echo $user['disp_posts'] ?>" size="6" maxlength="2" /><br /></label>							<p class="clearb"><?php echo $lang_profile['Paginate info'] ?> <?php echo $lang_profile['Leave blank'] ?></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'privacy')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section privacy']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('privacy');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section privacy'] ?></span></h2>		<div class="box">			<form id="profile6" method="post" action="profile.php?section=privacy&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Privacy options legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<p><?php echo $lang_prof_reg['Email setting info'] ?></p>							<div class="rbox">								<label><input type="radio" name="form[email_setting]" value="0"<?php if ($user['email_setting'] == '0') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 1'] ?><br /></label>								<label><input type="radio" name="form[email_setting]" value="1"<?php if ($user['email_setting'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 2'] ?><br /></label>								<label><input type="radio" name="form[email_setting]" value="2"<?php if ($user['email_setting'] == '2') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 3'] ?><br /></label>							</div>						</div>					</fieldset>				</div><?php if ($pun_config['o_forum_subscriptions'] == '1' || $pun_config['o_topic_subscriptions'] == '1'): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Subscription legend'] ?></legend>						<div class="infldset">							<div class="rbox">								<label><input type="checkbox" name="form[notify_with_post]" value="1"<?php if ($user['notify_with_post'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Notify full'] ?><br /></label><?php if ($pun_config['o_topic_subscriptions'] == '1'): ?>								<label><input type="checkbox" name="form[auto_notify]" value="1"<?php if ($user['auto_notify'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Auto notify full'] ?><br /></label><?php endif; ?>							</div>						</div>					</fieldset>				</div><?php endif; ?>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'admin')	{		if (!$pun_user['is_admmod'] || ($pun_user['g_moderator'] == '1' && $pun_user['g_mod_ban_users'] == '0'))			message($lang_common['Bad request'], false, '403 Forbidden');		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section admin']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('admin');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section admin'] ?></span></h2>		<div class="box">			<form id="profile7" method="post" action="profile.php?section=admin&amp;id=<?php echo $id ?>">				<div class="inform">				<input type="hidden" name="form_sent" value="1" />					<fieldset><?php		if ($pun_user['g_moderator'] == '1')		{?>						<legend><?php echo $lang_profile['Delete ban legend'] ?></legend>						<div class="infldset">							<p><input type="submit" name="ban" value="<?php echo $lang_profile['Ban user'] ?>" /></p>						</div>					</fieldset>				</div><?php		}		else		{			if ($pun_user['id'] != $id)			{?>						<legend><?php echo $lang_profile['Group membership legend'] ?></legend>						<div class="infldset">							<select id="group_id" name="group_id"><?php				$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id!='.PUN_GUEST.' ORDER BY g_title') or error('Unable to fetch user group list', __FILE__, __LINE__, $db->error());				while ($cur_group = $db->fetch_assoc($result))				{					if ($cur_group['g_id'] == $user['g_id'] || ($cur_group['g_id'] == $pun_config['o_default_user_group'] && $user['g_id'] == ''))						echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";					else						echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";				}?>							</select>							<input type="submit" name="update_group_membership" value="<?php echo $lang_profile['Save'] ?>" />						</div>					</fieldset>				</div>				<div class="inform">					<fieldset><?php			}?>						<legend><?php echo $lang_profile['Delete ban legend'] ?></legend>						<div class="infldset">							<input type="submit" name="delete_user" value="<?php echo $lang_profile['Delete user'] ?>" /> <input type="submit" name="ban" value="<?php echo $lang_profile['Ban user'] ?>" />						</div>					</fieldset>				</div><?php			if ($user['g_moderator'] == '1' || $user['g_id'] == PUN_ADMIN)			{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Set mods legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Moderator in info'] ?></p><?php				$result = $db->query('SELECT c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.moderators FROM '.$db->prefix.'categories AS c INNER JOIN '.$db->prefix.'forums AS f ON c.id=f.cat_id WHERE f.redirect_url IS NULL ORDER BY c.disp_position, c.id, f.disp_position') or error('Unable to fetch category/forum list', __FILE__, __LINE__, $db->error());				$cur_category = 0;				while ($cur_forum = $db->fetch_assoc($result))				{					if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?					{						if ($cur_category)							echo "\n\t\t\t\t\t\t\t\t".'</div>';						if ($cur_category != 0)							echo "\n\t\t\t\t\t\t\t".'</div>'."\n";						echo "\t\t\t\t\t\t\t".'<div class="conl">'."\n\t\t\t\t\t\t\t\t".'<p><strong>'.pun_htmlspecialchars($cur_forum['cat_name']).'</strong></p>'."\n\t\t\t\t\t\t\t\t".'<div class="rbox">';						$cur_category = $cur_forum['cid'];					}					$moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();					echo "\n\t\t\t\t\t\t\t\t\t".'<label><input type="checkbox" name="moderator_in['.$cur_forum['fid'].']" value="1"'.((in_array($id, $moderators)) ? ' checked="checked"' : '').' />'.pun_htmlspecialchars($cur_forum['forum_name']).'<br /></label>'."\n";				}?>								</div>							</div>							<br class="clearb" /><input type="submit" name="update_forums" value="<?php echo $lang_profile['Update forums'] ?>" />						</div>					</fieldset>				</div><?php			}		}?>			</form>		</div>	</div><?php	}	else		message($lang_common['Bad request']);?>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}
