<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */if (isset($_GET['action']))	define('PUN_QUIET_VISIT', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// Load the login.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/login.php';$action = isset($_GET['action']) ? $_GET['action'] : null;if (isset($_POST['form_sent']) && $action == 'in'){	$form_username = pun_trim($_POST['req_username']);	$form_password = pun_trim($_POST['req_password']);	$save_pass = isset($_POST['save_pass']);	$username_sql = ($db_type == 'mysql' || $db_type == 'mysqli' || $db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb') ? 'username=\''.$db->escape($form_username).'\'' : 'LOWER(username)=LOWER(\''.$db->escape($form_username).'\')';	$result = $db->query('SELECT * FROM '.$db->prefix.'users WHERE '.$username_sql) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	$cur_user = $db->fetch_assoc($result);	$authorized = false;	if (!empty($cur_user['password']))	{		$form_password_hash = pun_hash($form_password); // Will result in a SHA-1 hash		// If there is a salt in the database we have upgraded from 1.3-legacy though haven't yet logged in		if (!empty($cur_user['salt']))		{			if (sha1($cur_user['salt'].sha1($form_password)) == $cur_user['password']) // 1.3 used sha1(salt.sha1(pass))			{				$authorized = true;				$db->query('UPDATE '.$db->prefix.'users SET password=\''.$form_password_hash.'\', salt=NULL WHERE id='.$cur_user['id']) or error('Unable to update user password', __FILE__, __LINE__, $db->error());			}		}		// If the length isn't 40 then the password isn't using sha1, so it must be md5 from 1.2		else if (strlen($cur_user['password']) != 40)		{			if (md5($form_password) == $cur_user['password'])			{				$authorized = true;				$db->query('UPDATE '.$db->prefix.'users SET password=\''.$form_password_hash.'\' WHERE id='.$cur_user['id']) or error('Unable to update user password', __FILE__, __LINE__, $db->error());			}		}		// Otherwise we should have a normal sha1 password		else			$authorized = ($cur_user['password'] == $form_password_hash);	}	if (!$authorized)		message($lang_login['Wrong user/pass'].' <a href="login.php?action=forget">'.$lang_login['Forgotten pass'].'</a>');	// Update the status if this is the first time the user logged in	if ($cur_user['group_id'] == PUN_UNVERIFIED)	{		$db->query('UPDATE '.$db->prefix.'users SET group_id='.$pun_config['o_default_user_group'].' WHERE id='.$cur_user['id']) or error('Unable to update user status', __FILE__, __LINE__, $db->error());		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();	}	// Remove this user's guest entry from the online list	$db->query('DELETE FROM '.$db->prefix.'online WHERE ident=\''.$db->escape(get_remote_address()).'\'') or error('Unable to delete from online list', __FILE__, __LINE__, $db->error());	$expire = ($save_pass == '1') ? time() + 1209600 : time() + $pun_config['o_timeout_visit'];	pun_setcookie($cur_user['id'], $form_password_hash, $expire);	// Reset tracked topics	set_tracked_topics(null);	redirect(pun_htmlspecialchars($_POST['redirect_url']), $lang_login['Login redirect']);}else if ($action == 'out'){	if ($pun_user['is_guest'] || !isset($_GET['id']) || $_GET['id'] != $pun_user['id'] || !isset($_GET['csrf_token']) || $_GET['csrf_token'] != pun_hash($pun_user['id'].pun_hash(get_remote_address())))	{		header('Location: index.php');		exit;	}	// Remove user from "users online" list	$db->query('DELETE FROM '.$db->prefix.'online WHERE user_id='.$pun_user['id']) or error('Unable to delete from online list', __FILE__, __LINE__, $db->error());	// Update last_visit (make sure there's something to update it with)	if (isset($pun_user['logged']))		$db->query('UPDATE '.$db->prefix.'users SET last_visit='.$pun_user['logged'].' WHERE id='.$pun_user['id']) or error('Unable to update user visit data', __FILE__, __LINE__, $db->error());	pun_setcookie(1, pun_hash(uniqid(rand(), true)), time() + 31536000);	redirect('index.php', $lang_login['Logout redirect']);}else if ($action == 'forget' || $action == 'forget_2'){	if (!$pun_user['is_guest'])	{		header('Location: index.php');		exit;	}	if (isset($_POST['form_sent']))	{		// Start with a clean slate		$errors = array();		require PUN_ROOT.'include/email.php';		// Validate the email address		$email = strtolower(pun_trim($_POST['req_email']));		if (!is_valid_email($email))			$errors[] = $lang_common['Invalid email'];		// Did everything go according to plan?		if (empty($errors))		{			$result = $db->query('SELECT id, username, last_email_sent FROM '.$db->prefix.'users WHERE email=\''.$db->escape($email).'\'') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result))			{				// Load the "activate password" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/activate_password.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				// Do the generic replacements first (they apply to all emails sent out here)				$mail_message = str_replace('<base_url>', get_base_url().'/', $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				// Loop through users we found				while ($cur_hit = $db->fetch_assoc($result))				{					if ($cur_hit['last_email_sent'] != '' && (time() - $cur_hit['last_email_sent']) < 3600 && (time() - $cur_hit['last_email_sent']) >= 0)						message(sprintf($lang_login['Email flood'], intval((3600 - (time() - $cur_hit['last_email_sent'])) / 60)), true);					// Generate a new password and a new password activation code					$new_password = random_pass(8);					$new_password_key = random_pass(8);					$db->query('UPDATE '.$db->prefix.'users SET activate_string=\''.pun_hash($new_password).'\', activate_key=\''.$new_password_key.'\', last_email_sent = '.time().' WHERE id='.$cur_hit['id']) or error('Unable to update activation data', __FILE__, __LINE__, $db->error());					// Do the user specific replacements to the template					$cur_mail_message = str_replace('<username>', $cur_hit['username'], $mail_message);					$cur_mail_message = str_replace('<activation_url>', get_base_url().'/profile.php?id='.$cur_hit['id'].'&action=change_pass&key='.$new_password_key, $cur_mail_message);					$cur_mail_message = str_replace('<new_password>', $new_password, $cur_mail_message);					pun_mail($email, $mail_subject, $cur_mail_message);				}				message($lang_login['Forget mail'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.', true);			}			else				$errors[] = $lang_login['No email match'].' '.htmlspecialchars($email).'.';			}		}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_login['Request pass']);	$required_fields = array('req_email' => $lang_common['Email']);	$focus_element = array('request_pass', 'req_email');	define ('PUN_ACTIVE_PAGE', 'login');	require PUN_ROOT.'header.php';// If there are errors, we display themif (!empty($errors)){?><div id="posterror" class="block">	<h2><span><?php echo $lang_login['New password errors'] ?></span></h2>	<div class="box">		<div class="inbox error-info">			<p><?php echo $lang_login['New passworderrors info'] ?></p>			<ul class="error-list"><?php	foreach ($errors as $cur_error)		echo "\t\t\t\t".'<li><strong>'.$cur_error.'</strong></li>'."\n";?>			</ul>		</div>	</div></div><?php}?><div class="blockform">	<h2><span><?php echo $lang_login['Request pass'] ?></span></h2>	<div class="box">		<form id="request_pass" method="post" action="login.php?action=forget_2" onsubmit="this.request_pass.disabled=true;if(process_form(this)){return true;}else{this.request_pass.disabled=false;return false;}">			<div class="inform">				<fieldset>					<legend><?php echo $lang_login['Request pass legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<label class="required"><strong><?php echo $lang_common['Email'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input id="req_email" type="text" name="req_email" size="50" maxlength="80" /><br /></label>						<p><?php echo $lang_login['Request pass info'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="request_pass" value="<?php echo $lang_common['Submit'] ?>" /><?php if (empty($errors)): ?> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a><?php endif; ?></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}if (!$pun_user['is_guest']){	header('Location: index.php');	exit;}// Try to determine if the data in HTTP_REFERER is valid (if not, we redirect to index.php after login)if (!empty($_SERVER['HTTP_REFERER'])){	$referrer = parse_url($_SERVER['HTTP_REFERER']);	// Remove www subdomain if it exists	if (strpos($referrer['host'], 'www.') === 0)		$referrer['host'] = substr($referrer['host'], 4);	// Make sure the path component exists	if (!isset($referrer['path']))		$referrer['path'] = '';	$valid = parse_url(get_base_url());	// Remove www subdomain if it exists	if (strpos($valid['host'], 'www.') === 0)		$valid['host'] = substr($valid['host'], 4);	// Make sure the path component exists	if (!isset($valid['path']))		$valid['path'] = '';	if ($referrer['host'] == $valid['host'] && preg_match('%^'.preg_quote($valid['path'], '%').'/(.*?)\.php%i', $referrer['path']))		$redirect_url = $_SERVER['HTTP_REFERER'];}if (!isset($redirect_url))	$redirect_url = 'index.php';else if (preg_match('%viewtopic\.php\?pid=(\d+)$%', $redirect_url, $matches))	$redirect_url .= '#p'.$matches[1];$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Login']);$required_fields = array('req_username' => $lang_common['Username'], 'req_password' => $lang_common['Password']);$focus_element = array('login', 'req_username');define('PUN_ACTIVE_PAGE', 'login');require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_common['Login'] ?></span></h2>	<div class="box">		<form id="login" method="post" action="login.php?action=in" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_login['Login legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<input type="hidden" name="redirect_url" value="<?php echo pun_htmlspecialchars($redirect_url) ?>" />						<label class="conl required"><strong><?php echo $lang_common['Username'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="text" name="req_username" size="25" maxlength="25" tabindex="1" /><br /></label>						<label class="conl required"><strong><?php echo $lang_common['Password'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="password" name="req_password" size="25" tabindex="2" /><br /></label>						<div class="rbox clearb">							<label><input type="checkbox" name="save_pass" value="1" tabindex="3" /><?php echo $lang_login['Remember me'] ?><br /></label>						</div>						<p class="clearb"><?php echo $lang_login['Login info'] ?></p>						<p class="actions"><span><a href="register.php" tabindex="5"><?php echo $lang_login['Not registered'] ?></a></span> <span><a href="login.php?action=forget" tabindex="6"><?php echo $lang_login['Forgotten pass'] ?></a></span></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="login" value="<?php echo $lang_common['Login'] ?>" tabindex="4" /></p>		</form>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// The FluxBB version this script installsdefine('FORUM_VERSION', '1.5.3');define('FORUM_DB_REVISION', 18);define('FORUM_SI_REVISION', 2);define('FORUM_PARSER_REVISION', 2);define('MIN_PHP_VERSION', '4.4.0');define('MIN_MYSQL_VERSION', '4.1.2');define('MIN_PGSQL_VERSION', '7.0.0');define('PUN_SEARCH_MIN_WORD', 3);define('PUN_SEARCH_MAX_WORD', 20);define('PUN_ROOT', dirname(__FILE__).'/');// Load the functions scriptrequire PUN_ROOT.'include/functions.php';// Load UTF-8 functionsrequire PUN_ROOT.'include/utf8/utf8.php';// Strip out "bad" UTF-8 charactersforum_remove_bad_characters();// Reverse the effect of register_globalsforum_unregister_globals();// Disable error reporting for uninitialized variableserror_reporting(E_ALL);// Force POSIX locale (to prevent functions such as strtolower() from messing up UTF-8 strings)setlocale(LC_CTYPE, 'C');// Turn off magic_quotes_runtimeif (get_magic_quotes_runtime())	set_magic_quotes_runtime(0);// Strip slashes from GET/POST/COOKIE (if magic_quotes_gpc is enabled)if (get_magic_quotes_gpc()){	function stripslashes_array($array)	{		return is_array($array) ? array_map('stripslashes_array', $array) : stripslashes($array);	}	$_GET = stripslashes_array($_GET);	$_POST = stripslashes_array($_POST);	$_COOKIE = stripslashes_array($_COOKIE);	$_REQUEST = stripslashes_array($_REQUEST);}// Turn off PHP time limit@set_time_limit(0);// If we've been passed a default language, use it$install_lang = isset($_REQUEST['install_lang']) ? pun_trim($_REQUEST['install_lang']) : 'English';// If such a language pack doesn't exist, or isn't up-to-date enough to translate this page, default to Englishif (!file_exists(PUN_ROOT.'lang/'.$install_lang.'/install.php'))	$install_lang = 'English';require PUN_ROOT.'lang/'.$install_lang.'/install.php';if (file_exists(PUN_ROOT.'config.php')){	// Check to see whether FluxBB is already installed	include PUN_ROOT.'config.php';	// If we have the 1.3-legacy constant defined, define the proper 1.4 constant so we don't get an incorrect "need to install" message	if (defined('FORUM'))		define('PUN', FORUM);	// If PUN is defined, config.php is probably valid and thus the software is installed	if (defined('PUN'))		exit($lang_install['Already installed']);}// Define PUN because email.php requires itdefine('PUN', 1);// If the cache directory is not specified, we use the default settingif (!defined('FORUM_CACHE_DIR'))	define('FORUM_CACHE_DIR', PUN_ROOT.'cache/');// Make sure we are running at least MIN_PHP_VERSIONif (!function_exists('version_compare') || version_compare(PHP_VERSION, MIN_PHP_VERSION, '<'))	exit(sprintf($lang_install['You are running error'], 'PHP', PHP_VERSION, FORUM_VERSION, MIN_PHP_VERSION));//// Generate output to be used for config.php//function generate_config_file(){	global $db_type, $db_host, $db_name, $db_username, $db_password, $db_prefix, $cookie_name, $cookie_seed;	return '<?php'."\n\n".'$db_type = \''.$db_type."';\n".'$db_host = \''.$db_host."';\n".'$db_name = \''.addslashes($db_name)."';\n".'$db_username = \''.addslashes($db_username)."';\n".'$db_password = \''.addslashes($db_password)."';\n".'$db_prefix = \''.addslashes($db_prefix)."';\n".'$p_connect = false;'."\n\n".'$cookie_name = '."'".$cookie_name."';\n".'$cookie_domain = '."'';\n".'$cookie_path = '."'/';\n".'$cookie_secure = 0;'."\n".'$cookie_seed = \''.random_key(16, false, true)."';\n\ndefine('PUN', 1);\n";}if (isset($_POST['generate_config'])){	header('Content-Type: text/x-delimtext; name="config.php"');	header('Content-disposition: attachment; filename=config.php');	$db_type = $_POST['db_type'];	$db_host = $_POST['db_host'];	$db_name = $_POST['db_name'];	$db_username = $_POST['db_username'];	$db_password = $_POST['db_password'];	$db_prefix = $_POST['db_prefix'];	$cookie_name = $_POST['cookie_name'];	$cookie_seed = $_POST['cookie_seed'];	echo generate_config_file();	exit;}if (!isset($_POST['form_sent'])){	// Make an educated guess regarding base_url	$base_url  = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://';	// protocol	$base_url .= preg_replace('%:(80|443)$%', '', $_SERVER['HTTP_HOST']);							// host[:port]	$base_url .= str_replace('\\', '/', dirname($_SERVER['SCRIPT_NAME']));							// path	if (substr($base_url, -1) == '/')		$base_url = substr($base_url, 0, -1);	$db_type = $db_name = $db_username = $db_prefix = $username = $email = '';	$db_host = 'localhost';	$title = $lang_install['My FluxBB Forum'];	$description = '<p><span>'.$lang_install['Description'].'</span></p>';	$default_lang = $install_lang;	$default_style = 'Air';}else{	$db_type = $_POST['req_db_type'];	$db_host = pun_trim($_POST['req_db_host']);	$db_name = pun_trim($_POST['req_db_name']);	$db_username = pun_trim($_POST['db_username']);	$db_password = pun_trim($_POST['db_password']);	$db_prefix = pun_trim($_POST['db_prefix']);	$username = pun_trim($_POST['req_username']);	$email = strtolower(pun_trim($_POST['req_email']));	$password1 = pun_trim($_POST['req_password1']);	$password2 = pun_trim($_POST['req_password2']);	$title = pun_trim($_POST['req_title']);	$description = pun_trim($_POST['desc']);	$base_url = pun_trim($_POST['req_base_url']);	$default_lang = pun_trim($_POST['req_default_lang']);	$default_style = pun_trim($_POST['req_default_style']);	$alerts = array();	// Make sure base_url doesn't end with a slash	if (substr($base_url, -1) == '/')		$base_url = substr($base_url, 0, -1);	// Validate username and passwords	if (pun_strlen($username) < 2)		$alerts[] = $lang_install['Username 1'];	else if (pun_strlen($username) > 25) // This usually doesn't happen since the form element only accepts 25 characters		$alerts[] = $lang_install['Username 2'];	else if (!strcasecmp($username, 'Guest'))		$alerts[] = $lang_install['Username 3'];	else if (preg_match('%[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}%', $username) || preg_match('%((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))%', $username))		$alerts[] = $lang_install['Username 4'];	else if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)		$alerts[] = $lang_install['Username 5'];	else if (preg_match('%(?:\[/?(?:b|u|i|h|colou?r|quote|code|img|url|email|list)\]|\[(?:code|quote|list)=)%i', $username))		$alerts[] = $lang_install['Username 6'];	if (pun_strlen($password1) < 4)		$alerts[] = $lang_install['Short password'];	else if ($password1 != $password2)		$alerts[] = $lang_install['Passwords not match'];	// Validate email	require PUN_ROOT.'include/email.php';	if (!is_valid_email($email))		$alerts[] = $lang_install['Wrong email'];	if ($title == '')		$alerts[] = $lang_install['No board title'];	$languages = forum_list_langs();	if (!in_array($default_lang, $languages))		$alerts[] = $lang_install['Error default language'];	$styles = forum_list_styles();	if (!in_array($default_style, $styles))		$alerts[] = $lang_install['Error default style'];}// Check if the cache directory is writableif (!forum_is_writable(FORUM_CACHE_DIR))	$alerts[] = sprintf($lang_install['Alert cache'], FORUM_CACHE_DIR);// Check if default avatar directory is writableif (!forum_is_writable(PUN_ROOT.'img/avatars/'))	$alerts[] = sprintf($lang_install['Alert avatar'], PUN_ROOT.'img/avatars/');if (!isset($_POST['form_sent']) || !empty($alerts)){	// Determine available database extensions	$dual_mysql = false;	$db_extensions = array();	$mysql_innodb = false;	if (function_exists('mysqli_connect'))	{		$db_extensions[] = array('mysqli', 'MySQL Improved');		$db_extensions[] = array('mysqli_innodb', 'MySQL Improved (InnoDB)');		$mysql_innodb = true;	}	if (function_exists('mysql_connect'))	{		$db_extensions[] = array('mysql', 'MySQL Standard');		$db_extensions[] = array('mysql_innodb', 'MySQL Standard (InnoDB)');		$mysql_innodb = true;		if (count($db_extensions) > 2)			$dual_mysql = true;	}	if (function_exists('sqlite_open'))		$db_extensions[] = array('sqlite', 'SQLite');	if (function_exists('pg_connect'))		$db_extensions[] = array('pgsql', 'PostgreSQL');	if (empty($db_extensions))		error($lang_install['No DB extensions']);	// Fetch a list of installed languages	$languages = forum_list_langs();?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title><?php echo $lang_install['FluxBB Installation'] ?></title><link rel="stylesheet" type="text/css" href="style/<?php echo $default_style ?>.css" /><script type="text/javascript">/* <![CDATA[ */function process_form(the_form){	var required_fields = {		"req_db_type": "<?php echo $lang_install['Database type'] ?>",		"req_db_host": "<?php echo $lang_install['Database server hostname'] ?>",		"req_db_name": "<?php echo $lang_install['Database name'] ?>",		"req_username": "<?php echo $lang_install['Administrator username'] ?>",		"req_password1": "<?php echo $lang_install['Administrator password 1'] ?>",		"req_password2": "<?php echo $lang_install['Administrator password 2'] ?>",		"req_email": "<?php echo $lang_install['Administrator email'] ?>",		"req_title": "<?php echo $lang_install['Board title'] ?>",		"req_base_url": "<?php echo $lang_install['Base URL'] ?>"	};	if (document.all || document.getElementById)	{		for (var i = 0; i < the_form.length; ++i)		{			var elem = the_form.elements[i];			if (elem.name && required_fields[elem.name] && !elem.value && elem.type && (/^(?:text(?:area)?|password|file)$/i.test(elem.type)))			{				alert('"' + required_fields[elem.name] + '" <?php echo $lang_install['Required field'] ?>');				elem.focus();				return false;			}		}	}	return true;}/* ]]> */</script></head><body onload="document.getElementById('install').req_db_type.focus();document.getElementById('install').start.disabled=false;" onunload=""><div id="puninstall" class="pun"><div class="top-box"><div><!-- Top Corners --></div></div><div class="punwrap"><div id="brdheader" class="block">	<div class="box">		<div id="brdtitle" class="inbox">			<h1><span><?php echo $lang_install['FluxBB Installation'] ?></span></h1>			<div id="brddesc"><p><?php echo $lang_install['Install message'] ?></p><p><?php echo $lang_install['Welcome'] ?></p></div>		</div>	</div></div><div id="brdmain"><?php if (count($languages) > 1): ?><div class="blockform">	<h2><span><?php echo $lang_install['Choose install language'] ?></span></h2>	<div class="box">		<form id="install" method="post" action="install.php">			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Install language'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Choose install language info'] ?></p>						<label><strong><?php echo $lang_install['Install language'] ?></strong>						<br /><select name="install_lang"><?php		foreach ($languages as $temp)		{			if ($temp == $install_lang)				echo "\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";			else				echo "\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";		}?>						</select>						<br /></label>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="start" value="<?php echo $lang_install['Change language'] ?>" /></p>		</form>	</div></div><?php endif; ?><div class="blockform">	<h2><span><?php echo sprintf($lang_install['Install'], FORUM_VERSION) ?></span></h2>	<div class="box">		<form id="install" method="post" action="install.php" onsubmit="this.start.disabled=true;if(process_form(this)){return true;}else{this.start.disabled=false;return false;}">		<div><input type="hidden" name="form_sent" value="1" /><input type="hidden" name="install_lang" value="<?php echo pun_htmlspecialchars($install_lang) ?>" /></div>			<div class="inform"><?php if (!empty($alerts)): ?>				<div class="forminfo error-info">					<h3><?php echo $lang_install['Errors'] ?></h3>					<ul class="error-list"><?phpforeach ($alerts as $cur_alert)	echo "\t\t\t\t\t\t".'<li><strong>'.$cur_alert.'</strong></li>'."\n";?>					</ul>				</div><?php endif; ?>			</div>			<div class="inform">				<div class="forminfo">					<h3><?php echo $lang_install['Database setup'] ?></h3>					<p><?php echo $lang_install['Info 1'] ?></p>				</div>				<fieldset>				<legend><?php echo $lang_install['Select database'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 2'] ?></p><?php if ($dual_mysql): ?>						<p><?php echo $lang_install['Dual MySQL'] ?></p><?php endif; ?><?php if ($mysql_innodb): ?>						<p><?php echo $lang_install['InnoDB'] ?></p><?php endif; ?>						<label class="required"><strong><?php echo $lang_install['Database type'] ?> <span><?php echo $lang_install['Required'] ?></span></strong>						<br /><select name="req_db_type"><?php	foreach ($db_extensions as $temp)	{		if ($temp[0] == $db_type)			echo "\t\t\t\t\t\t\t".'<option value="'.$temp[0].'" selected="selected">'.$temp[1].'</option>'."\n";		else			echo "\t\t\t\t\t\t\t".'<option value="'.$temp[0].'">'.$temp[1].'</option>'."\n";	}?>						</select>						<br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Database hostname'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 3'] ?></p>						<label class="required"><strong><?php echo $lang_install['Database server hostname'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input type="text" name="req_db_host" value="<?php echo pun_htmlspecialchars($db_host) ?>" size="50" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Database enter name'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 4'] ?></p>						<label class="required"><strong><?php echo $lang_install['Database name'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input id="req_db_name" type="text" name="req_db_name" value="<?php echo pun_htmlspecialchars($db_name) ?>" size="30" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Database enter informations'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 5'] ?></p>						<label class="conl"><?php echo $lang_install['Database username'] ?><br /><input type="text" name="db_username" value="<?php echo pun_htmlspecialchars($db_username) ?>" size="30" /><br /></label>						<label class="conl"><?php echo $lang_install['Database password'] ?><br /><input type="password" name="db_password" size="30" /><br /></label>						<div class="clearer"></div>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Database enter prefix'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 6'] ?></p>						<label><?php echo $lang_install['Table prefix'] ?><br /><input id="db_prefix" type="text" name="db_prefix" value="<?php echo pun_htmlspecialchars($db_prefix) ?>" size="20" maxlength="30" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<div class="forminfo">					<h3><?php echo $lang_install['Administration setup'] ?></h3>					<p><?php echo $lang_install['Info 7'] ?></p>				</div>				<fieldset>					<legend><?php echo $lang_install['Admin enter username'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 8'] ?></p>						<label class="required"><strong><?php echo $lang_install['Administrator username'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input type="text" name="req_username" value="<?php echo pun_htmlspecialchars($username) ?>" size="25" maxlength="25" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Admin enter password'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 9'] ?></p>						<label class="conl required"><strong><?php echo $lang_install['Password'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input id="req_password1" type="password" name="req_password1" size="16" /><br /></label>						<label class="conl required"><strong><?php echo $lang_install['Confirm password'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input type="password" name="req_password2" size="16" /><br /></label>						<div class="clearer"></div>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Admin enter email'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 10'] ?></p>						<label class="required"><strong><?php echo $lang_install['Administrator email'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input id="req_email" type="text" name="req_email" value="<?php echo pun_htmlspecialchars($email) ?>" size="50" maxlength="80" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<div class="forminfo">					<h3><?php echo $lang_install['Board setup'] ?></h3>					<p><?php echo $lang_install['Info 11'] ?></p>				</div>				<fieldset>					<legend><?php echo $lang_install['Enter board title'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 12'] ?></p>						<label class="required"><strong><?php echo $lang_install['Board title'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input id="req_title" type="text" name="req_title" value="<?php echo pun_htmlspecialchars($title) ?>" size="60" maxlength="255" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Enter board description'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 13'] ?></p>						<label><?php echo $lang_install['Board description'] ?><br /><input id="desc" type="text" name="desc" value="<?php echo pun_htmlspecialchars($description) ?>" size="60" maxlength="255" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Enter base URL'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 14'] ?></p>						<label class="required"><strong><?php echo $lang_install['Base URL'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><input id="req_base_url" type="text" name="req_base_url" value="<?php echo pun_htmlspecialchars($base_url) ?>" size="60" maxlength="100" /><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Choose the default language'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 15'] ?></p>						<label class="required"><strong><?php echo $lang_install['Default language'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><select id="req_default_lang" name="req_default_lang"><?php		$languages = forum_list_langs();		foreach ($languages as $temp)		{			if ($temp == $default_lang)				echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";			else				echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";		}?>						</select><br /></label>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_install['Choose the default style'] ?></legend>					<div class="infldset">						<p><?php echo $lang_install['Info 16'] ?></p>						<label class="required"><strong><?php echo $lang_install['Default style'] ?> <span><?php echo $lang_install['Required'] ?></span></strong><br /><select id="req_default_style" name="req_default_style"><?php		$styles = forum_list_styles();		foreach ($styles as $temp)		{			if ($temp == $default_style)				echo "\t\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";			else				echo "\t\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";		}?>						</select><br /></label>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="start" value="<?php echo $lang_install['Start install'] ?>" /></p>		</form>	</div></div></div></div><div class="end-box"><div><!-- Bottom Corners --></div></div></div></body></html><?php}else{	// Load the appropriate DB layer class	switch ($db_type)	{		case 'mysql':			require PUN_ROOT.'include/dblayer/mysql.php';			break;		case 'mysql_innodb':			require PUN_ROOT.'include/dblayer/mysql_innodb.php';			break;		case 'mysqli':			require PUN_ROOT.'include/dblayer/mysqli.php';			break;		case 'mysqli_innodb':			require PUN_ROOT.'include/dblayer/mysqli_innodb.php';			break;		case 'pgsql':			require PUN_ROOT.'include/dblayer/pgsql.php';			break;		case 'sqlite':			require PUN_ROOT.'include/dblayer/sqlite.php';			break;		default:			error(sprintf($lang_install['DB type not valid'], pun_htmlspecialchars($db_type)));	}	// Create the database object (and connect/select db)	$db = new DBLayer($db_host, $db_username, $db_password, $db_name, $db_prefix, false);	// Validate prefix	if (strlen($db_prefix) > 0 && (!preg_match('%^[a-zA-Z_][a-zA-Z0-9_]*$%', $db_prefix) || strlen($db_prefix) > 40))		error(sprintf($lang_install['Table prefix error'], $db->prefix));	// Do some DB type specific checks	switch ($db_type)	{		case 'mysql':		case 'mysqli':		case 'mysql_innodb':		case 'mysqli_innodb':			$mysql_info = $db->get_version();			if (version_compare($mysql_info['version'], MIN_MYSQL_VERSION, '<'))				error(sprintf($lang_install['You are running error'], 'MySQL', $mysql_info['version'], FORUM_VERSION, MIN_MYSQL_VERSION));			break;		case 'pgsql':			$pgsql_info = $db->get_version();			if (version_compare($pgsql_info['version'], MIN_PGSQL_VERSION, '<'))				error(sprintf($lang_install['You are running error'], 'PostgreSQL', $pgsql_info['version'], FORUM_VERSION, MIN_PGSQL_VERSION));			break;		case 'sqlite':			if (strtolower($db_prefix) == 'sqlite_')				error($lang_install['Prefix reserved']);			break;	}	// Make sure FluxBB isn't already installed	$result = $db->query('SELECT 1 FROM '.$db_prefix.'users WHERE id=1');	if ($db->num_rows($result))		error(sprintf($lang_install['Existing table error'], $db_prefix, $db_name));	// Check if InnoDB is available	if ($db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')	{		$result = $db->query('SHOW VARIABLES LIKE \'have_innodb\'');		list (, $result) = $db->fetch_row($result);		if ((strtoupper($result) != 'YES'))			error($lang_install['InnoDB off']);	}	// Start a transaction	$db->start_transaction();	// Create all tables	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'username'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'ip'			=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'email'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> true			),			'expire'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'ban_creator'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'username_idx'	=> array('username')		)	);	if ($db_type == 'mysql' || $db_type == 'mysqli' || $db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')		$schema['INDEXES']['username_idx'] = array('username(25)');	$db->create_table('bans', $schema) or error('Unable to create bans table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'cat_name'		=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New Category\''			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id')	);	$db->create_table('categories', $schema) or error('Unable to create categories table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'search_for'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'replace_with'	=> array(				'datatype'		=> 'VARCHAR(60)',				'allow_null'	=> false,				'default'		=> '\'\''			)		),		'PRIMARY KEY'	=> array('id')	);	$db->create_table('censoring', $schema) or error('Unable to create censoring table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'conf_name'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'conf_value'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('conf_name')	);	$db->create_table('config', $schema) or error('Unable to create config table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'group_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=> '0'			),			'read_forum'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_replies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'post_topics'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			)		),		'PRIMARY KEY'	=> array('group_id', 'forum_id')	);	$db->create_table('forum_perms', $schema) or error('Unable to create forum_perms table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'forum_name'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'New forum\''			),			'forum_desc'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'redirect_url'	=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'moderators'	=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'num_topics'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_posts'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'sort_by'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'disp_position'	=> array(				'datatype'		=> 'INT(10)',				'allow_null'	=> false,				'default'		=>	'0'			),			'cat_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=>	'0'			)		),		'PRIMARY KEY'	=> array('id')	);	$db->create_table('forums', $schema) or error('Unable to create forums table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'g_id'						=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'g_title'					=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'g_user_title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'g_promote_min_posts'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'g_promote_next_group'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'g_moderator'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_edit_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_rename_users'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_change_passwords'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_mod_ban_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'g_read_board'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_view_users'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_replies'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_topics'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_edit_posts'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_posts'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_delete_topics'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_links'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_set_title'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search'					=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_search_users'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_send_email'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'g_post_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_search_flood'			=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '30'			),			'g_email_flood'				=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '60'			),			'g_report_flood'			=> array(				'datatype'		=> 'SMALLINT(6)',				'allow_null'	=> false,				'default'		=> '60'			)		),		'PRIMARY KEY'	=> array('g_id')	);	$db->create_table('groups', $schema) or error('Unable to create groups table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'logged'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'idle'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),		),		'UNIQUE KEYS'	=> array(			'user_id_ident_idx'	=> array('user_id', 'ident')		),		'INDEXES'		=> array(			'ident_idx'		=> array('ident'),			'logged_idx'	=> array('logged')		)	);	if ($db_type == 'mysql' || $db_type == 'mysqli' || $db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')	{		$schema['UNIQUE KEYS']['user_id_ident_idx'] = array('user_id', 'ident(25)');		$schema['INDEXES']['ident_idx'] = array('ident(25)');	}	if ($db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')		$schema['ENGINE'] = 'InnoDB';	$db->create_table('online', $schema) or error('Unable to create online table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'poster_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '1'			),			'poster_ip'		=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> true			),			'poster_email'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'message'		=> array(				'datatype'		=> 'MEDIUMTEXT',				'allow_null'	=> true			),			'hide_smilies'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'edited'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'edited_by'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'topic_id_idx'	=> array('topic_id'),			'multi_idx'		=> array('poster_id', 'topic_id')		)	);	$db->create_table('posts', $schema) or error('Unable to create posts table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'reported_by'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'created'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'message'		=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'zapped'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'zapped_by'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'zapped_idx'	=> array('zapped')		)	);	$db->create_table('reports', $schema) or error('Unable to create reports table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'ident'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'search_data'	=> array(				'datatype'		=> 'MEDIUMTEXT',				'allow_null'	=> true			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'ident_idx'	=> array('ident')		)	);	if ($db_type == 'mysql' || $db_type == 'mysqli' || $db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')		$schema['INDEXES']['ident_idx'] = array('ident(8)');	$db->create_table('search_cache', $schema) or error('Unable to create search_cache table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'post_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'word_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'subject_match'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			)		),		'INDEXES'		=> array(			'word_id_idx'	=> array('word_id'),			'post_id_idx'	=> array('post_id')		)	);	$db->create_table('search_matches', $schema) or error('Unable to create search_matches table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'word'			=> array(				'datatype'		=> 'VARCHAR(20)',				'allow_null'	=> false,				'default'		=> '\'\'',				'collation'		=> 'bin'			)		),		'PRIMARY KEY'	=> array('word'),		'INDEXES'		=> array(			'id_idx'	=> array('id')		)	);	if ($db_type == 'sqlite')	{		$schema['PRIMARY KEY'] = array('id');		$schema['UNIQUE KEYS'] = array('word_idx'	=> array('word'));	}	$db->create_table('search_words', $schema) or error('Unable to create search_words table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'topic_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('user_id', 'topic_id')	);	$db->create_table('topic_subscriptions', $schema) or error('Unable to create topic subscriptions table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'user_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('user_id', 'forum_id')	);	$db->create_table('forum_subscriptions', $schema) or error('Unable to create forum subscriptions table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'			=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'poster'		=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'subject'		=> array(				'datatype'		=> 'VARCHAR(255)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'posted'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'first_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post_id'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_poster'	=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> true			),			'num_views'		=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'num_replies'	=> array(				'datatype'		=> 'MEDIUMINT(8) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'closed'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'sticky'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'moved_to'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'forum_id'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			)		),		'PRIMARY KEY'	=> array('id'),		'INDEXES'		=> array(			'forum_id_idx'		=> array('forum_id'),			'moved_to_idx'		=> array('moved_to'),			'last_post_idx'		=> array('last_post'),			'first_post_id_idx'	=> array('first_post_id')		)	);	$db->create_table('topics', $schema) or error('Unable to create topics table', __FILE__, __LINE__, $db->error());	$schema = array(		'FIELDS'		=> array(			'id'				=> array(				'datatype'		=> 'SERIAL',				'allow_null'	=> false			),			'group_id'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '3'			),			'username'			=> array(				'datatype'		=> 'VARCHAR(200)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'password'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'email'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> false,				'default'		=> '\'\''			),			'title'				=> array(				'datatype'		=> 'VARCHAR(50)',				'allow_null'	=> true			),			'realname'			=> array(				'datatype'		=> 'VARCHAR(40)',				'allow_null'	=> true			),			'url'				=> array(				'datatype'		=> 'VARCHAR(100)',				'allow_null'	=> true			),			'jabber'			=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'icq'				=> array(				'datatype'		=> 'VARCHAR(12)',				'allow_null'	=> true			),			'msn'				=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'aim'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'yahoo'				=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'location'			=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'signature'			=> array(				'datatype'		=> 'TEXT',				'allow_null'	=> true			),			'disp_topics'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'disp_posts'		=> array(				'datatype'		=> 'TINYINT(3) UNSIGNED',				'allow_null'	=> true			),			'email_setting'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'notify_with_post'	=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'auto_notify'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'show_smilies'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_img_sig'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_avatars'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'show_sig'			=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '1'			),			'timezone'			=> array(				'datatype'		=> 'FLOAT',				'allow_null'	=> false,				'default'		=> '0'			),			'dst'				=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'time_format'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'date_format'		=> array(				'datatype'		=> 'TINYINT(1)',				'allow_null'	=> false,				'default'		=> '0'			),			'language'			=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\''.$db->escape($default_lang).'\''			),			'style'				=> array(				'datatype'		=> 'VARCHAR(25)',				'allow_null'	=> false,				'default'		=> '\''.$db->escape($default_style).'\''			),			'num_posts'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'last_post'			=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_search'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_email_sent'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'last_report_sent'	=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> true			),			'registered'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'registration_ip'	=> array(				'datatype'		=> 'VARCHAR(39)',				'allow_null'	=> false,				'default'		=> '\'0.0.0.0\''			),			'last_visit'		=> array(				'datatype'		=> 'INT(10) UNSIGNED',				'allow_null'	=> false,				'default'		=> '0'			),			'admin_note'		=> array(				'datatype'		=> 'VARCHAR(30)',				'allow_null'	=> true			),			'activate_string'	=> array(				'datatype'		=> 'VARCHAR(80)',				'allow_null'	=> true			),			'activate_key'		=> array(				'datatype'		=> 'VARCHAR(8)',				'allow_null'	=> true			),		),		'PRIMARY KEY'	=> array('id'),		'UNIQUE KEYS'	=> array(			'username_idx'		=> array('username')		),		'INDEXES'		=> array(			'registered_idx'	=> array('registered')		)	);	if ($db_type == 'mysql' || $db_type == 'mysqli' || $db_type == 'mysql_innodb' || $db_type == 'mysqli_innodb')		$schema['UNIQUE KEYS']['username_idx'] = array('username(25)');	$db->create_table('users', $schema) or error('Unable to create users table', __FILE__, __LINE__, $db->error());	$now = time();	// Insert the four preset groups	$db->query('INSERT INTO '.$db->prefix.'groups ('.($db_type != 'pgsql' ? 'g_id, ' : '').'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES('.($db_type != 'pgsql' ? '1, ' : '').'\''.$db->escape($lang_install['Administrators']).'\', \''.$db->escape($lang_install['Administrator']).'\', 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)') or error('Unable to add group', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db->prefix.'groups ('.($db_type != 'pgsql' ? 'g_id, ' : '').'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES('.($db_type != 'pgsql' ? '2, ' : '').'\''.$db->escape($lang_install['Moderators']).'\', \''.$db->escape($lang_install['Moderator']).'\', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)') or error('Unable to add group', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db->prefix.'groups ('.($db_type != 'pgsql' ? 'g_id, ' : '').'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES('.($db_type != 'pgsql' ? '3, ' : '').'\''.$db->escape($lang_install['Guests']).'\', NULL, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 60, 30, 0, 0)') or error('Unable to add group', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db->prefix.'groups ('.($db_type != 'pgsql' ? 'g_id, ' : '').'g_title, g_user_title, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES('.($db_type != 'pgsql' ? '4, ' : '').'\''.$db->escape($lang_install['Members']).'\', NULL, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 60, 30, 60, 60)') or error('Unable to add group', __FILE__, __LINE__, $db->error());	// Insert guest and first admin user	$db->query('INSERT INTO '.$db_prefix.'users (group_id, username, password, email) VALUES(3, \''.$db->escape($lang_install['Guest']).'\', \''.$db->escape($lang_install['Guest']).'\', \''.$db->escape($lang_install['Guest']).'\')')		or error('Unable to add guest user. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db_prefix.'users (group_id, username, password, email, language, style, num_posts, last_post, registered, registration_ip, last_visit) VALUES(1, \''.$db->escape($username).'\', \''.pun_hash($password1).'\', \''.$email.'\', \''.$db->escape($default_lang).'\', \''.$db->escape($default_style).'\', 1, '.$now.', '.$now.', \''.$db->escape(get_remote_address()).'\', '.$now.')')		or error('Unable to add administrator user. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	// Enable/disable avatars depending on file_uploads setting in PHP configuration	$avatars = in_array(strtolower(@ini_get('file_uploads')), array('on', 'true', '1')) ? 1 : 0;	// Insert config data	$pun_config = array(		'o_cur_version'				=> FORUM_VERSION,		'o_database_revision'		=> FORUM_DB_REVISION,		'o_searchindex_revision'	=> FORUM_SI_REVISION,		'o_parser_revision'			=> FORUM_PARSER_REVISION,		'o_board_title'				=> $title,		'o_board_desc'				=> $description,		'o_default_timezone'		=> 0,		'o_time_format'				=> 'H:i:s',		'o_date_format'				=> 'Y-m-d',		'o_timeout_visit'			=> 1800,		'o_timeout_online'			=> 300,		'o_redirect_delay'			=> 1,		'o_show_version'			=> 0,		'o_show_user_info'			=> 1,		'o_show_post_count'			=> 1,		'o_signatures'				=> 1,		'o_smilies'					=> 1,		'o_smilies_sig'				=> 1,		'o_make_links'				=> 1,		'o_default_lang'			=> $default_lang,		'o_default_style'			=> $default_style,		'o_default_user_group'		=> 4,		'o_topic_review'			=> 15,		'o_disp_topics_default'		=> 30,		'o_disp_posts_default'		=> 25,		'o_indent_num_spaces'		=> 4,		'o_quote_depth'				=> 3,		'o_quickpost'				=> 1,		'o_users_online'			=> 1,		'o_censoring'				=> 0,		'o_show_dot'				=> 0,		'o_topic_views'				=> 1,		'o_quickjump'				=> 1,		'o_gzip'					=> 0,		'o_additional_navlinks'		=> '',		'o_report_method'			=> 0,		'o_regs_report'				=> 0,		'o_default_email_setting'	=> 1,		'o_mailing_list'			=> $email,		'o_avatars'					=> $avatars,		'o_avatars_dir'				=> 'img/avatars',		'o_avatars_width'			=> 60,		'o_avatars_height'			=> 60,		'o_avatars_size'			=> 10240,		'o_search_all_forums'		=> 1,		'o_base_url'				=> $base_url,		'o_admin_email'				=> $email,		'o_webmaster_email'			=> $email,		'o_forum_subscriptions'		=> 1,		'o_topic_subscriptions'		=> 1,		'o_smtp_host'				=> NULL,		'o_smtp_user'				=> NULL,		'o_smtp_pass'				=> NULL,		'o_smtp_ssl'				=> 0,		'o_regs_allow'				=> 1,		'o_regs_verify'				=> 0,		'o_announcement'			=> 0,		'o_announcement_message'	=> $lang_install['Announcement'],		'o_rules'					=> 0,		'o_rules_message'			=> $lang_install['Rules'],		'o_maintenance'				=> 0,		'o_maintenance_message'		=> $lang_install['Maintenance message'],		'o_default_dst'				=> 0,		'o_feed_type'				=> 2,		'o_feed_ttl'				=> 0,		'p_message_bbcode'			=> 1,		'p_message_img_tag'			=> 1,		'p_message_all_caps'		=> 1,		'p_subject_all_caps'		=> 1,		'p_sig_all_caps'			=> 1,		'p_sig_bbcode'				=> 1,		'p_sig_img_tag'				=> 0,		'p_sig_length'				=> 400,		'p_sig_lines'				=> 4,		'p_allow_banned_email'		=> 1,		'p_allow_dupe_email'		=> 0,		'p_force_guest_email'		=> 1	);	foreach ($pun_config as $conf_name => $conf_value)	{		$db->query('INSERT INTO '.$db_prefix.'config (conf_name, conf_value) VALUES(\''.$conf_name.'\', '.(is_null($conf_value) ? 'NULL' : '\''.$db->escape($conf_value).'\'').')')			or error('Unable to insert into table '.$db_prefix.'config. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	}	// Insert some other default data	$subject = $lang_install['Test post'];	$message = $lang_install['Message'];	$db->query('INSERT INTO '.$db_prefix.'categories (cat_name, disp_position) VALUES(\''.$db->escape($lang_install['Test category']).'\', 1)')		or error('Unable to insert into table '.$db_prefix.'categories. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db_prefix.'forums (forum_name, forum_desc, num_topics, num_posts, last_post, last_post_id, last_poster, disp_position, cat_id) VALUES(\''.$db->escape($lang_install['Test forum']).'\', \''.$db->escape($lang_install['This is just a test forum']).'\', 1, 1, '.$now.', 1, \''.$db->escape($username).'\', 1, 1)')		or error('Unable to insert into table '.$db_prefix.'forums. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db_prefix.'topics (poster, subject, posted, first_post_id, last_post, last_post_id, last_poster, forum_id) VALUES(\''.$db->escape($username).'\', \''.$db->escape($subject).'\', '.$now.', 1, '.$now.', 1, \''.$db->escape($username).'\', 1)')		or error('Unable to insert into table '.$db_prefix.'topics. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	$db->query('INSERT INTO '.$db_prefix.'posts (poster, poster_id, poster_ip, message, posted, topic_id) VALUES(\''.$db->escape($username).'\', 2, \''.$db->escape(get_remote_address()).'\', \''.$db->escape($message).'\', '.$now.', 1)')		or error('Unable to insert into table '.$db_prefix.'posts. Please check your configuration and try again', __FILE__, __LINE__, $db->error());	// Index the test post so searching for it works	require PUN_ROOT.'include/search_idx.php';	update_search_index('post', 1, $message, $subject);	$db->end_transaction();	$alerts = array();	// Check if we disabled uploading avatars because file_uploads was disabled	if ($avatars == '0')		$alerts[] = $lang_install['Alert upload'];	// Add some random bytes at the end of the cookie name to prevent collisions	$cookie_name = 'pun_cookie_'.random_key(6, false, true);	// Generate the config.php file data	$config = generate_config_file();	// Attempt to write config.php and serve it up for download if writing fails	$written = false;	if (forum_is_writable(PUN_ROOT))	{		$fh = @fopen(PUN_ROOT.'config.php', 'wb');		if ($fh)		{			fwrite($fh, $config);			fclose($fh);			$written = true;		}	}?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title><?php echo $lang_install['FluxBB Installation'] ?></title><link rel="stylesheet" type="text/css" href="style/<?php echo $default_style ?>.css" /></head><body><div id="puninstall" class="pun"><div class="top-box"><div><!-- Top Corners --></div></div><div class="punwrap"><div id="brdheader" class="block">	<div class="box">		<div id="brdtitle" class="inbox">			<h1><span><?php echo $lang_install['FluxBB Installation'] ?></span></h1>			<div id="brddesc"><p><?php echo $lang_install['FluxBB has been installed'] ?></p></div>		</div>	</div></div><div id="brdmain"><div class="blockform">	<h2><span><?php echo $lang_install['Final instructions'] ?></span></h2>	<div class="box"><?phpif (!$written){?>		<form method="post" action="install.php">			<div class="inform">				<div class="forminfo">					<p><?php echo $lang_install['Info 17'] ?></p>					<p><?php echo $lang_install['Info 18'] ?></p>				</div>				<input type="hidden" name="generate_config" value="1" />				<input type="hidden" name="db_type" value="<?php echo $db_type; ?>" />				<input type="hidden" name="db_host" value="<?php echo $db_host; ?>" />				<input type="hidden" name="db_name" value="<?php echo pun_htmlspecialchars($db_name); ?>" />				<input type="hidden" name="db_username" value="<?php echo pun_htmlspecialchars($db_username); ?>" />				<input type="hidden" name="db_password" value="<?php echo pun_htmlspecialchars($db_password); ?>" />				<input type="hidden" name="db_prefix" value="<?php echo pun_htmlspecialchars($db_prefix); ?>" />				<input type="hidden" name="cookie_name" value="<?php echo pun_htmlspecialchars($cookie_name); ?>" />				<input type="hidden" name="cookie_seed" value="<?php echo pun_htmlspecialchars($cookie_seed); ?>" /><?php if (!empty($alerts)): ?>				<div class="forminfo error-info">					<ul class="error-list"><?phpforeach ($alerts as $cur_alert)	echo "\t\t\t\t\t".'<li>'.$cur_alert.'</li>'."\n";?>					</ul>				</div><?php endif; ?>			</div>			<p class="buttons"><input type="submit" value="<?php echo $lang_install['Download config.php file'] ?>" /></p>		</form><?php}else{?>		<div class="fakeform">			<div class="inform">				<div class="forminfo">					<p><?php echo $lang_install['FluxBB fully installed'] ?></p>				</div>			</div>		</div><?php}?>	</div></div></div></div><div class="end-box"><div><!-- Bottom Corners --></div></div></div></body></html><?php}
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if (!$pun_user['is_admmod'])	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_reports.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_reports.php';// Zap a reportif (isset($_POST['zap_id'])){	confirm_referrer('admin_reports.php');	$zap_id = intval(key($_POST['zap_id']));	$result = $db->query('SELECT zapped FROM '.$db->prefix.'reports WHERE id='.$zap_id) or error('Unable to fetch report info', __FILE__, __LINE__, $db->error());	$zapped = $db->result($result);	if ($zapped == '')		$db->query('UPDATE '.$db->prefix.'reports SET zapped='.time().', zapped_by='.$pun_user['id'].' WHERE id='.$zap_id) or error('Unable to zap report', __FILE__, __LINE__, $db->error());	// Delete old reports (which cannot be viewed anyway)	$result = $db->query('SELECT zapped FROM '.$db->prefix.'reports WHERE zapped IS NOT NULL ORDER BY zapped DESC LIMIT 10,1') or error('Unable to fetch read reports to delete', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result) > 0)	{		$zapped_threshold = $db->result($result);		$db->query('DELETE FROM '.$db->prefix.'reports WHERE zapped <= '.$zapped_threshold) or error('Unable to delete old read reports', __FILE__, __LINE__, $db->error());	}	redirect('admin_reports.php', $lang_admin_reports['Report zapped redirect']);}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['Reports']);define('PUN_ACTIVE_PAGE', 'admin');require PUN_ROOT.'header.php';generate_admin_menu('reports');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_reports['New reports head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_reports.php?action=zap"><?php$result = $db->query('SELECT r.id, r.topic_id, r.forum_id, r.reported_by, r.created, r.message, p.id AS pid, t.subject, f.forum_name, u.username AS reporter FROM '.$db->prefix.'reports AS r LEFT JOIN '.$db->prefix.'posts AS p ON r.post_id=p.id LEFT JOIN '.$db->prefix.'topics AS t ON r.topic_id=t.id LEFT JOIN '.$db->prefix.'forums AS f ON r.forum_id=f.id LEFT JOIN '.$db->prefix.'users AS u ON r.reported_by=u.id WHERE r.zapped IS NULL ORDER BY created DESC') or error('Unable to fetch report list', __FILE__, __LINE__, $db->error());if ($db->num_rows($result)){	while ($cur_report = $db->fetch_assoc($result))	{		$reporter = ($cur_report['reporter'] != '') ? '<a href="profile.php?id='.$cur_report['reported_by'].'">'.pun_htmlspecialchars($cur_report['reporter']).'</a>' : $lang_admin_reports['Deleted user'];		$forum = ($cur_report['forum_name'] != '') ? '<span><a href="viewforum.php?id='.$cur_report['forum_id'].'">'.pun_htmlspecialchars($cur_report['forum_name']).'</a></span>' : '<span>'.$lang_admin_reports['Deleted'].'</span>';		$topic = ($cur_report['subject'] != '') ? '<span>&#160;<a href="viewtopic.php?id='.$cur_report['topic_id'].'">'.pun_htmlspecialchars($cur_report['subject']).'</a></span>' : '<span>&#160;'.$lang_admin_reports['Deleted'].'</span>';		$post = str_replace("\n", '<br />', pun_htmlspecialchars($cur_report['message']));		$post_id = ($cur_report['pid'] != '') ? '<span>&#160;<a href="viewtopic.php?pid='.$cur_report['pid'].'#p'.$cur_report['pid'].'">'.sprintf($lang_admin_reports['Post ID'], $cur_report['pid']).'</a></span>' : '<span>&#160;'.$lang_admin_reports['Deleted'].'</span>';		$report_location = array($forum, $topic, $post_id);?>				<div class="inform">					<fieldset>						<legend><?php printf($lang_admin_reports['Report subhead'], format_time($cur_report['created'])) ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php printf($lang_admin_reports['Reported by'], $reporter) ?></th>									<td class="location"><?php echo implode(' ', $report_location) ?></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_reports['Reason'] ?><div><input type="submit" name="zap_id[<?php echo $cur_report['id'] ?>]" value="<?php echo $lang_admin_reports['Zap'] ?>" /></div></th>									<td><?php echo $post ?></td>								</tr>							</table>						</div>					</fieldset>				</div><?php	}}else{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_common['None'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_reports['No new reports'] ?></p>						</div>					</fieldset>				</div><?php}?>			</form>		</div>	</div>	<div class="blockform block2">		<h2><span><?php echo $lang_admin_reports['Last 10 head'] ?></span></h2>		<div class="box">			<div class="fakeform"><?php$result = $db->query('SELECT r.id, r.topic_id, r.forum_id, r.reported_by, r.message, r.zapped, r.zapped_by AS zapped_by_id, p.id AS pid, t.subject, f.forum_name, u.username AS reporter, u2.username AS zapped_by FROM '.$db->prefix.'reports AS r LEFT JOIN '.$db->prefix.'posts AS p ON r.post_id=p.id LEFT JOIN '.$db->prefix.'topics AS t ON r.topic_id=t.id LEFT JOIN '.$db->prefix.'forums AS f ON r.forum_id=f.id LEFT JOIN '.$db->prefix.'users AS u ON r.reported_by=u.id LEFT JOIN '.$db->prefix.'users AS u2 ON r.zapped_by=u2.id WHERE r.zapped IS NOT NULL ORDER BY zapped DESC LIMIT 10') or error('Unable to fetch report list', __FILE__, __LINE__, $db->error());if ($db->num_rows($result)){	while ($cur_report = $db->fetch_assoc($result))	{		$reporter = ($cur_report['reporter'] != '') ? '<a href="profile.php?id='.$cur_report['reported_by'].'">'.pun_htmlspecialchars($cur_report['reporter']).'</a>' : $lang_admin_reports['Deleted user'];		$forum = ($cur_report['forum_name'] != '') ? '<span><a href="viewforum.php?id='.$cur_report['forum_id'].'">'.pun_htmlspecialchars($cur_report['forum_name']).'</a></span>' : '<span>'.$lang_admin_reports['Deleted'].'</span>';		$topic = ($cur_report['subject'] != '') ? '<span>&#160;<a href="viewtopic.php?id='.$cur_report['topic_id'].'">'.pun_htmlspecialchars($cur_report['subject']).'</a></span>' : '<span>&#160;'.$lang_admin_reports['Deleted'].'</span>';		$post = str_replace("\n", '<br />', pun_htmlspecialchars($cur_report['message']));		$post_id = ($cur_report['pid'] != '') ? '<span>&#160;<a href="viewtopic.php?pid='.$cur_report['pid'].'#p'.$cur_report['pid'].'">'.sprintf($lang_admin_reports['Post ID'], $cur_report['pid']).'</a></span>' : '<span>&#160;'.$lang_admin_reports['Deleted'].'</span>';		$zapped_by = ($cur_report['zapped_by'] != '') ? '<a href="profile.php?id='.$cur_report['zapped_by_id'].'">'.pun_htmlspecialchars($cur_report['zapped_by']).'</a>' : $lang_admin_reports['NA'];		$zapped_by = ($cur_report['zapped_by'] != '') ? '<strong>'.pun_htmlspecialchars($cur_report['zapped_by']).'</strong>' : $lang_admin_reports['NA'];		$report_location = array($forum, $topic, $post_id);?>				<div class="inform">					<fieldset>						<legend><?php printf($lang_admin_reports['Zapped subhead'], format_time($cur_report['zapped']), $zapped_by) ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php printf($lang_admin_reports['Reported by'], $reporter) ?></th>									<td class="location"><?php echo implode(' ', $report_location) ?></td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_reports['Reason'] ?></th>									<td><?php echo $post ?></td>								</tr>							</table>						</div>					</fieldset>				</div><?php	}}else{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_common['None'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_reports['No zapped reports'] ?></p>						</div>					</fieldset>				</div><?php}?>			</div>		</div>	</div>	<div class="clearer"></div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Make sure no one attempts to run this script "directly"if (!defined('PUN'))	exit;$tpl_temp = trim(ob_get_contents());$tpl_main = str_replace('<pun_main>', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <pun_main>// START SUBST - <pun_footer>ob_start();?><div id="brdfooter" class="block">	<h2><span><?php echo $lang_common['Board footer'] ?></span></h2>	<div class="box"><?phpif (isset($footer_style) && ($footer_style == 'viewforum' || $footer_style == 'viewtopic') && $is_admmod){	echo "\t\t".'<div id="modcontrols" class="inbox">'."\n";	if ($footer_style == 'viewforum')	{		echo "\t\t\t".'<dl>'."\n";		echo "\t\t\t\t".'<dt><strong>'.$lang_forum['Mod controls'].'</strong></dt>'."\n";		echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;p='.$p.'">'.$lang_common['Moderate forum'].'</a></span></dd>'."\n";		echo "\t\t\t".'</dl>'."\n";	}	else if ($footer_style == 'viewtopic')	{		echo "\t\t\t".'<dl>'."\n";		echo "\t\t\t\t".'<dt><strong>'.$lang_topic['Mod controls'].'</strong></dt>'."\n";		echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;tid='.$id.'&amp;p='.$p.'">'.$lang_common['Moderate topic'].'</a></span></dd>'."\n";		echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;move_topics='.$id.'">'.$lang_common['Move topic'].'</a></span></dd>'."\n";		if ($cur_topic['closed'] == '1')			echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;open='.$id.'">'.$lang_common['Open topic'].'</a></span></dd>'."\n";		else			echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;close='.$id.'">'.$lang_common['Close topic'].'</a></span></dd>'."\n";		if ($cur_topic['sticky'] == '1')			echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;unstick='.$id.'">'.$lang_common['Unstick topic'].'</a></span></dd>'."\n";		else			echo "\t\t\t\t".'<dd><span><a href="moderate.php?fid='.$forum_id.'&amp;stick='.$id.'">'.$lang_common['Stick topic'].'</a></span></dd>'."\n";		echo "\t\t\t".'</dl>'."\n";	}	echo "\t\t\t".'<div class="clearer"></div>'."\n\t\t".'</div>'."\n";}?>		<div id="brdfooternav" class="inbox"><?phpecho "\t\t\t".'<div class="conl">'."\n";// Display the "Jump to" drop listif ($pun_config['o_quickjump'] == '1'){	// Load cached quick jump	if (file_exists(FORUM_CACHE_DIR.'cache_quickjump_'.$pun_user['g_id'].'.php'))		include FORUM_CACHE_DIR.'cache_quickjump_'.$pun_user['g_id'].'.php';	if (!defined('PUN_QJ_LOADED'))	{		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_quickjump_cache($pun_user['g_id']);		require FORUM_CACHE_DIR.'cache_quickjump_'.$pun_user['g_id'].'.php';	}}echo "\t\t\t".'</div>'."\n";?>			<div class="conr"><?php// If no footer style has been specified, we use the default (only copyright/debug info)$footer_style = isset($footer_style) ? $footer_style : NULL;if ($footer_style == 'index'){	if ($pun_config['o_feed_type'] == '1')		echo "\t\t\t\t".'<p id="feedlinks"><span class="rss"><a href="extern.php?action=feed&amp;type=rss">'.$lang_common['RSS active topics feed'].'</a></span></p>'."\n";	else if ($pun_config['o_feed_type'] == '2')		echo "\t\t\t\t".'<p id="feedlinks"><span class="atom"><a href="extern.php?action=feed&amp;type=atom">'.$lang_common['Atom active topics feed'].'</a></span></p>'."\n";}else if ($footer_style == 'viewforum'){	if ($pun_config['o_feed_type'] == '1')		echo "\t\t\t\t".'<p id="feedlinks"><span class="rss"><a href="extern.php?action=feed&amp;fid='.$forum_id.'&amp;type=rss">'.$lang_common['RSS forum feed'].'</a></span></p>'."\n";	else if ($pun_config['o_feed_type'] == '2')		echo "\t\t\t\t".'<p id="feedlinks"><span class="atom"><a href="extern.php?action=feed&amp;fid='.$forum_id.'&amp;type=atom">'.$lang_common['Atom forum feed'].'</a></span></p>'."\n";}else if ($footer_style == 'viewtopic'){	if ($pun_config['o_feed_type'] == '1')		echo "\t\t\t\t".'<p id="feedlinks"><span class="rss"><a href="extern.php?action=feed&amp;tid='.$id.'&amp;type=rss">'.$lang_common['RSS topic feed'].'</a></span></p>'."\n";	else if ($pun_config['o_feed_type'] == '2')		echo "\t\t\t\t".'<p id="feedlinks"><span class="atom"><a href="extern.php?action=feed&amp;tid='.$id.'&amp;type=atom">'.$lang_common['Atom topic feed'].'</a></span></p>'."\n";}?>				<p id="poweredby"><?php printf($lang_common['Powered by'], '<a href="http://fluxbb.org/">FluxBB</a>'.(($pun_config['o_show_version'] == '1') ? ' '.$pun_config['o_cur_version'] : '')) ?></p>			</div>			<div class="clearer"></div>		</div>	</div></div><?php// Display debug info (if enabled/defined)if (defined('PUN_DEBUG')){	echo '<p id="debugtime">[ ';	// Calculate script generation time	$time_diff = sprintf('%.3f', get_microtime() - $pun_start);	echo sprintf($lang_common['Querytime'], $time_diff, $db->get_num_queries());	if (function_exists('memory_get_usage'))	{		echo ' - '.sprintf($lang_common['Memory usage'], file_size(memory_get_usage()));		if (function_exists('memory_get_peak_usage'))			echo ' '.sprintf($lang_common['Peak usage'], file_size(memory_get_peak_usage()));	}	echo ' ]</p>'."\n";}// End the transaction$db->end_transaction();// Display executed queries (if enabled)if (defined('PUN_SHOW_QUERIES'))	display_saved_queries();$tpl_temp = trim(ob_get_contents());$tpl_main = str_replace('<pun_footer>', $tpl_temp, $tpl_main);ob_end_clean();// END SUBST - <pun_footer>// Close the db connection (and free up any result data)$db->close();// Spit out the pageexit($tpl_main);
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Load the viewforum.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/forum.php';// Fetch some info about the forumif (!$pun_user['is_guest'])	$result = $db->query('SELECT f.forum_name, f.redirect_url, f.moderators, f.num_topics, f.sort_by, fp.post_topics, s.user_id AS is_subscribed FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_subscriptions AS s ON (f.id=s.forum_id AND s.user_id='.$pun_user['id'].') LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$id) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());else	$result = $db->query('SELECT f.forum_name, f.redirect_url, f.moderators, f.num_topics, f.sort_by, fp.post_topics, 0 AS is_subscribed FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$id) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_forum = $db->fetch_assoc($result);// Is this a redirect forum? In that case, redirect!if ($cur_forum['redirect_url'] != ''){	header('Location: '.$cur_forum['redirect_url']);	exit;}// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;switch ($cur_forum['sort_by']){	case 0:		$sort_by = 'last_post DESC';		break;	case 1:		$sort_by = 'posted DESC';		break;	case 2:		$sort_by = 'subject ASC';		break;	default:		$sort_by = 'last_post DESC';		break;}// Can we or can we not post new topics?if (($cur_forum['post_topics'] == '' && $pun_user['g_post_topics'] == '1') || $cur_forum['post_topics'] == '1' || $is_admmod)	$post_link = "\t\t\t".'<p class="postlink conr"><a href="post.php?fid='.$id.'">'.$lang_forum['Post topic'].'</a></p>'."\n";else	$post_link = '';// Get topic/forum tracking dataif (!$pun_user['is_guest'])	$tracked_topics = get_tracked_topics();// Determine the topic offset (based on $_GET['p'])$num_pages = ceil($cur_forum['num_topics'] / $pun_user['disp_topics']);$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);$start_from = $pun_user['disp_topics'] * ($p - 1);// Generate paging links$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'viewforum.php?id='.$id);if ($pun_config['o_feed_type'] == '1')	$page_head = array('feed' => '<link rel="alternate" type="application/rss+xml" href="extern.php?action=feed&amp;fid='.$id.'&amp;type=rss" title="'.$lang_common['RSS forum feed'].'" />');else if ($pun_config['o_feed_type'] == '2')	$page_head = array('feed' => '<link rel="alternate" type="application/atom+xml" href="extern.php?action=feed&amp;fid='.$id.'&amp;type=atom" title="'.$lang_common['Atom forum feed'].'" />');$forum_actions = array();if (!$pun_user['is_guest']){	if ($pun_config['o_forum_subscriptions'] == '1')	{		if ($cur_forum['is_subscribed'])			$forum_actions[] = '<span>'.$lang_forum['Is subscribed'].' - </span><a href="misc.php?action=unsubscribe&amp;fid='.$id.'">'.$lang_forum['Unsubscribe'].'</a>';		else			$forum_actions[] = '<a href="misc.php?action=subscribe&amp;fid='.$id.'">'.$lang_forum['Subscribe'].'</a>';	}	$forum_actions[] = '<a href="misc.php?action=markforumread&amp;fid='.$id.'">'.$lang_common['Mark forum read'].'</a>';}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), pun_htmlspecialchars($cur_forum['forum_name']));define('PUN_ALLOW_INDEX', 1);define('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><strong><a href="viewforum.php?id=<?php echo $id ?>"><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></a></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p><?php echo $post_link ?>		</div>		<div class="clearer"></div>	</div></div><div id="vf" class="blocktable">	<h2><span><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_common['Topic'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_common['Replies'] ?></th><?php if ($pun_config['o_topic_views'] == '1'): ?>					<th class="tc3" scope="col"><?php echo $lang_forum['Views'] ?></th><?php endif; ?>					<th class="tcr" scope="col"><?php echo $lang_common['Last post'] ?></th>				</tr>			</thead>			<tbody><?php// Retrieve a list of topic IDs, LIMIT is (really) expensive so we only fetch the IDs here then later fetch the remaining data$result = $db->query('SELECT id FROM '.$db->prefix.'topics WHERE forum_id='.$id.' ORDER BY sticky DESC, '.$sort_by.', id DESC LIMIT '.$start_from.', '.$pun_user['disp_topics']) or error('Unable to fetch topic IDs', __FILE__, __LINE__, $db->error());// If there are topics in this forumif ($db->num_rows($result)){	$topic_ids = array();	for ($i = 0;$cur_topic_id = $db->result($result, $i);$i++)		$topic_ids[] = $cur_topic_id;	if (empty($topic_ids))		error('The topic table and forum table seem to be out of sync!', __FILE__, __LINE__);	// Fetch list of topics to display on this page	if ($pun_user['is_guest'] || $pun_config['o_show_dot'] == '0')	{		// Without "the dot"		$sql = 'SELECT id, poster, subject, posted, last_post, last_post_id, last_poster, num_views, num_replies, closed, sticky, moved_to FROM '.$db->prefix.'topics WHERE id IN('.implode(',', $topic_ids).') ORDER BY sticky DESC, '.$sort_by.', id DESC';	}	else	{		// With "the dot"		$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.id IN('.implode(',', $topic_ids).') GROUP BY t.id'.($db_type == 'pgsql' ? ', t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, p.poster_id' : '').' ORDER BY t.sticky DESC, t.'.$sort_by.', t.id DESC';	}	$result = $db->query($sql) or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());	$topic_count = 0;	while ($cur_topic = $db->fetch_assoc($result))	{		++$topic_count;		$status_text = array();		$item_status = ($topic_count % 2 == 0) ? 'roweven' : 'rowodd';		$icon_type = 'icon';		if (is_null($cur_topic['moved_to']))			$last_post = '<a href="viewtopic.php?pid='.$cur_topic['last_post_id'].'#p'.$cur_topic['last_post_id'].'">'.format_time($cur_topic['last_post']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['last_poster']).'</span>';		else			$last_post = '- - -';		if ($pun_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		if ($cur_topic['sticky'] == '1')		{			$item_status .= ' isticky';			$status_text[] = '<span class="stickytext">'.$lang_forum['Sticky'].'</span>';		}		if ($cur_topic['moved_to'] != 0)		{			$subject = '<a href="viewtopic.php?id='.$cur_topic['moved_to'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';			$status_text[] = '<span class="movedtext">'.$lang_forum['Moved'].'</span>';			$item_status .= ' imoved';		}		else if ($cur_topic['closed'] == '0')			$subject = '<a href="viewtopic.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';		else		{			$subject = '<a href="viewtopic.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';			$status_text[] = '<span class="closedtext">'.$lang_forum['Closed'].'</span>';			$item_status .= ' iclosed';		}		if (!$pun_user['is_guest'] && $cur_topic['last_post'] > $pun_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$id]) || $tracked_topics['forums'][$id] < $cur_topic['last_post']) && is_null($cur_topic['moved_to']))		{			$item_status .= ' inew';			$icon_type = 'icon icon-new';			$subject = '<strong>'.$subject.'</strong>';			$subject_new_posts = '<span class="newtext">[ <a href="viewtopic.php?id='.$cur_topic['id'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a> ]</span>';		}		else			$subject_new_posts = null;		// Insert the status text before the subject		$subject = implode(' ', $status_text).' '.$subject;		// Should we display the dot or not? :)		if (!$pun_user['is_guest'] && $pun_config['o_show_dot'] == '1')		{			if ($cur_topic['has_posted'] == $pun_user['id'])			{				$subject = '<strong class="ipost">&#160;</strong>'.$subject;				$item_status .= ' iposted';			}		}		$num_pages_topic = ceil(($cur_topic['num_replies'] + 1) / $pun_user['disp_posts']);		if ($num_pages_topic > 1)			$subject_multipage = '<span class="pagestext">[ '.paginate($num_pages_topic, -1, 'viewtopic.php?id='.$cur_topic['id']).' ]</span>';		else			$subject_multipage = null;		// Should we show the "New posts" and/or the multipage links?		if (!empty($subject_new_posts) || !empty($subject_multipage))		{			$subject .= !empty($subject_new_posts) ? ' '.$subject_new_posts : '';			$subject .= !empty($subject_multipage) ? ' '.$subject_multipage : '';		}?>				<tr class="<?php echo $item_status ?>">					<td class="tcl">						<div class="<?php echo $icon_type ?>"><div class="nosize"><?php echo forum_number_format($topic_count + $start_from) ?></div></div>						<div class="tclcon">							<div>								<?php echo $subject."\n" ?>							</div>						</div>					</td>					<td class="tc2"><?php echo (is_null($cur_topic['moved_to'])) ? forum_number_format($cur_topic['num_replies']) : '-' ?></td><?php if ($pun_config['o_topic_views'] == '1'): ?>					<td class="tc3"><?php echo (is_null($cur_topic['moved_to'])) ? forum_number_format($cur_topic['num_views']) : '-' ?></td><?php endif; ?>					<td class="tcr"><?php echo $last_post ?></td>				</tr><?php	}}else{	$colspan = ($pun_config['o_topic_views'] == '1') ? 4 : 3;?>				<tr class="rowodd inone">					<td class="tcl" colspan="<?php echo $colspan ?>">						<div class="icon inone"><div class="nosize"><!-- --></div></div>						<div class="tclcon">							<div>								<strong><?php echo $lang_forum['Empty forum'] ?></strong>							</div>						</div>					</td>				</tr><?php}?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p><?php echo $post_link ?>		</div>		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><strong><a href="viewforum.php?id=<?php echo $id ?>"><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></a></strong></li>		</ul><?php echo (!empty($forum_actions) ? "\t\t".'<p class="subscribelink clearb">'.implode(' - ', $forum_actions).'</p>'."\n" : '') ?>		<div class="clearer"></div>	</div></div><?php$forum_id = $id;$footer_style = 'viewforum';require PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// The contents of this file are very much inspired by the file search.php// from the phpBB Group forum software phpBB2 (http://www.phpbb.com)define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// Load the search.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/search.php';require PUN_ROOT.'lang/'.$pun_user['language'].'/forum.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');else if ($pun_user['g_search'] == '0')	message($lang_search['No search permission'], false, '403 Forbidden');require PUN_ROOT.'include/search_idx.php';// Figure out what to do :-)if (isset($_GET['action']) || isset($_GET['search_id'])){	$action = (isset($_GET['action'])) ? $_GET['action'] : null;	$forums = isset($_GET['forums']) ? (is_array($_GET['forums']) ? $_GET['forums'] : array_filter(explode(',', $_GET['forums']))) : (isset($_GET['forum']) ? array($_GET['forum']) : array());	$sort_dir = (isset($_GET['sort_dir']) && $_GET['sort_dir'] == 'DESC') ? 'DESC' : 'ASC';	$forums = array_map('intval', $forums);	// Allow the old action names for backwards compatibility reasons	if ($action == 'show_user')		$action = 'show_user_posts';	else if ($action == 'show_24h')		$action = 'show_recent';	// If a search_id was supplied	if (isset($_GET['search_id']))	{		$search_id = intval($_GET['search_id']);		if ($search_id < 1)			message($lang_common['Bad request'], false, '404 Not Found');	}	// If it's a regular search (keywords and/or author)	else if ($action == 'search')	{		$keywords = (isset($_GET['keywords'])) ? utf8_strtolower(pun_trim($_GET['keywords'])) : null;		$author = (isset($_GET['author'])) ? utf8_strtolower(pun_trim($_GET['author'])) : null;		if (preg_match('%^[\*\%]+$%', $keywords) || (pun_strlen(str_replace(array('*', '%'), '', $keywords)) < PUN_SEARCH_MIN_WORD && !is_cjk($keywords)))			$keywords = '';		if (preg_match('%^[\*\%]+$%', $author) || pun_strlen(str_replace(array('*', '%'), '', $author)) < 2)			$author = '';		if (!$keywords && !$author)			message($lang_search['No terms']);		if ($author)			$author = str_replace('*', '%', $author);		$show_as = (isset($_GET['show_as']) && $_GET['show_as'] == 'topics') ? 'topics' : 'posts';		$sort_by = (isset($_GET['sort_by'])) ? intval($_GET['sort_by']) : 0;		$search_in = (!isset($_GET['search_in']) || $_GET['search_in'] == '0') ? 0 : (($_GET['search_in'] == '1') ? 1 : -1);	}	// If it's a user search (by ID)	else if ($action == 'show_user_posts' || $action == 'show_user_topics' || $action == 'show_subscriptions')	{		$user_id = (isset($_GET['user_id'])) ? intval($_GET['user_id']) : $pun_user['id'];		if ($user_id < 2)			message($lang_common['Bad request'], false, '404 Not Found');		// Subscribed topics can only be viewed by admins, moderators and the users themselves		if ($action == 'show_subscriptions' && !$pun_user['is_admmod'] && $user_id != $pun_user['id'])			message($lang_common['No permission'], false, '403 Forbidden');	}	else if ($action == 'show_recent')		$interval = isset($_GET['value']) ? intval($_GET['value']) : 86400;	else if ($action == 'show_replies')	{		if ($pun_user['is_guest'])			message($lang_common['Bad request']);	}	else if ($action != 'show_new' && $action != 'show_unanswered')		message($lang_common['Bad request']);	// If a valid search_id was supplied we attempt to fetch the search results from the db	if (isset($search_id))	{		$ident = ($pun_user['is_guest']) ? get_remote_address() : $pun_user['username'];		$result = $db->query('SELECT search_data FROM '.$db->prefix.'search_cache WHERE id='.$search_id.' AND ident=\''.$db->escape($ident).'\'') or error('Unable to fetch search results', __FILE__, __LINE__, $db->error());		if ($row = $db->fetch_assoc($result))		{			$temp = unserialize($row['search_data']);			$search_ids = unserialize($temp['search_ids']);			$num_hits = $temp['num_hits'];			$sort_by = $temp['sort_by'];			$sort_dir = $temp['sort_dir'];			$show_as = $temp['show_as'];			$search_type = $temp['search_type'];			unset($temp);		}		else			message($lang_search['No hits']);	}	else	{		$keyword_results = $author_results = array();		// Search a specific forum?		$forum_sql = (!empty($forums) || (empty($forums) && $pun_config['o_search_all_forums'] == '0' && !$pun_user['is_admmod'])) ? ' AND t.forum_id IN ('.implode(',', $forums).')' : '';		if (!empty($author) || !empty($keywords))		{			// Flood protection			if ($pun_user['last_search'] && (time() - $pun_user['last_search']) < $pun_user['g_search_flood'] && (time() - $pun_user['last_search']) >= 0)				message(sprintf($lang_search['Search flood'], $pun_user['g_search_flood'], $pun_user['g_search_flood'] - (time() - $pun_user['last_search'])));			if (!$pun_user['is_guest'])				$db->query('UPDATE '.$db->prefix.'users SET last_search='.time().' WHERE id='.$pun_user['id']) or error('Unable to update user', __FILE__, __LINE__, $db->error());			else				$db->query('UPDATE '.$db->prefix.'online SET last_search='.time().' WHERE ident=\''.$db->escape(get_remote_address()).'\'' ) or error('Unable to update user', __FILE__, __LINE__, $db->error());			switch ($sort_by)			{				case 1:					$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';					$sort_type = SORT_STRING;					break;				case 2:					$sort_by_sql = 't.subject';					$sort_type = SORT_STRING;					break;				case 3:					$sort_by_sql = 't.forum_id';					$sort_type = SORT_NUMERIC;					break;				case 4:					$sort_by_sql = 't.last_post';					$sort_type = SORT_NUMERIC;					break;				default:					$sort_by_sql = ($show_as == 'topics') ? 't.last_post' : 'p.posted';					$sort_type = SORT_NUMERIC;					break;			}			// If it's a search for keywords			if ($keywords)			{				// split the keywords into words				$keywords_array = split_words($keywords, false);				if (empty($keywords_array))					message($lang_search['No hits']);				// Should we search in message body or topic subject specifically?				$search_in_cond = ($search_in) ? (($search_in > 0) ? ' AND m.subject_match = 0' : ' AND m.subject_match = 1') : '';				$word_count = 0;				$match_type = 'and';				$sort_data = array();				foreach ($keywords_array as $cur_word)				{					switch ($cur_word)					{						case 'and':						case 'or':						case 'not':							$match_type = $cur_word;							break;						default:						{							if (is_cjk($cur_word))							{								$where_cond = str_replace('*', '%', $cur_word);								$where_cond = ($search_in ? (($search_in > 0) ? 'p.message LIKE \'%'.$db->escape($where_cond).'%\'' : 't.subject LIKE \'%'.$db->escape($where_cond).'%\'') : 'p.message LIKE \'%'.$db->escape($where_cond).'%\' OR t.subject LIKE \'%'.$db->escape($where_cond).'%\'');								$result = $db->query('SELECT p.id AS post_id, p.topic_id, '.$sort_by_sql.' AS sort_by FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE ('.$where_cond.') AND (fp.read_forum IS NULL OR fp.read_forum=1)'.$forum_sql, true) or error('Unable to search for posts', __FILE__, __LINE__, $db->error());							}							else								$result = $db->query('SELECT m.post_id, p.topic_id, '.$sort_by_sql.' AS sort_by FROM '.$db->prefix.'search_words AS w INNER JOIN '.$db->prefix.'search_matches AS m ON m.word_id = w.id INNER JOIN '.$db->prefix.'posts AS p ON p.id=m.post_id INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE w.word LIKE \''.$db->escape(str_replace('*', '%', $cur_word)).'\''.$search_in_cond.' AND (fp.read_forum IS NULL OR fp.read_forum=1)'.$forum_sql, true) or error('Unable to search for posts', __FILE__, __LINE__, $db->error());							$row = array();							while ($temp = $db->fetch_assoc($result))							{								$row[$temp['post_id']] = $temp['topic_id'];								if (!$word_count)								{									$keyword_results[$temp['post_id']] = $temp['topic_id'];									$sort_data[$temp['post_id']] = $temp['sort_by'];								}								else if ($match_type == 'or')								{									$keyword_results[$temp['post_id']] = $temp['topic_id'];									$sort_data[$temp['post_id']] = $temp['sort_by'];								}								else if ($match_type == 'not')								{									unset($keyword_results[$temp['post_id']]);									unset($sort_data[$temp['post_id']]);								}							}							if ($match_type == 'and' && $word_count)							{								foreach ($keyword_results as $post_id => $topic_id)								{									if (!isset($row[$post_id]))									{										unset($keyword_results[$post_id]);										unset($sort_data[$post_id]);									}								}							}							++$word_count;							$db->free_result($result);							break;						}					}				}				// Sort the results - annoyingly array_multisort re-indexes arrays with numeric keys, so we need to split the keys out into a separate array then combine them again after				$post_ids = array_keys($keyword_results);				$topic_ids = array_values($keyword_results);				array_multisort(array_values($sort_data), $sort_dir == 'DESC' ? SORT_DESC : SORT_ASC, $sort_type, $post_ids, $topic_ids);				// combine the arrays back into a key=>value array (array_combine is PHP5 only unfortunately)				$num_results = count($keyword_results);				$keyword_results = array();				for ($i = 0;$i < $num_results;$i++)					$keyword_results[$post_ids[$i]] = $topic_ids[$i];				unset($sort_data, $post_ids, $topic_ids);			}			// If it's a search for author name (and that author name isn't Guest)			if ($author && $author != 'guest' && $author != utf8_strtolower($lang_common['Guest']))			{				switch ($db_type)				{					case 'pgsql':						$result = $db->query('SELECT id FROM '.$db->prefix.'users WHERE username ILIKE \''.$db->escape($author).'\'') or error('Unable to fetch users', __FILE__, __LINE__, $db->error());						break;					default:						$result = $db->query('SELECT id FROM '.$db->prefix.'users WHERE username LIKE \''.$db->escape($author).'\'') or error('Unable to fetch users', __FILE__, __LINE__, $db->error());						break;				}				if ($db->num_rows($result))				{					$user_ids = array();					while ($row = $db->fetch_row($result))						$user_ids[] = $row[0];					$result = $db->query('SELECT p.id AS post_id, p.topic_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id IN('.implode(',', $user_ids).')'.$forum_sql.' ORDER BY '.$sort_by_sql.' '.$sort_dir) or error('Unable to fetch matched posts list', __FILE__, __LINE__, $db->error());					while ($temp = $db->fetch_assoc($result))						$author_results[$temp['post_id']] = $temp['topic_id'];					$db->free_result($result);				}			}			// If we searched for both keywords and author name we want the intersection between the results			if ($author && $keywords)			{				$search_ids = array_intersect_assoc($keyword_results, $author_results);				$search_type = array('both', array($keywords, pun_trim($_GET['author'])), implode(',', $forums), $search_in);			}			else if ($keywords)			{				$search_ids = $keyword_results;				$search_type = array('keywords', $keywords, implode(',', $forums), $search_in);			}			else			{				$search_ids = $author_results;				$search_type = array('author', pun_trim($_GET['author']), implode(',', $forums), $search_in);			}			unset($keyword_results, $author_results);			if ($show_as == 'topics')				$search_ids = array_values($search_ids);			else				$search_ids = array_keys($search_ids);			$search_ids = array_unique($search_ids);			$num_hits = count($search_ids);			if (!$num_hits)				message($lang_search['No hits']);		}		else if ($action == 'show_new' || $action == 'show_recent' || $action == 'show_replies' || $action == 'show_user_posts' || $action == 'show_user_topics' || $action == 'show_subscriptions' || $action == 'show_unanswered')		{			$search_type = array('action', $action);			$show_as = 'topics';			// We want to sort things after last post			$sort_by = 0;			$sort_dir = 'DESC';			// If it's a search for new posts since last visit			if ($action == 'show_new')			{				if ($pun_user['is_guest'])					message($lang_common['No permission'], false, '403 Forbidden');				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.$pun_user['last_visit'].' AND t.moved_to IS NULL'.(isset($_GET['fid']) ? ' AND t.forum_id='.intval($_GET['fid']) : '').' ORDER BY t.last_post DESC') or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No new posts']);			}			// If it's a search for recent posts (in a certain time interval)			else if ($action == 'show_recent')			{				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.last_post>'.(time() - $interval).' AND t.moved_to IS NULL'.(isset($_GET['fid']) ? ' AND t.forum_id='.intval($_GET['fid']) : '').' ORDER BY t.last_post DESC') or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No recent posts']);			}			// If it's a search for topics in which the user has posted			else if ($action == 'show_replies')			{				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$pun_user['id'].' GROUP BY t.id'.($db_type == 'pgsql' ? ', t.last_post' : '').' ORDER BY t.last_post DESC') or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No user posts']);			}			// If it's a search for posts by a specific user ID			else if ($action == 'show_user_posts')			{				$show_as = 'posts';				$result = $db->query('SELECT p.id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON p.topic_id=t.id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$user_id.' ORDER BY p.posted DESC') or error('Unable to fetch user posts', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No user posts']);				// Pass on the user ID so that we can later know whose posts we're searching for				$search_type[2] = $user_id;			}			// If it's a search for topics by a specific user ID			else if ($action == 'show_user_topics')			{				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'posts AS p ON t.first_post_id=p.id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.poster_id='.$user_id.' ORDER BY t.last_post DESC') or error('Unable to fetch user topics', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No user topics']);				// Pass on the user ID so that we can later know whose topics we're searching for				$search_type[2] = $user_id;			}			// If it's a search for subscribed topics			else if ($action == 'show_subscriptions')			{				if ($pun_user['is_guest'])					message($lang_common['Bad request']);				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'topic_subscriptions AS s ON (t.id=s.topic_id AND s.user_id='.$user_id.') LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) ORDER BY t.last_post DESC') or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No subscriptions']);				// Pass on user ID so that we can later know whose subscriptions we're searching for				$search_type[2] = $user_id;			}			// If it's a search for unanswered posts			else			{				$result = $db->query('SELECT t.id FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=t.forum_id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.num_replies=0 AND t.moved_to IS NULL ORDER BY t.last_post DESC') or error('Unable to fetch topic list', __FILE__, __LINE__, $db->error());				$num_hits = $db->num_rows($result);				if (!$num_hits)					message($lang_search['No unanswered']);			}			$search_ids = array();			while ($row = $db->fetch_row($result))				$search_ids[] = $row[0];			$db->free_result($result);		}		else			message($lang_common['Bad request']);		// Prune "old" search results		$old_searches = array();		$result = $db->query('SELECT ident FROM '.$db->prefix.'online') or error('Unable to fetch online list', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))		{			while ($row = $db->fetch_row($result))				$old_searches[] = '\''.$db->escape($row[0]).'\'';			$db->query('DELETE FROM '.$db->prefix.'search_cache WHERE ident NOT IN('.implode(',', $old_searches).')') or error('Unable to delete search results', __FILE__, __LINE__, $db->error());		}		// Fill an array with our results and search properties		$temp = serialize(array(			'search_ids'		=> serialize($search_ids),			'num_hits'			=> $num_hits,			'sort_by'			=> $sort_by,			'sort_dir'			=> $sort_dir,			'show_as'			=> $show_as,			'search_type'		=> $search_type		));		$search_id = mt_rand(1, 2147483647);		$ident = ($pun_user['is_guest']) ? get_remote_address() : $pun_user['username'];		$db->query('INSERT INTO '.$db->prefix.'search_cache (id, ident, search_data) VALUES('.$search_id.', \''.$db->escape($ident).'\', \''.$db->escape($temp).'\')') or error('Unable to insert search results', __FILE__, __LINE__, $db->error());		if ($search_type[0] != 'action')		{			$db->end_transaction();			$db->close();			// Redirect the user to the cached result page			header('Location: search.php?search_id='.$search_id);			exit;		}	}	$forum_actions = array();	// If we're on the new posts search, display a "mark all as read" link	if (!$pun_user['is_guest'] && $search_type[0] == 'action' && $search_type[1] == 'show_new')		$forum_actions[] = '<a href="misc.php?action=markread">'.$lang_common['Mark all as read'].'</a>';	// Fetch results to display	if (!empty($search_ids))	{		switch ($sort_by)		{			case 1:				$sort_by_sql = ($show_as == 'topics') ? 't.poster' : 'p.poster';				break;			case 2:				$sort_by_sql = 't.subject';				break;			case 3:				$sort_by_sql = 't.forum_id';				break;			default:				$sort_by_sql = ($show_as == 'topics') ? 't.last_post' : 'p.posted';				break;		}		// Determine the topic or post offset (based on $_GET['p'])		$per_page = ($show_as == 'posts') ? $pun_user['disp_posts'] : $pun_user['disp_topics'];		$num_pages = ceil($num_hits / $per_page);		$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);		$start_from = $per_page * ($p - 1);		// Generate paging links		$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'search.php?search_id='.$search_id);		// throw away the first $start_from of $search_ids, only keep the top $per_page of $search_ids		$search_ids = array_slice($search_ids, $start_from, $per_page);		// Run the query and fetch the results		if ($show_as == 'posts')			$result = $db->query('SELECT p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, p.message, p.hide_smilies, t.id AS tid, t.poster, t.subject, t.first_post_id, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id, f.forum_name FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id WHERE p.id IN('.implode(',', $search_ids).') ORDER BY '.$sort_by_sql.' '.$sort_dir) or error('Unable to fetch search results', __FILE__, __LINE__, $db->error());		else			$result = $db->query('SELECT t.id AS tid, t.poster, t.subject, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.sticky, t.forum_id, f.forum_name FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id WHERE t.id IN('.implode(',', $search_ids).') ORDER BY '.$sort_by_sql.' '.$sort_dir) or error('Unable to fetch search results', __FILE__, __LINE__, $db->error());		$search_set = array();		while ($row = $db->fetch_assoc($result))			$search_set[] = $row;		$crumbs_text = array();		$crumbs_text['show_as'] = $lang_search['Search'];		if ($search_type[0] == 'action')		{			if ($search_type[1] == 'show_user_topics')				$crumbs_text['search_type'] = '<a href="search.php?action=show_user_topics&amp;user_id='.$search_type[2].'">'.sprintf($lang_search['Quick search show_user_topics'], pun_htmlspecialchars($search_set[0]['poster'])).'</a>';			else if ($search_type[1] == 'show_user_posts')				$crumbs_text['search_type'] = '<a href="search.php?action=show_user_posts&amp;user_id='.$search_type[2].'">'.sprintf($lang_search['Quick search show_user_posts'], pun_htmlspecialchars($search_set[0]['pposter'])).'</a>';			else if ($search_type[1] == 'show_subscriptions')			{				// Fetch username of subscriber				$subscriber_id = $search_type[2];				$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE id='.$subscriber_id) or error('Unable to fetch username of subscriber', __FILE__, __LINE__, $db->error());				if ($db->num_rows($result))					$subscriber_name = $db->result($result);				else					message($lang_common['Bad request'], false, '404 Not Found');				$crumbs_text['search_type'] = '<a href="search.php?action=show_subscriptions&amp;user_id='.$subscriber_id.'">'.sprintf($lang_search['Quick search show_subscriptions'], pun_htmlspecialchars($subscriber_name)).'</a>';			}			else				$crumbs_text['search_type'] = '<a href="search.php?action='.$search_type[1].'">'.$lang_search['Quick search '.$search_type[1]].'</a>';		}		else		{			$keywords = $author = '';			if ($search_type[0] == 'both')			{				list ($keywords, $author) = $search_type[1];				$crumbs_text['search_type'] = sprintf($lang_search['By both show as '.$show_as], pun_htmlspecialchars($keywords), pun_htmlspecialchars($author));			}			else if ($search_type[0] == 'keywords')			{				$keywords = $search_type[1];				$crumbs_text['search_type'] = sprintf($lang_search['By keywords show as '.$show_as], pun_htmlspecialchars($keywords));			}			else if ($search_type[0] == 'author')			{				$author = $search_type[1];				$crumbs_text['search_type'] = sprintf($lang_search['By user show as '.$show_as], pun_htmlspecialchars($author));			}			$crumbs_text['search_type'] = '<a href="search.php?action=search&amp;keywords='.urlencode($keywords).'&amp;author='.urlencode($author).'&amp;forums='.$search_type[2].'&amp;search_in='.$search_type[3].'&amp;sort_by='.$sort_by.'&amp;sort_dir='.$sort_dir.'&amp;show_as='.$show_as.'">'.$crumbs_text['search_type'].'</a>';		}		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_search['Search results']);		define('PUN_ACTIVE_PAGE', 'search');		require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="search.php"><?php echo $crumbs_text['show_as'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $crumbs_text['search_type'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><?php		if ($show_as == 'topics')		{			$topic_count = 0;?><div id="vf" class="blocktable">	<h2><span><?php echo $lang_search['Search results'] ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_common['Topic'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_common['Forum'] ?></th>					<th class="tc3" scope="col"><?php echo $lang_common['Replies'] ?></th>					<th class="tcr" scope="col"><?php echo $lang_common['Last post'] ?></th>				</tr>			</thead>			<tbody><?php		}		else if ($show_as == 'posts')		{			require PUN_ROOT.'lang/'.$pun_user['language'].'/topic.php';			require PUN_ROOT.'include/parser.php';			$post_count = 0;		}		// Get topic/forum tracking data		if (!$pun_user['is_guest'])			$tracked_topics = get_tracked_topics();		foreach ($search_set as $cur_search)		{			$forum = '<a href="viewforum.php?id='.$cur_search['forum_id'].'">'.pun_htmlspecialchars($cur_search['forum_name']).'</a>';			if ($pun_config['o_censoring'] == '1')				$cur_search['subject'] = censor_words($cur_search['subject']);			if ($show_as == 'posts')			{				++$post_count;				$icon_type = 'icon';				if (!$pun_user['is_guest'] && $cur_search['last_post'] > $pun_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_search['tid']]) || $tracked_topics['topics'][$cur_search['tid']] < $cur_search['last_post']) && (!isset($tracked_topics['forums'][$cur_search['forum_id']]) || $tracked_topics['forums'][$cur_search['forum_id']] < $cur_search['last_post']))				{					$item_status = 'inew';					$icon_type = 'icon icon-new';					$icon_text = $lang_topic['New icon'];				}				else				{					$item_status = '';					$icon_text = '<!-- -->';				}				if ($pun_config['o_censoring'] == '1')					$cur_search['message'] = censor_words($cur_search['message']);				$message = parse_message($cur_search['message'], $cur_search['hide_smilies']);				$pposter = pun_htmlspecialchars($cur_search['pposter']);				if ($cur_search['poster_id'] > 1)				{					if ($pun_user['g_view_users'] == '1')						$pposter = '<strong><a href="profile.php?id='.$cur_search['poster_id'].'">'.$pposter.'</a></strong>';					else						$pposter = '<strong>'.$pposter.'</strong>';				}?><div class="blockpost<?php echo ($post_count % 2 == 0) ? ' roweven' : ' rowodd' ?><?php if ($cur_search['pid'] == $cur_search['first_post_id']) echo ' firstpost' ?><?php if ($post_count == 1) echo ' blockpost1' ?><?php if ($item_status != '') echo ' '.$item_status ?>">	<h2><span><span class="conr">#<?php echo ($start_from + $post_count) ?></span> <span><?php if ($cur_search['pid'] != $cur_search['first_post_id']) echo $lang_topic['Re'].' ' ?><?php echo $forum ?></span> <span>&#160;<a href="viewtopic.php?id=<?php echo $cur_search['tid'] ?>"><?php echo pun_htmlspecialchars($cur_search['subject']) ?></a></span> <span>&#160;<a href="viewtopic.php?pid=<?php echo $cur_search['pid'].'#p'.$cur_search['pid'] ?>"><?php echo format_time($cur_search['pposted']) ?></a></span></span></h2>	<div class="box">		<div class="inbox">			<div class="postbody">				<div class="postleft">					<dl>						<dt><?php echo $pposter ?></dt><?php if ($cur_search['pid'] == $cur_search['first_post_id']) : ?>						<dd><span><?php echo $lang_topic['Replies'].' '.forum_number_format($cur_search['num_replies']) ?></span></dd><?php endif; ?>						<dd><div class="<?php echo $icon_type ?>"><div class="nosize"><?php echo $icon_text ?></div></div></dd>					</dl>				</div>				<div class="postright">					<div class="postmsg">						<?php echo $message."\n" ?>					</div>				</div>				<div class="clearer"></div>			</div>		</div>		<div class="inbox">			<div class="postfoot clearb">				<div class="postfootright">					<ul>						<li><span><a href="viewtopic.php?id=<?php echo $cur_search['tid'] ?>"><?php echo $lang_search['Go to topic'] ?></a></span></li>						<li><span><a href="viewtopic.php?pid=<?php echo $cur_search['pid'].'#p'.$cur_search['pid'] ?>"><?php echo $lang_search['Go to post'] ?></a></span></li>					</ul>				</div>			</div>		</div>	</div></div><?php			}			else			{				++$topic_count;				$status_text = array();				$item_status = ($topic_count % 2 == 0) ? 'roweven' : 'rowodd';				$icon_type = 'icon';				$subject = '<a href="viewtopic.php?id='.$cur_search['tid'].'">'.pun_htmlspecialchars($cur_search['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_search['poster']).'</span>';				if ($cur_search['sticky'] == '1')				{					$item_status .= ' isticky';					$status_text[] = '<span class="stickytext">'.$lang_forum['Sticky'].'</span>';				}				if ($cur_search['closed'] != '0')				{					$status_text[] = '<span class="closedtext">'.$lang_forum['Closed'].'</span>';					$item_status .= ' iclosed';				}				if (!$pun_user['is_guest'] && $cur_search['last_post'] > $pun_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_search['tid']]) || $tracked_topics['topics'][$cur_search['tid']] < $cur_search['last_post']) && (!isset($tracked_topics['forums'][$cur_search['forum_id']]) || $tracked_topics['forums'][$cur_search['forum_id']] < $cur_search['last_post']))				{					$item_status .= ' inew';					$icon_type = 'icon icon-new';					$subject = '<strong>'.$subject.'</strong>';					$subject_new_posts = '<span class="newtext">[ <a href="viewtopic.php?id='.$cur_search['tid'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a> ]</span>';				}				else					$subject_new_posts = null;				// Insert the status text before the subject				$subject = implode(' ', $status_text).' '.$subject;				$num_pages_topic = ceil(($cur_search['num_replies'] + 1) / $pun_user['disp_posts']);				if ($num_pages_topic > 1)					$subject_multipage = '<span class="pagestext">[ '.paginate($num_pages_topic, -1, 'viewtopic.php?id='.$cur_search['tid']).' ]</span>';				else					$subject_multipage = null;				// Should we show the "New posts" and/or the multipage links?				if (!empty($subject_new_posts) || !empty($subject_multipage))				{					$subject .= !empty($subject_new_posts) ? ' '.$subject_new_posts : '';					$subject .= !empty($subject_multipage) ? ' '.$subject_multipage : '';				}?>				<tr class="<?php echo $item_status ?>">					<td class="tcl">						<div class="<?php echo $icon_type ?>"><div class="nosize"><?php echo forum_number_format($topic_count + $start_from) ?></div></div>						<div class="tclcon">							<div>								<?php echo $subject."\n" ?>							</div>						</div>					</td>					<td class="tc2"><?php echo $forum ?></td>					<td class="tc3"><?php echo forum_number_format($cur_search['num_replies']) ?></td>					<td class="tcr"><?php echo '<a href="viewtopic.php?pid='.$cur_search['last_post_id'].'#p'.$cur_search['last_post_id'].'">'.format_time($cur_search['last_post']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_search['last_poster']) ?></span></td>				</tr><?php			}		}		if ($show_as == 'topics')			echo "\t\t\t".'</tbody>'."\n\t\t\t".'</table>'."\n\t\t".'</div>'."\n\t".'</div>'."\n".'</div>'."\n\n";?><div class="<?php echo ($show_as == 'topics') ? 'linksb' : 'postlinksb'; ?>">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink"><?php echo $paging_links ?></p>		</div>		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="search.php"><?php echo $crumbs_text['show_as'] ?></a></li>			<li><span>&#160;</span><strong><?php echo $crumbs_text['search_type'] ?></strong></li>		</ul><?php echo (!empty($forum_actions) ? "\t\t".'<p class="subscribelink clearb">'.implode(' - ', $forum_actions).'</p>'."\n" : '') ?>		<div class="clearer"></div>	</div></div><?php		require PUN_ROOT.'footer.php';	}	else		message($lang_search['No hits']);}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_search['Search']);$focus_element = array('search', 'keywords');define('PUN_ACTIVE_PAGE', 'search');require PUN_ROOT.'header.php';?><div id="searchform" class="blockform">	<h2><span><?php echo $lang_search['Search'] ?></span></h2>	<div class="box">		<form id="search" method="get" action="search.php">			<div class="inform">				<fieldset>					<legend><?php echo $lang_search['Search criteria legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="action" value="search" />						<label class="conl"><?php echo $lang_search['Keyword search'] ?><br /><input type="text" name="keywords" size="40" maxlength="100" /><br /></label>						<label class="conl"><?php echo $lang_search['Author search'] ?><br /><input id="author" type="text" name="author" size="25" maxlength="25" /><br /></label>						<p class="clearb"><?php echo $lang_search['Search info'] ?></p>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_search['Search in legend'] ?></legend>					<div class="infldset"><?php$result = $db->query('SELECT c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.redirect_url FROM '.$db->prefix.'categories AS c INNER JOIN '.$db->prefix.'forums AS f ON c.id=f.cat_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.redirect_url IS NULL ORDER BY c.disp_position, c.id, f.disp_position', true) or error('Unable to fetch category/forum list', __FILE__, __LINE__, $db->error());// We either show a list of forums of which multiple can be selectedif ($pun_config['o_search_all_forums'] == '1' || $pun_user['is_admmod']){	echo "\t\t\t\t\t\t".'<div class="conl multiselect">'.$lang_search['Forum search']."\n";	echo "\t\t\t\t\t\t".'<br />'."\n";	echo "\t\t\t\t\t\t".'<div class="checklist">'."\n";	$cur_category = 0;	while ($cur_forum = $db->fetch_assoc($result))	{		if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?		{			if ($cur_category)			{				echo "\t\t\t\t\t\t\t\t".'</div>'."\n";				echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";			}						echo "\t\t\t\t\t\t\t".'<fieldset><legend><span>'.pun_htmlspecialchars($cur_forum['cat_name']).'</span></legend>'."\n";			echo "\t\t\t\t\t\t\t\t".'<div class="rbox">';			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<label><input type="checkbox" name="forums[]" id="forum-'.$cur_forum['fid'].'" value="'.$cur_forum['fid'].'" />'.pun_htmlspecialchars($cur_forum['forum_name']).'</label>'."\n";	}	if ($cur_category)	{		echo "\t\t\t\t\t\t\t\t".'</div>'."\n";		echo "\t\t\t\t\t\t\t".'</fieldset>'."\n";	}		echo "\t\t\t\t\t\t".'</div>'."\n";	echo "\t\t\t\t\t\t".'</div>'."\n";}// ... or a simple select list for one forum onlyelse{	echo "\t\t\t\t\t\t".'<label class="conl">'.$lang_search['Forum search']."\n";	echo "\t\t\t\t\t\t".'<br />'."\n";	echo "\t\t\t\t\t\t".'<select id="forum" name="forum">'."\n";	$cur_category = 0;	while ($cur_forum = $db->fetch_assoc($result))	{		if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t\t\t\t".'<optgroup label="'.pun_htmlspecialchars($cur_forum['cat_name']).'">'."\n";			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.pun_htmlspecialchars($cur_forum['forum_name']).'</option>'."\n";	}	echo "\t\t\t\t\t\t\t".'</optgroup>'."\n";	echo "\t\t\t\t\t\t".'</select>'."\n";	echo "\t\t\t\t\t\t".'<br /></label>'."\n";}?>						<label class="conl"><?php echo $lang_search['Search in']."\n" ?>						<br /><select id="search_in" name="search_in">							<option value="0"><?php echo $lang_search['Message and subject'] ?></option>							<option value="1"><?php echo $lang_search['Message only'] ?></option>							<option value="-1"><?php echo $lang_search['Topic only'] ?></option>						</select>						<br /></label>						<p class="clearl"><?php echo $lang_search['Search in info'] ?></p><?php echo ($pun_config['o_search_all_forums'] == '1' || $pun_user['is_admmod'] ? '<p>'.$lang_search['Search multiple forums info'].'</p>' : '') ?>					</div>				</fieldset>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_search['Search results legend'] ?></legend>					<div class="infldset">						<label class="conl"><?php echo $lang_search['Sort by']."\n" ?>						<br /><select name="sort_by">							<option value="0"><?php echo $lang_search['Sort by post time'] ?></option>							<option value="1"><?php echo $lang_search['Sort by author'] ?></option>							<option value="2"><?php echo $lang_search['Sort by subject'] ?></option>							<option value="3"><?php echo $lang_search['Sort by forum'] ?></option>						</select>						<br /></label>						<label class="conl"><?php echo $lang_search['Sort order']."\n" ?>						<br /><select name="sort_dir">							<option value="DESC"><?php echo $lang_search['Descending'] ?></option>							<option value="ASC"><?php echo $lang_search['Ascending'] ?></option>						</select>						<br /></label>						<label class="conl"><?php echo $lang_search['Show as']."\n" ?>						<br /><select name="show_as">							<option value="topics"><?php echo $lang_search['Show as topics'] ?></option>							<option value="posts"><?php echo $lang_search['Show as posts'] ?></option>						</select>						<br /></label>						<p class="clearb"><?php echo $lang_search['Search results info'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="search" value="<?php echo $lang_common['Submit'] ?>" accesskey="s" /></p>		</form>	</div></div><?phprequire PUN_ROOT.'footer.php';
