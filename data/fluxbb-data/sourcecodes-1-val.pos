<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */// Tell header.php to use the admin templatedefine('PUN_ADMIN_CONSOLE', 1);define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';require PUN_ROOT.'include/common_admin.php';if ($pun_user['g_id'] != PUN_ADMIN)	message($lang_common['No permission'], false, '403 Forbidden');// Load the admin_censoring.php language filerequire PUN_ROOT.'lang/'.$admin_language.'/admin_groups.php';// Fetch all groups$result = $db->query('SELECT * FROM '.$db->prefix.'groups ORDER BY g_id') or error('Unable to fetch user groups', __FILE__, __LINE__, $db->error());$groups = array();while ($cur_group = $db->fetch_assoc($result))	$groups[$cur_group['g_id']] = $cur_group;// Add/edit a group (stage 1)if (isset($_POST['add_group']) || isset($_GET['edit_group'])){	if (isset($_POST['add_group']))	{		$base_group = intval($_POST['base_group']);		$group = $groups[$base_group];		$mode = 'add';	}	else // We are editing a group	{		$group_id = intval($_GET['edit_group']);		if ($group_id < 1 || !isset($groups[$group_id]))			message($lang_common['Bad request']);		$group = $groups[$group_id];		$mode = 'edit';	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);	$required_fields = array('req_title' => $lang_admin_groups['Group title label']);	$focus_element = array('groups2', 'req_title');	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Group settings head'] ?></span></h2>		<div class="box">			<form id="groups2" method="post" action="admin_groups.php" onsubmit="return process_form(this)">				<p class="submittop"><input type="submit" name="add_edit_group" value="<?php echo $lang_admin_common['Save'] ?>" /></p>				<div class="inform">					<input type="hidden" name="mode" value="<?php echo $mode ?>" /><?php if ($mode == 'edit'): ?>					<input type="hidden" name="group_id" value="<?php echo $group_id ?>" /><?php endif; ?><?php if ($mode == 'add'): ?>					<input type="hidden" name="base_group" value="<?php echo $base_group ?>" /><?php endif; ?>					<fieldset>						<legend><?php echo $lang_admin_groups['Group settings subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_groups['Group settings info'] ?></p>							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['Group title label'] ?></th>									<td>										<input type="text" name="req_title" size="25" maxlength="50" value="<?php if ($mode == 'edit') echo pun_htmlspecialchars($group['g_title']); ?>" tabindex="1" />									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User title label'] ?></th>									<td>										<input type="text" name="user_title" size="25" maxlength="50" value="<?php echo pun_htmlspecialchars($group['g_user_title']) ?>" tabindex="2" />										<span><?php printf($lang_admin_groups['User title help'], ($group['g_id'] != PUN_GUEST ? $lang_common['Member'] : $lang_common['Guest'])) ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_ADMIN): if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Promote users label'] ?></th>									<td>										<select name="promote_next_group" tabindex="3">											<option value="0"><?php echo $lang_admin_groups['Disable promotion'] ?></option><?phpforeach ($groups as $cur_group){	if (($cur_group['g_id'] != $group['g_id'] || $mode == 'add') && $cur_group['g_id'] != PUN_ADMIN && $cur_group['g_id'] != PUN_GUEST)	{		if ($cur_group['g_id'] == $group['g_promote_next_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<input type="text" name="promote_min_posts" size="5" maxlength="10" value="<?php echo pun_htmlspecialchars($group['g_promote_min_posts']) ?>" tabindex="4" />										<span><?php printf($lang_admin_groups['Promote users help'], $lang_admin_groups['Disable promotion']) ?></span>									</td>								</tr><?php if ($mode != 'edit' || $pun_config['o_default_user_group'] != $group['g_id']): ?>								<tr>									<th scope="row"> <?php echo $lang_admin_groups['Mod privileges label'] ?></th>									<td>										<label class="conl"><input type="radio" name="moderator" value="1"<?php if ($group['g_moderator'] == '1') echo ' checked="checked"' ?> tabindex="5" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="moderator" value="0"<?php if ($group['g_moderator'] == '0') echo ' checked="checked"' ?> tabindex="6" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Mod privileges help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Edit profile label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_edit_users" value="1"<?php if ($group['g_mod_edit_users'] == '1') echo ' checked="checked"' ?> tabindex="7" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_edit_users" value="0"<?php if ($group['g_mod_edit_users'] == '0') echo ' checked="checked"' ?> tabindex="8" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Edit profile help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Rename users label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_rename_users" value="1"<?php if ($group['g_mod_rename_users'] == '1') echo ' checked="checked"' ?> tabindex="9" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_rename_users" value="0"<?php if ($group['g_mod_rename_users'] == '0') echo ' checked="checked"' ?> tabindex="10" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Rename users help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Change passwords label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_change_passwords" value="1"<?php if ($group['g_mod_change_passwords'] == '1') echo ' checked="checked"' ?> tabindex="11" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_change_passwords" value="0"<?php if ($group['g_mod_change_passwords'] == '0') echo ' checked="checked"' ?> tabindex="12" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Change passwords help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Ban users label'] ?></th>									<td>										<label class="conl"><input type="radio" name="mod_ban_users" value="1"<?php if ($group['g_mod_ban_users'] == '1') echo ' checked="checked"' ?> tabindex="13" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="mod_ban_users" value="0"<?php if ($group['g_mod_ban_users'] == '0') echo ' checked="checked"' ?> tabindex="14" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Ban users help'] ?></span>									</td>								</tr><?php endif; endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Read board label'] ?></th>									<td>										<label class="conl"><input type="radio" name="read_board" value="1"<?php if ($group['g_read_board'] == '1') echo ' checked="checked"' ?> tabindex="15" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="read_board" value="0"<?php if ($group['g_read_board'] == '0') echo ' checked="checked"' ?> tabindex="16" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Read board help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['View user info label'] ?></th>									<td>										<label class="conl"><input type="radio" name="view_users" value="1"<?php if ($group['g_view_users'] == '1') echo ' checked="checked"' ?> tabindex="17" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="view_users" value="0"<?php if ($group['g_view_users'] == '0') echo ' checked="checked"' ?> tabindex="18" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['View user info help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post replies label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_replies" value="1"<?php if ($group['g_post_replies'] == '1') echo ' checked="checked"' ?> tabindex="19" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_replies" value="0"<?php if ($group['g_post_replies'] == '0') echo ' checked="checked"' ?> tabindex="20" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post replies help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post topics label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_topics" value="1"<?php if ($group['g_post_topics'] == '1') echo ' checked="checked"' ?> tabindex="21" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_topics" value="0"<?php if ($group['g_post_topics'] == '0') echo ' checked="checked"' ?> tabindex="22" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post topics help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Edit posts label'] ?></th>									<td>										<label class="conl"><input type="radio" name="edit_posts" value="1"<?php if ($group['g_edit_posts'] == '1') echo ' checked="checked"' ?> tabindex="23" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="edit_posts" value="0"<?php if ($group['g_edit_posts'] == '0') echo ' checked="checked"' ?> tabindex="24" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Edit posts help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Delete posts label'] ?></th>									<td>										<label class="conl"><input type="radio" name="delete_posts" value="1"<?php if ($group['g_delete_posts'] == '1') echo ' checked="checked"' ?> tabindex="25" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="delete_posts" value="0"<?php if ($group['g_delete_posts'] == '0') echo ' checked="checked"' ?> tabindex="26" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Delete posts help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Delete topics label'] ?></th>									<td>										<label class="conl"><input type="radio" name="delete_topics" value="1"<?php if ($group['g_delete_topics'] == '1') echo ' checked="checked"' ?> tabindex="27" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="delete_topics" value="0"<?php if ($group['g_delete_topics'] == '0') echo ' checked="checked"' ?> tabindex="28" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Delete topics help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post links label'] ?></th>									<td>										<label class="conl"><input type="radio" name="post_links" value="1"<?php if ($group['g_post_links'] == '1') echo ' checked="checked"' ?> tabindex="29" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="post_links" value="0"<?php if ($group['g_post_links'] == '0') echo ' checked="checked"' ?> tabindex="30" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Post links help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Set own title label'] ?></th>									<td>										<label class="conl"><input type="radio" name="set_title" value="1"<?php if ($group['g_set_title'] == '1') echo ' checked="checked"' ?> tabindex="31" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="set_title" value="0"<?php if ($group['g_set_title'] == '0') echo ' checked="checked"' ?> tabindex="32" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Set own title help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User search label'] ?></th>									<td>										<label class="conl"><input type="radio" name="search" value="1"<?php if ($group['g_search'] == '1') echo ' checked="checked"' ?> tabindex="33" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="search" value="0"<?php if ($group['g_search'] == '0') echo ' checked="checked"' ?> tabindex="34" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['User search help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['User list search label'] ?></th>									<td>										<label class="conl"><input type="radio" name="search_users" value="1"<?php if ($group['g_search_users'] == '1') echo ' checked="checked"' ?> tabindex="35" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="search_users" value="0"<?php if ($group['g_search_users'] == '0') echo ' checked="checked"' ?> tabindex="36" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['User list search help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Send e-mails label'] ?></th>									<td>										<label class="conl"><input type="radio" name="send_email" value="1"<?php if ($group['g_send_email'] == '1') echo ' checked="checked"' ?> tabindex="37" />&#160;<strong><?php echo $lang_admin_common['Yes'] ?></strong></label>										<label class="conl"><input type="radio" name="send_email" value="0"<?php if ($group['g_send_email'] == '0') echo ' checked="checked"' ?> tabindex="38" />&#160;<strong><?php echo $lang_admin_common['No'] ?></strong></label>										<span class="clearb"><?php echo $lang_admin_groups['Send e-mails help'] ?></span>									</td>								</tr><?php endif; ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Post flood label'] ?></th>									<td>										<input type="text" name="post_flood" size="5" maxlength="4" value="<?php echo $group['g_post_flood'] ?>" tabindex="39" />										<span><?php echo $lang_admin_groups['Post flood help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Search flood label'] ?></th>									<td>										<input type="text" name="search_flood" size="5" maxlength="4" value="<?php echo $group['g_search_flood'] ?>" tabindex="40" />										<span><?php echo $lang_admin_groups['Search flood help'] ?></span>									</td>								</tr><?php if ($group['g_id'] != PUN_GUEST): ?>								<tr>									<th scope="row"><?php echo $lang_admin_groups['E-mail flood label'] ?></th>									<td>										<input type="text" name="email_flood" size="5" maxlength="4" value="<?php echo $group['g_email_flood'] ?>" tabindex="41" />										<span><?php echo $lang_admin_groups['E-mail flood help'] ?></span>									</td>								</tr>								<tr>									<th scope="row"><?php echo $lang_admin_groups['Report flood label'] ?></th>									<td>										<input type="text" name="report_flood" size="5" maxlength="4" value="<?php echo $group['g_report_flood'] ?>" tabindex="42" />										<span><?php echo $lang_admin_groups['Report flood help'] ?></span>									</td>								</tr><?php endif; endif; ?>							</table><?php if ($group['g_moderator'] == '1' ): ?>							<p class="warntext"><?php echo $lang_admin_groups['Moderator info'] ?></p><?php endif; ?>						</div>					</fieldset>				</div>				<p class="submitend"><input type="submit" name="add_edit_group" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="43" /></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}// Add/edit a group (stage 2)else if (isset($_POST['add_edit_group'])){	confirm_referrer('admin_groups.php');	// Is this the admin group? (special rules apply)	$is_admin_group = (isset($_POST['group_id']) && $_POST['group_id'] == PUN_ADMIN) ? true : false;	$title = pun_trim($_POST['req_title']);	$user_title = pun_trim($_POST['user_title']);	$promote_min_posts = isset($_POST['promote_min_posts']) ? intval($_POST['promote_min_posts']) : '0';	if (isset($_POST['promote_next_group']) &&			isset($groups[$_POST['promote_next_group']]) &&			!in_array($_POST['promote_next_group'], array(PUN_ADMIN, PUN_GUEST)) &&			(!isset($_POST['group_id']) || $_POST['promote_next_group'] != $_POST['group_id']))		$promote_next_group = $_POST['promote_next_group'];	else		$promote_next_group = '0';	$moderator = isset($_POST['moderator']) && $_POST['moderator'] == '1' ? '1' : '0';	$mod_edit_users = $moderator == '1' && isset($_POST['mod_edit_users']) && $_POST['mod_edit_users'] == '1' ? '1' : '0';	$mod_rename_users = $moderator == '1' && isset($_POST['mod_rename_users']) && $_POST['mod_rename_users'] == '1' ? '1' : '0';	$mod_change_passwords = $moderator == '1' && isset($_POST['mod_change_passwords']) && $_POST['mod_change_passwords'] == '1' ? '1' : '0';	$mod_ban_users = $moderator == '1' && isset($_POST['mod_ban_users']) && $_POST['mod_ban_users'] == '1' ? '1' : '0';	$read_board = isset($_POST['read_board']) ? intval($_POST['read_board']) : '1';	$view_users = (isset($_POST['view_users']) && $_POST['view_users'] == '1') || $is_admin_group ? '1' : '0';	$post_replies = isset($_POST['post_replies']) ? intval($_POST['post_replies']) : '1';	$post_topics = isset($_POST['post_topics']) ? intval($_POST['post_topics']) : '1';	$edit_posts = isset($_POST['edit_posts']) ? intval($_POST['edit_posts']) : ($is_admin_group) ? '1' : '0';	$delete_posts = isset($_POST['delete_posts']) ? intval($_POST['delete_posts']) : ($is_admin_group) ? '1' : '0';	$delete_topics = isset($_POST['delete_topics']) ? intval($_POST['delete_topics']) : ($is_admin_group) ? '1' : '0';	$post_links = isset($_POST['post_links']) ? intval($_POST['post_links']) : '1';	$set_title = isset($_POST['set_title']) ? intval($_POST['set_title']) : ($is_admin_group) ? '1' : '0';	$search = isset($_POST['search']) ? intval($_POST['search']) : '1';	$search_users = isset($_POST['search_users']) ? intval($_POST['search_users']) : '1';	$send_email = (isset($_POST['send_email']) && $_POST['send_email'] == '1') || $is_admin_group ? '1' : '0';	$post_flood = (isset($_POST['post_flood']) && $_POST['post_flood'] >= 0) ? intval($_POST['post_flood']) : '0';	$search_flood = (isset($_POST['search_flood']) && $_POST['search_flood'] >= 0) ? intval($_POST['search_flood']) : '0';	$email_flood = (isset($_POST['email_flood']) && $_POST['email_flood'] >= 0) ? intval($_POST['email_flood']) : '0';	$report_flood = (isset($_POST['report_flood']) && $_POST['report_flood'] >= 0) ? intval($_POST['report_flood']) : '0';	if ($title == '')		message($lang_admin_groups['Must enter title message']);	$user_title = ($user_title != '') ? '\''.$db->escape($user_title).'\'' : 'NULL';	if ($_POST['mode'] == 'add')	{		$result = $db->query('SELECT 1 FROM '.$db->prefix.'groups WHERE g_title=\''.$db->escape($title).'\'') or error('Unable to check group title collision', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message(sprintf($lang_admin_groups['Title already exists message'], pun_htmlspecialchars($title)));		$db->query('INSERT INTO '.$db->prefix.'groups (g_title, g_user_title, g_promote_min_posts, g_promote_next_group, g_moderator, g_mod_edit_users, g_mod_rename_users, g_mod_change_passwords, g_mod_ban_users, g_read_board, g_view_users, g_post_replies, g_post_topics, g_edit_posts, g_delete_posts, g_delete_topics, g_post_links, g_set_title, g_search, g_search_users, g_send_email, g_post_flood, g_search_flood, g_email_flood, g_report_flood) VALUES(\''.$db->escape($title).'\', '.$user_title.', '.$promote_min_posts.', '.$promote_next_group.', '.$moderator.', '.$mod_edit_users.', '.$mod_rename_users.', '.$mod_change_passwords.', '.$mod_ban_users.', '.$read_board.', '.$view_users.', '.$post_replies.', '.$post_topics.', '.$edit_posts.', '.$delete_posts.', '.$delete_topics.', '.$post_links.', '.$set_title.', '.$search.', '.$search_users.', '.$send_email.', '.$post_flood.', '.$search_flood.', '.$email_flood.', '.$report_flood.')') or error('Unable to add group', __FILE__, __LINE__, $db->error());		$new_group_id = $db->insert_id();		// Now lets copy the forum specific permissions from the group which this group is based on		$result = $db->query('SELECT forum_id, read_forum, post_replies, post_topics FROM '.$db->prefix.'forum_perms WHERE group_id='.intval($_POST['base_group'])) or error('Unable to fetch group forum permission list', __FILE__, __LINE__, $db->error());		while ($cur_forum_perm = $db->fetch_assoc($result))			$db->query('INSERT INTO '.$db->prefix.'forum_perms (group_id, forum_id, read_forum, post_replies, post_topics) VALUES('.$new_group_id.', '.$cur_forum_perm['forum_id'].', '.$cur_forum_perm['read_forum'].', '.$cur_forum_perm['post_replies'].', '.$cur_forum_perm['post_topics'].')') or error('Unable to insert group forum permissions', __FILE__, __LINE__, $db->error());	}	else	{		$result = $db->query('SELECT 1 FROM '.$db->prefix.'groups WHERE g_title=\''.$db->escape($title).'\' AND g_id!='.intval($_POST['group_id'])) or error('Unable to check group title collision', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))			message(sprintf($lang_admin_groups['Title already exists message'], pun_htmlspecialchars($title)));		$db->query('UPDATE '.$db->prefix.'groups SET g_title=\''.$db->escape($title).'\', g_user_title='.$user_title.', g_promote_min_posts='.$promote_min_posts.', g_promote_next_group='.$promote_next_group.', g_moderator='.$moderator.', g_mod_edit_users='.$mod_edit_users.', g_mod_rename_users='.$mod_rename_users.', g_mod_change_passwords='.$mod_change_passwords.', g_mod_ban_users='.$mod_ban_users.', g_read_board='.$read_board.', g_view_users='.$view_users.', g_post_replies='.$post_replies.', g_post_topics='.$post_topics.', g_edit_posts='.$edit_posts.', g_delete_posts='.$delete_posts.', g_delete_topics='.$delete_topics.', g_post_links='.$post_links.', g_set_title='.$set_title.', g_search='.$search.', g_search_users='.$search_users.', g_send_email='.$send_email.', g_post_flood='.$post_flood.', g_search_flood='.$search_flood.', g_email_flood='.$email_flood.', g_report_flood='.$report_flood.' WHERE g_id='.intval($_POST['group_id'])) or error('Unable to update group', __FILE__, __LINE__, $db->error());	}	// Regenerate the quick jump cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	$group_id = $_POST['mode'] == 'add' ? $new_group_id : intval($_POST['group_id']);	generate_quickjump_cache($group_id);	if ($_POST['mode'] == 'edit')		redirect('admin_groups.php', $lang_admin_groups['Group edited redirect']);	else		redirect('admin_groups.php', $lang_admin_groups['Group added redirect']);}// Set default groupelse if (isset($_POST['set_default_group'])){	confirm_referrer('admin_groups.php');	$group_id = intval($_POST['default_group']);	// Make sure it's not the admin or guest groups	if ($group_id == PUN_ADMIN || $group_id == PUN_GUEST)		message($lang_common['Bad request']);	// Make sure it's not a moderator group	if ($groups[$group_id]['g_moderator'] != 0)		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'config SET conf_value='.$group_id.' WHERE conf_name=\'o_default_user_group\'') or error('Unable to update board config', __FILE__, __LINE__, $db->error());	// Regenerate the config cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_config_cache();	redirect('admin_groups.php', $lang_admin_groups['Default group redirect']);}// Remove a groupelse if (isset($_GET['del_group'])){	confirm_referrer('admin_groups.php');	$group_id = isset($_POST['group_to_delete']) ? intval($_POST['group_to_delete']) : intval($_GET['del_group']);	if ($group_id < 5)		message($lang_common['Bad request']);	// Make sure we don't remove the default group	if ($group_id == $pun_config['o_default_user_group'])		message($lang_admin_groups['Cannot remove default message']);	// Check if this group has any members	$result = $db->query('SELECT g.g_title, COUNT(u.id) FROM '.$db->prefix.'groups AS g INNER JOIN '.$db->prefix.'users AS u ON g.g_id=u.group_id WHERE g.g_id='.$group_id.' GROUP BY g.g_id, g_title') or error('Unable to fetch group info', __FILE__, __LINE__, $db->error());	// If the group doesn't have any members or if we've already selected a group to move the members to	if (!$db->num_rows($result) || isset($_POST['del_group']))	{		if (isset($_POST['del_group_comply']) || isset($_POST['del_group']))		{			if (isset($_POST['del_group']))			{				$move_to_group = intval($_POST['move_to_group']);				$db->query('UPDATE '.$db->prefix.'users SET group_id='.$move_to_group.' WHERE group_id='.$group_id) or error('Unable to move users into group', __FILE__, __LINE__, $db->error());			}			// Delete the group and any forum specific permissions			$db->query('DELETE FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to delete group', __FILE__, __LINE__, $db->error());			$db->query('DELETE FROM '.$db->prefix.'forum_perms WHERE group_id='.$group_id) or error('Unable to delete group forum permissions', __FILE__, __LINE__, $db->error());			// Don't let users be promoted to this group			$db->query('UPDATE '.$db->prefix.'groups SET g_promote_next_group=0 WHERE g_promote_next_group='.$group_id) or error('Unable to remove group as promotion target', __FILE__, __LINE__, $db->error());			redirect('admin_groups.php', $lang_admin_groups['Group removed redirect']);		}		else		{			$result = $db->query('SELECT g_title FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group title', __FILE__, __LINE__, $db->error());			$group_title = $db->result($result);			$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);			define('PUN_ACTIVE_PAGE', 'admin');			require PUN_ROOT.'header.php';			generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Group delete head'] ?></span></h2>		<div class="box">			<form method="post" action="admin_groups.php?del_group=<?php echo $group_id ?>">				<div class="inform">				<input type="hidden" name="group_to_delete" value="<?php echo $group_id ?>" />					<fieldset>						<legend><?php echo $lang_admin_groups['Confirm delete subhead'] ?></legend>						<div class="infldset">							<p><?php printf($lang_admin_groups['Confirm delete info'], pun_htmlspecialchars($group_title)) ?></p>							<p class="warntext"><?php echo $lang_admin_groups['Confirm delete warn'] ?></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="del_group_comply" value="<?php echo $lang_admin_common['Delete'] ?>" tabindex="1" /><a href="javascript:history.go(-1)" tabindex="2"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php			require PUN_ROOT.'footer.php';		}	}	list($group_title, $group_members) = $db->fetch_row($result);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);	define('PUN_ACTIVE_PAGE', 'admin');	require PUN_ROOT.'header.php';	generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Delete group head'] ?></span></h2>		<div class="box">			<form id="groups" method="post" action="admin_groups.php?del_group=<?php echo $group_id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Move users subhead'] ?></legend>						<div class="infldset">							<p><?php printf($lang_admin_groups['Move users info'], pun_htmlspecialchars($group_title), forum_number_format($group_members)) ?></p>							<label><?php echo $lang_admin_groups['Move users label'] ?>							<select name="move_to_group"><?php	$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id!='.PUN_GUEST.' AND g_id!='.$group_id.' ORDER BY g_title') or error('Unable to fetch user group list', __FILE__, __LINE__, $db->error());	while ($cur_group = $db->fetch_assoc($result))	{		if ($cur_group['g_id'] == PUN_MEMBER) // Pre-select the pre-defined Members group			echo "\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}?>							</select>							<br /></label>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="del_group" value="<?php echo $lang_admin_groups['Delete group'] ?>" /><a href="javascript:history.go(-1)"><?php echo $lang_admin_common['Go back'] ?></a></p>			</form>		</div>	</div>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_admin_common['Admin'], $lang_admin_common['User groups']);define('PUN_ACTIVE_PAGE', 'admin');require PUN_ROOT.'header.php';generate_admin_menu('groups');?>	<div class="blockform">		<h2><span><?php echo $lang_admin_groups['Add groups head'] ?></span></h2>		<div class="box">			<form id="groups" method="post" action="admin_groups.php">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Add group subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['New group label'] ?><div><input type="submit" name="add_group" value="<?php echo $lang_admin_common['Add'] ?>" tabindex="2" /></div></th>									<td>										<select id="base_group" name="base_group" tabindex="1"><?phpforeach ($groups as $cur_group){	if ($cur_group['g_id'] != PUN_ADMIN && $cur_group['g_id'] != PUN_GUEST)	{		if ($cur_group['g_id'] == $pun_config['o_default_user_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<span><?php echo $lang_admin_groups['New group help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Default group subhead'] ?></legend>						<div class="infldset">							<table class="aligntop" cellspacing="0">								<tr>									<th scope="row"><?php echo $lang_admin_groups['Default group label'] ?><div><input type="submit" name="set_default_group" value="<?php echo $lang_admin_common['Save'] ?>" tabindex="4" /></div></th>									<td>										<select id="default_group" name="default_group" tabindex="3"><?phpforeach ($groups as $cur_group){	if ($cur_group['g_id'] > PUN_GUEST && $cur_group['g_moderator'] == 0)	{		if ($cur_group['g_id'] == $pun_config['o_default_user_group'])			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";		else			echo "\t\t\t\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";	}}?>										</select>										<span><?php echo $lang_admin_groups['Default group help'] ?></span>									</td>								</tr>							</table>						</div>					</fieldset>				</div>			</form>		</div>		<h2 class="block2"><span><?php echo $lang_admin_groups['Existing groups head'] ?></span></h2>		<div class="box">			<div class="fakeform">				<div class="inform">					<fieldset>						<legend><?php echo $lang_admin_groups['Edit groups subhead'] ?></legend>						<div class="infldset">							<p><?php echo $lang_admin_groups['Edit groups info'] ?></p>							<table cellspacing="0"><?php$cur_index = 5;foreach ($groups as $cur_group)	echo "\t\t\t\t\t\t\t\t".'<tr><th scope="row"><a href="admin_groups.php?edit_group='.$cur_group['g_id'].'" tabindex="'.$cur_index++.'">'.$lang_admin_groups['Edit link'].'</a>'.(($cur_group['g_id'] > PUN_MEMBER) ? ' | <a href="admin_groups.php?del_group='.$cur_group['g_id'].'" tabindex="'.$cur_index++.'">'.$lang_admin_groups['Delete link'].'</a>' : '').'</th><td>'.pun_htmlspecialchars($cur_group['g_title']).'</td></tr>'."\n";?>							</table>						</div>					</fieldset>				</div>			</div>		</div>	</div>	<div class="clearer"></div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// Include UTF-8 functionrequire PUN_ROOT.'include/utf8/substr_replace.php';require PUN_ROOT.'include/utf8/ucwords.php'; // utf8_ucwords needs utf8_substr_replacerequire PUN_ROOT.'include/utf8/strcasecmp.php';$action = isset($_GET['action']) ? $_GET['action'] : null;$section = isset($_GET['section']) ? $_GET['section'] : null;$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 2)	message($lang_common['Bad request'], false, '404 Not Found');if ($action != 'change_pass' || !isset($_GET['key'])){	if ($pun_user['g_read_board'] == '0')		message($lang_common['No view'], false, '403 Forbidden');	else if ($pun_user['g_view_users'] == '0' && ($pun_user['is_guest'] || $pun_user['id'] != $id))		message($lang_common['No permission'], false, '403 Forbidden');}// Load the prof_reg.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/prof_reg.php';// Load the profile.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/profile.php';if ($action == 'change_pass'){	if (isset($_GET['key']))	{		// If the user is already logged in we shouldn't be here :)		if (!$pun_user['is_guest'])		{			header('Location: index.php');			exit;		}		$key = $_GET['key'];		$result = $db->query('SELECT * FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch new password', __FILE__, __LINE__, $db->error());		$cur_user = $db->fetch_assoc($result);		if ($key == '' || $key != $cur_user['activate_key'])			message($lang_profile['Pass key bad'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');		else		{			$db->query('UPDATE '.$db->prefix.'users SET password=\''.$cur_user['activate_string'].'\', activate_string=NULL, activate_key=NULL'.(!empty($cur_user['salt']) ? ', salt=NULL' : '').' WHERE id='.$id) or error('Unable to update password', __FILE__, __LINE__, $db->error());			message($lang_profile['Pass updated'], true);		}	}	// Make sure we are allowed to change this user's password	if ($pun_user['id'] != $id)	{		if (!$pun_user['is_admmod']) // A regular user trying to change another user's password?			message($lang_common['No permission'], false, '403 Forbidden');		else if ($pun_user['g_moderator'] == '1') // A moderator trying to change a user's password?		{			$result = $db->query('SELECT u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if (!$db->num_rows($result))				message($lang_common['Bad request'], false, '404 Not Found');			list($group_id, $is_moderator) = $db->fetch_row($result);			if ($pun_user['g_mod_edit_users'] == '0' || $pun_user['g_mod_change_passwords'] == '0' || $group_id == PUN_ADMIN || $is_moderator == '1')				message($lang_common['No permission'], false, '403 Forbidden');		}	}	if (isset($_POST['form_sent']))	{		if ($pun_user['is_admmod'])			confirm_referrer('profile.php');		$old_password = isset($_POST['req_old_password']) ? pun_trim($_POST['req_old_password']) : '';		$new_password1 = pun_trim($_POST['req_new_password1']);		$new_password2 = pun_trim($_POST['req_new_password2']);		if ($new_password1 != $new_password2)			message($lang_prof_reg['Pass not match']);		if (pun_strlen($new_password1) < 4)			message($lang_prof_reg['Pass too short']);		$result = $db->query('SELECT * FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch password', __FILE__, __LINE__, $db->error());		$cur_user = $db->fetch_assoc($result);		$authorized = false;		if (!empty($cur_user['password']))		{			$old_password_hash = pun_hash($old_password);			if ($cur_user['password'] == $old_password_hash || $pun_user['is_admmod'])				$authorized = true;		}		if (!$authorized)			message($lang_profile['Wrong pass']);		$new_password_hash = pun_hash($new_password1);		$db->query('UPDATE '.$db->prefix.'users SET password=\''.$new_password_hash.'\''.(!empty($cur_user['salt']) ? ', salt=NULL' : '').' WHERE id='.$id) or error('Unable to update password', __FILE__, __LINE__, $db->error());		if ($pun_user['id'] == $id)			pun_setcookie($pun_user['id'], $new_password_hash, time() + $pun_config['o_timeout_visit']);		redirect('profile.php?section=essentials&amp;id='.$id, $lang_profile['Pass updated redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Change pass']);	$required_fields = array('req_old_password' => $lang_profile['Old pass'], 'req_new_password1' => $lang_profile['New pass'], 'req_new_password2' => $lang_profile['Confirm new pass']);	$focus_element = array('change_pass', ((!$pun_user['is_admmod']) ? 'req_old_password' : 'req_new_password1'));	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Change pass'] ?></span></h2>	<div class="box">		<form id="change_pass" method="post" action="profile.php?action=change_pass&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<input type="hidden" name="form_sent" value="1" />				<fieldset>					<legend><?php echo $lang_profile['Change pass legend'] ?></legend>					<div class="infldset"><?php if (!$pun_user['is_admmod']): ?>						<label class="required"><strong><?php echo $lang_profile['Old pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_old_password" size="16" /><br /></label><?php endif; ?>						<label class="conl required"><strong><?php echo $lang_profile['New pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_new_password1" size="16" /><br /></label>						<label class="conl required"><strong><?php echo $lang_profile['Confirm new pass'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input type="password" name="req_new_password2" size="16" /><br /></label>						<p class="clearb"><?php echo $lang_profile['Pass info'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'change_email'){	// Make sure we are allowed to change this user's email	if ($pun_user['id'] != $id)	{		if (!$pun_user['is_admmod']) // A regular user trying to change another user's email?			message($lang_common['No permission'], false, '403 Forbidden');		else if ($pun_user['g_moderator'] == '1') // A moderator trying to change a user's email?		{			$result = $db->query('SELECT u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u INNER JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());			if (!$db->num_rows($result))				message($lang_common['Bad request'], false, '404 Not Found');			list($group_id, $is_moderator) = $db->fetch_row($result);			if ($pun_user['g_mod_edit_users'] == '0' || $group_id == PUN_ADMIN || $is_moderator == '1')				message($lang_common['No permission'], false, '403 Forbidden');		}	}	if (isset($_GET['key']))	{		$key = $_GET['key'];		$result = $db->query('SELECT activate_string, activate_key FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch activation data', __FILE__, __LINE__, $db->error());		list($new_email, $new_email_key) = $db->fetch_row($result);		if ($key == '' || $key != $new_email_key)			message($lang_profile['Email key bad'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');		else		{			$db->query('UPDATE '.$db->prefix.'users SET email=activate_string, activate_string=NULL, activate_key=NULL WHERE id='.$id) or error('Unable to update email address', __FILE__, __LINE__, $db->error());			message($lang_profile['Email updated'], true);		}	}	else if (isset($_POST['form_sent']))	{		if (pun_hash($_POST['req_password']) !== $pun_user['password'])			message($lang_profile['Wrong pass']);		require PUN_ROOT.'include/email.php';		// Validate the email address		$new_email = strtolower(pun_trim($_POST['req_new_email']));		if (!is_valid_email($new_email))			message($lang_common['Invalid email']);		// Check if it's a banned email address		if (is_banned_email($new_email))		{			if ($pun_config['p_allow_banned_email'] == '0')				message($lang_prof_reg['Banned email']);			else if ($pun_config['o_mailing_list'] != '')			{				// Load the "banned email change" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/banned_email_change.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);				$mail_message = str_replace('<email>', $new_email, $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$id, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		// Check if someone else already has registered with that email address		$result = $db->query('SELECT id, username FROM '.$db->prefix.'users WHERE email=\''.$db->escape($new_email).'\'') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result))		{			if ($pun_config['p_allow_dupe_email'] == '0')				message($lang_prof_reg['Dupe email']);			else if ($pun_config['o_mailing_list'] != '')			{				while ($cur_dupe = $db->fetch_assoc($result))					$dupe_list[] = $cur_dupe['username'];				// Load the "dupe email change" template				$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/dupe_email_change.tpl'));				// The first row contains the subject				$first_crlf = strpos($mail_tpl, "\n");				$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));				$mail_message = trim(substr($mail_tpl, $first_crlf));				$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);				$mail_message = str_replace('<dupe_list>', implode(', ', $dupe_list), $mail_message);				$mail_message = str_replace('<profile_url>', get_base_url().'/profile.php?id='.$id, $mail_message);				$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);				pun_mail($pun_config['o_mailing_list'], $mail_subject, $mail_message);			}		}		$new_email_key = random_pass(8);		$db->query('UPDATE '.$db->prefix.'users SET activate_string=\''.$db->escape($new_email).'\', activate_key=\''.$new_email_key.'\' WHERE id='.$id) or error('Unable to update activation data', __FILE__, __LINE__, $db->error());		// Load the "activate email" template		$mail_tpl = trim(file_get_contents(PUN_ROOT.'lang/'.$pun_user['language'].'/mail_templates/activate_email.tpl'));		// The first row contains the subject		$first_crlf = strpos($mail_tpl, "\n");		$mail_subject = trim(substr($mail_tpl, 8, $first_crlf-8));		$mail_message = trim(substr($mail_tpl, $first_crlf));		$mail_message = str_replace('<username>', $pun_user['username'], $mail_message);		$mail_message = str_replace('<base_url>', get_base_url(), $mail_message);		$mail_message = str_replace('<activation_url>', get_base_url().'/profile.php?action=change_email&id='.$id.'&key='.$new_email_key, $mail_message);		$mail_message = str_replace('<board_mailer>', $pun_config['o_board_title'], $mail_message);		pun_mail($new_email, $mail_subject, $mail_message);		message($lang_profile['Activate email sent'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.', true);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Change email']);	$required_fields = array('req_new_email' => $lang_profile['New email'], 'req_password' => $lang_common['Password']);	$focus_element = array('change_email', 'req_new_email');	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Change email'] ?></span></h2>	<div class="box">		<form id="change_email" method="post" action="profile.php?action=change_email&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Email legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<label class="required"><strong><?php echo $lang_profile['New email'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="text" name="req_new_email" size="50" maxlength="80" /><br /></label>						<label class="required"><strong><?php echo $lang_common['Password'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="password" name="req_password" size="16" /><br /></label>						<p><?php echo $lang_profile['Email instructions'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="new_email" value="<?php echo $lang_common['Submit'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'upload_avatar' || $action == 'upload_avatar2'){	if ($pun_config['o_avatars'] == '0')		message($lang_profile['Avatars disabled']);	if ($pun_user['id'] != $id && !$pun_user['is_admmod'])		message($lang_common['No permission'], false, '403 Forbidden');	if (isset($_POST['form_sent']))	{		if (!isset($_FILES['req_file']))			message($lang_profile['No file']);		$uploaded_file = $_FILES['req_file'];		// Make sure the upload went smooth		if (isset($uploaded_file['error']))		{			switch ($uploaded_file['error'])			{				case 1: // UPLOAD_ERR_INI_SIZE				case 2: // UPLOAD_ERR_FORM_SIZE					message($lang_profile['Too large ini']);					break;				case 3: // UPLOAD_ERR_PARTIAL					message($lang_profile['Partial upload']);					break;				case 4: // UPLOAD_ERR_NO_FILE					message($lang_profile['No file']);					break;				case 6: // UPLOAD_ERR_NO_TMP_DIR					message($lang_profile['No tmp directory']);					break;				default:					// No error occured, but was something actually uploaded?					if ($uploaded_file['size'] == 0)						message($lang_profile['No file']);					break;			}		}		if (is_uploaded_file($uploaded_file['tmp_name']))		{			// Preliminary file check, adequate in most cases			$allowed_types = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');			if (!in_array($uploaded_file['type'], $allowed_types))				message($lang_profile['Bad type']);			// Make sure the file isn't too big			if ($uploaded_file['size'] > $pun_config['o_avatars_size'])				message($lang_profile['Too large'].' '.forum_number_format($pun_config['o_avatars_size']).' '.$lang_profile['bytes'].'.');			// Move the file to the avatar directory. We do this before checking the width/height to circumvent open_basedir restrictions			if (!@move_uploaded_file($uploaded_file['tmp_name'], PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp'))				message($lang_profile['Move failed'].' <a href="mailto:'.$pun_config['o_admin_email'].'">'.$pun_config['o_admin_email'].'</a>.');			list($width, $height, $type,) = @getimagesize(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');			// Determine type			if ($type == IMAGETYPE_GIF)				$extension = '.gif';			else if ($type == IMAGETYPE_JPEG)				$extension = '.jpg';			else if ($type == IMAGETYPE_PNG)				$extension = '.png';			else			{				// Invalid type				@unlink(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');				message($lang_profile['Bad type']);			}			// Now check the width/height			if (empty($width) || empty($height) || $width > $pun_config['o_avatars_width'] || $height > $pun_config['o_avatars_height'])			{				@unlink(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp');				message($lang_profile['Too wide or high'].' '.$pun_config['o_avatars_width'].'x'.$pun_config['o_avatars_height'].' '.$lang_profile['pixels'].'.');			}			// Delete any old avatars and put the new one in place			delete_avatar($id);			@rename(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.'.tmp', PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.$extension);			@chmod(PUN_ROOT.$pun_config['o_avatars_dir'].'/'.$id.$extension, 0644);		}		else			message($lang_profile['Unknown failure']);		redirect('profile.php?section=personality&amp;id='.$id, $lang_profile['Avatar upload redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Upload avatar']);	$required_fields = array('req_file' => $lang_profile['File']);	$focus_element = array('upload_avatar', 'req_file');	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Upload avatar'] ?></span></h2>	<div class="box">		<form id="upload_avatar" method="post" enctype="multipart/form-data" action="profile.php?action=upload_avatar2&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Upload avatar legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="form_sent" value="1" />						<input type="hidden" name="MAX_FILE_SIZE" value="<?php echo $pun_config['o_avatars_size'] ?>" />						<label class="required"><strong><?php echo $lang_profile['File'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input name="req_file" type="file" size="40" /><br /></label>						<p><?php echo $lang_profile['Avatar desc'].' '.$pun_config['o_avatars_width'].' x '.$pun_config['o_avatars_height'].' '.$lang_profile['pixels'].' '.$lang_common['and'].' '.forum_number_format($pun_config['o_avatars_size']).' '.$lang_profile['bytes'].' ('.file_size($pun_config['o_avatars_size']).').' ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="upload" value="<?php echo $lang_profile['Upload'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if ($action == 'delete_avatar'){	if ($pun_user['id'] != $id && !$pun_user['is_admmod'])		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	delete_avatar($id);	redirect('profile.php?section=personality&amp;id='.$id, $lang_profile['Avatar deleted redirect']);}else if (isset($_POST['update_group_membership'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	$new_group_id = intval($_POST['group_id']);	$db->query('UPDATE '.$db->prefix.'users SET group_id='.$new_group_id.' WHERE id='.$id) or error('Unable to change user group', __FILE__, __LINE__, $db->error());	// Regenerate the users info cache	if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))		require PUN_ROOT.'include/cache.php';	generate_users_info_cache();	$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$new_group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());	$new_group_mod = $db->result($result);	// If the user was a moderator or an administrator, we remove him/her from the moderator list in all forums as well	if ($new_group_id != PUN_ADMIN && $new_group_mod != '1')	{		$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());		while ($cur_forum = $db->fetch_assoc($result))		{			$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();			if (in_array($id, $cur_moderators))			{				$username = array_search($id, $cur_moderators);				unset($cur_moderators[$username]);				$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';				$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());			}		}	}	redirect('profile.php?section=admin&amp;id='.$id, $lang_profile['Group membership redirect']);}else if (isset($_POST['update_forums'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	// Get the username of the user we are processing	$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	$username = $db->result($result);	$moderator_in = (isset($_POST['moderator_in'])) ? array_keys($_POST['moderator_in']) : array();	// Loop through all forums	$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());	while ($cur_forum = $db->fetch_assoc($result))	{		$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();		// If the user should have moderator access (and he/she doesn't already have it)		if (in_array($cur_forum['id'], $moderator_in) && !in_array($id, $cur_moderators))		{			$cur_moderators[$username] = $id;			uksort($cur_moderators, 'utf8_strcasecmp');			$db->query('UPDATE '.$db->prefix.'forums SET moderators=\''.$db->escape(serialize($cur_moderators)).'\' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());		}		// If the user shouldn't have moderator access (and he/she already has it)		else if (!in_array($cur_forum['id'], $moderator_in) && in_array($id, $cur_moderators))		{			unset($cur_moderators[$username]);			$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';			$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());		}	}	redirect('profile.php?section=admin&amp;id='.$id, $lang_profile['Update forums redirect']);}else if (isset($_POST['ban'])){	if ($pun_user['g_id'] != PUN_ADMIN && ($pun_user['g_moderator'] != '1' || $pun_user['g_mod_ban_users'] == '0'))		message($lang_common['No permission'], false, '403 Forbidden');	// Get the username of the user we are banning	$result = $db->query('SELECT username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch username', __FILE__, __LINE__, $db->error());	$username = $db->result($result);	// Check whether user is already banned	$result = $db->query('SELECT id FROM '.$db->prefix.'bans WHERE username = \''.$db->escape($username).'\' ORDER BY expire IS NULL DESC, expire DESC LIMIT 1') or error('Unable to fetch ban ID', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result))	{		$ban_id = $db->result($result);		redirect('admin_bans.php?edit_ban='.$ban_id.'&amp;exists', $lang_profile['Ban redirect']);	}	else		redirect('admin_bans.php?add_ban='.$id, $lang_profile['Ban redirect']);}else if (isset($_POST['delete_user']) || isset($_POST['delete_user_comply'])){	if ($pun_user['g_id'] > PUN_ADMIN)		message($lang_common['No permission'], false, '403 Forbidden');	confirm_referrer('profile.php');	// Get the username and group of the user we are deleting	$result = $db->query('SELECT group_id, username FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	list($group_id, $username) = $db->fetch_row($result);	if ($group_id == PUN_ADMIN)		message($lang_profile['No delete admin message']);	if (isset($_POST['delete_user_comply']))	{		// If the user is a moderator or an administrator, we remove him/her from the moderator list in all forums as well		$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());		$group_mod = $db->result($result);		if ($group_id == PUN_ADMIN || $group_mod == '1')		{			$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());			while ($cur_forum = $db->fetch_assoc($result))			{				$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				if (in_array($id, $cur_moderators))				{					unset($cur_moderators[$username]);					$cur_moderators = (!empty($cur_moderators)) ? '\''.$db->escape(serialize($cur_moderators)).'\'' : 'NULL';					$db->query('UPDATE '.$db->prefix.'forums SET moderators='.$cur_moderators.' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());				}			}		}		// Delete any subscriptions		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE user_id='.$id) or error('Unable to delete topic subscriptions', __FILE__, __LINE__, $db->error());		$db->query('DELETE FROM '.$db->prefix.'forum_subscriptions WHERE user_id='.$id) or error('Unable to delete forum subscriptions', __FILE__, __LINE__, $db->error());		// Remove him/her from the online list (if they happen to be logged in)		$db->query('DELETE FROM '.$db->prefix.'online WHERE user_id='.$id) or error('Unable to remove user from online list', __FILE__, __LINE__, $db->error());		// Should we delete all posts made by this user?		if (isset($_POST['delete_posts']))		{			require PUN_ROOT.'include/search_idx.php';			@set_time_limit(0);			// Find all posts made by this user			$result = $db->query('SELECT p.id, p.topic_id, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id WHERE p.poster_id='.$id) or error('Unable to fetch posts', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result))			{				while ($cur_post = $db->fetch_assoc($result))				{					// Determine whether this post is the "topic post" or not					$result2 = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['topic_id'].' ORDER BY posted LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());					if ($db->result($result2) == $cur_post['id'])						delete_topic($cur_post['topic_id']);					else						delete_post($cur_post['id'], $cur_post['topic_id']);					update_forum($cur_post['forum_id']);				}			}		}		else			// Set all his/her posts to guest			$db->query('UPDATE '.$db->prefix.'posts SET poster_id=1 WHERE poster_id='.$id) or error('Unable to update posts', __FILE__, __LINE__, $db->error());		// Delete the user		$db->query('DELETE FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to delete user', __FILE__, __LINE__, $db->error());		// Delete user avatar		delete_avatar($id);		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		redirect('index.php', $lang_profile['User delete redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Confirm delete user']);	define('PUN_ACTIVE_PAGE', 'profile');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_profile['Confirm delete user'] ?></span></h2>	<div class="box">		<form id="confirm_del_user" method="post" action="profile.php?id=<?php echo $id ?>">			<div class="inform">				<fieldset>					<legend><?php echo $lang_profile['Confirm delete legend'] ?></legend>					<div class="infldset">						<p><?php echo $lang_profile['Confirmation info'].' <strong>'.pun_htmlspecialchars($username).'</strong>.' ?></p>						<div class="rbox">							<label><input type="checkbox" name="delete_posts" value="1" checked="checked" /><?php echo $lang_profile['Delete posts'] ?><br /></label>						</div>						<p class="warntext"><strong><?php echo $lang_profile['Delete warning'] ?></strong></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="delete_user_comply" value="<?php echo $lang_profile['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}else if (isset($_POST['form_sent'])){	// Fetch the user group of the user we are editing	$result = $db->query('SELECT u.username, u.group_id, g.g_moderator FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON (g.g_id=u.group_id) WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());	if (!$db->num_rows($result))		message($lang_common['Bad request'], false, '404 Not Found');	list($old_username, $group_id, $is_moderator) = $db->fetch_row($result);	if ($pun_user['id'] != $id &&																	// If we aren't the user (i.e. editing your own profile)		(!$pun_user['is_admmod'] ||																	// and we are not an admin or mod		($pun_user['g_id'] != PUN_ADMIN &&															// or we aren't an admin and ...		($pun_user['g_mod_edit_users'] == '0' ||													// mods aren't allowed to edit users		$group_id == PUN_ADMIN ||																	// or the user is an admin		$is_moderator))))																			// or the user is another mod		message($lang_common['No permission'], false, '403 Forbidden');	if ($pun_user['is_admmod'])		confirm_referrer('profile.php');	$username_updated = false;	// Validate input depending on section	switch ($section)	{		case 'essentials':		{			$form = array(				'timezone'		=> floatval($_POST['form']['timezone']),				'dst'			=> isset($_POST['form']['dst']) ? '1' : '0',				'time_format'	=> intval($_POST['form']['time_format']),				'date_format'	=> intval($_POST['form']['date_format']),			);			// Make sure we got a valid language string			if (isset($_POST['form']['language']))			{				$languages = forum_list_langs();				$form['language'] = pun_trim($_POST['form']['language']);				if (!in_array($form['language'], $languages))					message($lang_common['Bad request'], false, '404 Not Found');			}			if ($pun_user['is_admmod'])			{				$form['admin_note'] = pun_trim($_POST['admin_note']);				// Are we allowed to change usernames?				if ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && $pun_user['g_mod_rename_users'] == '1'))				{					$form['username'] = pun_trim($_POST['req_username']);					if ($form['username'] != $old_username)					{						// Check username						require PUN_ROOT.'lang/'.$pun_user['language'].'/register.php';						$errors = array();						check_username($form['username'], $id);						if (!empty($errors))							message($errors[0]);						$username_updated = true;					}				}				// We only allow administrators to update the post count				if ($pun_user['g_id'] == PUN_ADMIN)					$form['num_posts'] = intval($_POST['num_posts']);			}			if ($pun_config['o_regs_verify'] == '0' || $pun_user['is_admmod'])			{				require PUN_ROOT.'include/email.php';				// Validate the email address				$form['email'] = strtolower(pun_trim($_POST['req_email']));				if (!is_valid_email($form['email']))					message($lang_common['Invalid email']);			}			break;		}		case 'personal':		{			$form = array(				'realname'		=> isset($_POST['form']['realname']) ? pun_trim($_POST['form']['realname']) : '',				'url'			=> isset($_POST['form']['url']) ? pun_trim($_POST['form']['url']) : '',				'location'		=> isset($_POST['form']['location']) ? pun_trim($_POST['form']['location']) : '',			);			// Add http:// if the URL doesn't contain it already (while allowing https://, too)			if ($pun_user['g_post_links'] == '1')			{				if ($form['url'] != '')				{					$url = url_valid($form['url']);					if ($url === false)						message($lang_profile['Invalid website URL']);					$form['url'] = $url['url'];				}			}			else			{				if (!empty($form['url']))					message($lang_profile['Website not allowed']);				$form['url'] = '';			}			if ($pun_user['g_id'] == PUN_ADMIN)				$form['title'] = pun_trim($_POST['title']);			else if ($pun_user['g_set_title'] == '1')			{				$form['title'] = pun_trim($_POST['title']);				if ($form['title'] != '')				{					// A list of words that the title may not contain					// If the language is English, there will be some duplicates, but it's not the end of the world					$forbidden = array('member', 'moderator', 'administrator', 'banned', 'guest', utf8_strtolower($lang_common['Member']), utf8_strtolower($lang_common['Moderator']), utf8_strtolower($lang_common['Administrator']), utf8_strtolower($lang_common['Banned']), utf8_strtolower($lang_common['Guest']));					if (in_array(utf8_strtolower($form['title']), $forbidden))						message($lang_profile['Forbidden title']);				}			}			break;		}		case 'messaging':		{			$form = array(				'jabber'		=> pun_trim($_POST['form']['jabber']),				'icq'			=> pun_trim($_POST['form']['icq']),				'msn'			=> pun_trim($_POST['form']['msn']),				'aim'			=> pun_trim($_POST['form']['aim']),				'yahoo'			=> pun_trim($_POST['form']['yahoo']),			);			// If the ICQ UIN contains anything other than digits it's invalid			if (preg_match('%[^0-9]%', $form['icq']))				message($lang_prof_reg['Bad ICQ']);			break;		}		case 'personality':		{			$form = array();			// Clean up signature from POST			if ($pun_config['o_signatures'] == '1')			{				$form['signature'] = pun_linebreaks(pun_trim($_POST['signature']));				// Validate signature				if (pun_strlen($form['signature']) > $pun_config['p_sig_length'])					message(sprintf($lang_prof_reg['Sig too long'], $pun_config['p_sig_length'], pun_strlen($form['signature']) - $pun_config['p_sig_length']));				else if (substr_count($form['signature'], "\n") > ($pun_config['p_sig_lines']-1))					message(sprintf($lang_prof_reg['Sig too many lines'], $pun_config['p_sig_lines']));				else if ($form['signature'] && $pun_config['p_sig_all_caps'] == '0' && is_all_uppercase($form['signature']) && !$pun_user['is_admmod'])					$form['signature'] = utf8_ucwords(utf8_strtolower($form['signature']));				// Validate BBCode syntax				if ($pun_config['p_sig_bbcode'] == '1')				{					require PUN_ROOT.'include/parser.php';					$errors = array();					$form['signature'] = preparse_bbcode($form['signature'], $errors, true);					if(count($errors) > 0)						message('<ul><li>'.implode('</li><li>', $errors).'</li></ul>');				}			}			break;		}		case 'display':		{			$form = array(				'disp_topics'		=> pun_trim($_POST['form']['disp_topics']),				'disp_posts'		=> pun_trim($_POST['form']['disp_posts']),				'show_smilies'		=> isset($_POST['form']['show_smilies']) ? '1' : '0',				'show_img'			=> isset($_POST['form']['show_img']) ? '1' : '0',				'show_img_sig'		=> isset($_POST['form']['show_img_sig']) ? '1' : '0',				'show_avatars'		=> isset($_POST['form']['show_avatars']) ? '1' : '0',				'show_sig'			=> isset($_POST['form']['show_sig']) ? '1' : '0',			);			if ($form['disp_topics'] != '')			{				$form['disp_topics'] = intval($form['disp_topics']);				if ($form['disp_topics'] < 3)					$form['disp_topics'] = 3;				else if ($form['disp_topics'] > 75)					$form['disp_topics'] = 75;			}			if ($form['disp_posts'] != '')			{				$form['disp_posts'] = intval($form['disp_posts']);				if ($form['disp_posts'] < 3)					$form['disp_posts'] = 3;				else if ($form['disp_posts'] > 75)					$form['disp_posts'] = 75;			}			// Make sure we got a valid style string			if (isset($_POST['form']['style']))			{				$styles = forum_list_styles();				$form['style'] = pun_trim($_POST['form']['style']);				if (!in_array($form['style'], $styles))					message($lang_common['Bad request'], false, '404 Not Found');			}			break;		}		case 'privacy':		{			$form = array(				'email_setting'			=> intval($_POST['form']['email_setting']),				'notify_with_post'		=> isset($_POST['form']['notify_with_post']) ? '1' : '0',				'auto_notify'			=> isset($_POST['form']['auto_notify']) ? '1' : '0',			);			if ($form['email_setting'] < 0 || $form['email_setting'] > 2)				$form['email_setting'] = $pun_config['o_default_email_setting'];			break;		}		default:			message($lang_common['Bad request']);	}	// Single quotes around non-empty values and NULL for empty values	$temp = array();	foreach ($form as $key => $input)	{		$value = ($input !== '') ? '\''.$db->escape($input).'\'' : 'NULL';		$temp[] = $key.'='.$value;	}	if (empty($temp))		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'users SET '.implode(',', $temp).' WHERE id='.$id) or error('Unable to update profile', __FILE__, __LINE__, $db->error());	// If we changed the username we have to update some stuff	if ($username_updated)	{		$db->query('UPDATE '.$db->prefix.'bans SET username=\''.$db->escape($form['username']).'\' WHERE username=\''.$db->escape($old_username).'\'') or error('Unable to update bans', __FILE__, __LINE__, $db->error());		// If any bans were updated, we will need to know because the cache will need to be regenerated.		if ($db->affected_rows() > 0)			$bans_updated = true;		$db->query('UPDATE '.$db->prefix.'posts SET poster=\''.$db->escape($form['username']).'\' WHERE poster_id='.$id) or error('Unable to update posts', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'posts SET edited_by=\''.$db->escape($form['username']).'\' WHERE edited_by=\''.$db->escape($old_username).'\'') or error('Unable to update posts', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'topics SET poster=\''.$db->escape($form['username']).'\' WHERE poster=\''.$db->escape($old_username).'\'') or error('Unable to update topics', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'topics SET last_poster=\''.$db->escape($form['username']).'\' WHERE last_poster=\''.$db->escape($old_username).'\'') or error('Unable to update topics', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'forums SET last_poster=\''.$db->escape($form['username']).'\' WHERE last_poster=\''.$db->escape($old_username).'\'') or error('Unable to update forums', __FILE__, __LINE__, $db->error());		$db->query('UPDATE '.$db->prefix.'online SET ident=\''.$db->escape($form['username']).'\' WHERE ident=\''.$db->escape($old_username).'\'') or error('Unable to update online list', __FILE__, __LINE__, $db->error());		// If the user is a moderator or an administrator we have to update the moderator lists		$result = $db->query('SELECT group_id FROM '.$db->prefix.'users WHERE id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());		$group_id = $db->result($result);		$result = $db->query('SELECT g_moderator FROM '.$db->prefix.'groups WHERE g_id='.$group_id) or error('Unable to fetch group', __FILE__, __LINE__, $db->error());		$group_mod = $db->result($result);		if ($group_id == PUN_ADMIN || $group_mod == '1')		{			$result = $db->query('SELECT id, moderators FROM '.$db->prefix.'forums') or error('Unable to fetch forum list', __FILE__, __LINE__, $db->error());			while ($cur_forum = $db->fetch_assoc($result))			{				$cur_moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();				if (in_array($id, $cur_moderators))				{					unset($cur_moderators[$old_username]);					$cur_moderators[$form['username']] = $id;					uksort($cur_moderators, 'utf8_strcasecmp');					$db->query('UPDATE '.$db->prefix.'forums SET moderators=\''.$db->escape(serialize($cur_moderators)).'\' WHERE id='.$cur_forum['id']) or error('Unable to update forum', __FILE__, __LINE__, $db->error());				}			}		}		// Regenerate the users info cache		if (!defined('FORUM_CACHE_FUNCTIONS_LOADED'))			require PUN_ROOT.'include/cache.php';		generate_users_info_cache();		// Check if the bans table was updated and regenerate the bans cache when needed		if (isset($bans_updated))			generate_bans_cache();	}	redirect('profile.php?section='.$section.'&amp;id='.$id, $lang_profile['Profile redirect']);}$result = $db->query('SELECT u.username, u.email, u.title, u.realname, u.url, u.jabber, u.icq, u.msn, u.aim, u.yahoo, u.location, u.signature, u.disp_topics, u.disp_posts, u.email_setting, u.notify_with_post, u.auto_notify, u.show_smilies, u.show_img, u.show_img_sig, u.show_avatars, u.show_sig, u.timezone, u.dst, u.language, u.style, u.num_posts, u.last_post, u.registered, u.registration_ip, u.admin_note, u.date_format, u.time_format, u.last_visit, g.g_id, g.g_user_title, g.g_moderator FROM '.$db->prefix.'users AS u LEFT JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE u.id='.$id) or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$user = $db->fetch_assoc($result);$last_post = format_time($user['last_post']);if ($user['signature'] != ''){	require PUN_ROOT.'include/parser.php';	$parsed_signature = parse_signature($user['signature']);}// View or edit?if ($pun_user['id'] != $id &&																	// If we aren't the user (i.e. editing your own profile)	(!$pun_user['is_admmod'] ||																	// and we are not an admin or mod	($pun_user['g_id'] != PUN_ADMIN &&															// or we aren't an admin and ...	($pun_user['g_mod_edit_users'] == '0' ||													// mods aren't allowed to edit users	$user['g_id'] == PUN_ADMIN ||																// or the user is an admin	$user['g_moderator'] == '1'))))																// or the user is another mod{	$user_personal = array();	$user_personal[] = '<dt>'.$lang_common['Username'].'</dt>';	$user_personal[] = '<dd>'.pun_htmlspecialchars($user['username']).'</dd>';	$user_title_field = get_title($user);	$user_personal[] = '<dt>'.$lang_common['Title'].'</dt>';	$user_personal[] = '<dd>'.(($pun_config['o_censoring'] == '1') ? censor_words($user_title_field) : $user_title_field).'</dd>';	if ($user['realname'] != '')	{		$user_personal[] = '<dt>'.$lang_profile['Realname'].'</dt>';		$user_personal[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['realname']) : $user['realname']).'</dd>';	}	if ($user['location'] != '')	{		$user_personal[] = '<dt>'.$lang_profile['Location'].'</dt>';		$user_personal[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['location']) : $user['location']).'</dd>';	}	if ($user['url'] != '')	{		$user['url'] = pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['url']) : $user['url']);		$user_personal[] = '<dt>'.$lang_profile['Website'].'</dt>';		$user_personal[] = '<dd><span class="website"><a href="'.$user['url'].'" rel="nofollow">'.$user['url'].'</a></span></dd>';	}	if ($user['email_setting'] == '0' && !$pun_user['is_guest'] && $pun_user['g_send_email'] == '1')		$email_field = '<a href="mailto:'.$user['email'].'">'.$user['email'].'</a>';	else if ($user['email_setting'] == '1' && !$pun_user['is_guest'] && $pun_user['g_send_email'] == '1')		$email_field = '<a href="misc.php?email='.$id.'">'.$lang_common['Send email'].'</a>';	else		$email_field = '';	if ($email_field != '')	{		$user_personal[] = '<dt>'.$lang_common['Email'].'</dt>';		$user_personal[] = '<dd><span class="email">'.$email_field.'</span></dd>';	}	$user_messaging = array();	if ($user['jabber'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['Jabber'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['jabber']) : $user['jabber']).'</dd>';	}	if ($user['icq'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['ICQ'].'</dt>';		$user_messaging[] = '<dd>'.$user['icq'].'</dd>';	}	if ($user['msn'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['MSN'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['msn']) : $user['msn']).'</dd>';	}	if ($user['aim'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['AOL IM'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['aim']) : $user['aim']).'</dd>';	}	if ($user['yahoo'] != '')	{		$user_messaging[] = '<dt>'.$lang_profile['Yahoo'].'</dt>';		$user_messaging[] = '<dd>'.pun_htmlspecialchars(($pun_config['o_censoring'] == '1') ? censor_words($user['yahoo']) : $user['yahoo']).'</dd>';	}	$user_personality = array();	if ($pun_config['o_avatars'] == '1')	{		$avatar_field = generate_avatar_markup($id);		if ($avatar_field != '')		{			$user_personality[] = '<dt>'.$lang_profile['Avatar'].'</dt>';			$user_personality[] = '<dd>'.$avatar_field.'</dd>';		}	}	if ($pun_config['o_signatures'] == '1')	{		if (isset($parsed_signature))		{			$user_personality[] = '<dt>'.$lang_profile['Signature'].'</dt>';			$user_personality[] = '<dd><div class="postsignature postmsg">'.$parsed_signature.'</div></dd>';		}	}	$user_activity = array();	$posts_field = '';	if ($pun_config['o_show_post_count'] == '1' || $pun_user['is_admmod'])		$posts_field = forum_number_format($user['num_posts']);	if ($pun_user['g_search'] == '1')	{		$quick_searches = array();		if ($user['num_posts'] > 0)		{			$quick_searches[] = '<a href="search.php?action=show_user_topics&amp;user_id='.$id.'">'.$lang_profile['Show topics'].'</a>';			$quick_searches[] = '<a href="search.php?action=show_user_posts&amp;user_id='.$id.'">'.$lang_profile['Show posts'].'</a>';		}		if ($pun_user['is_admmod'] && $pun_config['o_topic_subscriptions'] == '1')			$quick_searches[] = '<a href="search.php?action=show_subscriptions&amp;user_id='.$id.'">'.$lang_profile['Show subscriptions'].'</a>';		if (!empty($quick_searches))			$posts_field .= (($posts_field != '') ? ' - ' : '').implode(' - ', $quick_searches);	}	if ($posts_field != '')	{		$user_activity[] = '<dt>'.$lang_common['Posts'].'</dt>';		$user_activity[] = '<dd>'.$posts_field.'</dd>';	}	if ($user['num_posts'] > 0)	{		$user_activity[] = '<dt>'.$lang_common['Last post'].'</dt>';		$user_activity[] = '<dd>'.$last_post.'</dd>';	}	$user_activity[] = '<dt>'.$lang_common['Registered'].'</dt>';	$user_activity[] = '<dd>'.format_time($user['registered'], true).'</dd>';	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), sprintf($lang_profile['Users profile'], pun_htmlspecialchars($user['username'])));	define('PUN_ALLOW_INDEX', 1);	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div id="viewprofile" class="block">	<h2><span><?php echo $lang_common['Profile'] ?></span></h2>	<div class="box">		<div class="fakeform">			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section personal'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_personal)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php if (!empty($user_messaging)): ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section messaging'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_messaging)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php endif; if (!empty($user_personality)): ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['Section personality'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_personality)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div><?php endif; ?>			<div class="inform">				<fieldset>				<legend><?php echo $lang_profile['User activity'] ?></legend>					<div class="infldset">						<dl>							<?php echo implode("\n\t\t\t\t\t\t\t", $user_activity)."\n" ?>						</dl>						<div class="clearer"></div>					</div>				</fieldset>			</div>		</div>	</div></div><?php	require PUN_ROOT.'footer.php';}else{	if (!$section || $section == 'essentials')	{		if ($pun_user['is_admmod'])		{			if ($pun_user['g_id'] == PUN_ADMIN || $pun_user['g_mod_rename_users'] == '1')				$username_field = '<label class="required"><strong>'.$lang_common['Username'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_username" value="'.pun_htmlspecialchars($user['username']).'" size="25" maxlength="25" /><br /></label>'."\n";			else				$username_field = '<p>'.sprintf($lang_profile['Username info'], pun_htmlspecialchars($user['username'])).'</p>'."\n";			$email_field = '<label class="required"><strong>'.$lang_common['Email'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_email" value="'.$user['email'].'" size="40" maxlength="80" /><br /></label><p><span class="email"><a href="misc.php?email='.$id.'">'.$lang_common['Send email'].'</a></span></p>'."\n";		}		else		{			$username_field = '<p>'.$lang_common['Username'].': '.pun_htmlspecialchars($user['username']).'</p>'."\n";			if ($pun_config['o_regs_verify'] == '1')				$email_field = '<p>'.sprintf($lang_profile['Email info'], $user['email'].' - <a href="profile.php?action=change_email&amp;id='.$id.'">'.$lang_profile['Change email'].'</a>').'</p>'."\n";			else				$email_field = '<label class="required"><strong>'.$lang_common['Email'].' <span>'.$lang_common['Required'].'</span></strong><br /><input type="text" name="req_email" value="'.$user['email'].'" size="40" maxlength="80" /><br /></label>'."\n";		}		$posts_field = '';		$posts_actions = array();		if ($pun_user['g_id'] == PUN_ADMIN)			$posts_field .= '<label>'.$lang_common['Posts'].'<br /><input type="text" name="num_posts" value="'.$user['num_posts'].'" size="8" maxlength="8" /><br /></label>';		else if ($pun_config['o_show_post_count'] == '1' || $pun_user['is_admmod'])			$posts_actions[] = sprintf($lang_profile['Posts info'], forum_number_format($user['num_posts']));		if ($pun_user['g_search'] == '1' || $pun_user['g_id'] == PUN_ADMIN)		{			$posts_actions[] = '<a href="search.php?action=show_user_topics&amp;user_id='.$id.'">'.$lang_profile['Show topics'].'</a>';			$posts_actions[] = '<a href="search.php?action=show_user_posts&amp;user_id='.$id.'">'.$lang_profile['Show posts'].'</a>';			if ($pun_config['o_topic_subscriptions'] == '1')				$posts_actions[] = '<a href="search.php?action=show_subscriptions&amp;user_id='.$id.'">'.$lang_profile['Show subscriptions'].'</a>';		}		$posts_field .= (!empty($posts_actions) ? '<p class="actions">'.implode(' - ', $posts_actions).'</p>' : '')."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section essentials']);		$required_fields = array('req_username' => $lang_common['Username'], 'req_email' => $lang_common['Email']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('essentials');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section essentials'] ?></span></h2>		<div class="box">			<form id="profile1" method="post" action="profile.php?section=essentials&amp;id=<?php echo $id ?>" onsubmit="return process_form(this)">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Username and pass legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<?php echo $username_field ?><?php if ($pun_user['id'] == $id || $pun_user['g_id'] == PUN_ADMIN || ($user['g_moderator'] == '0' && $pun_user['g_mod_change_passwords'] == '1')): ?>							<p class="actions"><span><a href="profile.php?action=change_pass&amp;id=<?php echo $id ?>"><?php echo $lang_profile['Change pass'] ?></a></span></p><?php endif; ?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Email legend'] ?></legend>						<div class="infldset">							<?php echo $email_field ?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Localisation legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_prof_reg['Time zone info'] ?></p>							<label><?php echo $lang_prof_reg['Time zone']."\n" ?>							<br /><select name="form[timezone]">								<option value="-12"<?php if ($user['timezone'] == -12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-12:00'] ?></option>								<option value="-11"<?php if ($user['timezone'] == -11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-11:00'] ?></option>								<option value="-10"<?php if ($user['timezone'] == -10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-10:00'] ?></option>								<option value="-9.5"<?php if ($user['timezone'] == -9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:30'] ?></option>								<option value="-9"<?php if ($user['timezone'] == -9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-09:00'] ?></option>								<option value="-8.5"<?php if ($user['timezone'] == -8.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:30'] ?></option>								<option value="-8"<?php if ($user['timezone'] == -8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-08:00'] ?></option>								<option value="-7"<?php if ($user['timezone'] == -7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-07:00'] ?></option>								<option value="-6"<?php if ($user['timezone'] == -6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-06:00'] ?></option>								<option value="-5"<?php if ($user['timezone'] == -5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-05:00'] ?></option>								<option value="-4"<?php if ($user['timezone'] == -4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-04:00'] ?></option>								<option value="-3.5"<?php if ($user['timezone'] == -3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:30'] ?></option>								<option value="-3"<?php if ($user['timezone'] == -3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-03:00'] ?></option>								<option value="-2"<?php if ($user['timezone'] == -2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-02:00'] ?></option>								<option value="-1"<?php if ($user['timezone'] == -1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC-01:00'] ?></option>								<option value="0"<?php if ($user['timezone'] == 0) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC'] ?></option>								<option value="1"<?php if ($user['timezone'] == 1) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+01:00'] ?></option>								<option value="2"<?php if ($user['timezone'] == 2) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+02:00'] ?></option>								<option value="3"<?php if ($user['timezone'] == 3) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:00'] ?></option>								<option value="3.5"<?php if ($user['timezone'] == 3.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+03:30'] ?></option>								<option value="4"<?php if ($user['timezone'] == 4) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:00'] ?></option>								<option value="4.5"<?php if ($user['timezone'] == 4.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+04:30'] ?></option>								<option value="5"<?php if ($user['timezone'] == 5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:00'] ?></option>								<option value="5.5"<?php if ($user['timezone'] == 5.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:30'] ?></option>								<option value="5.75"<?php if ($user['timezone'] == 5.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+05:45'] ?></option>								<option value="6"<?php if ($user['timezone'] == 6) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:00'] ?></option>								<option value="6.5"<?php if ($user['timezone'] == 6.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+06:30'] ?></option>								<option value="7"<?php if ($user['timezone'] == 7) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+07:00'] ?></option>								<option value="8"<?php if ($user['timezone'] == 8) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:00'] ?></option>								<option value="8.75"<?php if ($user['timezone'] == 8.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+08:45'] ?></option>								<option value="9"<?php if ($user['timezone'] == 9) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:00'] ?></option>								<option value="9.5"<?php if ($user['timezone'] == 9.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+09:30'] ?></option>								<option value="10"<?php if ($user['timezone'] == 10) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:00'] ?></option>								<option value="10.5"<?php if ($user['timezone'] == 10.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+10:30'] ?></option>								<option value="11"<?php if ($user['timezone'] == 11) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:00'] ?></option>								<option value="11.5"<?php if ($user['timezone'] == 11.5) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+11:30'] ?></option>								<option value="12"<?php if ($user['timezone'] == 12) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:00'] ?></option>								<option value="12.75"<?php if ($user['timezone'] == 12.75) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+12:45'] ?></option>								<option value="13"<?php if ($user['timezone'] == 13) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+13:00'] ?></option>								<option value="14"<?php if ($user['timezone'] == 14) echo ' selected="selected"' ?>><?php echo $lang_prof_reg['UTC+14:00'] ?></option>							</select>							<br /></label>							<div class="rbox">								<label><input type="checkbox" name="form[dst]" value="1"<?php if ($user['dst'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['DST'] ?><br /></label>							</div>							<label><?php echo $lang_prof_reg['Time format'] ?>							<br /><select name="form[time_format]"><?php								foreach (array_unique($forum_time_formats) as $key => $time_format)								{									echo "\t\t\t\t\t\t\t\t".'<option value="'.$key.'"';									if ($user['time_format'] == $key)										echo ' selected="selected"';									echo '>'. format_time(time(), false, null, $time_format, true, true);									if ($key == 0)										echo ' ('.$lang_prof_reg['Default'].')';									echo "</option>\n";								}								?>							</select>							<br /></label>							<label><?php echo $lang_prof_reg['Date format'] ?>							<br /><select name="form[date_format]"><?php								foreach (array_unique($forum_date_formats) as $key => $date_format)								{									echo "\t\t\t\t\t\t\t\t".'<option value="'.$key.'"';									if ($user['date_format'] == $key)										echo ' selected="selected"';									echo '>'. format_time(time(), true, $date_format, null, false, true);									if ($key == 0)										echo ' ('.$lang_prof_reg['Default'].')';									echo "</option>\n";								}								?>							</select>							<br /></label><?php		$languages = forum_list_langs();		// Only display the language selection box if there's more than one language available		if (count($languages) > 1)		{?>							<label><?php echo $lang_prof_reg['Language'] ?>							<br /><select name="form[language]"><?php			foreach ($languages as $temp)			{				if ($user['language'] == $temp)					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.$temp.'</option>'."\n";				else					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.$temp.'</option>'."\n";			}?>							</select>							<br /></label><?php		}?>						</div>					</fieldset>				</div>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['User activity'] ?></legend>						<div class="infldset">							<p><?php printf($lang_profile['Registered info'], format_time($user['registered'], true).(($pun_user['is_admmod']) ? ' (<a href="moderate.php?get_host='.pun_htmlspecialchars($user['registration_ip']).'">'.pun_htmlspecialchars($user['registration_ip']).'</a>)' : '')) ?></p>							<p><?php printf($lang_profile['Last post info'], $last_post) ?></p>							<p><?php printf($lang_profile['Last visit info'], format_time($user['last_visit'])) ?></p>							<?php echo $posts_field ?><?php if ($pun_user['is_admmod']): ?>							<label><?php echo $lang_profile['Admin note'] ?><br />							<input id="admin_note" type="text" name="admin_note" value="<?php echo pun_htmlspecialchars($user['admin_note']) ?>" size="30" maxlength="30" /><br /></label><?php endif; ?>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'personal')	{		if ($pun_user['g_set_title'] == '1')			$title_field = '<label>'.$lang_common['Title'].' <em>('.$lang_profile['Leave blank'].')</em><br /><input type="text" name="title" value="'.pun_htmlspecialchars($user['title']).'" size="30" maxlength="50" /><br /></label>'."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section personal']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('personal');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section personal'] ?></span></h2>		<div class="box">			<form id="profile2" method="post" action="profile.php?section=personal&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Personal details legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<label><?php echo $lang_profile['Realname'] ?><br /><input type="text" name="form[realname]" value="<?php echo pun_htmlspecialchars($user['realname']) ?>" size="40" maxlength="40" /><br /></label><?php if (isset($title_field)): ?>							<?php echo $title_field ?><?php endif; ?>							<label><?php echo $lang_profile['Location'] ?><br /><input type="text" name="form[location]" value="<?php echo pun_htmlspecialchars($user['location']) ?>" size="30" maxlength="30" /><br /></label><?php if ($pun_user['g_post_links'] == '1' || $pun_user['g_id'] == PUN_ADMIN) : ?>							<label><?php echo $lang_profile['Website'] ?><br /><input type="text" name="form[url]" value="<?php echo pun_htmlspecialchars($user['url']) ?>" size="50" maxlength="80" /><br /></label><?php endif; ?>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'messaging')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section messaging']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('messaging');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section messaging'] ?></span></h2>		<div class="box">			<form id="profile3" method="post" action="profile.php?section=messaging&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Contact details legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<label><?php echo $lang_profile['Jabber'] ?><br /><input id="jabber" type="text" name="form[jabber]" value="<?php echo pun_htmlspecialchars($user['jabber']) ?>" size="40" maxlength="75" /><br /></label>							<label><?php echo $lang_profile['ICQ'] ?><br /><input id="icq" type="text" name="form[icq]" value="<?php echo $user['icq'] ?>" size="12" maxlength="12" /><br /></label>							<label><?php echo $lang_profile['MSN'] ?><br /><input id="msn" type="text" name="form[msn]" value="<?php echo pun_htmlspecialchars($user['msn']) ?>" size="40" maxlength="50" /><br /></label>							<label><?php echo $lang_profile['AOL IM'] ?><br /><input id="aim" type="text" name="form[aim]" value="<?php echo pun_htmlspecialchars($user['aim']) ?>" size="20" maxlength="30" /><br /></label>							<label><?php echo $lang_profile['Yahoo'] ?><br /><input id="yahoo" type="text" name="form[yahoo]" value="<?php echo pun_htmlspecialchars($user['yahoo']) ?>" size="20" maxlength="30" /><br /></label>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'personality')	{		if ($pun_config['o_avatars'] == '0' && $pun_config['o_signatures'] == '0')			message($lang_common['Bad request']);		$avatar_field = '<span><a href="profile.php?action=upload_avatar&amp;id='.$id.'">'.$lang_profile['Change avatar'].'</a></span>';		$user_avatar = generate_avatar_markup($id);		if ($user_avatar)			$avatar_field .= ' <span><a href="profile.php?action=delete_avatar&amp;id='.$id.'">'.$lang_profile['Delete avatar'].'</a></span>';		else			$avatar_field = '<span><a href="profile.php?action=upload_avatar&amp;id='.$id.'">'.$lang_profile['Upload avatar'].'</a></span>';		if ($user['signature'] != '')			$signature_preview = '<p>'.$lang_profile['Sig preview'].'</p>'."\n\t\t\t\t\t\t\t".'<div class="postsignature postmsg">'."\n\t\t\t\t\t\t\t\t".'<hr />'."\n\t\t\t\t\t\t\t\t".$parsed_signature."\n\t\t\t\t\t\t\t".'</div>'."\n";		else			$signature_preview = '<p>'.$lang_profile['No sig'].'</p>'."\n";		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section personality']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('personality');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section personality'] ?></span></h2>		<div class="box">			<form id="profile4" method="post" action="profile.php?section=personality&amp;id=<?php echo $id ?>">				<div><input type="hidden" name="form_sent" value="1" /></div><?php if ($pun_config['o_avatars'] == '1'): ?>				<div class="inform">					<fieldset id="profileavatar">						<legend><?php echo $lang_profile['Avatar legend'] ?></legend>						<div class="infldset"><?php if ($user_avatar): ?>							<div class="useravatar"><?php echo $user_avatar ?></div><?php endif; ?>							<p><?php echo $lang_profile['Avatar info'] ?></p>							<p class="clearb actions"><?php echo $avatar_field ?></p>						</div>					</fieldset>				</div><?php endif; if ($pun_config['o_signatures'] == '1'): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Signature legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Signature info'] ?></p>							<div class="txtarea">								<label><?php printf($lang_profile['Sig max size'], forum_number_format($pun_config['p_sig_length']), $pun_config['p_sig_lines']) ?><br />								<textarea name="signature" rows="4" cols="65"><?php echo pun_htmlspecialchars($user['signature']) ?></textarea><br /></label>							</div>							<ul class="bblinks">								<li><span><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#url" onclick="window.open(this.href); return false;"><?php echo $lang_common['url tag'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1' && $pun_user['g_post_links'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a> <?php echo ($pun_config['p_sig_bbcode'] == '1' && $pun_config['p_sig_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>								<li><span><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a> <?php echo ($pun_config['o_smilies_sig'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							</ul>							<?php echo $signature_preview ?>						</div>					</fieldset>				</div><?php endif; ?>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'display')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section display']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('display');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section display'] ?></span></h2>		<div class="box">			<form id="profile5" method="post" action="profile.php?section=display&amp;id=<?php echo $id ?>">				<div><input type="hidden" name="form_sent" value="1" /></div><?php		$styles = forum_list_styles();		// Only display the style selection box if there's more than one style available		if (count($styles) == 1)			echo "\t\t\t".'<div><input type="hidden" name="form[style]" value="'.$styles[0].'" /></div>'."\n";		else if (count($styles) > 1)		{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Style legend'] ?></legend>						<div class="infldset">							<label><?php echo $lang_profile['Styles'] ?><br />							<select name="form[style]"><?php			foreach ($styles as $temp)			{				if ($user['style'] == $temp)					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'" selected="selected">'.str_replace('_', ' ', $temp).'</option>'."\n";				else					echo "\t\t\t\t\t\t\t\t".'<option value="'.$temp.'">'.str_replace('_', ' ', $temp).'</option>'."\n";			}?>							</select>							<br /></label>						</div>					</fieldset>				</div><?php		}?><?php if ($pun_config['o_smilies'] == '1' || $pun_config['o_smilies_sig'] == '1' || $pun_config['o_signatures'] == '1' || $pun_config['o_avatars'] == '1' || ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1')): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Post display legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Post display info'] ?></p>							<div class="rbox"><?php if ($pun_config['o_smilies'] == '1' || $pun_config['o_smilies_sig'] == '1'): ?>								<label><input type="checkbox" name="form[show_smilies]" value="1"<?php if ($user['show_smilies'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show smilies'] ?><br /></label><?php endif; if ($pun_config['o_signatures'] == '1'): ?>								<label><input type="checkbox" name="form[show_sig]" value="1"<?php if ($user['show_sig'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show sigs'] ?><br /></label><?php endif; if ($pun_config['o_avatars'] == '1'): ?>								<label><input type="checkbox" name="form[show_avatars]" value="1"<?php if ($user['show_avatars'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show avatars'] ?><br /></label><?php endif; if ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1'): ?>								<label><input type="checkbox" name="form[show_img]" value="1"<?php if ($user['show_img'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show images'] ?><br /></label><?php endif; if ($pun_config['o_signatures'] == '1' && $pun_config['p_sig_bbcode'] == '1' && $pun_config['p_sig_img_tag'] == '1'): ?>								<label><input type="checkbox" name="form[show_img_sig]" value="1"<?php if ($user['show_img_sig'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Show images sigs'] ?><br /></label><?php endif; ?>							</div>						</div>					</fieldset>				</div><?php endif; ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Pagination legend'] ?></legend>						<div class="infldset">							<label class="conl"><?php echo $lang_profile['Topics per page'] ?><br /><input type="text" name="form[disp_topics]" value="<?php echo $user['disp_topics'] ?>" size="6" maxlength="2" /><br /></label>							<label class="conl"><?php echo $lang_profile['Posts per page'] ?><br /><input type="text" name="form[disp_posts]" value="<?php echo $user['disp_posts'] ?>" size="6" maxlength="2" /><br /></label>							<p class="clearb"><?php echo $lang_profile['Paginate info'] ?> <?php echo $lang_profile['Leave blank'] ?></p>						</div>					</fieldset>				</div>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'privacy')	{		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section privacy']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('privacy');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section privacy'] ?></span></h2>		<div class="box">			<form id="profile6" method="post" action="profile.php?section=privacy&amp;id=<?php echo $id ?>">				<div class="inform">					<fieldset>						<legend><?php echo $lang_prof_reg['Privacy options legend'] ?></legend>						<div class="infldset">							<input type="hidden" name="form_sent" value="1" />							<p><?php echo $lang_prof_reg['Email setting info'] ?></p>							<div class="rbox">								<label><input type="radio" name="form[email_setting]" value="0"<?php if ($user['email_setting'] == '0') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 1'] ?><br /></label>								<label><input type="radio" name="form[email_setting]" value="1"<?php if ($user['email_setting'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 2'] ?><br /></label>								<label><input type="radio" name="form[email_setting]" value="2"<?php if ($user['email_setting'] == '2') echo ' checked="checked"' ?> /><?php echo $lang_prof_reg['Email setting 3'] ?><br /></label>							</div>						</div>					</fieldset>				</div><?php if ($pun_config['o_forum_subscriptions'] == '1' || $pun_config['o_topic_subscriptions'] == '1'): ?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Subscription legend'] ?></legend>						<div class="infldset">							<div class="rbox">								<label><input type="checkbox" name="form[notify_with_post]" value="1"<?php if ($user['notify_with_post'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Notify full'] ?><br /></label><?php if ($pun_config['o_topic_subscriptions'] == '1'): ?>								<label><input type="checkbox" name="form[auto_notify]" value="1"<?php if ($user['auto_notify'] == '1') echo ' checked="checked"' ?> /><?php echo $lang_profile['Auto notify full'] ?><br /></label><?php endif; ?>							</div>						</div>					</fieldset>				</div><?php endif; ?>				<p class="buttons"><input type="submit" name="update" value="<?php echo $lang_common['Submit'] ?>" /> <?php echo $lang_profile['Instructions'] ?></p>			</form>		</div>	</div><?php	}	else if ($section == 'admin')	{		if (!$pun_user['is_admmod'] || ($pun_user['g_moderator'] == '1' && $pun_user['g_mod_ban_users'] == '0'))			message($lang_common['Bad request'], false, '403 Forbidden');		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_common['Profile'], $lang_profile['Section admin']);		define('PUN_ACTIVE_PAGE', 'profile');		require PUN_ROOT.'header.php';		generate_profile_menu('admin');?>	<div class="blockform">		<h2><span><?php echo pun_htmlspecialchars($user['username']).' - '.$lang_profile['Section admin'] ?></span></h2>		<div class="box">			<form id="profile7" method="post" action="profile.php?section=admin&amp;id=<?php echo $id ?>">				<div class="inform">				<input type="hidden" name="form_sent" value="1" />					<fieldset><?php		if ($pun_user['g_moderator'] == '1')		{?>						<legend><?php echo $lang_profile['Delete ban legend'] ?></legend>						<div class="infldset">							<p><input type="submit" name="ban" value="<?php echo $lang_profile['Ban user'] ?>" /></p>						</div>					</fieldset>				</div><?php		}		else		{			if ($pun_user['id'] != $id)			{?>						<legend><?php echo $lang_profile['Group membership legend'] ?></legend>						<div class="infldset">							<select id="group_id" name="group_id"><?php				$result = $db->query('SELECT g_id, g_title FROM '.$db->prefix.'groups WHERE g_id!='.PUN_GUEST.' ORDER BY g_title') or error('Unable to fetch user group list', __FILE__, __LINE__, $db->error());				while ($cur_group = $db->fetch_assoc($result))				{					if ($cur_group['g_id'] == $user['g_id'] || ($cur_group['g_id'] == $pun_config['o_default_user_group'] && $user['g_id'] == ''))						echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'" selected="selected">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";					else						echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_group['g_id'].'">'.pun_htmlspecialchars($cur_group['g_title']).'</option>'."\n";				}?>							</select>							<input type="submit" name="update_group_membership" value="<?php echo $lang_profile['Save'] ?>" />						</div>					</fieldset>				</div>				<div class="inform">					<fieldset><?php			}?>						<legend><?php echo $lang_profile['Delete ban legend'] ?></legend>						<div class="infldset">							<input type="submit" name="delete_user" value="<?php echo $lang_profile['Delete user'] ?>" /> <input type="submit" name="ban" value="<?php echo $lang_profile['Ban user'] ?>" />						</div>					</fieldset>				</div><?php			if ($user['g_moderator'] == '1' || $user['g_id'] == PUN_ADMIN)			{?>				<div class="inform">					<fieldset>						<legend><?php echo $lang_profile['Set mods legend'] ?></legend>						<div class="infldset">							<p><?php echo $lang_profile['Moderator in info'] ?></p><?php				$result = $db->query('SELECT c.id AS cid, c.cat_name, f.id AS fid, f.forum_name, f.moderators FROM '.$db->prefix.'categories AS c INNER JOIN '.$db->prefix.'forums AS f ON c.id=f.cat_id WHERE f.redirect_url IS NULL ORDER BY c.disp_position, c.id, f.disp_position') or error('Unable to fetch category/forum list', __FILE__, __LINE__, $db->error());				$cur_category = 0;				while ($cur_forum = $db->fetch_assoc($result))				{					if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?					{						if ($cur_category)							echo "\n\t\t\t\t\t\t\t\t".'</div>';						if ($cur_category != 0)							echo "\n\t\t\t\t\t\t\t".'</div>'."\n";						echo "\t\t\t\t\t\t\t".'<div class="conl">'."\n\t\t\t\t\t\t\t\t".'<p><strong>'.pun_htmlspecialchars($cur_forum['cat_name']).'</strong></p>'."\n\t\t\t\t\t\t\t\t".'<div class="rbox">';						$cur_category = $cur_forum['cid'];					}					$moderators = ($cur_forum['moderators'] != '') ? unserialize($cur_forum['moderators']) : array();					echo "\n\t\t\t\t\t\t\t\t\t".'<label><input type="checkbox" name="moderator_in['.$cur_forum['fid'].']" value="1"'.((in_array($id, $moderators)) ? ' checked="checked"' : '').' />'.pun_htmlspecialchars($cur_forum['forum_name']).'<br /></label>'."\n";				}?>								</div>							</div>							<br class="clearb" /><input type="submit" name="update_forums" value="<?php echo $lang_profile['Update forums'] ?>" />						</div>					</fieldset>				</div><?php			}		}?>			</form>		</div>	</div><?php	}	else		message($lang_common['Bad request']);?>	<div class="clearer"></div></div><?php	require PUN_ROOT.'footer.php';}
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Fetch some info about the post, the topic and the forum$result = $db->query('SELECT f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.first_post_id, t.closed, p.posted, p.poster, p.poster_id, p.message, p.hide_smilies FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_post = $db->fetch_assoc($result);if ($pun_config['o_censoring'] == '1')	$cur_post['subject'] = censor_words($cur_post['subject']);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;$is_topic_post = ($id == $cur_post['first_post_id']) ? true : false;// Do we have permission to edit this post?if (($pun_user['g_delete_posts'] == '0' ||	($pun_user['g_delete_topics'] == '0' && $is_topic_post) ||	$cur_post['poster_id'] != $pun_user['id'] ||	$cur_post['closed'] == '1') &&	!$is_admmod)	message($lang_common['No permission'], false, '403 Forbidden');// Load the delete.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/delete.php';if (isset($_POST['delete'])){	if ($is_admmod)		confirm_referrer('delete.php');	require PUN_ROOT.'include/search_idx.php';	if ($is_topic_post)	{		// Delete the topic and all of its posts		delete_topic($cur_post['tid']);		update_forum($cur_post['fid']);		redirect('viewforum.php?id='.$cur_post['fid'], $lang_delete['Topic del redirect']);	}	else	{		// Delete just this one post		delete_post($id, $cur_post['tid']);		update_forum($cur_post['fid']);		// Redirect towards the previous post		$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$cur_post['tid'].' AND id < '.$id.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());		$post_id = $db->result($result);		redirect('viewtopic.php?pid='.$post_id.'#p'.$post_id, $lang_delete['Post del redirect']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_delete['Delete post']);define ('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';require PUN_ROOT.'include/parser.php';$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?pid=<?php echo $id ?>#p<?php echo $id ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_delete['Delete post'] ?></strong></li>		</ul>	</div></div><div class="blockform">	<h2><span><?php echo $lang_delete['Delete post'] ?></span></h2>	<div class="box">		<form method="post" action="delete.php?id=<?php echo $id ?>">			<div class="inform">				<div class="forminfo">					<h3><span><?php printf($is_topic_post ? $lang_delete['Topic by'] : $lang_delete['Reply by'], '<strong>'.pun_htmlspecialchars($cur_post['poster']).'</strong>', format_time($cur_post['posted'])) ?></span></h3>					<p><?php echo ($is_topic_post) ? '<strong>'.$lang_delete['Topic warning'].'</strong>' : '<strong>'.$lang_delete['Warning'].'</strong>' ?><br /><?php echo $lang_delete['Delete info'] ?></p>				</div>			</div>			<p class="buttons"><input type="submit" name="delete" value="<?php echo $lang_delete['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><div id="postreview">	<div class="blockpost">		<div class="box">			<div class="inbox">				<div class="postbody">					<div class="postleft">						<dl>							<dt><strong><?php echo pun_htmlspecialchars($cur_post['poster']) ?></strong></dt>							<dd><span><?php echo format_time($cur_post['posted']) ?></span></dd>						</dl>					</div>					<div class="postright">						<div class="postmsg">							<?php echo $cur_post['message']."\n" ?>						</div>					</div>				</div>				<div class="clearer"></div>			</div>		</div>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';if ($pun_user['g_read_board'] == '0')	message($lang_common['No view'], false, '403 Forbidden');$id = isset($_GET['id']) ? intval($_GET['id']) : 0;if ($id < 1)	message($lang_common['Bad request'], false, '404 Not Found');// Fetch some info about the post, the topic and the forum$result = $db->query('SELECT f.id AS fid, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.id AS tid, t.subject, t.posted, t.first_post_id, t.sticky, t.closed, p.poster, p.poster_id, p.message, p.hide_smilies FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND p.id='.$id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_post = $db->fetch_assoc($result);// Sort out who the moderators are and if we are currently a moderator (or an admin)$mods_array = ($cur_post['moderators'] != '') ? unserialize($cur_post['moderators']) : array();$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_moderator'] == '1' && array_key_exists($pun_user['username'], $mods_array))) ? true : false;$can_edit_subject = $id == $cur_post['first_post_id'];if ($pun_config['o_censoring'] == '1'){	$cur_post['subject'] = censor_words($cur_post['subject']);	$cur_post['message'] = censor_words($cur_post['message']);}// Do we have permission to edit this post?if (($pun_user['g_edit_posts'] == '0' ||	$cur_post['poster_id'] != $pun_user['id'] ||	$cur_post['closed'] == '1') &&	!$is_admmod)	message($lang_common['No permission'], false, '403 Forbidden');// Load the post.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/post.php';// Start with a clean slate$errors = array();if (isset($_POST['form_sent'])){	if ($is_admmod)		confirm_referrer('edit.php');	// If it's a topic it must contain a subject	if ($can_edit_subject)	{		$subject = pun_trim($_POST['req_subject']);		if ($pun_config['o_censoring'] == '1')			$censored_subject = pun_trim(censor_words($subject));		if ($subject == '')			$errors[] = $lang_post['No subject'];		else if ($pun_config['o_censoring'] == '1' && $censored_subject == '')			$errors[] = $lang_post['No subject after censoring'];		else if (pun_strlen($subject) > 70)			$errors[] = $lang_post['Too long subject'];		else if ($pun_config['p_subject_all_caps'] == '0' && is_all_uppercase($subject) && !$pun_user['is_admmod'])			$errors[] = $lang_post['All caps subject'];	}	// Clean up message from POST	$message = pun_linebreaks(pun_trim($_POST['req_message']));	// Here we use strlen() not pun_strlen() as we want to limit the post to PUN_MAX_POSTSIZE bytes, not characters	if (strlen($message) > PUN_MAX_POSTSIZE)		$errors[] = sprintf($lang_post['Too long message'], forum_number_format(PUN_MAX_POSTSIZE));	else if ($pun_config['p_message_all_caps'] == '0' && is_all_uppercase($message) && !$pun_user['is_admmod'])		$errors[] = $lang_post['All caps message'];	// Validate BBCode syntax	if ($pun_config['p_message_bbcode'] == '1')	{		require PUN_ROOT.'include/parser.php';		$message = preparse_bbcode($message, $errors);	}	if (empty($errors))	{		if ($message == '')			$errors[] = $lang_post['No message'];		else if ($pun_config['o_censoring'] == '1')		{			// Censor message to see if that causes problems			$censored_message = pun_trim(censor_words($message));			if ($censored_message == '')				$errors[] = $lang_post['No message after censoring'];		}	}	$hide_smilies = isset($_POST['hide_smilies']) ? '1' : '0';	$stick_topic = isset($_POST['stick_topic']) ? '1' : '0';	if (!$is_admmod)		$stick_topic = $cur_post['sticky'];	// Replace four-byte characters (MySQL cannot handle them)	$message = strip_bad_multibyte_chars($message);	// Did everything go according to plan?	if (empty($errors) && !isset($_POST['preview']))	{		$edited_sql = (!isset($_POST['silent']) || !$is_admmod) ? ', edited='.time().', edited_by=\''.$db->escape($pun_user['username']).'\'' : '';		require PUN_ROOT.'include/search_idx.php';		if ($can_edit_subject)		{			// Update the topic and any redirect topics			$db->query('UPDATE '.$db->prefix.'topics SET subject=\''.$db->escape($subject).'\', sticky='.$stick_topic.' WHERE id='.$cur_post['tid'].' OR moved_to='.$cur_post['tid']) or error('Unable to update topic', __FILE__, __LINE__, $db->error());			// We changed the subject, so we need to take that into account when we update the search words			update_search_index('edit', $id, $message, $subject);		}		else			update_search_index('edit', $id, $message);		// Update the post		$db->query('UPDATE '.$db->prefix.'posts SET message=\''.$db->escape($message).'\', hide_smilies='.$hide_smilies.$edited_sql.' WHERE id='.$id) or error('Unable to update post', __FILE__, __LINE__, $db->error());		redirect('viewtopic.php?pid='.$id.'#p'.$id, $lang_post['Edit redirect']);	}}$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_post['Edit post']);$required_fields = array('req_subject' => $lang_common['Subject'], 'req_message' => $lang_common['Message']);$focus_element = array('edit', 'req_message');define('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';$cur_index = 1;?><div class="linkst">	<div class="inbox">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $cur_post['fid'] ?>"><?php echo pun_htmlspecialchars($cur_post['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?id=<?php echo $cur_post['tid'] ?>"><?php echo pun_htmlspecialchars($cur_post['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_post['Edit post'] ?></strong></li>		</ul>	</div></div><?php// If there are errors, we display themif (!empty($errors)){?><div id="posterror" class="block">	<h2><span><?php echo $lang_post['Post errors'] ?></span></h2>	<div class="box">		<div class="inbox error-info">			<p><?php echo $lang_post['Post errors info'] ?></p>			<ul class="error-list"><?php	foreach ($errors as $cur_error)		echo "\t\t\t\t".'<li><strong>'.$cur_error.'</strong></li>'."\n";?>			</ul>		</div>	</div></div><?php}else if (isset($_POST['preview'])){	require_once PUN_ROOT.'include/parser.php';	$preview_message = parse_message($message, $hide_smilies);?><div id="postpreview" class="blockpost">	<h2><span><?php echo $lang_post['Post preview'] ?></span></h2>	<div class="box">		<div class="inbox">			<div class="postbody">				<div class="postright">					<div class="postmsg">						<?php echo $preview_message."\n" ?>					</div>				</div>			</div>		</div>	</div></div><?php}?><div id="editform" class="blockform">	<h2><span><?php echo $lang_post['Edit post'] ?></span></h2>	<div class="box">		<form id="edit" method="post" action="edit.php?id=<?php echo $id ?>&amp;action=edit" onsubmit="return process_form(this)">			<div class="inform">				<fieldset>					<legend><?php echo $lang_post['Edit post legend'] ?></legend>					<input type="hidden" name="form_sent" value="1" />					<div class="infldset txtarea"><?php if ($can_edit_subject): ?>						<label class="required"><strong><?php echo $lang_common['Subject'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<input class="longinput" type="text" name="req_subject" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" value="<?php echo pun_htmlspecialchars(isset($_POST['req_subject']) ? $_POST['req_subject'] : $cur_post['subject']) ?>" /><br /></label><?php endif; ?>						<label class="required"><strong><?php echo $lang_common['Message'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br />						<textarea name="req_message" rows="20" cols="95" tabindex="<?php echo $cur_index++ ?>"><?php echo pun_htmlspecialchars(isset($_POST['req_message']) ? $message : $cur_post['message']) ?></textarea><br /></label>						<ul class="bblinks">							<li><span><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#url" onclick="window.open(this.href); return false;"><?php echo $lang_common['url tag'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1' && $pun_user['g_post_links'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a> <?php echo ($pun_config['p_message_bbcode'] == '1' && $pun_config['p_message_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>							<li><span><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a> <?php echo ($pun_config['o_smilies'] == '1') ? $lang_common['on'] : $lang_common['off']; ?></span></li>						</ul>					</div>				</fieldset><?php$checkboxes = array();if ($can_edit_subject && $is_admmod){	if (isset($_POST['stick_topic']) || $cur_post['sticky'] == '1')		$checkboxes[] = '<label><input type="checkbox" name="stick_topic" value="1" checked="checked" tabindex="'.($cur_index++).'" />'.$lang_common['Stick topic'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="stick_topic" value="1" tabindex="'.($cur_index++).'" />'.$lang_common['Stick topic'].'<br /></label>';}if ($pun_config['o_smilies'] == '1'){	if (isset($_POST['hide_smilies']) || $cur_post['hide_smilies'] == '1')		$checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" checked="checked" tabindex="'.($cur_index++).'" />'.$lang_post['Hide smilies'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" tabindex="'.($cur_index++).'" />'.$lang_post['Hide smilies'].'<br /></label>';}if ($is_admmod){	if ((isset($_POST['form_sent']) && isset($_POST['silent'])) || !isset($_POST['form_sent']))		$checkboxes[] = '<label><input type="checkbox" name="silent" value="1" tabindex="'.($cur_index++).'" checked="checked" />'.$lang_post['Silent edit'].'<br /></label>';	else		$checkboxes[] = '<label><input type="checkbox" name="silent" value="1" tabindex="'.($cur_index++).'" />'.$lang_post['Silent edit'].'<br /></label>';}if (!empty($checkboxes)){?>			</div>			<div class="inform">				<fieldset>					<legend><?php echo $lang_common['Options'] ?></legend>					<div class="infldset">						<div class="rbox">							<?php echo implode("\n\t\t\t\t\t\t\t", $checkboxes)."\n" ?>						</div>					</div>				</fieldset><?php	}?>			</div>			<p class="buttons"><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="s" /> <input type="submit" name="preview" value="<?php echo $lang_post['Preview'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="p" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?phprequire PUN_ROOT.'footer.php';
<?php/** * Copyright (C) 2008-2012 FluxBB * based on code by Rickard Andersson copyright (C) 2002-2008 PunBB * License: http://www.gnu.org/licenses/gpl.html GPL version 2 or higher */define('PUN_ROOT', dirname(__FILE__).'/');require PUN_ROOT.'include/common.php';// This particular function doesn't require forum-based moderator access. It can be used// by all moderators and adminsif (isset($_GET['get_host'])){	if (!$pun_user['is_admmod'])		message($lang_common['No permission'], false, '403 Forbidden');	// Is get_host an IP address or a post ID?	if (@preg_match('%^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$%', $_GET['get_host']) || @preg_match('%^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$%', $_GET['get_host']))		$ip = $_GET['get_host'];	else	{		$get_host = intval($_GET['get_host']);		if ($get_host < 1)			message($lang_common['Bad request']);		$result = $db->query('SELECT poster_ip FROM '.$db->prefix.'posts WHERE id='.$get_host) or error('Unable to fetch post IP address', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request'], false, '404 Not Found');		$ip = $db->result($result);	}	// Load the misc.php language file	require PUN_ROOT.'lang/'.$pun_user['language'].'/misc.php';	message(sprintf($lang_misc['Host info 1'], $ip).'<br />'.sprintf($lang_misc['Host info 2'], @gethostbyaddr($ip)).'<br /><br /><a href="admin_users.php?show_users='.$ip.'">'.$lang_misc['Show more users'].'</a>');}// All other functions require moderator/admin access$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;if ($fid < 1)	message($lang_common['Bad request'], false, '404 Not Found');$result = $db->query('SELECT moderators FROM '.$db->prefix.'forums WHERE id='.$fid) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());$moderators = $db->result($result);$mods_array = ($moderators != '') ? unserialize($moderators) : array();if ($pun_user['g_id'] != PUN_ADMIN && ($pun_user['g_moderator'] == '0' || !array_key_exists($pun_user['username'], $mods_array)))	message($lang_common['No permission'], false, '403 Forbidden');// Get topic/forum tracking dataif (!$pun_user['is_guest'])	$tracked_topics = get_tracked_topics();// Load the misc.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/misc.php';// All other topic moderation features require a topic ID in GETif (isset($_GET['tid'])){	$tid = intval($_GET['tid']);	if ($tid < 1)		message($lang_common['Bad request'], false, '404 Not Found');	// Fetch some info about the topic	$result = $db->query('SELECT t.subject, t.num_replies, t.first_post_id, f.id AS forum_id, forum_name FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid.' AND t.id='.$tid.' AND t.moved_to IS NULL') or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());	if (!$db->num_rows($result))		message($lang_common['Bad request'], false, '404 Not Found');	$cur_topic = $db->fetch_assoc($result);	// Delete one or more posts	if (isset($_POST['delete_posts']) || isset($_POST['delete_posts_comply']))	{		$posts = isset($_POST['posts']) ? $_POST['posts'] : array();		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['delete_posts_comply']))		{			confirm_referrer('moderate.php');			if (@preg_match('%[^0-9,]%', $posts))				message($lang_common['Bad request']);			// Verify that the post IDs are valid			$result = $db->query('SELECT 1 FROM '.$db->prefix.'posts WHERE id IN('.$posts.') AND topic_id='.$tid) or error('Unable to check posts', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result) != substr_count($posts, ',') + 1)				message($lang_common['Bad request']);			// Delete the posts			$db->query('DELETE FROM '.$db->prefix.'posts WHERE id IN('.$posts.')') or error('Unable to delete posts', __FILE__, __LINE__, $db->error());			require PUN_ROOT.'include/search_idx.php';			strip_search_index($posts);			// Get last_post, last_post_id, and last_poster for the topic after deletion			$result = $db->query('SELECT id, poster, posted FROM '.$db->prefix.'posts WHERE topic_id='.$tid.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());			$last_post = $db->fetch_assoc($result);			// How many posts did we just delete?			$num_posts_deleted = substr_count($posts, ',') + 1;			// Update the topic			$db->query('UPDATE '.$db->prefix.'topics SET last_post='.$last_post['posted'].', last_post_id='.$last_post['id'].', last_poster=\''.$db->escape($last_post['poster']).'\', num_replies=num_replies-'.$num_posts_deleted.' WHERE id='.$tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());			update_forum($fid);			redirect('viewtopic.php?id='.$tid, $lang_misc['Delete posts redirect']);		}		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Moderate']);		define('PUN_ACTIVE_PAGE', 'index');		require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_misc['Delete posts'] ?></span></h2>	<div class="box">		<form method="post" action="moderate.php?fid=<?php echo $fid ?>&amp;tid=<?php echo $tid ?>">			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Confirm delete legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="posts" value="<?php echo implode(',', array_map('intval', array_keys($posts))) ?>" />						<p><?php echo $lang_misc['Delete posts comply'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="delete_posts_comply" value="<?php echo $lang_misc['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php		require PUN_ROOT.'footer.php';	}	else if (isset($_POST['split_posts']) || isset($_POST['split_posts_comply']))	{		$posts = isset($_POST['posts']) ? $_POST['posts'] : array();		if (empty($posts))			message($lang_misc['No posts selected']);		if (isset($_POST['split_posts_comply']))		{			confirm_referrer('moderate.php');			if (@preg_match('%[^0-9,]%', $posts))				message($lang_common['Bad request']);			$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;			if ($move_to_forum < 1)				message($lang_common['Bad request']);			// How many posts did we just split off?			$num_posts_splitted = substr_count($posts, ',') + 1;			// Verify that the post IDs are valid			$result = $db->query('SELECT 1 FROM '.$db->prefix.'posts WHERE id IN('.$posts.') AND topic_id='.$tid) or error('Unable to check posts', __FILE__, __LINE__, $db->error());			if ($db->num_rows($result) != $num_posts_splitted)				message($lang_common['Bad request']);			// Verify that the move to forum ID is valid			$result = $db->query('SELECT 1 FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.group_id='.$pun_user['g_id'].' AND fp.forum_id='.$move_to_forum.') WHERE f.redirect_url IS NULL AND (fp.post_topics IS NULL OR fp.post_topics=1)') or error('Unable to fetch forum permissions', __FILE__, __LINE__, $db->error());			if (!$db->num_rows($result))				message($lang_common['Bad request']);			// Load the post.php language file			require PUN_ROOT.'lang/'.$pun_user['language'].'/post.php';			// Check subject			$new_subject = isset($_POST['new_subject']) ? pun_trim($_POST['new_subject']) : '';			if ($new_subject == '')				message($lang_post['No subject']);			else if (pun_strlen($new_subject) > 70)				message($lang_post['Too long subject']);			// Get data from the new first post			$result = $db->query('SELECT p.id, p.poster, p.posted FROM '.$db->prefix.'posts AS p WHERE id IN('.$posts.') ORDER BY p.id ASC LIMIT 1') or error('Unable to get first post', __FILE__, __LINE__, $db->error());			$first_post_data = $db->fetch_assoc($result);			// Create the new topic			$db->query('INSERT INTO '.$db->prefix.'topics (poster, subject, posted, first_post_id, forum_id) VALUES (\''.$db->escape($first_post_data['poster']).'\', \''.$db->escape($new_subject).'\', '.$first_post_data['posted'].', '.$first_post_data['id'].', '.$move_to_forum.')') or error('Unable to create new topic', __FILE__, __LINE__, $db->error());			$new_tid = $db->insert_id();			// Move the posts to the new topic			$db->query('UPDATE '.$db->prefix.'posts SET topic_id='.$new_tid.' WHERE id IN('.$posts.')') or error('Unable to move posts into new topic', __FILE__, __LINE__, $db->error());			// Apply every subscription to both topics			$db->query('INSERT INTO '.$db->prefix.'topic_subscriptions (user_id, topic_id) SELECT user_id, '.$new_tid.' FROM '.$db->prefix.'topic_subscriptions WHERE topic_id='.$tid) or error('Unable to copy existing subscriptions', __FILE__, __LINE__, $db->error());			// Get last_post, last_post_id, and last_poster from the topic and update it			$result = $db->query('SELECT id, poster, posted FROM '.$db->prefix.'posts WHERE topic_id='.$tid.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());			$last_post_data = $db->fetch_assoc($result);			$db->query('UPDATE '.$db->prefix.'topics SET last_post='.$last_post_data['posted'].', last_post_id='.$last_post_data['id'].', last_poster=\''.$db->escape($last_post_data['poster']).'\', num_replies=num_replies-'.$num_posts_splitted.' WHERE id='.$tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());			// Get last_post, last_post_id, and last_poster from the new topic and update it			$result = $db->query('SELECT id, poster, posted FROM '.$db->prefix.'posts WHERE topic_id='.$new_tid.' ORDER BY id DESC LIMIT 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());			$last_post_data = $db->fetch_assoc($result);			$db->query('UPDATE '.$db->prefix.'topics SET last_post='.$last_post_data['posted'].', last_post_id='.$last_post_data['id'].', last_poster=\''.$db->escape($last_post_data['poster']).'\', num_replies='.($num_posts_splitted-1).' WHERE id='.$new_tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());			update_forum($fid);			update_forum($move_to_forum);			redirect('viewtopic.php?id='.$new_tid, $lang_misc['Split posts redirect']);		}		$result = $db->query('SELECT c.id AS cid, c.cat_name, f.id AS fid, f.forum_name FROM '.$db->prefix.'categories AS c INNER JOIN '.$db->prefix.'forums AS f ON c.id=f.cat_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.post_topics IS NULL OR fp.post_topics=1) AND f.redirect_url IS NULL ORDER BY c.disp_position, c.id, f.disp_position') or error('Unable to fetch category/forum list', __FILE__, __LINE__, $db->error());		$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Moderate']);		$focus_element = array('subject','new_subject');		define('PUN_ACTIVE_PAGE', 'index');		require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_misc['Split posts'] ?></span></h2>	<div class="box">		<form id="subject" method="post" action="moderate.php?fid=<?php echo $fid ?>&amp;tid=<?php echo $tid ?>">			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Confirm split legend'] ?></legend>					<div class="infldset">						<input type="hidden" name="posts" value="<?php echo implode(',', array_map('intval', array_keys($posts))) ?>" />						<label class="required"><strong><?php echo $lang_misc['New subject'] ?> <span><?php echo $lang_common['Required'] ?></span></strong><br /><input type="text" name="new_subject" size="80" maxlength="70" /><br /></label>						<label><?php echo $lang_misc['Move to'] ?>						<br /><select name="move_to_forum"><?php	$cur_category = 0;	while ($cur_forum = $db->fetch_assoc($result))	{		if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t\t\t\t".'<optgroup label="'.pun_htmlspecialchars($cur_forum['cat_name']).'">'."\n";			$cur_category = $cur_forum['cid'];		}		echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_forum['fid'].'"'.($fid == $cur_forum['fid'] ? ' selected="selected"' : '').'>'.pun_htmlspecialchars($cur_forum['forum_name']).'</option>'."\n";	}?>							</optgroup>						</select>						<br /></label>						<p><?php echo $lang_misc['Split posts comply'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="split_posts_comply" value="<?php echo $lang_misc['Split'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php		require PUN_ROOT.'footer.php';	}	// Show the moderate posts view	// Load the viewtopic.php language file	require PUN_ROOT.'lang/'.$pun_user['language'].'/topic.php';	// Used to disable the Move and Delete buttons if there are no replies to this topic	$button_status = ($cur_topic['num_replies'] == 0) ? ' disabled="disabled"' : '';	// Determine the post offset (based on $_GET['p'])	$num_pages = ceil(($cur_topic['num_replies'] + 1) / $pun_user['disp_posts']);	$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);	$start_from = $pun_user['disp_posts'] * ($p - 1);	// Generate paging links	$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'moderate.php?fid='.$fid.'&amp;tid='.$tid);	if ($pun_config['o_censoring'] == '1')		$cur_topic['subject'] = censor_words($cur_topic['subject']);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), pun_htmlspecialchars($cur_topic['forum_name']), pun_htmlspecialchars($cur_topic['subject']));	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $fid ?>"><?php echo pun_htmlspecialchars($cur_topic['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?id=<?php echo $tid ?>"><?php echo pun_htmlspecialchars($cur_topic['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_misc['Moderate'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><form method="post" action="moderate.php?fid=<?php echo $fid ?>&amp;tid=<?php echo $tid ?>"><?php	require PUN_ROOT.'include/parser.php';	$post_count = 0; // Keep track of post numbers	// Retrieve a list of post IDs, LIMIT is (really) expensive so we only fetch the IDs here then later fetch the remaining data	$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id='.$tid.' ORDER BY id LIMIT '.$start_from.','.$pun_user['disp_posts']) or error('Unable to fetch post IDs', __FILE__, __LINE__, $db->error());	$post_ids = array();	for ($i = 0;$cur_post_id = $db->result($result, $i);$i++)		$post_ids[] = $cur_post_id;	// Retrieve the posts (and their respective poster)	$result = $db->query('SELECT u.title, u.num_posts, g.g_id, g.g_user_title, p.id, p.poster, p.poster_id, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'users AS u ON u.id=p.poster_id INNER JOIN '.$db->prefix.'groups AS g ON g.g_id=u.group_id WHERE p.id IN ('.implode(',', $post_ids).') ORDER BY p.id', true) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());	while ($cur_post = $db->fetch_assoc($result))	{		$post_count++;		// If the poster is a registered user		if ($cur_post['poster_id'] > 1)		{			if ($pun_user['g_view_users'] == '1')				$poster = '<a href="profile.php?id='.$cur_post['poster_id'].'">'.pun_htmlspecialchars($cur_post['poster']).'</a>';			else				$poster = pun_htmlspecialchars($cur_post['poster']);			// get_title() requires that an element 'username' be present in the array			$cur_post['username'] = $cur_post['poster'];			$user_title = get_title($cur_post);			if ($pun_config['o_censoring'] == '1')				$user_title = censor_words($user_title);		}		// If the poster is a guest (or a user that has been deleted)		else		{			$poster = pun_htmlspecialchars($cur_post['poster']);			$user_title = $lang_topic['Guest'];		}		// Perform the main parsing of the message (BBCode, smilies, censor words etc)		$cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']);?><div id="p<?php echo $cur_post['id'] ?>" class="blockpost<?php if($cur_post['id'] == $cur_topic['first_post_id']) echo ' firstpost' ?><?php echo ($post_count % 2 == 0) ? ' roweven' : ' rowodd' ?><?php if ($post_count == 1) echo ' blockpost1' ?>">	<h2><span><span class="conr">#<?php echo ($start_from + $post_count) ?></span> <a href="viewtopic.php?pid=<?php echo $cur_post['id'].'#p'.$cur_post['id'] ?>"><?php echo format_time($cur_post['posted']) ?></a></span></h2>	<div class="box">		<div class="inbox">			<div class="postbody">				<div class="postleft">					<dl>						<dt><strong><?php echo $poster ?></strong></dt>						<dd class="usertitle"><strong><?php echo $user_title ?></strong></dd>					</dl>				</div>				<div class="postright">					<h3 class="nosize"><?php echo $lang_common['Message'] ?></h3>					<div class="postmsg">						<?php echo $cur_post['message']."\n" ?><?php if ($cur_post['edited'] != '') echo "\t\t\t\t\t\t".'<p class="postedit"><em>'.$lang_topic['Last edit'].' '.pun_htmlspecialchars($cur_post['edited_by']).' ('.format_time($cur_post['edited']).')</em></p>'."\n"; ?>					</div>				</div>			</div>		</div>		<div class="inbox">			<div class="postfoot clearb">				<div class="postfootright"><?php echo ($cur_post['id'] != $cur_topic['first_post_id']) ? '<p class="multidelete"><label><strong>'.$lang_misc['Select'].'</strong>&#160;<input type="checkbox" name="posts['.$cur_post['id'].']" value="1" /></label></p>' : '<p>'.$lang_misc['Cannot select first'].'</p>' ?></div>			</div>		</div>	</div></div><?php	}?><div class="postlinksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p>			<p class="conr modbuttons"><input type="submit" name="split_posts" value="<?php echo $lang_misc['Split'] ?>"<?php echo $button_status ?> /> <input type="submit" name="delete_posts" value="<?php echo $lang_misc['Delete'] ?>"<?php echo $button_status ?> /></p>			<div class="clearer"></div>		</div>		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $fid ?>"><?php echo pun_htmlspecialchars($cur_topic['forum_name']) ?></a></li>			<li><span>&#160;</span><a href="viewtopic.php?id=<?php echo $tid ?>"><?php echo pun_htmlspecialchars($cur_topic['subject']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_misc['Moderate'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div></form><?php	require PUN_ROOT.'footer.php';}// Move one or more topicsif (isset($_REQUEST['move_topics']) || isset($_POST['move_topics_to'])){	if (isset($_POST['move_topics_to']))	{		confirm_referrer('moderate.php');		if (@preg_match('%[^0-9,]%', $_POST['topics']))			message($lang_common['Bad request']);		$topics = explode(',', $_POST['topics']);		$move_to_forum = isset($_POST['move_to_forum']) ? intval($_POST['move_to_forum']) : 0;		if (empty($topics) || $move_to_forum < 1)			message($lang_common['Bad request']);		// Verify that the topic IDs are valid		$result = $db->query('SELECT 1 FROM '.$db->prefix.'topics WHERE id IN('.implode(',',$topics).') AND forum_id='.$fid) or error('Unable to check topics', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result) != count($topics))			message($lang_common['Bad request']);		// Verify that the move to forum ID is valid		$result = $db->query('SELECT 1 FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.group_id='.$pun_user['g_id'].' AND fp.forum_id='.$move_to_forum.') WHERE f.redirect_url IS NULL AND (fp.post_topics IS NULL OR fp.post_topics=1)') or error('Unable to fetch forum permissions', __FILE__, __LINE__, $db->error());		if (!$db->num_rows($result))			message($lang_common['Bad request']);		// Delete any redirect topics if there are any (only if we moved/copied the topic back to where it was once moved from)		$db->query('DELETE FROM '.$db->prefix.'topics WHERE forum_id='.$move_to_forum.' AND moved_to IN('.implode(',',$topics).')') or error('Unable to delete redirect topics', __FILE__, __LINE__, $db->error());		// Move the topic(s)		$db->query('UPDATE '.$db->prefix.'topics SET forum_id='.$move_to_forum.' WHERE id IN('.implode(',',$topics).')') or error('Unable to move topics', __FILE__, __LINE__, $db->error());		// Should we create redirect topics?		if (isset($_POST['with_redirect']))		{			foreach ($topics as $cur_topic)			{				// Fetch info for the redirect topic				$result = $db->query('SELECT poster, subject, posted, last_post FROM '.$db->prefix.'topics WHERE id='.$cur_topic) or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());				$moved_to = $db->fetch_assoc($result);				// Create the redirect topic				$db->query('INSERT INTO '.$db->prefix.'topics (poster, subject, posted, last_post, moved_to, forum_id) VALUES(\''.$db->escape($moved_to['poster']).'\', \''.$db->escape($moved_to['subject']).'\', '.$moved_to['posted'].', '.$moved_to['last_post'].', '.$cur_topic.', '.$fid.')') or error('Unable to create redirect topic', __FILE__, __LINE__, $db->error());			}		}		update_forum($fid); // Update the forum FROM which the topic was moved		update_forum($move_to_forum); // Update the forum TO which the topic was moved		$redirect_msg = (count($topics) > 1) ? $lang_misc['Move topics redirect'] : $lang_misc['Move topic redirect'];		redirect('viewforum.php?id='.$move_to_forum, $redirect_msg);	}	if (isset($_POST['move_topics']))	{		$topics = isset($_POST['topics']) ? $_POST['topics'] : array();		if (empty($topics))			message($lang_misc['No topics selected']);		$topics = implode(',', array_map('intval', array_keys($topics)));		$action = 'multi';	}	else	{		$topics = intval($_GET['move_topics']);		if ($topics < 1)			message($lang_common['Bad request']);		$action = 'single';	}	$result = $db->query('SELECT c.id AS cid, c.cat_name, f.id AS fid, f.forum_name FROM '.$db->prefix.'categories AS c INNER JOIN '.$db->prefix.'forums AS f ON c.id=f.cat_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.post_topics IS NULL OR fp.post_topics=1) AND f.redirect_url IS NULL ORDER BY c.disp_position, c.id, f.disp_position') or error('Unable to fetch category/forum list', __FILE__, __LINE__, $db->error());	if ($db->num_rows($result) < 2)		message($lang_misc['Nowhere to move']);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Moderate']);	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo ($action == 'single') ? $lang_misc['Move topic'] : $lang_misc['Move topics'] ?></span></h2>	<div class="box">		<form method="post" action="moderate.php?fid=<?php echo $fid ?>">			<div class="inform">			<input type="hidden" name="topics" value="<?php echo $topics ?>" />				<fieldset>					<legend><?php echo $lang_misc['Move legend'] ?></legend>					<div class="infldset">						<label><?php echo $lang_misc['Move to'] ?>						<br /><select name="move_to_forum"><?php	$cur_category = 0;	while ($cur_forum = $db->fetch_assoc($result))	{		if ($cur_forum['cid'] != $cur_category) // A new category since last iteration?		{			if ($cur_category)				echo "\t\t\t\t\t\t\t".'</optgroup>'."\n";			echo "\t\t\t\t\t\t\t".'<optgroup label="'.pun_htmlspecialchars($cur_forum['cat_name']).'">'."\n";			$cur_category = $cur_forum['cid'];		}		if ($cur_forum['fid'] != $fid)			echo "\t\t\t\t\t\t\t\t".'<option value="'.$cur_forum['fid'].'">'.pun_htmlspecialchars($cur_forum['forum_name']).'</option>'."\n";	}?>							</optgroup>						</select>						<br /></label>						<div class="rbox">							<label><input type="checkbox" name="with_redirect" value="1"<?php if ($action == 'single') echo ' checked="checked"' ?> /><?php echo $lang_misc['Leave redirect'] ?><br /></label>						</div>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="move_topics_to" value="<?php echo $lang_misc['Move'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}// Merge two or more topicselse if (isset($_POST['merge_topics']) || isset($_POST['merge_topics_comply'])){	if (isset($_POST['merge_topics_comply']))	{		confirm_referrer('moderate.php');		if (@preg_match('%[^0-9,]%', $_POST['topics']))			message($lang_common['Bad request']);		$topics = explode(',', $_POST['topics']);		if (count($topics) < 2)			message($lang_misc['Not enough topics selected']);		// Verify that the topic IDs are valid (redirect links will point to the merged topic after the merge)		$result = $db->query('SELECT id FROM '.$db->prefix.'topics WHERE id IN('.implode(',', $topics).') AND forum_id='.$fid.' ORDER BY id ASC') or error('Unable to check topics', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result) != count($topics))			message($lang_common['Bad request']);		// The topic that we are merging into is the one with the smallest ID		$merge_to_tid = $db->result($result);		// Make any redirect topics point to our new, merged topic		$query = 'UPDATE '.$db->prefix.'topics SET moved_to='.$merge_to_tid.' WHERE moved_to IN('.implode(',', $topics).')';		// Should we create redirect topics?		if (isset($_POST['with_redirect']))			$query .= ' OR (id IN('.implode(',', $topics).') AND id != '.$merge_to_tid.')';		$db->query($query) or error('Unable to make redirection topics', __FILE__, __LINE__, $db->error());		// Merge the posts into the topic		$db->query('UPDATE '.$db->prefix.'posts SET topic_id='.$merge_to_tid.' WHERE topic_id IN('.implode(',', $topics).')') or error('Unable to merge the posts into the topic', __FILE__, __LINE__, $db->error());		// Update any subscriptions		$result = $db->query('SELECT user_id FROM '.$db->prefix.'topic_subscriptions WHERE topic_id IN ('.implode(',', $topics).')') or error('Unable to fetch subscriptions of merged topics', __FILE__, __LINE__, $db->error());		$subscribed_users = array();		while ($cur_user_id = $db->result($result))			$subscribed_users[] = $cur_user_id;		$subscribed_users = array_unique($subscribed_users);		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE topic_id IN ('.implode(',', $topics).')') or error('Unable to delete subscriptions of merged topics', __FILE__, __LINE__, $db->error());		foreach ($subscribed_users as $cur_user_id)			$db->query('INSERT INTO '.$db->prefix.'topic_subscriptions (topic_id, user_id) VALUES ('.$merge_to_tid.', '.$cur_user_id.')') or error('Unable to re-enter subscriptions for merge topic', __FILE__, __LINE__, $db->error());		// Without redirection the old topics are removed		if (!isset($_POST['with_redirect']))			$db->query('DELETE FROM '.$db->prefix.'topics WHERE id IN('.implode(',', $topics).') AND id != '.$merge_to_tid) or error('Unable to delete old topics', __FILE__, __LINE__, $db->error());		// Count number of replies in the topic		$result = $db->query('SELECT COUNT(id) FROM '.$db->prefix.'posts WHERE topic_id='.$merge_to_tid) or error('Unable to fetch post count for topic', __FILE__, __LINE__, $db->error());		$num_replies = $db->result($result, 0) - 1;		// Get last_post, last_post_id and last_poster		$result = $db->query('SELECT posted, id, poster FROM '.$db->prefix.'posts WHERE topic_id='.$merge_to_tid.' ORDER BY id DESC LIMIT 1') or error('Unable to get last post info', __FILE__, __LINE__, $db->error());		list($last_post, $last_post_id, $last_poster) = $db->fetch_row($result);		// Update topic		$db->query('UPDATE '.$db->prefix.'topics SET num_replies='.$num_replies.', last_post='.$last_post.', last_post_id='.$last_post_id.', last_poster=\''.$db->escape($last_poster).'\' WHERE id='.$merge_to_tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());		// Update the forum FROM which the topic was moved and redirect		update_forum($fid);		redirect('viewforum.php?id='.$fid, $lang_misc['Merge topics redirect']);	}	$topics = isset($_POST['topics']) ? $_POST['topics'] : array();	if (count($topics) < 2)		message($lang_misc['Not enough topics selected']);	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Moderate']);	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_misc['Merge topics'] ?></span></h2>	<div class="box">		<form method="post" action="moderate.php?fid=<?php echo $fid ?>">			<input type="hidden" name="topics" value="<?php echo implode(',', array_map('intval', array_keys($topics))) ?>" />			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Confirm merge legend'] ?></legend>					<div class="infldset">						<div class="rbox">							<label><input type="checkbox" name="with_redirect" value="1" /><?php echo $lang_misc['Leave redirect'] ?><br /></label>						</div>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="merge_topics_comply" value="<?php echo $lang_misc['Merge'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}// Delete one or more topicselse if (isset($_POST['delete_topics']) || isset($_POST['delete_topics_comply'])){	$topics = isset($_POST['topics']) ? $_POST['topics'] : array();	if (empty($topics))		message($lang_misc['No topics selected']);	if (isset($_POST['delete_topics_comply']))	{		confirm_referrer('moderate.php');		if (@preg_match('%[^0-9,]%', $topics))			message($lang_common['Bad request']);		require PUN_ROOT.'include/search_idx.php';		// Verify that the topic IDs are valid		$result = $db->query('SELECT 1 FROM '.$db->prefix.'topics WHERE id IN('.$topics.') AND forum_id='.$fid) or error('Unable to check topics', __FILE__, __LINE__, $db->error());		if ($db->num_rows($result) != substr_count($topics, ',') + 1)			message($lang_common['Bad request']);		// Delete the topics and any redirect topics		$db->query('DELETE FROM '.$db->prefix.'topics WHERE id IN('.$topics.') OR moved_to IN('.$topics.')') or error('Unable to delete topic', __FILE__, __LINE__, $db->error());		// Delete any subscriptions		$db->query('DELETE FROM '.$db->prefix.'topic_subscriptions WHERE topic_id IN('.$topics.')') or error('Unable to delete subscriptions', __FILE__, __LINE__, $db->error());		// Create a list of the post IDs in this topic and then strip the search index		$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE topic_id IN('.$topics.')') or error('Unable to fetch posts', __FILE__, __LINE__, $db->error());		$post_ids = '';		while ($row = $db->fetch_row($result))			$post_ids .= ($post_ids != '') ? ','.$row[0] : $row[0];		// We have to check that we actually have a list of post IDs since we could be deleting just a redirect topic		if ($post_ids != '')			strip_search_index($post_ids);		// Delete posts		$db->query('DELETE FROM '.$db->prefix.'posts WHERE topic_id IN('.$topics.')') or error('Unable to delete posts', __FILE__, __LINE__, $db->error());		update_forum($fid);		redirect('viewforum.php?id='.$fid, $lang_misc['Delete topics redirect']);	}	$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), $lang_misc['Moderate']);	define('PUN_ACTIVE_PAGE', 'index');	require PUN_ROOT.'header.php';?><div class="blockform">	<h2><span><?php echo $lang_misc['Delete topics'] ?></span></h2>	<div class="box">		<form method="post" action="moderate.php?fid=<?php echo $fid ?>">			<input type="hidden" name="topics" value="<?php echo implode(',', array_map('intval', array_keys($topics))) ?>" />			<div class="inform">				<fieldset>					<legend><?php echo $lang_misc['Confirm delete legend'] ?></legend>					<div class="infldset">						<p><?php echo $lang_misc['Delete topics comply'] ?></p>					</div>				</fieldset>			</div>			<p class="buttons"><input type="submit" name="delete_topics_comply" value="<?php echo $lang_misc['Delete'] ?>" /> <a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>		</form>	</div></div><?php	require PUN_ROOT.'footer.php';}// Open or close one or more topicselse if (isset($_REQUEST['open']) || isset($_REQUEST['close'])){	$action = (isset($_REQUEST['open'])) ? 0 : 1;	// There could be an array of topic IDs in $_POST	if (isset($_POST['open']) || isset($_POST['close']))	{		confirm_referrer('moderate.php');		$topics = isset($_POST['topics']) ? @array_map('intval', @array_keys($_POST['topics'])) : array();		if (empty($topics))			message($lang_misc['No topics selected']);		$db->query('UPDATE '.$db->prefix.'topics SET closed='.$action.' WHERE id IN('.implode(',', $topics).') AND forum_id='.$fid) or error('Unable to close topics', __FILE__, __LINE__, $db->error());		$redirect_msg = ($action) ? $lang_misc['Close topics redirect'] : $lang_misc['Open topics redirect'];		redirect('moderate.php?fid='.$fid, $redirect_msg);	}	// Or just one in $_GET	else	{		confirm_referrer('viewtopic.php');		$topic_id = ($action) ? intval($_GET['close']) : intval($_GET['open']);		if ($topic_id < 1)			message($lang_common['Bad request']);		$db->query('UPDATE '.$db->prefix.'topics SET closed='.$action.' WHERE id='.$topic_id.' AND forum_id='.$fid) or error('Unable to close topic', __FILE__, __LINE__, $db->error());		$redirect_msg = ($action) ? $lang_misc['Close topic redirect'] : $lang_misc['Open topic redirect'];		redirect('viewtopic.php?id='.$topic_id, $redirect_msg);	}}// Stick a topicelse if (isset($_GET['stick'])){	confirm_referrer('viewtopic.php');	$stick = intval($_GET['stick']);	if ($stick < 1)		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'topics SET sticky=\'1\' WHERE id='.$stick.' AND forum_id='.$fid) or error('Unable to stick topic', __FILE__, __LINE__, $db->error());	redirect('viewtopic.php?id='.$stick, $lang_misc['Stick topic redirect']);}// Unstick a topicelse if (isset($_GET['unstick'])){	confirm_referrer('viewtopic.php');	$unstick = intval($_GET['unstick']);	if ($unstick < 1)		message($lang_common['Bad request']);	$db->query('UPDATE '.$db->prefix.'topics SET sticky=\'0\' WHERE id='.$unstick.' AND forum_id='.$fid) or error('Unable to unstick topic', __FILE__, __LINE__, $db->error());	redirect('viewtopic.php?id='.$unstick, $lang_misc['Unstick topic redirect']);}// No specific forum moderation action was specified in the query string, so we'll display the moderator forum// Load the viewforum.php language filerequire PUN_ROOT.'lang/'.$pun_user['language'].'/forum.php';// Fetch some info about the forum$result = $db->query('SELECT f.forum_name, f.redirect_url, f.num_topics, f.sort_by FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$fid) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());if (!$db->num_rows($result))	message($lang_common['Bad request'], false, '404 Not Found');$cur_forum = $db->fetch_assoc($result);// Is this a redirect forum? In that case, abort!if ($cur_forum['redirect_url'] != '')	message($lang_common['Bad request']);switch ($cur_forum['sort_by']){	case 0:		$sort_by = 'last_post DESC';		break;	case 1:		$sort_by = 'posted DESC';		break;	case 2:		$sort_by = 'subject ASC';		break;	default:		$sort_by = 'last_post DESC';		break;}// Determine the topic offset (based on $_GET['p'])$num_pages = ceil($cur_forum['num_topics'] / $pun_user['disp_topics']);$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : intval($_GET['p']);$start_from = $pun_user['disp_topics'] * ($p - 1);// Generate paging links$paging_links = '<span class="pages-label">'.$lang_common['Pages'].' </span>'.paginate($num_pages, $p, 'moderate.php?fid='.$fid);$page_title = array(pun_htmlspecialchars($pun_config['o_board_title']), pun_htmlspecialchars($cur_forum['forum_name']));define('PUN_ACTIVE_PAGE', 'index');require PUN_ROOT.'header.php';?><div class="linkst">	<div class="inbox crumbsplus">		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $fid ?>"><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_misc['Moderate'] ?></strong></li>		</ul>		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p>		</div>		<div class="clearer"></div>	</div></div><form method="post" action="moderate.php?fid=<?php echo $fid ?>"><div id="vf" class="blocktable">	<h2><span><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></span></h2>	<div class="box">		<div class="inbox">			<table cellspacing="0">			<thead>				<tr>					<th class="tcl" scope="col"><?php echo $lang_common['Topic'] ?></th>					<th class="tc2" scope="col"><?php echo $lang_common['Replies'] ?></th><?php if ($pun_config['o_topic_views'] == '1'): ?>					<th class="tc3" scope="col"><?php echo $lang_forum['Views'] ?></th><?php endif; ?>					<th class="tcr"><?php echo $lang_common['Last post'] ?></th>					<th class="tcmod" scope="col"><?php echo $lang_misc['Select'] ?></th>				</tr>			</thead>			<tbody><?php// Retrieve a list of topic IDs, LIMIT is (really) expensive so we only fetch the IDs here then later fetch the remaining data$result = $db->query('SELECT id FROM '.$db->prefix.'topics WHERE forum_id='.$fid.' ORDER BY sticky DESC, '.$sort_by.', id DESC LIMIT '.$start_from.', '.$pun_user['disp_topics']) or error('Unable to fetch topic IDs', __FILE__, __LINE__, $db->error());// If there are topics in this forumif ($db->num_rows($result)){	$topic_ids = array();	for ($i = 0;$cur_topic_id = $db->result($result, $i);$i++)		$topic_ids[] = $cur_topic_id;	// Select topics	$result = $db->query('SELECT id, poster, subject, posted, last_post, last_post_id, last_poster, num_views, num_replies, closed, sticky, moved_to FROM '.$db->prefix.'topics WHERE id IN('.implode(',', $topic_ids).') ORDER BY sticky DESC, '.$sort_by.', id DESC') or error('Unable to fetch topic list for forum', __FILE__, __LINE__, $db->error());	$button_status = '';	$topic_count = 0;	while ($cur_topic = $db->fetch_assoc($result))	{		++$topic_count;		$status_text = array();		$item_status = ($topic_count % 2 == 0) ? 'roweven' : 'rowodd';		$icon_type = 'icon';		if (is_null($cur_topic['moved_to']))		{			$last_post = '<a href="viewtopic.php?pid='.$cur_topic['last_post_id'].'#p'.$cur_topic['last_post_id'].'">'.format_time($cur_topic['last_post']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['last_poster']).'</span>';			$ghost_topic = false;		}		else		{			$last_post = '- - -';			$ghost_topic = true;		}		if ($pun_config['o_censoring'] == '1')			$cur_topic['subject'] = censor_words($cur_topic['subject']);		if ($cur_topic['sticky'] == '1')		{			$item_status .= ' isticky';			$status_text[] = '<span class="stickytext">'.$lang_forum['Sticky'].'</span>';		}		if ($cur_topic['moved_to'] != 0)		{			$subject = '<a href="viewtopic.php?id='.$cur_topic['moved_to'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';			$status_text[] = '<span class="movedtext">'.$lang_forum['Moved'].'</span>';			$item_status .= ' imoved';		}		else if ($cur_topic['closed'] == '0')			$subject = '<a href="viewtopic.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';		else		{			$subject = '<a href="viewtopic.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].' '.pun_htmlspecialchars($cur_topic['poster']).'</span>';			$status_text[] = '<span class="closedtext">'.$lang_forum['Closed'].'</span>';			$item_status .= ' iclosed';		}		if (!$ghost_topic && $cur_topic['last_post'] > $pun_user['last_visit'] && (!isset($tracked_topics['topics'][$cur_topic['id']]) || $tracked_topics['topics'][$cur_topic['id']] < $cur_topic['last_post']) && (!isset($tracked_topics['forums'][$fid]) || $tracked_topics['forums'][$fid] < $cur_topic['last_post']))		{			$item_status .= ' inew';			$icon_type = 'icon icon-new';			$subject = '<strong>'.$subject.'</strong>';			$subject_new_posts = '<span class="newtext">[ <a href="viewtopic.php?id='.$cur_topic['id'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a> ]</span>';		}		else			$subject_new_posts = null;		// Insert the status text before the subject		$subject = implode(' ', $status_text).' '.$subject;		$num_pages_topic = ceil(($cur_topic['num_replies'] + 1) / $pun_user['disp_posts']);		if ($num_pages_topic > 1)			$subject_multipage = '<span class="pagestext">[ '.paginate($num_pages_topic, -1, 'viewtopic.php?id='.$cur_topic['id']).' ]</span>';		else			$subject_multipage = null;		// Should we show the "New posts" and/or the multipage links?		if (!empty($subject_new_posts) || !empty($subject_multipage))		{			$subject .= !empty($subject_new_posts) ? ' '.$subject_new_posts : '';			$subject .= !empty($subject_multipage) ? ' '.$subject_multipage : '';		}?>				<tr class="<?php echo $item_status ?>">					<td class="tcl">						<div class="<?php echo $icon_type ?>"><div class="nosize"><?php echo forum_number_format($topic_count + $start_from) ?></div></div>						<div class="tclcon">							<div>								<?php echo $subject."\n" ?>							</div>						</div>					</td>					<td class="tc2"><?php echo (!$ghost_topic) ? forum_number_format($cur_topic['num_replies']) : '-' ?></td><?php if ($pun_config['o_topic_views'] == '1'): ?>					<td class="tc3"><?php echo (!$ghost_topic) ? forum_number_format($cur_topic['num_views']) : '-' ?></td><?php endif; ?>					<td class="tcr"><?php echo $last_post ?></td>					<td class="tcmod"><input type="checkbox" name="topics[<?php echo $cur_topic['id'] ?>]" value="1" /></td>				</tr><?php	}}else{	$colspan = ($pun_config['o_topic_views'] == '1') ? 5 : 4;	$button_status = ' disabled="disabled"';	echo "\t\t\t\t\t".'<tr><td class="tcl" colspan="'.$colspan.'">'.$lang_forum['Empty forum'].'</td></tr>'."\n";}?>			</tbody>			</table>		</div>	</div></div><div class="linksb">	<div class="inbox crumbsplus">		<div class="pagepost">			<p class="pagelink conl"><?php echo $paging_links ?></p>			<p class="conr modbuttons"><input type="submit" name="move_topics" value="<?php echo $lang_misc['Move'] ?>"<?php echo $button_status ?> /> <input type="submit" name="delete_topics" value="<?php echo $lang_misc['Delete'] ?>"<?php echo $button_status ?> /> <input type="submit" name="merge_topics" value="<?php echo $lang_misc['Merge'] ?>"<?php echo $button_status ?> /> <input type="submit" name="open" value="<?php echo $lang_misc['Open'] ?>"<?php echo $button_status ?> /> <input type="submit" name="close" value="<?php echo $lang_misc['Close'] ?>"<?php echo $button_status ?> /></p>			<div class="clearer"></div>		</div>		<ul class="crumbs">			<li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li>			<li><span>&#160;</span><a href="viewforum.php?id=<?php echo $fid ?>"><?php echo pun_htmlspecialchars($cur_forum['forum_name']) ?></a></li>			<li><span>&#160;</span><strong><?php echo $lang_misc['Moderate'] ?></strong></li>		</ul>		<div class="clearer"></div>	</div></div></form><?phprequire PUN_ROOT.'footer.php';
